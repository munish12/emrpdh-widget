{"version":3,"file":"static/js/809.fe293aaa.chunk.js","mappings":"2QAeoBA,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,MAChCE,WAAY,MACZ,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAEC,YAAa,EAAGC,aAAc,KAEpD,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAGE,cAAe,oBANvD,MA6FA,EAnF+BC,IAC7B,IAAI,aAAEC,EAAY,SAAEC,EAAQ,kBAAEC,GAAsBH,EACpD,MAAOI,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAC1BC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,KACxCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAASL,GAAgB,IAErDU,GAAUC,EAAAA,EAAAA,QAAO,MACPD,GAAWA,EAAQE,SAAWF,EAAQE,QAAQC,SAAUH,EAAQE,QAAQC,QAYxF,OAHAC,EAAAA,EAAAA,YAAU,KACRL,EAAaT,EAAa,GACzB,CAACG,EAAMG,EAAaN,KAErBe,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACC,MAAM,OAAOC,SAAS,OAAMC,UAC/BJ,EAAAA,EAAAA,KAACK,EAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACfC,MAAO,CAAEC,UAAW,KACpBC,aAAc,IACdC,QAAS,CACP,CACEC,KAAM,YACNC,OAAQ,OACRC,YAAa,EACbC,aAAc,GACdC,OAAQC,IAAA,IAAAC,EAAAC,EAAA,IAAC,KAAEC,GAAMH,EAAA,OAAKjB,EAAAA,EAAAA,KAAA,OAAAI,SAAU,OAAJgB,QAAI,IAAJA,GAAc,QAAVF,EAAJE,EAAMC,gBAAQ,IAAAH,GAAQ,QAARC,EAAdD,EAAgBI,IAAI,UAAE,IAAAH,OAAlB,EAAJA,EAAwBI,WAAgB,GAEtE,CACEX,KAAM,cACNC,OAAQ,OACRC,YAAa,EACbC,aAAc,GACdC,OAAQQ,IAAA,IAAAC,EAAAC,EAAA,IAAC,KAAEN,GAAMI,EAAA,OAAKxB,EAAAA,EAAAA,KAAA,OAAAI,SAAU,OAAJgB,QAAI,IAAJA,GAAc,QAAVK,EAAJL,EAAMC,gBAAQ,IAAAI,GAAQ,QAARC,EAAdD,EAAgBH,IAAI,UAAE,IAAAI,OAAlB,EAAJA,EAAwBC,aAAkB,GAExE,CACEf,KAAM,gBACNC,OAAQ,WACRC,YAAa,EACbC,aAAc,GACdC,OAAQY,IAAA,IAAAC,EAAAC,EAAA,IAAC,KAAEV,GAAMQ,EAAA,OAAK5B,EAAAA,EAAAA,KAAA,OAAAI,SAAU,OAAJgB,QAAI,IAAJA,GAAc,QAAVS,EAAJT,EAAMC,gBAAQ,IAAAQ,GAAQ,QAARC,EAAdD,EAAgBP,IAAI,UAAE,IAAAQ,OAAlB,EAAJA,EAAwBC,eAAoB,GAE1E,CACEnB,KAAM,eACNC,OAAQ,cACRC,YAAa,EACbC,aAAc,GACdC,OAAQgB,IAAA,IAAAC,EAAAC,EAAA,IAAC,KAAEd,GAAMY,EAAA,OAAKhC,EAAAA,EAAAA,KAAA,OAAAI,SAAU,OAAJgB,QAAI,IAAJA,GAAc,QAAVa,EAAJb,EAAMC,gBAAQ,IAAAY,GAAQ,QAARC,EAAdD,EAAgBX,IAAI,UAAE,IAAAY,OAAlB,EAAJA,EAAwBC,cAAmB,GAEzE,CACEvB,KAAM,YACNC,OAAQ,SACRC,YAAa,EACbC,aAAc,GACdC,OAAQoB,IAAA,IAAC,KAAEhB,GAAMgB,EAAA,OAAKpC,EAAAA,EAAAA,KAAA,OAAAI,SAAU,OAAJgB,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,WAAgB,GAEpD,CACEzB,KAAM,aACNC,OAAQ,UACRC,YAAa,EACbC,aAAc,GACdC,OAAQsB,IAAA,IAAC,KAAElB,GAAMkB,EAAA,OAAKtC,EAAAA,EAAAA,KAAA,OAAKQ,MAAO,CAAE+B,SAAU,QAASnC,SAAO,OAAJgB,QAAI,IAAJA,GAAAA,EAAMoB,YAAmC,MAAjB,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,YAA0B,OAAJpB,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,WAAc,KAAU,IAG5IC,WAAYhD,EAEZiD,gBAAc,EACdxD,SAAUA,EACVC,kBAAmBA,EACnBwD,OAAQC,GAAOjD,EAAQE,QAAU+C,EAAMA,EAAI/C,QAAU,KACrDgD,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAPrD,QAAO,IAAPA,GAAgB,QAAToD,EAAPpD,EAASE,eAAO,IAAAkD,OAAT,EAAPA,EAAkBE,aAAwC,IAAV,OAAjB9D,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB+D,QAAY,EAAW,OAAPvD,QAAO,IAAPA,GAAgB,QAATqD,EAAPrD,EAASE,eAAO,IAAAmD,OAAT,EAAPA,EAAkBG,eAAe,KAEtH,E,oECxFV,MAAMC,GAAY1E,EAAAA,EAAAA,IAAO,MAAPA,EAAcuC,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC5CqC,OAAQ,OACR,CAACD,EAAME,YAAYC,KAAK,OAAQ,CAAEF,OAAQ,QAC1C,gBAAiB,CACbG,aAAc,OACd,CAACJ,EAAME,YAAYC,KAAK,OAAQ,CAAEC,aAAc,SAEvD,IAoKD,EAlKyBC,KAAO,IAADX,EAAAC,EAC3B,MAAMW,EAAa,IAAIC,EAAAA,GAChB3E,EAAc4E,IAAmBvE,EAAAA,EAAAA,aACjCwE,EAAQC,IAAazE,EAAAA,EAAAA,UAAS,CAAC,IAC/B0E,EAAWC,IAAgB3E,EAAAA,EAAAA,WAAS,IACpC4E,EAAWC,IAAgB7E,EAAAA,EAAAA,WAAS,IACpC8E,EAAUC,IAAe/E,EAAAA,EAAAA,UAAS,OAClCgF,EAAcC,IAAmBjF,EAAAA,EAAAA,UAAS,KAC1CJ,EAAUsF,IAAelF,EAAAA,EAAAA,UAAS,CAAC,IACnCmF,EAAWC,IAAgBpF,EAAAA,EAAAA,WAAS,GACrCK,GAAUC,EAAAA,EAAAA,QAAO,MACjBE,EAAiB,OAAPH,QAAO,IAAPA,GAAgB,QAAToD,EAAPpD,EAASE,eAAO,IAAAkD,GAAhBA,EAAkBjD,QAAiB,OAAPH,QAAO,IAAPA,GAAgB,QAATqD,EAAPrD,EAASE,eAAO,IAAAmD,OAAT,EAAPA,EAAkBlD,QAAU,KAYlE6E,EAAiBC,IACnB,IAEIX,GAAa,GACb,MAAMY,EAAkB,IAAKD,EAAcE,UAAWF,EAAaE,UAAY,KAC/EnB,EAAWoB,wBAAwBF,GAAiBG,MAAMC,IAClDA,GACIA,EAAO7D,KAAK8B,OACZW,EAAgBoB,EAAO7D,OAEvB+C,GAAa,GACbE,EAAY,CACRa,SAAU,QACVC,KAAM,sBAGdlB,GAAa,KAEbE,GAAa,GACbE,EAAY,CACRa,SAAU,QACVC,KAAMF,IAEd,IACDG,OAAOC,GACCA,GAEf,CAAE,MAAOC,GACL,OAAOA,CACX,GAEEnG,GAAoBoG,EAAAA,EAAAA,cAAY/D,IAAmB,IAAlB,SAAEtC,GAAUsC,EAC/CgD,EAAYtF,GACZwF,GAAa,EAAM,GACpB,KACH3E,EAAAA,EAAAA,YAAU,KAAO,IAADyF,EACZ,MAAMC,GAA2B,IAAbvG,EAAoBY,EAAUZ,EAC5CwG,EAAkBD,IAAuC,QAA5BD,EAAIG,OAAOC,KAAKH,UAAY,IAAAD,OAAA,EAAxBA,EAA0BK,KAAIC,GAAQL,EAAYK,OAAW,GACpGvB,EAAgBmB,GAChBA,EAAeK,SAAQC,IACI,WAAnBA,EAAK3D,WACLqC,GAAa,EACjB,GACF,GACH,CAACxF,EAAUY,IA0Bd,OACImG,EAAAA,EAAAA,MAAC7C,EAAS,CAAAhD,SAAA,EACNJ,EAAAA,EAAAA,KAACC,EAAAA,EAAG,CAACiG,UAAU,aAAY9F,UACvBJ,EAAAA,EAAAA,KAACmG,EAAAA,GAAU,CAACC,cAAe,CAAC,CAAExF,KAAM,8BAExCqF,EAAAA,EAAAA,MAACI,EAAAA,GAAU,CAAAjG,SAAA,EACP6F,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CACDC,WAAS,EACTC,QAAS,EACTC,WAAW,SAAQrG,SAAA,EAEnBJ,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIX,UAAU,cAAa9F,UACtD6F,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAQrG,SAAA,EAC3CJ,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIX,UAAU,cAAa9F,UACpDJ,EAAAA,EAAAA,KAAC8G,EAAAA,EAAS,CACNC,KAAK,OACLnG,KAAK,SACLoG,KAAK,QACLC,SAnGVC,IAClBA,EAAMC,UACNpD,EAAU,CAAEe,UAAWoC,EAAME,OAAOC,OAAQ,EAkGhBC,UAhGTJ,IACnB,GAAkB,UAAdA,EAAMpB,IAAiB,CACvB,MAAMyB,EAAY,IAAKzD,EAAQgB,UAAWoC,EAAME,OAAOC,OACvDtD,EAAUwD,GACV5C,EAAc4C,EAClB,GA4F4BF,OAAa,OAANvD,QAAM,IAANA,OAAM,EAANA,EAAQgB,YAAa,GAC5BtE,MAAO,CAAEN,MAAO,QAChBsH,WAAY,CACRC,cACIzH,EAAAA,EAAAA,KAAC0H,EAAAA,EAAc,CAACC,SAAS,MAAKvH,SAAC,YAO/CJ,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAGzG,UAC5BJ,EAAAA,EAAAA,KAAC4H,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASA,KAAQnD,EAAcb,EAAO,EAAG1D,SAAC,cAE1EJ,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIJ,WAAW,QAAOrG,UAC/CJ,EAAAA,EAAAA,KAAC4H,EAAAA,EAAM,CACHC,QAAQ,YACRE,WAAqC,KAAb,OAAZzD,QAAY,IAAZA,OAAY,EAAZA,EAAcpB,SAAgBuB,GAC1CqD,QA/DPE,KACrB,IAAI5G,EAAO,CAAE6G,GAAI3D,EAAa,GAAG2D,IACjChE,GAAa,GACbN,EAAWuE,mBAAmB9G,GAAM4D,MAAMC,IAClCA,GACU,OAANA,QAAM,IAANA,GAAAA,EAAQkD,SACRhE,GAAa,GACbE,EAAY,CACRa,SAA6B,aAAb,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQkD,QAAuB,UAAY,QACrDhD,KAAY,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQmD,OAGtBnE,GAAa,KAEbE,GAAa,GACbE,EAAY,CACRa,SAAU,QACVC,KAAMF,KAGdhB,GAAa,EAAM,IACpBmB,OAAOC,GACCA,GACT,EAyC0B7E,MAAO,CAAE8C,OAAQ,gBAAiBlD,SACrC,oBAMbJ,EAAAA,EAAAA,KAACsG,EAAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAGzG,UAC9BJ,EAAAA,EAAAA,KAACqI,EAAqB,CAClBpJ,aAAcA,GAAgB,GAC9B+E,UAAWA,EACX9E,SAAUA,EACVC,kBAAmBA,SAK7BiF,GACEpE,EAAAA,EAAAA,KAACsI,EAAAA,EAAc,CAACpE,UAAWA,EAAWE,SAAUA,EAAUD,aAAcA,KACvEnE,EAAAA,EAAAA,KAAAuI,EAAAA,SAAA,IACJvE,GACGhE,EAAAA,EAAAA,KAAA,OAAKQ,MAAO,CAAEgI,UAAW,UAAWpI,UAChCJ,EAAAA,EAAAA,KAACyI,EAAAA,EAAM,CAACC,KAAM1E,OAElBhE,EAAAA,EAAAA,KAAAuI,EAAAA,SAAA,SAEA,C,2KCrLb,SAASI,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,EACnD,CACA,MACA,GAD8BE,EAAAA,EAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,ICDxLC,E,sBACJ,MAAMC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAkC5GC,GAAqBvK,EAAAA,EAAAA,IAAO,MAAO,CACvCkC,KAAM,oBACNgI,KAAM,OACNM,kBAvBwBA,CAAClK,EAAOmK,KAChC,MAAM,WACJC,GACEpK,EACJ,MAAO,CAACmK,EAAOE,KAAMF,EAAO,YAAWG,EAAAA,EAAAA,GAAWF,EAAWzB,cAAkD,IAApCyB,EAAWG,sBAAiCJ,EAAOI,qBAAsBJ,EAAOC,EAAWvB,SAAS,GAgBtJnJ,EAIxBuC,IAAA,IAAC,MACFoC,EAAK,WACL+F,GACDnI,EAAA,OAAKuI,EAAAA,EAAAA,GAAS,CACbC,QAAS,OACTC,OAAQ,SAERC,UAAW,MACXlD,WAAY,SACZ7H,WAAY,SACZgL,OAAQvG,EAAMwG,MAAQxG,GAAOyG,QAAQC,OAAOC,QACpB,WAAvBZ,EAAWvB,SAAwB,CAEpC,CAAC,KAAKoC,EAAsBC,uBAAuBD,EAAsBE,gBAAiB,CACxFC,UAAW,KAEY,UAAxBhB,EAAWzB,UAAwB,CAEpC0C,YAAa,GACY,QAAxBjB,EAAWzB,UAAsB,CAElC2C,WAAY,IACyB,IAApClB,EAAWG,sBAAiC,CAE7CgB,cAAe,QACf,IAwGF,EAvGoCC,EAAAA,YAAiB,SAAwBC,EAAS7H,GACpF,MAAM5D,GAAQ0L,EAAAA,EAAAA,GAAc,CAC1B1L,MAAOyL,EACP7J,KAAM,uBAEF,SACFR,EAAQ,UACR8F,EAAS,UACTyE,EAAY,MAAK,qBACjBpB,GAAuB,EAAK,kBAC5BqB,GAAoB,EAAK,SACzBjD,EACAE,QAASgD,GACP7L,EACJ8L,GAAQC,EAAAA,EAAAA,GAA8B/L,EAAOgK,GACzCgC,GAAiBC,EAAAA,EAAAA,MAAoB,CAAC,EAC5C,IAAIpD,EAAUgD,EACVA,GAAeG,EAAenD,QAO9BmD,IAAmBnD,IACrBA,EAAUmD,EAAenD,SAE3B,MAAMuB,GAAaI,EAAAA,EAAAA,GAAS,CAAC,EAAGxK,EAAO,CACrCmL,YAAaa,EAAeb,YAC5BnD,KAAMgE,EAAehE,KACrBuC,uBACA5B,WACAE,YAEIqD,EA9EkB9B,KACxB,MAAM,QACJ8B,EAAO,qBACP3B,EAAoB,YACpBY,EAAW,SACXxC,EAAQ,KACRX,EAAI,QACJa,GACEuB,EACE+B,EAAQ,CACZ9B,KAAM,CAAC,OAAQE,GAAwB,uBAAwB5B,GAAY,YAAW2B,EAAAA,EAAAA,GAAW3B,KAAaE,EAASsC,GAAe,cAAenD,GAAQ,QAAOsC,EAAAA,EAAAA,GAAWtC,OAEjL,OAAOoE,EAAAA,EAAAA,GAAeD,EAAOxC,EAA+BuC,EAAQ,EAkEpDG,CAAkBjC,GAClC,OAAoBpJ,EAAAA,EAAAA,KAAKsL,EAAAA,EAAmBC,SAAU,CACpDlE,MAAO,KACPjH,UAAuBJ,EAAAA,EAAAA,KAAKiJ,GAAoBO,EAAAA,EAAAA,GAAS,CACvDgC,GAAIb,EACJvB,WAAYA,EACZlD,WAAWuF,EAAAA,EAAAA,GAAKP,EAAQ7B,KAAMnD,GAC9BtD,IAAKA,GACJkI,EAAO,CACR1K,SAA8B,kBAAbA,GAA0BwK,GAGzB3E,EAAAA,EAAAA,MAAMuE,EAAAA,SAAgB,CACtCpK,SAAU,CAAc,UAAbuH,EAA4GoB,IAAUA,GAAqB/I,EAAAA,EAAAA,KAAK,OAAQ,CACjKkG,UAAW,cACX9F,SAAU,YACL,KAAMA,MAP6DJ,EAAAA,EAAAA,KAAK0L,EAAAA,EAAY,CAC3F9B,MAAO,iBACPxJ,SAAUA,QASlB,G","sources":["app/components/McoPages/SpecCreationListTable.jsx","app/views/mcolist/SpecCreationList.jsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@mui/material\";\r\nimport { Link } from 'react-router-dom';\r\nimport shortId from 'shortid';\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst SpecCreationListTable = (props) => {\r\n  let { speclistsArr, selected, onSelectionChange } = props;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [speclists, setSpeclists] = useState(speclistsArr || []);\r\n\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSpeclists(speclistsArr);\r\n  }, [page, rowsPerPage, speclistsArr])\r\n  return (\r\n    <Box width=\"100%\" overflow=\"auto\">\r\n      <DataGrid\r\n        idProperty=\"id\"\r\n        showZebraRows={false}\r\n        style={{ minHeight: 550 }}\r\n        defaultLimit={100}\r\n        columns={[\r\n          {\r\n            name: \"SPEC_NAME\",\r\n            header: \"Type\",\r\n            defaultFlex: 1,\r\n            defaultWidth: 50,\r\n            render: ({ data }) => <div>{data?.BOSSpecs?.BOS[0]?.SPEC_NAME}</div>\r\n          },\r\n          {\r\n            name: \"SPEC_NUMBER\",\r\n            header: \"Name\",\r\n            defaultFlex: 1,\r\n            defaultWidth: 50,\r\n            render: ({ data }) => <div>{data?.BOSSpecs?.BOS[0]?.SPEC_NUMBER}</div>\r\n          },\r\n          {\r\n            name: \"SPEC_REVISION\",\r\n            header: \"Revision\",\r\n            defaultFlex: 1,\r\n            defaultWidth: 50,\r\n            render: ({ data }) => <div>{data?.BOSSpecs?.BOS[0]?.SPEC_REVISION}</div>\r\n          },\r\n          {\r\n            name: \"SPEC_DETAILS\",\r\n            header: \"Description\",\r\n            defaultFlex: 1,\r\n            defaultWidth: 50,\r\n            render: ({ data }) => <div>{data?.BOSSpecs?.BOS[0]?.SPEC_DETAILS}</div>\r\n          },\r\n          {\r\n            name: \"bosStatus\",\r\n            header: \"Status\",\r\n            defaultFlex: 1,\r\n            defaultWidth: 50,\r\n            render: ({ data }) => <div>{data?.bosStatus}</div>\r\n          },\r\n          {\r\n            name: \"bosMessage\",\r\n            header: \"Message\",\r\n            defaultFlex: 1,\r\n            defaultWidth: 50,\r\n            render: ({ data }) => <div style={{ textWrap: 'wrap' }}>{(data?.bosMessage && data?.bosMessage !== \"\") ? (data?.bosMessage) : \"-\"}</div>\r\n          }\r\n        ]}\r\n        dataSource={speclists}\r\n        // rowHeight={null}\r\n        checkboxColumn\r\n        selected={selected}\r\n        onSelectionChange={onSelectionChange}\r\n        handle={ref => gridRef.current = ref ? ref.current : null}\r\n        pagination\r\n        renderScroller={()=> gridRef?.current?.setScrollTop(onSelectionChange?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SpecCreationListTable;\r\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { MCOService } from 'services/mcoService';\r\nimport SpecCreationListTable from \"app/components/McoPages/SpecCreationListTable\";\r\nimport Loader from 'app/components/Loader';\r\nimport CustomAlertBox from \"app/components/McoPages/CustomAlertBox\";\r\nimport {\r\n    Box,\r\n    styled,\r\n    Grid,\r\n    TextField,\r\n    InputAdornment\r\n} from \"@mui/material\";\r\nimport \"./mcoStyles.css\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n        marginBottom: \"30px\",\r\n        [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n}));\r\n\r\nconst SpecCreationList = () => {\r\n    const mcoService = new MCOService();\r\n    const [speclistsArr, setSpeclistsArr] = useState()\r\n    const [search, setSearch] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const [selectedRows, setSelectedRows] = useState([]);\r\n    const [selected, setSelected] = useState({});\r\n    const [canResend, setCanResend] = useState(true);\r\n    const gridRef = useRef(null);\r\n    const dataMap = gridRef?.current?.dataMap ? gridRef?.current?.dataMap : null;\r\n    const handleChange = (event) => {\r\n        event.persist();\r\n        setSearch({ searchkey: event.target.value });\r\n    };\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            const searchArr = { ...search, searchkey: event.target.value };\r\n            setSearch(searchArr);\r\n            callSearchApi(searchArr);\r\n        }\r\n    };\r\n    const callSearchApi = (searchValues) => {\r\n        try {\r\n            // using api filter\r\n            setIsLoading(true);\r\n            const newsearchValues = { ...searchValues, searchkey: searchValues.searchkey + \"*\" };\r\n            mcoService.searchSpecCreationbyKey(newsearchValues).then((result) => {\r\n                if (result) {\r\n                    if (result.data.length) {\r\n                        setSpeclistsArr(result.data)\r\n                    } else {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"error\",\r\n                            desc: \"No result found!\",\r\n                        });\r\n                    }\r\n                    setIsLoading(false);\r\n                } else {\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: \"error\",\r\n                        desc: result,\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                return err;\r\n            })\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    }\r\n    const onSelectionChange = useCallback(({ selected }) => {\r\n        setSelected(selected);\r\n        setCanResend(false)\r\n    }, []);\r\n    useEffect(() => {\r\n        const selRowsData = selected === true ? dataMap : selected;\r\n        const selRowsDetails = (selRowsData && Object.keys(selRowsData)?.map(key => (selRowsData[key]))) || [];\r\n        setSelectedRows(selRowsDetails);\r\n        selRowsDetails.forEach(rows => {\r\n            if (rows.bosStatus === 'failed') {\r\n                setCanResend(true)\r\n            }\r\n        })\r\n    }, [selected, dataMap]);\r\n    const handleResendSpec = () => {\r\n        let data = { id: selectedRows[0].id }\r\n        setIsLoading(true);\r\n        mcoService.resendSpecCreation(data).then((result) => {\r\n            if (result) {\r\n                if (result?.status) {\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: result?.status === 'success' ? \"success\" : \"error\",\r\n                        desc: result?.msg,\r\n                    });\r\n                }\r\n                setIsLoading(false);\r\n            } else {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: result,\r\n                });\r\n            }\r\n            setIsLoading(false);\r\n        }).catch((err) => {\r\n            return err;\r\n        })\r\n    }\r\n    return (\r\n        <Container>\r\n            <Box className=\"breadcrumb\">\r\n                <Breadcrumb routeSegments={[{ name: \"Search Spec Creation\" }]} />\r\n            </Box>\r\n            <SimpleCard>\r\n                <Grid\r\n                    container\r\n                    spacing={1}\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                        <Grid container spacing={1} alignItems=\"center\">\r\n                            <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n                                <TextField\r\n                                    type=\"text\"\r\n                                    name=\"search\"\r\n                                    size=\"small\"\r\n                                    onChange={handleChange}\r\n                                    onKeyDown={handleKeyDown}\r\n                                    value={search?.searchkey || \"\"}\r\n                                    style={{ width: '100%' }}\r\n                                    InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                                *\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item md={6} sm={6} xs={12}>\r\n                                <Button variant=\"contained\" onClick={() => { callSearchApi(search) }}>Search</Button>\r\n                            </Grid>\r\n                            <Grid item md={3} sm={6} xs={12} alignItems=\"right\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    disabled={!(selectedRows?.length === 1 && canResend)}\r\n                                    onClick={handleResendSpec}\r\n                                    style={{ margin: '0 0px 0 10px' }}\r\n                                >\r\n                                    Re-send\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item md={12} sm={12} xs={12}>\r\n                        <SpecCreationListTable\r\n                            speclistsArr={speclistsArr || []}\r\n                            isLoading={isLoading}\r\n                            selected={selected}\r\n                            onSelectionChange={onSelectionChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {(openDesc) ? (\r\n                    <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                ) : (<></>)}\r\n                {isLoading ? (\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Loader show={isLoading} />\r\n                    </div>\r\n                ) : <></>}\r\n            </SimpleCard>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default SpecCreationList;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _span;\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? ( /* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["styled","Table","whiteSpace","paddingLeft","paddingRight","textTransform","props","speclistsArr","selected","onSelectionChange","page","setPage","useState","rowsPerPage","setRowsPerPage","speclists","setSpeclists","gridRef","useRef","current","dataMap","useEffect","_jsx","Box","width","overflow","children","DataGrid","idProperty","showZebraRows","style","minHeight","defaultLimit","columns","name","header","defaultFlex","defaultWidth","render","_ref","_data$BOSSpecs","_data$BOSSpecs$BOS$","data","BOSSpecs","BOS","SPEC_NAME","_ref2","_data$BOSSpecs2","_data$BOSSpecs2$BOS$","SPEC_NUMBER","_ref3","_data$BOSSpecs3","_data$BOSSpecs3$BOS$","SPEC_REVISION","_ref4","_data$BOSSpecs4","_data$BOSSpecs4$BOS$","SPEC_DETAILS","_ref5","bosStatus","_ref6","textWrap","bosMessage","dataSource","checkboxColumn","handle","ref","pagination","renderScroller","_gridRef$current","_gridRef$current2","setScrollTop","length","getScrollTop","Container","theme","margin","breakpoints","down","marginBottom","SpecCreationList","mcoService","MCOService","setSpeclistsArr","search","setSearch","isLoading","setIsLoading","openAlert","setOpenAlert","openDesc","setOpenDesc","selectedRows","setSelectedRows","setSelected","canResend","setCanResend","callSearchApi","searchValues","newsearchValues","searchkey","searchSpecCreationbyKey","then","result","severity","desc","catch","err","error","useCallback","_Object$keys","selRowsData","selRowsDetails","Object","keys","map","key","forEach","rows","_jsxs","className","Breadcrumb","routeSegments","SimpleCard","Grid","container","spacing","alignItems","item","md","sm","xs","TextField","type","size","onChange","event","persist","target","value","onKeyDown","searchArr","InputProps","endAdornment","InputAdornment","position","Button","variant","onClick","disabled","handleResendSpec","id","resendSpecCreation","status","msg","SpecCreationListTable","CustomAlertBox","_Fragment","textAlign","Loader","show","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_span","_excluded","InputAdornmentRoot","overridesResolver","styles","ownerState","root","capitalize","disablePointerEvents","_extends","display","height","maxHeight","color","vars","palette","action","active","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","useThemeProps","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","as","clsx","Typography"],"sourceRoot":""}