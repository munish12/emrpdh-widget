{"version":3,"file":"static/js/710.dfff1044.chunk.js","mappings":"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","sources":["app/components/McoPages/CustomDateTimePickerToolbar.jsx","app/components/McoPages/InprogressIcon.jsx","app/components/McoPages/StatusColors.jsx","app/components/McoPages/MaterialForm.jsx","app/components/McoPages/MaterialAttributeDialogBox.jsx","app/components/McoPages/AffectedPartsTable.jsx","app/components/McoPages/LifeCycleStepper.jsx","app/components/McoPages/PropertiesForm.jsx","app/components/McoPages/PartsSaveButton.jsx","app/components/McoPages/HistoryTable.jsx","app/components/McoPages/HistoryDialogBox.jsx","app/components/McoPages/RefreshButtons.jsx","app/components/McoPages/TrackerHistoryLinks.jsx","app/hooks/mcoHooks/useGetTemplateMappings.js","app/hooks/mcoHooks/useGetDropdownOption.js","app/components/bulkUploadPartAndTemplatePupup.jsx","app/components/McoPages/SaaSLifeCycleStepperComponent.jsx","app/views/mcolist/Mcodetails.jsx","app/components/McoPages/TimelineListView.jsx","app/views/mcolist/TrackerProgressBar.jsx"],"sourcesContent":["import React from 'react';\r\nimport { DateTimePickerToolbar } from '@mui/x-date-pickers/DateTimePicker';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport dayjs from 'dayjs';\r\n\r\nconst CustomDateTimePickerToolbar = (props) => {\r\n    const { setOpenView, setView, onChange, value, ...other } = props;\r\n\r\n    const handleTodayButtonClick = () => {\r\n        const today = dayjs();\r\n        onChange(today);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n            <DateTimePickerToolbar {...props} />\r\n            <Button onClick={handleTodayButtonClick} variant=\"outlined\" size=\"small\" style={{ margin: '8px', position: 'absolute', bottom: \"2.5px\", left: \"2.5px\" }}>\r\n                Today\r\n            </Button>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CustomDateTimePickerToolbar;\r\n","import React from 'react';\r\nimport SyncIcon from '@mui/icons-material/Sync';\r\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\r\nimport { Box } from '@mui/material';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nfunction RotatingInProgressIcon({ title }) {\r\n    return (\r\n        <>\r\n            <Tooltip title={title}>\r\n                <Box\r\n                    sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        width: '100%',\r\n                        // height: '100%',\r\n                        // backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n                        zIndex: 9,\r\n                    }}\r\n                >\r\n                    <AutorenewIcon\r\n                        sx={{\r\n                            fontSize: 60,\r\n                            color: '#1976d2',\r\n                            animation: 'spin 1.5s linear infinite',\r\n                            width: \"25px\",\r\n                            height: \"25px\",\r\n                            position: \"absolute\"\r\n                        }}\r\n                    />\r\n                    <style>\r\n                        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}\r\n                    </style>\r\n                </Box>\r\n            </Tooltip>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RotatingInProgressIcon;\r\n","import React from \"react\";\r\nimport IconButton from '@mui/material/IconButton';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\nconst StatusColors = (props) => {\r\n    let colorCode = 'grey';\r\n    let tooltipLabel = props?.status?.toLowerCase();\r\n\r\n    const capitalize = s => (s && s[0].toUpperCase() + s.slice(1)) || \"\";\r\n\r\n    switch (tooltipLabel) {\r\n        case \"success\":\r\n            colorCode = 'limegreen';\r\n            break;\r\n        case \"inprogress\":\r\n            colorCode = 'orange';\r\n            break;\r\n        case \"failed\":\r\n            colorCode = 'red';\r\n            break;\r\n        default:\r\n            colorCode = 'grey';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* For display status by circled with colors */}\r\n            <span title={capitalize(props?.status)}\r\n                style={{\r\n                    width: '10px',\r\n                    height: '10px',\r\n                    backgroundColor: colorCode,\r\n                    borderRadius: '50%',\r\n                    display: \"block\",\r\n                    margin: 'auto',\r\n                }}>\r\n            </span>\r\n\r\n            {/* For display status text */}\r\n            {/* {\r\n                ([\"success\", \"inprogress\", \"failed\"]?.includes(props?.status)) ? capitalize(props?.status) : \"--\"\r\n            } */}\r\n            {/* For display status by icons with color differentiate */}\r\n            {/* {\r\n                ([\"success\", \"inprogress\", \"failed\"]?.includes(props?.status)) ? (\r\n                    <span title={capitalize(props?.status)}>\r\n                        <VisibilityIcon\r\n\r\n                            sx={(theme) => ({\r\n                                position: 'relative',\r\n                                right: 0,\r\n                                top: '2.5px',\r\n                                color: (props?.status?.toLowerCase() === \"success\" ? \"limegreen\" : \"red\") ?? \"#1976d2\",\r\n                            })} />\r\n                    </span>\r\n                ) : \"--\"\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatusColors;","import React, { useEffect, useState, useImperativeHandle, forwardRef } from 'react';\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Checkbox,\r\n    FormControlLabel,\r\n    Radio,\r\n    RadioGroup,\r\n} from \"@mui/material\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport shortId from 'shortid';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles({\r\n    spanRed: {\r\n        color: '#FF3D57',\r\n    },\r\n});\r\nconst MaterialForm = forwardRef((props, ref) => {\r\n    const {\r\n        selectedRowData,\r\n        selectedRowFormdata: formData,\r\n        responseData,\r\n        masterData,\r\n        selectedRowIndex,\r\n    } = useSelector((state) => ({\r\n        selectedRowData: state?.mcoDetails?.selectedRowData,\r\n        selectedRowFormdata: state?.mcoDetails?.selectedRowFormdata,\r\n        responseData: state?.mcoDetails?.responseData,\r\n        masterData: state?.mcoDetails?.masterData,\r\n        selectedRowIndex: state?.mcoDetails?.selectedRowIndex,\r\n    }), shallowEqual);\r\n\r\n    const [formValues, setFormValues] = useState({});\r\n    const [yubformData, setYubformData] = useState({});\r\n    const classes = useStyles();\r\n\r\n    const handleSubmit = (e) => {\r\n        props?.saveMaterialDetails(e);\r\n        return false;\r\n    }\r\n\r\n    useEffect(() => {\r\n        let yupObj = {};\r\n        let formInitaialValues = {};\r\n        Object.keys(formData).length && formData?.forEach((item) => {\r\n            const thisFieldName = item?.name;\r\n\r\n            // skip mapping values\r\n            if (Object.keys(selectedRowData).includes(item?.name) || (selectedRowData?.attributeGroupData && Object.keys(selectedRowData?.attributeGroupData).includes(item?.name))) {\r\n                return true\r\n            }\r\n\r\n            if (item?.mandatory === \"Y\") {\r\n                yupObj[thisFieldName] = Yup.string().required(thisFieldName + ' required!');\r\n            }\r\n            if (item?.defaultValues !== \"\") {\r\n                formInitaialValues[thisFieldName] = item?.defaultValues;\r\n            } else {\r\n                formInitaialValues[thisFieldName] = '';\r\n            }\r\n        })\r\n        setYubformData(yupObj);\r\n        setFormValues(formInitaialValues);\r\n    }, [selectedRowData, formData]);\r\n\r\n    const partsSchema = Yup.object().shape(yubformData);\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={formValues}\r\n            onSubmit={handleSubmit}\r\n            enableReinitialize\r\n            validationSchema={partsSchema}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n        >\r\n            {\r\n                function Showform({\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    isSubmitting,\r\n                    setSubmitting,\r\n                    setFieldValue,\r\n                    validateForm,\r\n                    isValid,\r\n                    submitForm\r\n                }) {\r\n                    useEffect(() => {\r\n                        setTimeout(async () => {\r\n                            const collectMasterFields = [];\r\n\r\n                            const currentFormFields = Object.keys(formData).length && formData?.map((ffitem, ffkey) => {\r\n                                return ffitem.name;\r\n                            })\r\n\r\n                            if (\r\n                                masterData?.mcoaffectedItem?.length &&\r\n                                masterData?.mcoaffectedItem[selectedRowIndex]?.materialType &&\r\n                                selectedRowIndex !== null &&\r\n                                currentFormFields\r\n                            ) {\r\n                                Object.keys(masterData?.mcoaffectedItem[selectedRowIndex]?.materialType?.attributeMap).forEach((thisItem) => {\r\n                                    const thisFieldName = thisItem;\r\n                                    if (masterData?.mcoaffectedItem[selectedRowIndex]?.materialType?.attributeMap[thisItem] && !collectMasterFields.includes(thisFieldName) && currentFormFields.includes(thisFieldName)) {\r\n                                        collectMasterFields.push(thisFieldName);\r\n\r\n                                        // disable dynamic Mappings\r\n                                        if (Object.keys(formData).length) {\r\n                                            const isComing = formData?.filter((item, fkey) => {\r\n                                                return (item?.name === thisFieldName) && (Object.keys(selectedRowData).includes(item?.name) || (selectedRowData?.attributeGroupData && Object.keys(selectedRowData?.attributeGroupData).includes(item?.name)))\r\n                                            }) || [];\r\n\r\n                                            if (isComing.length) {\r\n                                                return true;\r\n                                            }\r\n\r\n                                            const updateCurrFieldValue = masterData?.mcoaffectedItem[selectedRowIndex]?.materialType?.attributeMap[thisItem];\r\n                                            if (Array.isArray(updateCurrFieldValue)) {\r\n                                                return true;\r\n                                            }\r\n\r\n                                            setFieldValue(thisFieldName, updateCurrFieldValue);\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                            if (selectedRowData && Object.keys(selectedRowData).length) {\r\n                                selectedRowData?.materialType?.attributeMap && Object.keys(selectedRowData?.materialType?.attributeMap).forEach((thisItem) => {\r\n                                    const thisFieldName = thisItem;\r\n                                    if (\r\n                                        selectedRowData?.materialType?.attributeMap[thisItem]\r\n                                        // && !collectMasterFields.includes(thisFieldName)\r\n                                        && currentFormFields.includes(thisFieldName)\r\n                                    ) {\r\n                                        collectMasterFields.push(thisFieldName);\r\n\r\n                                        // disable dynamic Mappings\r\n                                        if (Object.keys(formData).length) {\r\n                                            const isComing = formData?.filter((item, fkey) => {\r\n                                                return (item?.name === thisFieldName) && (Object.keys(selectedRowData).includes(item?.name) || (selectedRowData?.attributeGroupData && Object.keys(selectedRowData?.attributeGroupData).includes(item?.name)))\r\n                                            }) || [];\r\n\r\n                                            if (isComing.length) {\r\n                                                return true;\r\n                                            }\r\n\r\n                                            const updateCurrFieldValue = selectedRowData?.materialType?.attributeMap[thisItem]\r\n                                            if (Array.isArray(updateCurrFieldValue)) {\r\n                                                return true;\r\n                                            }\r\n\r\n                                            setFieldValue(thisFieldName, updateCurrFieldValue);\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                        }, 500);\r\n                    }, [setFieldValue])\r\n\r\n                    useImperativeHandle(ref, () => ({\r\n                        callsubmitForm() {\r\n                            submitForm();\r\n                            return isValid;\r\n                        },\r\n                    }));\r\n\r\n                    return (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div>\r\n                                {Object.keys(formData).length ? formData?.map((item, fkey) => {\r\n\r\n                                    const thisInputName = item?.name;\r\n\r\n                                    // skip the iteration\r\n                                    if (responseData?.isMaster === \"N\" && ['Copy From'].includes(thisInputName)) {\r\n                                        return true;\r\n                                    }\r\n\r\n                                    // disable dynamic Mappings\r\n                                    if (Object.keys(selectedRowData).includes(thisInputName) || (selectedRowData?.attributeGroupData && Object.keys(selectedRowData?.attributeGroupData).includes(thisInputName))) {\r\n                                        return true;\r\n                                    }\r\n\r\n                                    let isdisabled;\r\n                                    if (masterData && Object.keys(masterData).length && masterData?.plantName.includes('SAP')) {\r\n                                        isdisabled = Object.keys(masterData).length && masterData?.master === 'N' && item?.material_master === 'Y';\r\n\r\n                                        // if (masterData?.master === 'N' && item?.material_master === 'N') {\r\n                                        //     // return true;\r\n                                        // }\r\n                                    } else {\r\n                                        isdisabled = false;\r\n                                    }\r\n\r\n                                    const currentFieldValue = values[thisInputName] || item?.defaultValues;\r\n\r\n                                    return (\r\n                                        <div className=\"attribute-section\">\r\n                                            <Grid\r\n                                                container\r\n                                                spacing={3}\r\n                                                alignItems=\"center\"\r\n                                            >\r\n                                                <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n                                                    <span >\r\n                                                        {item?.name} {item?.mandatory === \"Y\" ? <span className={classes.spanRed}>*</span> : ''}\r\n                                                    </span>\r\n                                                </Grid>\r\n                                                <Grid item md={8} sm={6} xs={12}>\r\n                                                    {\r\n                                                        (item?.inputType === 'text') && (\r\n                                                            <TextField\r\n                                                                className={\"mb-4 w-full \"}\r\n                                                                color={(errors?.[thisInputName] ? ('warning') : (''))}\r\n                                                                fullWidth\r\n                                                                size=\"small\"\r\n                                                                variant=\"outlined\"\r\n                                                                id={thisInputName}\r\n                                                                name={thisInputName}\r\n                                                                value={currentFieldValue}\r\n                                                                onChange={(e) => {\r\n                                                                    setFieldValue(thisInputName, e.target.value);\r\n                                                                }}\r\n                                                                type=\"text\"\r\n                                                                disabled={isdisabled}\r\n                                                                style={{ marginBottom: '10px' }}\r\n                                                            />\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        (item?.inputType === 'select') && (\r\n                                                            <>\r\n                                                                <div>{values[thisInputName]}</div>\r\n                                                                <Select\r\n                                                                    disabled={isdisabled}\r\n                                                                    value={currentFieldValue}\r\n                                                                    onChange={(e) => {\r\n                                                                        setFieldValue(thisInputName, e.target.value);\r\n                                                                    }}\r\n                                                                    displayEmpty // Enable displayEmpty prop\r\n                                                                    renderValue={(selected) => {\r\n                                                                        if (!selected) {\r\n                                                                            return <em>--Select--</em>; // Placeholder text\r\n                                                                        }\r\n                                                                        // Render the selected value\r\n                                                                        // const selectedOption = responseData?.productHierarchy.find(\r\n                                                                        //     (option) => option?.sClassID === selected\r\n                                                                        // );\r\n                                                                        return item?.values.length && item?.values[0][selected];\r\n                                                                    }}\r\n                                                                    style={{ height: '37.13px', marginBottom: '1rem', width: \"100%\" }}\r\n                                                                >\r\n                                                                    <MenuItem id=\"\">Select</MenuItem>\r\n                                                                    {\r\n                                                                        item?.values.length && Object.keys(item?.values[0]).map((vitem) => {\r\n                                                                            return (\r\n                                                                                <MenuItem value={vitem} key={shortId.generate()}>{item?.values[0][vitem]}</MenuItem>\r\n                                                                            )\r\n                                                                        })\r\n                                                                    }\r\n                                                                </Select>\r\n                                                            </>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        (item?.inputType === 'checkbox') && (\r\n                                                            <>\r\n                                                                {\r\n                                                                    item?.values.map((vitem, vcinx) => {\r\n                                                                        return (\r\n                                                                            <div key={shortId.generate()}>\r\n                                                                                <FormControlLabel\r\n                                                                                    value={vitem}\r\n                                                                                    label={vitem}\r\n                                                                                    labelPlacement=\"end\"\r\n                                                                                    control={<Checkbox />}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </>\r\n                                                        )\r\n                                                    }\r\n                                                    {\r\n                                                        (item?.inputType === 'radio') && (\r\n                                                            <RadioGroup\r\n                                                                row\r\n                                                                name={thisInputName}\r\n                                                                sx={{ mb: 2 }}\r\n                                                                value={values[thisInputName] ?? \"\"}\r\n                                                                onChange={(e) => {\r\n                                                                    setFieldValue(thisInputName, e.target.value);\r\n                                                                }}\r\n                                                                style={{ display: 'flex' }}\r\n                                                            >\r\n                                                                {\r\n                                                                    item?.values.map((vitem, vrinx) => {\r\n                                                                        return (\r\n                                                                            <div key={shortId.generate()}>\r\n                                                                                <FormControlLabel\r\n                                                                                    value={vitem}\r\n                                                                                    label={vitem}\r\n                                                                                    labelPlacement=\"end\"\r\n                                                                                    control={<Radio color=\"secondary\" />}\r\n                                                                                />\r\n                                                                            </div>\r\n                                                                        )\r\n                                                                    })\r\n                                                                }\r\n                                                            </RadioGroup>\r\n                                                        )\r\n                                                    }\r\n                                                    <div style={{ textAlign: 'left', color: \"red\", position: 'relative', top: '-15px' }}>\r\n                                                        {errors?.[thisInputName]}\r\n                                                    </div>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </div>\r\n                                    )\r\n                                }) : (\r\n                                    <div>\r\n                                        No attributes found.\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n                    )\r\n                }\r\n            }\r\n        </Formik>\r\n    );\r\n});\r\n\r\nMaterialForm.propTypes = {\r\n    saveMaterialDetails: PropTypes.func.isRequired\r\n};\r\n\r\nexport default MaterialForm;","import React, { useRef } from \"react\";\r\nimport { Store } from \"app/redux/Store\";\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\nimport {\r\n    update_generalValues,\r\n} from 'app/redux/actions/MCODetailsAction';\r\nimport MaterialForm from 'app/components/McoPages/MaterialForm';\r\n\r\nconst getAffectedPartsData = async () => {\r\n    const getStorevalue = Store.getState();\r\n    const responseData = getStorevalue?.mcoDetails?.responseData || {};\r\n    const affectedPartsData = getStorevalue?.mcoDetails?.affectedPartsData || [];\r\n    if (affectedPartsData?.length) {\r\n        return affectedPartsData || [];\r\n    } else {\r\n        return responseData?.mcoaffectedItem || [];\r\n    }\r\n}\r\nconst MaterialAttributeDialogBox = () => {\r\n    const {\r\n        selectedRowData,\r\n        selectedRowFormdata: attributeformData,\r\n        responseData,\r\n        showMaterialForm,\r\n    } = useSelector((state) => ({\r\n        selectedRowData: state?.mcoDetails?.selectedRowData,\r\n        selectedRowFormdata: state?.mcoDetails?.selectedRowFormdata,\r\n        responseData: state?.mcoDetails?.responseData,\r\n        showMaterialForm: state?.mcoDetails?.showMaterialForm,\r\n    }), shallowEqual);\r\n    const dispatch = useDispatch();\r\n    const childCompRef = useRef({});\r\n\r\n    const saveMaterialDetails = async (formvalue) => {\r\n        const affectedPartsData = await getAffectedPartsData();\r\n        const mcoaffectedItem = [...affectedPartsData];\r\n        const findSaveIndex = mcoaffectedItem.findIndex((material, materialIndex) => {\r\n            return (selectedRowData?.id === material.id);\r\n        });\r\n\r\n        mcoaffectedItem[findSaveIndex]['materialType'] = {\r\n            name: mcoaffectedItem[findSaveIndex]['materialType'].name,\r\n            attributeMap: formvalue\r\n        };\r\n\r\n        dispatch(update_generalValues({\r\n            affectedPartsData: mcoaffectedItem,\r\n            isMaterialFormEdited: true,\r\n            showMaterialForm: false\r\n        }));\r\n    }\r\n    return (\r\n        <Dialog\r\n            open={showMaterialForm}\r\n            onClose={() => {\r\n                dispatch(update_generalValues({ showMaterialForm: false }));\r\n            }}\r\n            scroll={'paper'}\r\n            aria-labelledby=\"scroll-dialog-title\"\r\n            aria-describedby=\"scroll-dialog-description\"\r\n            maxWidth={'md'}\r\n            fullWidth={true}\r\n        >\r\n            <DialogTitle id=\"scroll-dialog-title\">Material Details</DialogTitle>\r\n            <DialogContent dividers={true}>\r\n                <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n                    <MaterialForm ref={childCompRef} saveMaterialDetails={saveMaterialDetails} />\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => {\r\n                    dispatch(update_generalValues({ showMaterialForm: false }));\r\n                }}>Cancel</Button>\r\n                <Button\r\n                    onClick={() => { childCompRef.current.callsubmitForm(); }}\r\n                    disabled={([\"Review\", \"Release\", \"Implemented\"].includes(responseData?.mcoaffectedItem?.mcostate) || (!Object.keys(attributeformData || {}).length))}\r\n                >Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default MaterialAttributeDialogBox;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Select, MenuItem, Paper, TableContainer } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport StatusColors from \"./StatusColors\";\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { TableVirtuoso } from 'react-virtuoso';\r\n// import { useCommonMCOFunctions } from \"app/hooks/mcoHooks/useCommonMCOFunctions\";\r\nimport MaterialAttributeDialogBox from 'app/components/McoPages/MaterialAttributeDialogBox';\r\nimport { Store } from \"app/redux/Store\";\r\nimport { update_generalValues, } from 'app/redux/actions/MCODetailsAction';\r\nimport { handleMaterialTypeSelect, findLabelForTooltip, findDropdownValue, sortAffData } from \"app/utils/mcoUtils/utilities\";\r\nimport \"./affectedPartsStyle.css\";\r\n\r\nconst exportToERPDropDownOpt = [\r\n    { label: \"Yes\", value: true },\r\n    { label: \"No\", value: false }\r\n];\r\nconst itemStatusDropDownOpt = [\r\n    { label: \"Active\", value: \"active\" },\r\n    { label: \"Inactive\", value: \"inactive\" }\r\n];\r\nconst makeOrBuyDropDownOpt = [\r\n    { label: \"Make\", value: \"make\" },\r\n    { label: \"Buy\", value: \"buy\" }\r\n];\r\n\r\nfunction emptyChecks(value) {\r\n    return (value && value !== '') ? value : \"--\";\r\n}\r\n\r\nconst columns = [\r\n    { width: 50, label: 'Old\\nRev', dataKey: 'oldRevision', textAlign: 'center' },\r\n    { width: 50, label: 'New\\nRev', dataKey: 'newRevision', textAlign: 'center' },\r\n    { width: \"20ch\", label: 'Type', dataKey: 'type' },\r\n    { width: \"25ch\", label: 'Part Name', dataKey: 'name' },\r\n    { width: \"30ch\", label: 'Description', dataKey: 'description', textAlign: 'left' },\r\n    { width: \"30ch\", label: 'Material Type Template', dataKey: 'materialTypeTemplate', textAlign: 'center' },\r\n    // { width: 80, label: 'Affected\\nMBOMs', dataKey: 'hasAffectedMBOM', textAlign: 'center' },\r\n    { width: 90, label: 'Make-Buy', dataKey: 'makeOrBuy', textAlign: 'center' },\r\n    { width: 80, label: 'Export\\nStatus', dataKey: 'ErpStatus', textAlign: 'center' },\r\n    { width: 80, label: 'Export \\nTo ERP', dataKey: 'exportToERP', textAlign: 'center' },\r\n    { width: 80, label: 'Sequence', dataKey: 'currentSequence', textAlign: 'center' },\r\n    { width: 100, label: 'Item Status', dataKey: 'ERPStatus', textAlign: 'left' },\r\n    // { width: 80, label: 'Policy', dataKey: 'policy', textAlign: 'center' },\r\n    // { width: 80, label: 'State', dataKey: 'state', textAlign: 'center' },\r\n    { width: 120, label: 'Actions', dataKey: 'actions', textAlign: 'center' },\r\n];\r\n\r\n// Convert columns array to widthValue object\r\nconst widthValue = {};\r\ncolumns.forEach(column => {\r\n    widthValue[column.dataKey] = column.width;\r\n});\r\n\r\nconst MemoizedTableRow = React.memo(({ row, rowIndex, dropdownOpts, handleIconClick }) => {\r\n    const {\r\n        responseData,\r\n        masterData,\r\n        materialData,\r\n        mrDetails,\r\n        eachTemplateOptions,\r\n        affectedPartsData,\r\n        parentMCODetails,\r\n    } = useSelector((state) => ({\r\n        responseData: state.mcoDetails?.responseData,\r\n        masterData: state.mcoDetails?.masterData,\r\n        materialData: state.mcoDetails?.materialData,\r\n        mrDetails: state.mcoDetails?.mrDetails,\r\n        eachTemplateOptions: state.mcoDetails?.eachTemplateOptions,\r\n        affectedPartsData: state.mcoDetails?.affectedPartsData,\r\n        parentMCODetails: state.mcoDetails?.parentMCODetails,\r\n    }), shallowEqual);\r\n    const [affval, setAffval] = useState(row || {}); // Default to empty array\r\n    // const [affkey, setAffkey] = useState(rowIndex || 0); // Default to empty array\r\n\r\n    let findMaterialDetails = findDropdownValue(affval);\r\n\r\n    let isdisabled = false;\r\n    if (masterData && Object.keys(masterData).length && masterData?.plantName.includes('SAP')) {\r\n        isdisabled = Object.keys(masterData).length && masterData?.master === 'N';\r\n    }\r\n\r\n    if ([\"Review\", \"Release\", \"Implemented\", \"Complete\"].includes(responseData?.mcoPropeties?.mcostate)) {\r\n        isdisabled = true;\r\n    }\r\n    if (Object.keys(findMaterialDetails || {}).length && findMaterialDetails?.desc === affval?.attributeGroupData?.ERPItemTypeTemplate) {\r\n        isdisabled = true;\r\n    }\r\n\r\n    let ErpStatus = responseData?.itemERPStatus && responseData?.itemERPStatus.filter((efitem) => {\r\n        return efitem?.Item_Name === affval?.name;\r\n    });\r\n\r\n    ErpStatus = (ErpStatus?.length) ? ErpStatus[0]?.status : 'Not yet processed!';\r\n\r\n    const labelValue = findLabelForTooltip(findMaterialDetails);\r\n\r\n    // find dropdown options\r\n    // let thisDropOptions = getDropdownOptions(affval) || [];\r\n    let thisDropOptions = eachTemplateOptions?.[affval?.name] || [];\r\n\r\n    if (Object.keys(dropdownOpts)?.length && Object.keys(dropdownOpts)?.includes(affval?.name)) {\r\n        thisDropOptions = dropdownOpts[affval?.name];\r\n    }\r\n    const templExistOrNot = thisDropOptions?.find(mtemp => {\r\n        return mtemp?.id === findMaterialDetails.id;\r\n    }) || {};\r\n    if (!Object.keys(templExistOrNot)?.length && Object.keys(findMaterialDetails)?.length) {\r\n        let prevSelectedTemplateObj = materialData?.find((foption) => {\r\n            return findMaterialDetails?.Name === foption.templateName;\r\n        });\r\n        if (prevSelectedTemplateObj) {\r\n            thisDropOptions = [...thisDropOptions, prevSelectedTemplateObj]\r\n        }\r\n    }\r\n\r\n    const activeMRData = (Object.keys(mrDetails)?.length && mrDetails?.activeMR?.hasOwnProperty(affval?.name) && mrDetails?.activeMR[affval?.name]?.length) ? mrDetails?.activeMR[affval?.name][0] : {};\r\n    // const newRevision = Object.keys(activeMRData)?.length ? `${affval.revision}${activeMRData?.additionalSequence}` : null;\r\n    // const currentSequence = Object.keys(activeMRData)?.length ? `${activeMRData?.sequence}` : null;\r\n\r\n    const previousSeqMRData = (Object.keys(mrDetails)?.length && mrDetails?.activeMR?.hasOwnProperty(affval?.name) && mrDetails?.previousSeqMR[affval?.name]?.length) ? mrDetails?.previousSeqMR[affval?.name][0] : {};\r\n    // const oldRevision = Object.keys(previousSeqMRData)?.length ? `${previousSeqMRData?.revision}${previousSeqMRData?.additionalSequence}` : null;\r\n\r\n    // getting active mr template for existing data from enovia\r\n    const activeMRtemplExistOrNot = thisDropOptions?.find(mtemp => {\r\n        return mtemp?.id === findMaterialDetails?.id;\r\n    }) || {};\r\n    if (!Object.keys(activeMRtemplExistOrNot)?.length) {\r\n        let activeTemplateObj = materialData?.find((foption) => {\r\n            return activeMRData?.template === foption.templateName;\r\n        });\r\n        if (activeTemplateObj && !affval?.isTemplateValueChange) {\r\n            thisDropOptions = [...thisDropOptions, activeTemplateObj]\r\n            findMaterialDetails = activeTemplateObj;\r\n            // handleMaterialTypeSelect(findMaterialDetails?.templates, affkey, 'template');\r\n        }\r\n    }\r\n\r\n    let defaultOptValue = {};\r\n    if (Object.keys(previousSeqMRData || {})?.length) {\r\n        let previousSeqMRTemplateObj = materialData?.find((foption, findex) => {\r\n            return foption?.templateName === previousSeqMRData?.template;\r\n        }) || {};\r\n        if (Object.keys(previousSeqMRTemplateObj)?.length) {\r\n            thisDropOptions.push(previousSeqMRTemplateObj); // push the option to dropdown \r\n            if (!affval?.isTemplateValueChange) {\r\n                defaultOptValue = previousSeqMRTemplateObj; // for selecting the option\r\n            }\r\n        }\r\n    }\r\n    if (!Object.keys(findMaterialDetails || {})?.length && !affval?.isTemplateValueChange) {\r\n        const isRevisionTempExist = thisDropOptions?.find((fcheckItem) => {\r\n            return fcheckItem?.templateName === previousSeqMRData?.template;\r\n        }) || {};\r\n\r\n        if (!Object.keys(isRevisionTempExist)?.length && Object.keys(defaultOptValue)?.length) {\r\n            findMaterialDetails = defaultOptValue;\r\n            // handleMaterialTypeSelect(findMaterialDetails?.templates, affkey, 'template');\r\n        } else if (Object.keys(isRevisionTempExist)?.length) {\r\n            findMaterialDetails = isRevisionTempExist;\r\n            // handleMaterialTypeSelect(findMaterialDetails?.templates, affkey, 'template');\r\n        }\r\n    }\r\n\r\n    let getMakeBuyValue = (affval?.makeOrBuy)?.toLowerCase();\r\n    let getExportToERPValue = affval?.exportToERP;\r\n    let getItemStatusValue = (affval?.itemStatus)?.toLowerCase();\r\n    if (!getMakeBuyValue && !affval?.isMakeOrBuyValueChange) {\r\n        getMakeBuyValue = activeMRData?.makeOrBuy;\r\n    }\r\n    if (!getItemStatusValue && !affval?.isItemStatusValueChange) {\r\n        getItemStatusValue = activeMRData?.ERPStatus?.toLowerCase();\r\n        // handleMaterialTypeSelect(getItemStatusValue, affkey, 'itemStatus')\r\n    }\r\n\r\n    // remove duplicate if having\r\n    if (thisDropOptions?.length) {\r\n        const mergedArr = [...thisDropOptions];\r\n        let uniqueArray = mergedArr.filter((value, index, self) => {\r\n            return self.indexOf(value) === index;\r\n        });\r\n        thisDropOptions = uniqueArray;\r\n    }\r\n\r\n    let isHavingParentTemplate = false;\r\n    if (Object.keys(parentMCODetails)?.length) {\r\n        let findPartDetails = parentMCODetails?.mcoaffectedItem?.find(eitem => {\r\n            return eitem?.name === row?.name;\r\n        }) || {};\r\n        if (Object.keys(findPartDetails || {}).length && findPartDetails?.materialType?.name?.length > 0) {\r\n            isHavingParentTemplate = true;\r\n        }\r\n    }\r\n    // for avoiding parent template check\r\n    if (responseData?.mcoProperties?.name?.includes(\"MVO\")) {\r\n        isHavingParentTemplate = true;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let _thisRowData = row;\r\n            if (affectedPartsData?.length) {\r\n                _thisRowData = affectedPartsData?.find(foption => {\r\n                    return foption.id === row?.id;\r\n                });\r\n            }\r\n            setAffval(_thisRowData);\r\n        };\r\n        fetchData();\r\n    }, [row]);\r\n\r\n    return (\r\n        <>\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.oldRevision, paddingLeft: \"20px\" }}>{emptyChecks(affval?.oldRevision)}</TableCell>\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.newRevision }}>{emptyChecks(affval?.newRevision)}</TableCell>\r\n            <TableCell style={{ textAlign: 'left', width: widthValue?.type }}>{emptyChecks(affval?.displayType)}</TableCell>\r\n            <TableCell style={{ textAlign: 'left', minWidth: widthValue?.name, maxWidth: \"340px\" }}>{emptyChecks(affval?.name)}</TableCell>\r\n            <TableCell style={{ textAlign: 'left', width: widthValue?.description }}>{emptyChecks(affval?.description)}</TableCell>\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.materialTypeTemplate }}>\r\n                <span>\r\n                    <Select\r\n                        disabled={isdisabled}\r\n                        className=\"form-control customSelectCss\"\r\n                        value={findMaterialDetails?.id || \"\"}\r\n                        onChange={(e) => {\r\n                            handleMaterialTypeSelect(e.target.value, row?.id, 'template');\r\n                        }}\r\n                        style={{ width: '100%' }}\r\n                        displayEmpty // Enable displayEmpty prop\r\n                        title={labelValue || null}\r\n                        renderValue={(selected) => {\r\n                            // if (!selected) {\r\n                            //     return <>Unassigned</>; // Placeholder text\r\n                            // }\r\n\r\n                            // Render the selected value\r\n                            const selectedOption = thisDropOptions?.find(\r\n                                (option) => option.id === selected\r\n                            );\r\n\r\n                            return (selectedOption?.templateName) ? selectedOption.templateName : 'Unassigned';\r\n                            // return (selectedOption?.templateName) ? selectedOption.instance + \"_\" + selectedOption.templateName + \"_\" + selectedOption.desc : '';\r\n                        }}\r\n                    >\r\n                        <MenuItem value=\"\">Unassigned</MenuItem>\r\n                        {thisDropOptions?.map((option, index) => {\r\n                            const listKey = \"dpKey\" + index;\r\n                            return (\r\n                                <MenuItem value={option.id} key={listKey}>\r\n                                    {/* {option.templateName ? option.instance + \"_\" + option.templateName + \"_\" + option.desc : ''} */}\r\n                                    {option.templateName ? option.templateName : ''}\r\n                                </MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                </span>\r\n                {\r\n                    (!thisDropOptions?.length) ? (<>\r\n                        <br /><span style={{ color: 'red' }}>\r\n                            {/* {\"No Template assigned for this Part in Master Plant\"} */}\r\n                            {(!isHavingParentTemplate) ? \"MVO is required to be set first\" : \"Template not available!\"}\r\n                        </span>\r\n                    </>) : (<></>)\r\n                }\r\n            </TableCell>\r\n            {/* <TableCell style={{ textAlign: 'center', width: widthValue?.affectedMBOMs }}>{emptyChecks(affval?.hasAffectedMBOM)}</TableCell> */}\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.makeBuy }}>\r\n                <Select\r\n                    disabled={true}\r\n                    className=\"form-control customSelectCss\"\r\n                    value={getMakeBuyValue}\r\n                    onChange={(e) => handleMaterialTypeSelect(e.target.value, row?.id, 'makeOrBuy')}\r\n                    style={{ width: '100%' }}\r\n                    displayEmpty // Enable displayEmpty prop\r\n                    // title={labelValue || null}\r\n                    renderValue={(selected) => {\r\n                        // Render the selected value\r\n                        const makeOrBuyselectedOption = makeOrBuyDropDownOpt?.find(\r\n                            (option) => option.value === selected\r\n                        );\r\n                        return makeOrBuyselectedOption?.label;\r\n                    }}\r\n                >\r\n                    {makeOrBuyDropDownOpt?.map((option, index) => {\r\n                        const listKey = \"dpKeyMakeBuy\" + index;\r\n                        return (\r\n                            <MenuItem value={option.value} key={listKey}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </TableCell>\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.exportStatus }}>\r\n                <StatusColors colorCode=\"red\" status={ErpStatus} />\r\n            </TableCell>\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.exportToERP }}>\r\n                <Select\r\n                    disabled={true}\r\n                    className=\"form-control customSelectCss\"\r\n                    value={getExportToERPValue}\r\n                    onChange={(e) => handleMaterialTypeSelect(e.target.value, row?.id, 'exportToERP')}\r\n                    style={{ width: '100%' }}\r\n                    displayEmpty // Enable displayEmpty prop\r\n                    // title={labelValue || null}\r\n                    renderValue={(selected) => {\r\n                        // Render the selected value\r\n                        const exportToERP_selectedOption = exportToERPDropDownOpt?.find(\r\n                            (option) => option.value === selected\r\n                        );\r\n                        return exportToERP_selectedOption?.label;\r\n                    }}\r\n                >\r\n                    {exportToERPDropDownOpt?.map((option, index) => {\r\n                        const listKey = \"dpKey2\" + index;\r\n                        return (\r\n                            <MenuItem value={option.value} key={listKey}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </TableCell>\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.currentSequence }}>{emptyChecks(affval?.currentSequence)}</TableCell>\r\n            <TableCell style={{ textAlign: 'center', width: widthValue?.itemStatus }}>\r\n                <Select\r\n                    disabled={true}\r\n                    className=\"form-control customSelectCss\"\r\n                    value={getItemStatusValue}\r\n                    onChange={(e) => handleMaterialTypeSelect(e.target.value, row?.id, 'itemStatus')}\r\n                    style={{ width: '100%' }}\r\n                    displayEmpty // Enable displayEmpty prop\r\n                    // title={labelValue || null}\r\n                    renderValue={(selected) => {\r\n                        // Render the selected value\r\n                        const itemStatus_selectedOption = itemStatusDropDownOpt?.find(\r\n                            (option) => option.value === selected\r\n                        );\r\n                        return itemStatus_selectedOption?.label;\r\n                    }}\r\n                >\r\n                    {itemStatusDropDownOpt?.map((option, index) => {\r\n                        const listKey = \"dpKey3\" + index;\r\n                        return (\r\n                            <MenuItem value={option.value} key={listKey}>\r\n                                {option.label}\r\n                            </MenuItem>\r\n                        )\r\n                    })}\r\n                </Select>\r\n            </TableCell>\r\n\r\n            {/* <TableCell style={{ textAlign: 'center', width: widthValue?.policy }}>{emptyChecks(affval?.policy)}</TableCell> */}\r\n            {/* <TableCell style={{ textAlign: 'center', width: widthValue?.state }}>{emptyChecks(affval?.state)}</TableCell> */}\r\n\r\n            {\r\n                (responseData?.mcoPropeties?.organizationId.includes(\"SAP\")) ? (\r\n                    <TableCell style={{ textAlign: 'center', width: widthValue?.actions }}>\r\n                        <Button onClick={async (e) => {\r\n                            await handleIconClick(affval, materialData, 'form', responseData);\r\n                        }}\r\n                        >\r\n                            <span role=\"img\" aria-label=\"Open Form\">\r\n                                📝\r\n                            </span>\r\n                        </Button>\r\n                    </TableCell>\r\n                ) : (null)\r\n            }\r\n\r\n        </>\r\n    );\r\n}, (prevProps, nextProps) => {\r\n    return prevProps.row === nextProps.row && prevProps.rowIndex === nextProps.rowIndex;\r\n});\r\n\r\nconst AffectedPartsTable = React.memo((props) => {\r\n    const { responseData } = useSelector((state) => ({\r\n        responseData: state.mcoDetails?.responseData,\r\n    }), shallowEqual);\r\n    const [dropdownOpts, setDropdownOpts] = useState({});\r\n    const [sortConfig, setSortConfig] = useState({ key: 'name', direction: 'asc' });\r\n    const [sortedData, setSortedData] = useState(responseData?.mcoaffectedItem || []);\r\n    const tableRef = useRef(null);\r\n\r\n    const dispatch = useDispatch();\r\n    const instance = localStorage.getItem('instance');\r\n\r\n    // Function to call the loadExternalFunction function\r\n    const loadExternalFunction = async () => {\r\n        if (window?.ExternalClass) {\r\n            // Create an instance of the ExternalClass class\r\n            const externalClass = new window.ExternalClass({ affectedItemsInfo: responseData });\r\n            // Call the getDropdownOptions method with a name\r\n            const optsList = await externalClass.getDropdownOptions();\r\n            setDropdownOpts(optsList);\r\n        } else {\r\n            console.error('ExternalClass class is not defined.');\r\n        }\r\n    };\r\n\r\n    const handleSort = (key) => {\r\n        setSortConfig((prevConfig) => ({\r\n            key,\r\n            direction: prevConfig.direction === 'asc' ? 'desc' : 'asc'\r\n        }));\r\n    };\r\n\r\n    const VirtuosoTableComponents = {\r\n        Scroller: React.forwardRef((props, ref) => (\r\n            <TableContainer component={Paper} {...props} ref={ref} className=\"affTableContainer\" />\r\n        )),\r\n        Table: (props) => (\r\n            <Table {...props} sx={{ borderCollapse: 'separate' }} />\r\n        ),\r\n        TableHead,\r\n        TableRow: ({ item: _item, ...props }) => {\r\n            return <TableRow {...props} />\r\n        },\r\n        TableBody: React.forwardRef((props, ref) => <TableBody {...props} ref={ref} />),\r\n    };\r\n\r\n    function fixedHeaderContent() {\r\n        return (\r\n            <TableRow>\r\n                {\r\n                    columns.filter(fcolumns => {\r\n                        return fcolumns.dataKey !== \"actions\" && instance === 'onPrem' ? responseData?.mcoPropeties?.organizationId.includes(\"ORACLE\") : responseData?.mcoPropeties?.organizationId.includes(\"SAP\") ;\r\n                    }).map((column) => {\r\n                        let columnLabel = column.label;\r\n                        // if (column?.dataKey === \"materialTypeTemplate\" && instance === 'onPrem' ? responseData?.mcoPropeties?.organizationId.includes(\"ORACLE\") : responseData?.mcoPropeties?.organizationId.includes(\"SAP\")) {\r\n                        //     columnLabel = \"Oracle Template\";\r\n                        // } else \r\n                        if (column?.dataKey === \"materialTypeTemplate\" && responseData?.mcoPropeties?.organizationId.includes(\"SAP\")) {\r\n                            columnLabel = \"Material Type Template\";\r\n                        } else if (column?.dataKey === \"materialTypeTemplate\") {\r\n                            columnLabel = \"Template\";\r\n                        }\r\n                        let styleObj = { textAlign: column.textAlign, width: column.width, paddingLeft: column?.dataKey === \"oldRevision\" ? \"20px\" : \"\" };\r\n                        if (column.dataKey === \"name\") {\r\n                            styleObj = { textAlign: column.textAlign, width: column.width };\r\n                        }\r\n                        return (\r\n                            <TableCell\r\n                                key={column.dataKey}\r\n                                style={styleObj}\r\n                                sx={{\r\n                                    backgroundColor: 'background.paper',\r\n                                    cursor: 'pointer',\r\n                                }}\r\n                                onClick={() => handleSort(column.dataKey)}\r\n                            >\r\n                                {columnLabel}\r\n                                {sortConfig.key === column.dataKey ? (\r\n                                    <span>{sortConfig.direction === 'asc' ? ' ↑' : ' ↓'}</span>\r\n                                ) : null}\r\n                            </TableCell>\r\n                        )\r\n                    })\r\n                }\r\n            </TableRow>\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            loadExternalFunction();\r\n        }, 100);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // let sortingData = responseData?.mcoaffectedItem || [];\r\n        // if (affectedPartsData?.length) {\r\n        //     sortingData = affectedPartsData;\r\n        // }\r\n        const sortedDataNew = sortAffData(sortConfig);\r\n\r\n        setSortedData(sortedDataNew);\r\n\r\n        dispatch(update_generalValues({\r\n            exportAffectedPartsData: sortedDataNew,\r\n        }));\r\n    }, [sortConfig, responseData]);\r\n\r\n    // const sortedData = sortAffData(responseData?.mcoaffectedItem || []);\r\n\r\n    return (\r\n        <div className={\"partsTableSty\"}>\r\n            {\r\n                sortedData.length ? (\r\n                    <Paper className=\"height100Per\">\r\n                        <TableVirtuoso\r\n                            ref={tableRef}\r\n                            data={sortedData}\r\n                            components={VirtuosoTableComponents}\r\n                            fixedHeaderContent={fixedHeaderContent}\r\n                            itemContent={(_index, row) => {\r\n                                return <MemoizedTableRow\r\n                                    row={row}\r\n                                    rowIndex={_index}\r\n                                    dropdownOpts={dropdownOpts}\r\n                                    handleIconClick={props?.handleIconClick}\r\n                                />\r\n                            }}\r\n                        />\r\n                    </Paper>\r\n                ) : (\r\n                    <div style={{ textAlign: 'center' }}>No parts available!</div>\r\n                )\r\n            }\r\n            <MaterialAttributeDialogBox />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default AffectedPartsTable;","import { useEffect, useState } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport Stack from '@mui/material/Stack';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport Link from '@mui/material/Link';\r\nimport { Grid } from \"@mui/material\";\r\nimport RotatingInProgressIcon from './InprogressIcon';\r\n\r\nconst actionTextVar = {\r\n    promote: \"Promote >>\",\r\n    demote: \"<< Demote\"\r\n}\r\n\r\nexport default function LifeCycleStepperComponent(props) {\r\n    const { responseData, lifeCycleData } = useSelector((state) => ({\r\n        responseData: state.mcoDetails?.responseData,\r\n        lifeCycleData: state.mcoDetails.lifeCycleData,\r\n    }), shallowEqual);\r\n    const { stepData, lifeCycleStep } = props;\r\n    const [activeStep, setactiveStep] = useState('Create');\r\n    let instance = localStorage.getItem('instance');\r\n    let steps = [];\r\n    if(instance === 'SaaS'){\r\n        steps = [\r\n            'Prepare',\r\n            'In Work',\r\n            'In Approval',\r\n            'Approved',\r\n            'Complete'\r\n        ];\r\n    } else {\r\n        steps = [\r\n            'Create',\r\n            'Review',\r\n            'Release',\r\n            // 'Release Item',\r\n            // 'Release BOM',\r\n            'Implemented'\r\n        ];\r\n    }\r\n\r\n    useEffect(() => {\r\n        setactiveStep(stepData);\r\n    }, [stepData])\r\n\r\n    return (\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n            <div className=\"\" style={{ margin: 'auto auto 25px auto', textAlign: 'center', width: '75%', position: \"relative\" }}>\r\n                <Stack sx={{ width: '100%' }} spacing={4}>\r\n                    {\r\n                        (responseData?.mcoPropeties?.mcostate?.toLowerCase() === \"review\" && (lifeCycleData?.[responseData?.mcoPropeties?.name]?.promoted === \"inprogress\" || [\"Item\", \"BOM\"].includes(lifeCycleStep))) ? (\r\n                            <><RotatingInProgressIcon title={lifeCycleData?.[responseData?.mcoPropeties?.name]?.promoted} /></>\r\n                        ) : (null)\r\n                    }\r\n                    <Stepper alternativeLabel activeStep={1} style={{ marginTop: \"0px\" }}>\r\n                        {steps.map((label, sindex) => (\r\n                            <Step key={label}>\r\n                                {\r\n                                    (activeStep === label) ? (\r\n                                        <div style={{\r\n                                            width: 'auto',\r\n                                            minWidth: '110px',\r\n                                            display: 'inline-table',\r\n                                            padding: '10px',\r\n                                            color: '#ffffff',\r\n                                            background: '#42a2da',\r\n                                            zIndex: '1',\r\n                                            position: 'relative',\r\n                                            top: '-10px',\r\n                                            // cursor: 'pointer',\r\n                                            borderRadius: '-10px',\r\n                                            boxShadow: '0px 2px 2px 0px rgba(0, 0, 0, 0.3)',\r\n                                        }} data-state={label}>\r\n                                            {\r\n                                                (sindex !== 0) && (\r\n                                                    <span style={{\r\n                                                        width: '0',\r\n                                                        height: '0',\r\n                                                        borderStyle: 'solid',\r\n                                                        borderTop: '7px solid transparent',\r\n                                                        borderBottom: '7px solid transparent',\r\n                                                        borderLeft: '10px solid #bdbdbd',\r\n                                                        borderRight: '0',\r\n                                                        position: 'absolute',\r\n                                                        left: '-10px',\r\n                                                        top: '15.5px',\r\n                                                    }}></span>\r\n                                                )\r\n                                            }\r\n\r\n                                            {label}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <div style={{\r\n                                            width: 'auto',\r\n                                            minWidth: '110px',\r\n                                            display: 'inline-table',\r\n                                            padding: '10px',\r\n                                            color: '#5c5c5c',\r\n                                            background: '#e6e7e8',\r\n                                            zIndex: '1',\r\n                                            position: 'relative',\r\n                                            top: '-10px',\r\n                                            // cursor: 'pointer',\r\n                                            borderRadius: '-10px',\r\n                                            boxShadow: '0px 2px 2px 0px rgba(0, 0, 0, 0.3)',\r\n                                        }} data-state={label}>\r\n                                            {\r\n                                                (sindex !== 0) && (\r\n                                                    <span style={{\r\n                                                        width: '0',\r\n                                                        height: '0',\r\n                                                        borderStyle: 'solid',\r\n                                                        borderTop: '7px solid transparent',\r\n                                                        borderBottom: '7px solid transparent',\r\n                                                        borderLeft: '10px solid #bdbdbd',\r\n                                                        borderRight: '0',\r\n                                                        position: 'absolute',\r\n                                                        left: '-10px',\r\n                                                        top: '15.5px',\r\n                                                    }}></span>\r\n                                                )\r\n                                            }\r\n                                            {label}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                {\r\n                                    (activeStep === label) && (\r\n                                        <div>\r\n                                            {\r\n                                                (![\"Item\", \"BOM\"].includes(lifeCycleStep) && ['Release'].includes(activeStep)) && (\r\n                                                    <Link\r\n                                                        component=\"button\"\r\n                                                        variant=\"body2\"\r\n                                                        underline=\"none\"\r\n                                                        title={actionTextVar.promote}\r\n                                                        onClick={() => {\r\n                                                            props.handleLifeCycle(label, 'promote')\r\n                                                        }}\r\n                                                    >\r\n                                                        {actionTextVar.promote}\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                ([\"Item\", \"BOM\"].includes(lifeCycleStep) && ['Review', 'Release', 'Implemented', 'In Work', 'In Approval', 'Approved'].includes(activeStep)) && (\r\n                                                    <Link\r\n                                                        component=\"button\"\r\n                                                        variant=\"body2\"\r\n                                                        underline=\"none\"\r\n                                                        title={actionTextVar.promote}\r\n                                                        style={{ color: 'lightgrey' }}\r\n                                                    >\r\n                                                        {actionTextVar.promote}\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                            {\r\n                                                (![\"Item\", \"BOM\"].includes(lifeCycleStep) && ['Review', 'In Work', 'In Approval', 'Approved',].includes(activeStep)) && (\r\n                                                    <>\r\n                                                        <div>\r\n                                                            <Link\r\n                                                                component=\"button\"\r\n                                                                variant=\"body2\"\r\n                                                                underline=\"none\"\r\n                                                                title={actionTextVar.promote}\r\n                                                                onClick={() => {\r\n                                                                    props.handleLifeCycle(label, 'promote')\r\n                                                                }}\r\n                                                            >\r\n                                                                {actionTextVar.promote}\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <Link\r\n                                                                component=\"button\"\r\n                                                                variant=\"body2\"\r\n                                                                underline=\"none\"\r\n                                                                title={actionTextVar.demote}\r\n                                                                onClick={() => {\r\n                                                                    props.demoteState(label, 'demote')\r\n                                                                }}\r\n                                                            >\r\n                                                                {actionTextVar.demote}\r\n                                                            </Link>\r\n                                                        </div>\r\n                                                    </>\r\n                                                )\r\n                                            }\r\n\r\n                                            {\r\n                                                (['Create', 'Prepare'].includes(activeStep)) && (\r\n                                                    <Link\r\n                                                        component=\"button\"\r\n                                                        variant=\"body2\"\r\n                                                        underline=\"none\"\r\n                                                        title={actionTextVar.promote}\r\n                                                        onClick={() => {\r\n                                                            props.handleLifeCycle(label, 'promote')\r\n                                                        }}\r\n                                                    >\r\n                                                        {actionTextVar.promote}\r\n                                                    </Link>\r\n                                                )\r\n                                            }\r\n\r\n                                        </div>\r\n                                    )\r\n                                }\r\n\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                </Stack >\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Box from '@mui/material/Box';\r\n// import Button from '@mui/material/Button';\r\nimport shortId from 'shortid';\r\nimport { TextField } from \"@mui/material\";\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport Grid from '@mui/system/Unstable_Grid';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport dayjs from 'dayjs';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  updateMcoDetails,\r\n  update_generalValues,\r\n} from \"app/redux/actions/MCODetailsAction\";\r\nimport CustomAlertBox from \"../McoPages/CustomAlertBox\";\r\nimport CustomDateTimePickerToolbar from \"./CustomDateTimePickerToolbar\";\r\nimport './mcoStyle.css';\r\nimport { trimmingDisplayContent } from \"app/utils/mcoUtils/utilities\";\r\n\r\nconst capitalize = s => s && s[0].toUpperCase() + s.slice(1)\r\nconst instance = localStorage.getItem('instance');\r\nconst labelArr = {\r\n  startDate: \"Startdate\",\r\n  rme: instance === 'onPrem' ? \"Responsible Manufacturing Engineer\" : '',\r\n  rsme: instance === 'onPrem' ? \"Responsible Senior Manufacturing Engineer\" : '',\r\n  mcostate: \"State\",\r\n  responseFromErp: \"Export Status\",\r\n  plantName: \"Plant\",\r\n  businessUnit: \"Design Organization\",\r\n  description: \"Description\",\r\n  ECOExportToERP: \"ECO Export To ERP\"\r\n};\r\n\r\nconst PropertiesForm = (props) => {\r\n  let { plantType, selectedRoute  } = props;\r\n  const dispatch = useDispatch();\r\n  const { responseData, RSMEList, RMEList, currentMcoDetails, isPropertyFormEdited } = useSelector((state) => state.mcoDetails);\r\n  // const { tapvalue, stepData, submitPropertiesForm } = props;\r\n  const [errorFields, setErrorFields] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const validateForm = (action = '') => {\r\n    let errors = {};\r\n    if (Object.keys(responseData?.mcoPropeties || {}).length) {\r\n      const values = responseData?.mcoPropeties;\r\n\r\n      // Validation logic for each field\r\n      // Assuming values.startdate is a Date object or a string in ISO 8601 format (e.g., '2024-04-19')\r\n      if (!values.startdate) {\r\n        errors.startdate = `${labelArr['startDate']} is required`;\r\n      } else {\r\n        let currentDate = new Date();\r\n        currentDate.setHours(0, 0, 0, 0); // Set current date's time to midnight\r\n\r\n        let parts = values.startdate.split(/[\\s/:]+/); // Split the string by space, /, and :\r\n        let startDate = new Date(parts[2], parts[0] - 1, parts[1], parts[3], parts[4], parts[5]); // Year, month (0-based), day, hour, minute, second\r\n        if (startDate < currentDate) {\r\n          errors.startdate = `${labelArr['startDate']} must be a present or future date`;\r\n        }\r\n      }\r\n\r\n      if ((!values.rme || values.rme?.toLowerCase() === \"unassigned\") && instance === 'onPrem') {\r\n        errors.rme = `${labelArr['rme']} is required`;\r\n      }\r\n      if (!values.rsme || values.rsme?.toLowerCase() === \"unassigned\" && instance === 'onPrem') {\r\n        errors.rsme = `${labelArr['rsme']} is required`;\r\n      }\r\n      if (!values.description) {\r\n        errors.description = `${labelArr['description']} is required`;\r\n      }\r\n      if (!values.ECOExportToERP) {\r\n        errors.ECOExportToERP = `${labelArr['ECOExportToERP']} is required`;\r\n      }\r\n    }\r\n    setErrorFields(errors);\r\n    if (Object.keys(errors || {}).length) {\r\n      const altHtml = Object.keys(errors || {})?.map((citem) => {\r\n        return (<li key={shortId.generate()}>{errors[citem]}</li>)\r\n      });\r\n\r\n      if (action === 'click') {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: \"error\",\r\n          desc: altHtml,\r\n        });\r\n      }\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  useEffect(() => {\r\n    validateForm();\r\n  }, [responseData]);\r\n\r\n  return (\r\n    <>\r\n      {Object.keys(responseData?.mcoPropeties || {}).map((key) => {\r\n        if (\r\n          [\r\n            \"id\",\r\n            \"type\",\r\n            \"physicalid\",\r\n            // \"businessUnit\",\r\n            \"organizationId\",\r\n            \"rmeEmailAddress\",\r\n            \"rsmeEmailAddress\",\r\n            \"startDateDisplayValue\",\r\n            \"errorMsg\",\r\n          ].includes(key) || (key === \"responseFromErp\" && ((!currentMcoDetails || !currentMcoDetails?.ERPstatus) || !currentMcoDetails))\r\n        ) {\r\n          return false;\r\n        }\r\n\r\n        let filterValue = null;\r\n        if ([\"rme\", \"rsme\"].includes(key) && instance === 'onPrem') {\r\n          filterValue = ((key === \"rme\" ? RMEList : RSMEList) || [])?.find(\r\n            (rmeFilter) => rmeFilter.key === responseData?.mcoPropeties[key]\r\n          );\r\n        }\r\n        let ECOExportToERP = responseData?.mcoPropeties?.ECOExportToERP;\r\n        if (key === \"ECOExportToERP\" && (!responseData?.mcoPropeties?.ECOExportToERP || responseData?.mcoPropeties?.ECOExportToERP === \"\")) {\r\n          let mcoPropeties = responseData?.mcoPropeties;\r\n          mcoPropeties[\"ECOExportToERP\"] = 'yes';\r\n          dispatch(updateMcoDetails({\r\n            mcoPropeties: mcoPropeties,\r\n          }));\r\n        }\r\n\r\n        const disableAllFields = ![\"Create\", \"Review\", \"Prepare\", 'In Work']?.includes(responseData?.mcoPropeties?.mcostate);\r\n\r\n        return (\r\n          <>\r\n            <Grid container spacing={3} alignItems=\"center\" key={key}>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                {\r\n                  ([\"startdate\"].includes(key) && (responseData?.mcoPropeties?.startDateDisplayValue && responseData?.mcoPropeties?.startDateDisplayValue !== 'null')) ? (\r\n                    <span style={{ position: 'relative', top: \"-25px\" }}>\r\n                      {Object.keys(labelArr || {}).includes(key)\r\n                        ? capitalize(labelArr[key])\r\n                        : capitalize(key)}\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      {Object.keys(labelArr || {}).includes(key)\r\n                        ? capitalize(labelArr[key])\r\n                        : capitalize(key)}\r\n                    </span>\r\n                  )\r\n                }\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                {\r\n                  [\"startdate\"].includes(key) && (\r\n                    <>\r\n                      <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                        <DateTimePicker\r\n                          disabled={disableAllFields}\r\n                          minDate={dayjs()} // This disables past dates\r\n                          views={[\r\n                            \"year\",\r\n                            \"month\",\r\n                            \"day\",\r\n                            // \"hours\",\r\n                            // \"minutes\",\r\n                            // \"seconds\",\r\n                          ]}\r\n                          value={\r\n                            responseData.mcoPropeties[key] &&\r\n                              responseData.mcoPropeties[key] !== \"\"\r\n                              ? dayjs(responseData.mcoPropeties[key])\r\n                              : null\r\n                          }\r\n                          onChange={(newValue) => {\r\n                            let mcoPropeties = responseData?.mcoPropeties;\r\n                            if (newValue) {\r\n                              let getTime = dayjs(newValue.$d).format(\r\n                                \"MM/DD/YYYY hh:mm:ss A\"\r\n                              );\r\n                              if (getTime !== \"Invalid Date\") {\r\n                                mcoPropeties[\"startdate\"] = getTime ?? null;\r\n                                dispatch(updateMcoDetails({\r\n                                  mcoPropeties: mcoPropeties,\r\n                                }));\r\n                              } else if (!newValue) {\r\n                                mcoPropeties[\"startdate\"] = newValue;\r\n                                dispatch(updateMcoDetails({\r\n                                  mcoPropeties: mcoPropeties,\r\n                                }));\r\n                              }\r\n                              dispatch(update_generalValues({\r\n                                isPropertyFormEdited: true,\r\n                              }));\r\n                            } else if (!newValue) {\r\n                              mcoPropeties[\"startdate\"] = newValue;\r\n                              dispatch(updateMcoDetails({\r\n                                mcoPropeties: mcoPropeties,\r\n                              }));\r\n                            }\r\n                          }}\r\n                          className={`datatimeInputCls ${responseData?.mcoPropeties?.mcostate}`}\r\n                          sx={{\r\n                            padding: '0px!important',\r\n                            width: '100%!important',\r\n                            marginBottom: '1rem !important',\r\n                            '@global': {\r\n                              'input': {\r\n                                padding: '8.5px 14px!important',\r\n                                height: '0.4375em!important',\r\n                              }\r\n                            }\r\n                          }}\r\n                          slots={{\r\n                            toolbar: CustomDateTimePickerToolbar,\r\n                          }}\r\n                        />\r\n                      </LocalizationProvider>\r\n                      {(responseData?.mcoPropeties?.startDateDisplayValue && responseData?.mcoPropeties?.startDateDisplayValue !== 'null') ? (<>\r\n                        <div style={{ padding: \"0px 15px 15px 0px\" }}><b>Start Date Equivalent To:</b> {responseData?.mcoPropeties?.startDateDisplayValue}</div>\r\n                      </>) : (null)}</>\r\n                  )\r\n                }\r\n                {\r\n                  (['rme', 'rsme'].includes(key) && instance === 'onPrem') && (\r\n                    <Autocomplete\r\n                      disabled={disableAllFields}\r\n                      id={\"autoComplete_\" + key}\r\n                      value={filterValue?.label || null}\r\n                      autoHighlight\r\n                      onChange={(e, newValue) => {\r\n                        let mcoPropeties = responseData.mcoPropeties;\r\n                        mcoPropeties[key] = newValue ? (newValue.key || null) : null;\r\n                        dispatch(updateMcoDetails({\r\n                          mcoPropeties: mcoPropeties,\r\n                        }));\r\n                        dispatch(update_generalValues({\r\n                          isPropertyFormEdited: true,\r\n                        }));\r\n                      }}\r\n                      onInputChange={(e, newInputValue) => {\r\n                        //sss\r\n                      }}\r\n                      options={(key === 'rme') ? RMEList : RSMEList}\r\n                      // sx={{ width: '100%', padding: '0px 0px 10px 0px' }}\r\n                      renderInput={(params) => <TextField {...params} className={errorFields?.[key] ? 'errorAutocomplete' : ''} />}\r\n                      renderOption={(props, option) => {\r\n                        return (\r\n                          <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                            {option.label}\r\n                          </Box>\r\n                        )\r\n                      }}\r\n                    />\r\n                  )\r\n                }\r\n                {[\"responseFromErp\"].includes(key) && currentMcoDetails && (\r\n                  <TextField\r\n                    fullWidth\r\n                    className={\"mb-4 w-full \" + (errorFields?.[key] ? 'error-border' : '')}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    name={key}\r\n                    value={currentMcoDetails?.ERPstatus ?? \"\"}\r\n                    type=\"text\"\r\n                    disabled={[\"responseFromErp\"].includes(key)}\r\n                  />\r\n                )}\r\n                {[\"ECOExportToERP\"].includes(key) && currentMcoDetails && (\r\n                  <Select\r\n                    disabled={disableAllFields}\r\n                    className={errorFields?.[key] ? 'error-border' : ''}\r\n                    value={ECOExportToERP ?? \"yes\"}\r\n                    onChange={(e) => {\r\n                      let mcoPropeties = responseData?.mcoPropeties;\r\n                      mcoPropeties[\"ECOExportToERP\"] = e.target.value || null;\r\n                      dispatch(updateMcoDetails({\r\n                        mcoPropeties: mcoPropeties,\r\n                      }));\r\n                      dispatch(update_generalValues({\r\n                        isPropertyFormEdited: true,\r\n                      }));\r\n                    }}\r\n                    displayEmpty // Enable displayEmpty prop\r\n                    renderValue={(selected) => {\r\n                      if (!selected) {\r\n                        return <em>--Select--</em>; // Placeholder text\r\n                      }\r\n                      return capitalize(ECOExportToERP || \"yes\");\r\n                    }}\r\n                    style={{ height: '37.13px', marginBottom: '1rem', width: \"100%\" }}\r\n                  >\r\n                    <MenuItem id=\"\">Select</MenuItem>\r\n                    {\r\n                      [\"yes\", \"no\"].map((vitem) => {\r\n                        return (\r\n                          <MenuItem value={vitem} key={shortId.generate()}>{capitalize(vitem)}</MenuItem>\r\n                        )\r\n                      })\r\n                    }\r\n                  </Select>\r\n                )}\r\n                {\r\n                  (!['startdate', 'rme', 'rsme', 'responseFromErp', 'ECOExportToERP'].includes(key)) && (\r\n                    <TextField\r\n                      className={errorFields?.[key] ? 'error-border' : ''}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      name={key}\r\n                      // label={\"Enter \" + key}\r\n                      value={\r\n                        key === \"plantName\"\r\n                          ? plantType\r\n                          : key === \"name\"\r\n                          ? selectedRoute?.title || ''\r\n                          : responseData?.mcoPropeties[key] ?? ''\r\n                      }\r\n                      // value={responseData?.mcoPropeties[key] ?? ''}\r\n                      onChange={(e) => {\r\n                        let mcoPropeties = responseData.mcoPropeties;\r\n                        if (![\r\n                          \"name\",\r\n                          \"originator\",\r\n                          \"businessUnit\",\r\n                          \"mcostate\",\r\n                          \"plantName\",\r\n                          \"organizationId\",\r\n                        ].includes(e.target.name)) {\r\n                          mcoPropeties[e.target.name] = e.target.value || null;\r\n                          dispatch(updateMcoDetails({\r\n                            mcoPropeties: mcoPropeties,\r\n                          }));\r\n                          dispatch(update_generalValues({\r\n                            isPropertyFormEdited: true,\r\n                          }));\r\n                        }\r\n                      }}\r\n                      type=\"text\"\r\n                      disabled={[\r\n                        \"name\",\r\n                        \"originator\",\r\n                        \"businessUnit\",\r\n                        \"mcostate\",\r\n                        \"plantName\",\r\n                        \"organizationId\",\r\n                      ].includes(key) || disableAllFields}\r\n                    />\r\n                  )\r\n                }\r\n              </Grid>\r\n\r\n              {[\"responseFromErp\"].includes(key) && currentMcoDetails && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span></span>\r\n                  </Grid>\r\n                  <Grid item md={9} sm={8} xs={12} style={{ padding: \"0px\" }}>\r\n                    {\r\n                      (currentMcoDetails && (currentMcoDetails?.ERPstatus)?.toLowerCase() !== \"success\") ? (\r\n                        <>\r\n                          {\r\n                            (currentMcoDetails?.ERPErrorDescription instanceof Array) ? (\r\n                              <>\r\n                                <ul>\r\n                                  {\r\n                                    currentMcoDetails?.ERPErrorDescription?.map((eitem) => {\r\n                                      return <li key={shortId.generate()}>{trimmingDisplayContent(eitem)}</li>;\r\n                                    })\r\n                                  }\r\n                                </ul>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <ul>\r\n                                  <li key={shortId.generate()}>{`${trimmingDisplayContent(currentMcoDetails?.ERPErrorDescription)}`}</li>\r\n                                </ul>\r\n                              </>\r\n                            )\r\n                          }\r\n                        </>\r\n                      ) : (null)\r\n                    }\r\n                    {/* <ul>\r\n                      {\r\n                        currentMcoDetails && currentMcoDetails?.ERPstatus !== \"Success\" &&\r\n                        [currentMcoDetails?.ERPErrorDescription].length &&\r\n                        [currentMcoDetails?.ERPErrorDescription]?.map((eitem) => {\r\n                          return <li key={shortId.generate()}>{eitem}</li>;\r\n                        })\r\n                      }\r\n                    </ul> */}\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </>\r\n        );\r\n      })}\r\n\r\n      {/* {[0].includes(tapvalue) && (\r\n        <Button\r\n          variant=\"contained\"\r\n          onClick={() => {\r\n            const errors = validateForm('click');\r\n            if (!Object.keys(errors).length) {\r\n              submitPropertiesForm('form');\r\n            }\r\n          }}\r\n          style={{ float: 'right', marginTop: '20px' }}\r\n          data-disabled={isPropertyFormEdited}\r\n          disabled={[\"Review\", \"Release\", \"Implemented\"].includes(stepData)}\r\n        >\r\n          Save\r\n        </Button>\r\n      )} */}\r\n\r\n      {openDesc && (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nPropertiesForm.propTypes = {\r\n  tapvalue: PropTypes.number.isRequired,\r\n  stepData: PropTypes.string.isRequired,\r\n  submitPropertiesForm: PropTypes.func.isRequired,\r\n};\r\nexport default PropertiesForm;\r\n\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from '@mui/material';\r\n\r\nconst withMaterialFormEdited = (WrappedComponent) => {\r\n    return (props) => {\r\n        const isMaterialFormEdited = useSelector((state) => state.mcoDetails.isMaterialFormEdited);\r\n        return <WrappedComponent {...props} isMaterialFormEdited={isMaterialFormEdited} />;\r\n    };\r\n};\r\nconst ButtonComponent = (props) => {\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={() => props?.bulkUploadPartandTemplate()}\r\n                style={{ position: 'absolute', right: '165px', top: '0px', zIndex: 1 }}\r\n                disabled={[\"Review\", \"Release\", \"Implemented\"].includes(props?.stepData)}\r\n            >\r\n                Upload Part Templates\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={() => props?.exportMCOData()}\r\n                style={{ position: 'absolute', right: '80px', top: '0px', zIndex: 1 }}\r\n            >\r\n                Export\r\n            </Button>\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={() => props?.submitAffectedParts('form')}\r\n                style={{ position: 'absolute', right: '0px', top: '0px', zIndex: 1 }}\r\n                disabled={[\"Review\", \"Release\", \"Implemented\"].includes(props?.stepData) || !props?.isMaterialFormEdited}\r\n            >\r\n                Save\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\nconst SaveButtons = withMaterialFormEdited(ButtonComponent);\r\n\r\nexport default SaveButtons;","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Loader from 'app/components/Loader';\r\nimport { MCOService } from 'services/mcoService';\r\n\r\nconst columns = [\r\n    {\r\n        id: 'createdDateTime',\r\n        label: 'Date',\r\n        width: \"120px\"\r\n    },\r\n    {\r\n        id: 'actionUserDetails',\r\n        label: 'User',\r\n        width: \"120px\"\r\n    },\r\n    {\r\n        id: 'actionType',\r\n        label: 'Action',\r\n        width: \"80px\",\r\n    },\r\n    {\r\n        id: 'state',\r\n        label: 'State',\r\n        width: \"80px\",\r\n    },\r\n    {\r\n        id: 'description',\r\n        label: 'Description',\r\n        width: \"400px\",\r\n    },\r\n];\r\n\r\nexport default function ScrollableTable() {\r\n    const [historyList, setHistoryList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isHavingErrors, setIsHavingErrors] = useState(null);\r\n    const mcoService = new MCOService();\r\n    const params = useParams();\r\n\r\n    const fetchHistoryList = async () => {\r\n        try {\r\n            await mcoService.getMcoHistorybyid([params?.mco_id]).then(async (histData) => {\r\n                console.log(histData, \"===histData\");\r\n                if (histData?.status === \"success\") {\r\n                    if (Object.keys(histData?.data)?.length && Object.keys(histData?.data)?.includes(params?.mco_id)) {\r\n                        setHistoryList(histData?.data?.[params?.mco_id]);\r\n                    }\r\n                } else {\r\n                    setIsHavingErrors(\"No result found!\");\r\n                }\r\n                setIsLoading(false);\r\n            }).catch((error) => {\r\n                throw error;\r\n            });\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchHistoryList();\r\n    }, []);\r\n\r\n    return (\r\n        <Paper sx={{ maxWidth: \"1200px\", overflow: 'hidden' }}>\r\n            <TableContainer sx={{ maxHeight: 440 }}>\r\n                <Table stickyHeader aria-label=\"sticky table\" style={{ padding: \"0px 10px 10px\" }}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ top: 0, minWidth: column.minWidth, width: column.width }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            historyList?.map((row) => (\r\n                                <TableRow tabIndex={-1} key={row.code}>\r\n                                    {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {column.format && typeof value === 'number'\r\n                                                    ? column.format(value)\r\n                                                    : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            ))\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n                {\r\n                    isLoading ? (\r\n                        <div style={{ textAlign: 'center' }}>\r\n                            <Loader show={isLoading} />\r\n                        </div>\r\n                    ) : (null)\r\n                }\r\n                {\r\n                    (isHavingErrors) ? (\r\n                        <div style={{ textAlign: 'center', padding: \"10px 0px 20px\" }}>\r\n                            {isHavingErrors}\r\n                        </div>\r\n                    ) : (null)\r\n                }\r\n            </TableContainer>\r\n\r\n        </Paper>\r\n    );\r\n}","\r\nimport * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport HistoryTable from './HistoryTable';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function HistoryDialogBox({ showHistoryBox, setShowHistoryBox }) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n        // Prevent closing on backdrop click or escape key\r\n        if (reason === 'backdropClick' || reason === 'escapeKeyDown') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        setShowHistoryBox(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(showHistoryBox);\r\n    }, [showHistoryBox]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n                maxWidth=\"xl\"\r\n            >\r\n                <DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\r\n                    History\r\n                </DialogTitle>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={handleClose}\r\n                    sx={(theme) => ({\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: theme.palette.grey[500],\r\n                    })}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    <HistoryTable />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button } from '@mui/material';\r\n\r\nconst RefreshButtons = ({ handleRefreshButtonFunc, responseData }) => {\r\n    return (\r\n        <div className=\"buttonRefreshContainer\">\r\n            <Button variant=\"contained\" title=\"Refresh MCO data\"\r\n                onClick={() => {\r\n                    handleRefreshButtonFunc(true, responseData)\r\n                }}\r\n                // disabled={((!lifeCycleData || !Object.keys(lifeCycleData)?.length) || responseData?.mcoPropeties?.mcostate?.toLowerCase() === \"create\")}\r\n                className=\"refreshBtn\"\r\n            >\r\n                Refresh\r\n            </Button>\r\n            <Button variant=\"contained\" title=\"Reload Affected Items\" className=\"reloadBtn\"\r\n                onClick={() => {\r\n                    window.location.reload();\r\n                }}>\r\n                Reload Affected Items\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RefreshButtons;","import React from \"react\";\r\nimport { Link } from '@mui/material';\r\n\r\nconst TrackerHistoryLinks = ({ responseData, setShowTrackerBox, setShowHistoryBox }) => {\r\n    return (\r\n        <>\r\n            <Link component=\"button\" underline=\"none\"\r\n                onClick={() => {\r\n                    setShowHistoryBox(true);\r\n                }}\r\n            >\r\n                History\r\n            </Link>\r\n\r\n            <span style={{ padding: \"10px\" }}>|</span>\r\n\r\n            {\r\n                (responseData?.mcoPropeties?.mcostate?.toLowerCase() === \"create\") ? (\r\n                    <Link component=\"button\" underline=\"none\"\r\n                        disabled={true}\r\n                        style={{ color: \"grey\" }}\r\n                    >\r\n                        Tracker\r\n                    </Link>\r\n                ) : (\r\n                    <Link component=\"button\" underline=\"none\"\r\n                        onClick={() => {\r\n                            setShowTrackerBox(true);\r\n                        }}\r\n                        disabled={responseData?.mcoPropeties?.mcostate?.toLowerCase() === \"create\"}\r\n                    >\r\n                        Tracker\r\n                    </Link>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrackerHistoryLinks;","import { useSelector, shallowEqual } from 'react-redux';\r\n\r\nconst useGetTemplateMappings = () => {\r\n    const { responseData, templateMappingsInfo, ORGAllowedTemplateMappings } = useSelector((state) => ({\r\n        responseData: state.mcoDetails.responseData,\r\n        templateMappingsInfo: state.mcoDetails.templateMappingsInfo,\r\n        ORGAllowedTemplateMappings: state.mcoDetails.ORGAllowedTemplateMappings,\r\n    }), shallowEqual);\r\n    \r\n    const getTemplateMappingsFunc = (mapType) => {\r\n        if (!mapType) {\r\n            return [];\r\n        }\r\n        if (mapType === \"ORGAllowedTemplateMappings\") {\r\n            return ORGAllowedTemplateMappings?.filter((item1) => {\r\n                return item1.BUID === responseData?.mcoPropeties?.businessUnit;\r\n            }) || [];\r\n        } else {\r\n            return templateMappingsInfo?.filter((item1) => {\r\n                return item1.MappingType === mapType && item1.BUID === responseData?.mcoPropeties?.businessUnit;\r\n            }) || [];\r\n        }\r\n    };\r\n    const getTemplateMappingsFuncForTypeAndBU = (mapType=\"\", businessUnit=\"\") => {\r\n        if (!mapType) {\r\n            return [];\r\n        }\r\n        if (mapType === \"ORGAllowedTemplateMappings\") {\r\n            return ORGAllowedTemplateMappings?.filter((item1) => {\r\n                return item1.BUID === responseData?.mcoPropeties?.businessUnit;\r\n            }) || [];\r\n        } else {\r\n            return templateMappingsInfo?.filter((item1) => {\r\n                return item1.MappingType === mapType && item1.BUID === businessUnit;\r\n            }) || [];\r\n        }\r\n    };\r\n    return { getTemplateMappingsFunc, getTemplateMappingsFuncForTypeAndBU };\r\n}\r\n\r\nexport { useGetTemplateMappings };","import { useSelector, shallowEqual } from 'react-redux';\r\nimport { useGetTemplateMappings } from './useGetTemplateMappings';\r\nimport generalInfo from \"app/utils/mcoUtils/generalInfo.json\";\r\n\r\nconst useGetDropdownOption = () => {\r\n    const { getTemplateMappingsFunc, getTemplateMappingsFuncForTypeAndBU } = useGetTemplateMappings();\r\n    const {\r\n        responseData,\r\n        templateList,\r\n        // previousMcosDetails,\r\n        mrDetails\r\n    } = useSelector((state) => ({\r\n        responseData: state.mcoDetails.responseData,\r\n        templateList: state.mcoDetails.templates,\r\n        // previousMcosDetails: state.mcoDetails.previousMcosDetails,\r\n        mrDetails: state.mcoDetails.mrDetails,\r\n    }), shallowEqual);\r\n\r\n    const initialMVOChecks = () => {\r\n        return generalInfo?.masterPlants?.includes(responseData?.mcoPropeties?.plantName);\r\n    }\r\n    // const getPreviousMcosDetails = (mcoId) => {\r\n    //     return previousMcosDetails?.filter((prevItem) => {\r\n    //         return prevItem.id === mcoId;\r\n    //     }) || [];\r\n    // }\\\r\n    const findCustomMCOTemplates = (templateName, ruleType = '', partInfo) => {\r\n        let getMapTempList = [];\r\n        if (templateName && templateName !== 'Unassigned') {\r\n            let getMappedTemplatesList = null;\r\n            switch (ruleType) {\r\n                case \"mvoallowedchanges\":\r\n                    const getMVOAllowedChangesDetails = getTemplateMappingsFunc('mvoallowedchanges');\r\n                    getMappedTemplatesList = getMVOAllowedChangesDetails?.filter((acitem) => {\r\n                        // return acitem?.details?.MVO_TEMPLATE_FROM === \"EMR PTO MODEL FLOW\";\r\n                        return acitem?.details?.MVO_TEMPLATE_FROM === templateName;\r\n                    }) || [];\r\n                    if (getMappedTemplatesList.length) {\r\n                        getMapTempList = getMappedTemplatesList[0]?.details?.MVO_TEMPLATES_TO?.map((tItem) => {\r\n                            return tItem.MVO_TEMPLATE_TO\r\n                        })\r\n                    }\r\n                    break;\r\n                case \"mvoTemplateCompatibility\":\r\n                    const getmvoTemplateCompatibility = getTemplateMappingsFunc('mvoTemplateCompatibility');\r\n                    getMappedTemplatesList = getmvoTemplateCompatibility?.filter((acitem) => {\r\n                        // return acitem?.details?.MVO_TEMPLATE_OPTION === \"EMR ATO OPT CLASS FLOW\";\r\n                        return acitem?.details?.MVO_TEMPLATE_OPTION === templateName;\r\n                    }) || [];\r\n\r\n                    if (getMappedTemplatesList.length) {\r\n                        getMapTempList = getMappedTemplatesList[0]?.details?.allowableOrgTemplates?.filter(fiItem => fiItem.status?.toLowerCase() === 'active')?.map((tItem) => {\r\n                            return tItem.ALLOWABLE_ORG_TEMPLATE\r\n                        })\r\n                    }\r\n                    break;\r\n                case \"setcompatibletemplates\":\r\n                    const getSetCompatibleTemplates = getTemplateMappingsFunc('setcompatibletemplates');\r\n                    getMappedTemplatesList = getSetCompatibleTemplates?.filter((acitem) => {\r\n                        // return acitem?.details?.MVO_TEMPLATE_OPTION === \"EMR ATO OPT CLASS FLOW\";\r\n                        return acitem?.details?.TEMPLATE_ORG_EXISTING === templateName;\r\n                    }) || [];\r\n\r\n                    if (getMappedTemplatesList.length) {\r\n                        getMapTempList = getMappedTemplatesList[0]?.details?.TEMPLATE_ORG_MODIFYING?.map((tItem) => {\r\n                            return tItem.TEMPLATE_ORG_MODIFYING\r\n                        })\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return getMapTempList;\r\n    }\r\n\r\n    const primaryToPurchageValidationMapping = (templateMappingsInfo = \"\") => {\r\n        const purchageValidationMapping = templateMappingsInfo.find((item1) => {\r\n            return item1.MappingType === 'buplantmapping' && item1?.details?.Entity.toUpperCase() === 'NONE OR PO ORG';\r\n        });\r\n        if (purchageValidationMapping && Object.keys(purchageValidationMapping).length) {\r\n            const primaryToPurchagePlants = purchageValidationMapping.details?.PLANT;\r\n            Object.keys(primaryToPurchagePlants).forEach(eachKey => {\r\n                if (primaryToPurchagePlants[eachKey] === 'None' || primaryToPurchagePlants[eachKey] === '') {\r\n                    delete primaryToPurchagePlants[eachKey];\r\n                }\r\n            })\r\n            return primaryToPurchagePlants;\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const mappingRuleValidations = (ruleType, partType = '') => {\r\n        let returnValue = null;\r\n        let getMapTempList = [];\r\n        switch (ruleType) {\r\n            case \"partTypeAndORGAllowed_TemplateMappings\":\r\n                const getPartTypeDetails = getTemplateMappingsFunc('parttypetotemplate');\r\n                const getORGAllowedTemplateMappings = getTemplateMappingsFunc('ORGAllowedTemplateMappings');\r\n\r\n                // checking parttype \r\n                const parttypetotemplateArr = getPartTypeDetails.filter((item1) => {\r\n                    return item1.details.ENGG_ITEM_TYPE === partType;\r\n                }) || [];\r\n\r\n                const plantOrgAllowedTemplates = getORGAllowedTemplateMappings?.filter(orgAllowedTemplates => {\r\n                    return Object.keys(orgAllowedTemplates?.details?.Plants).includes(responseData?.mcoPropeties?.plantName) && orgAllowedTemplates?.details?.Plants[responseData?.mcoPropeties?.plantName] === \"Y\"\r\n                }) || [];\r\n\r\n                let templatesMappingsArr = [];\r\n                if (parttypetotemplateArr.length) {\r\n                    plantOrgAllowedTemplates.forEach((item1) => {\r\n                        const getPlantBasedList = parttypetotemplateArr[0]?.details?.allowableOrgTemplates.filter((item2) => {\r\n                            return item2.org_allowed_template === item1?.details?.ALLOWABLE_ORG_TEMPLATES;\r\n                        }) || [];\r\n                        if (getPlantBasedList.length) {\r\n                            templatesMappingsArr.push(item1);\r\n                        }\r\n                    });\r\n                } else {\r\n                    const flatenPartTypeTemplates = getPartTypeDetails?.map(partTypeTemplate => partTypeTemplate.details?.allowableOrgTemplates)?.flat();\r\n                    const templatesForAllTypes = flatenPartTypeTemplates?.filter(eachRec => eachRec.exclusive_use?.toLowerCase() === 'yes')?.map(template => template.org_allowed_template)\r\n                    let uniqueTemplatesForAllTypes = templatesForAllTypes.filter((item, index) => templatesForAllTypes.indexOf(item) === index);\r\n                    templatesMappingsArr = plantOrgAllowedTemplates?.filter(eachTemplate => !uniqueTemplatesForAllTypes?.includes(eachTemplate?.details?.ALLOWABLE_ORG_TEMPLATES))\r\n                }\r\n\r\n                if (templatesMappingsArr.length) {\r\n                    getMapTempList = templatesMappingsArr?.map((tItem) => {\r\n                        return tItem?.details?.ALLOWABLE_ORG_TEMPLATES\r\n                    });\r\n                }\r\n\r\n                returnValue = getMapTempList;\r\n                break;\r\n            case \"buplantmapping\":\r\n                const getbuplantmapping = getTemplateMappingsFunc('buplantmapping');\r\n                const getfilteredList = getbuplantmapping?.filter((acitem) => {\r\n                    return acitem?.details?.PO_ORG === responseData?.mcoPropeties?.plantName;\r\n                }) || [];\r\n                returnValue = getfilteredList;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        // console.log(getPartTypeDetails, 'getPartTypeDetails');\r\n        // console.log(getORGAllowedTemplateMappings, 'getORGAllowedTemplateMappings');\r\n        // console.log(parttypetotemplateArr, 'parttypetotemplateArr 111');\r\n        // console.log(templatesMappingsArr, 'templatesMappingsArr 111')\r\n\r\n        return returnValue;\r\n    }\r\n\r\n    const previousSequenceValidation = (partInfo) => {\r\n        let resValue = false;\r\n        const activeMRinfo = findMRTemplateByPart(mrDetails?.activeMR, partInfo) || {};\r\n        const previousSeqMRinfo = findMRTemplateByPart(mrDetails?.previousSeqMR, partInfo) || {};\r\n        if (!Object.keys(activeMRinfo)?.length || !Object.keys(previousSeqMRinfo)?.length) {\r\n            return resValue;\r\n        }\r\n        if (previousSeqMRinfo && activeMRinfo?.sequence !== previousSeqMRinfo?.sequence) {\r\n            resValue = true;\r\n        }\r\n        return resValue;\r\n    }\r\n    const findMRTemplateByPart = (mrLists = {}, partInfo = null) => {\r\n        if (partInfo && mrLists && Object.keys(mrLists)?.includes(partInfo?.name)) {\r\n            return mrLists[partInfo?.name][0];\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    const getHighestSeqCurrentPendingOrActiveMR = (RDOPlantName, partInfo) => {\r\n        const hscpAMRData = mrDetails?.getHighestSeqCurrentPendingOrActiveMR;\r\n        if (hscpAMRData && Object.keys(hscpAMRData)?.length) {\r\n            if (Object.keys(hscpAMRData).includes(partInfo.name)) {\r\n                const partMRArrayData = hscpAMRData[partInfo.name];\r\n                const getCurrentPartMRDetails = partMRArrayData.filter(eachMrData => eachMrData.partName === partInfo?.name);\r\n                return getCurrentPartMRDetails.find(fitem => fitem.partAndPlant === `${partInfo.name}_${RDOPlantName}`);\r\n            }\r\n        }\r\n        return {};\r\n    }\r\n\r\n    const groupByValues = (anyObject) => {\r\n        if (!anyObject) {\r\n            return new Map();\r\n        }\r\n        const purchagetoPrimaryMap = new Map();\r\n        let purchageValue = '';\r\n        Object.keys(anyObject)?.map(eachKey => {\r\n            purchageValue = anyObject[eachKey];\r\n            if (purchagetoPrimaryMap.has(purchageValue)) {\r\n                const value = purchagetoPrimaryMap.get(purchageValue)\r\n                purchagetoPrimaryMap.set(purchageValue, [...value, eachKey])\r\n            } else {\r\n                purchagetoPrimaryMap.set(purchageValue, [eachKey])\r\n            }\r\n        })\r\n        return purchagetoPrimaryMap;\r\n    }\r\n\r\n    const purchageToPrimaryValidationMapping = (templateMappingsInfo = []) => {\r\n        let primaryToPurchageValidation = primaryToPurchageValidationMapping(templateMappingsInfo);\r\n        return groupByValues(primaryToPurchageValidation);\r\n    }\r\n\r\n    const getRDOOUOrgSetMappings = (templateMappingsInfo = [], businessUnit = '', plantToMatch = '') => {\r\n        let buplantmapping_RDOChecks = (templateMappingsInfo?.find((acitem) => {\r\n            return acitem.MappingType === 'buplantmapping' && acitem.BUID === businessUnit && acitem?.details?.Entity.toUpperCase() === 'RDO OU ORG SET';\r\n        })?.details?.PLANT) || {};\r\n        let matchedPlantsSet = []\r\n        if (buplantmapping_RDOChecks && buplantmapping_RDOChecks[plantToMatch] && buplantmapping_RDOChecks[plantToMatch].toLowerCase() === 'yes') {\r\n            const plantGroups = templateMappingsInfo.find((item1) => {\r\n                return item1.MappingType === 'buplantmapping' && item1.BUID === businessUnit && item1?.details?.Entity.toUpperCase() === 'PLANTGROUP';\r\n            })?.details.PLANT;\r\n            const OUgroupMap = groupByValues(plantGroups);\r\n            OUgroupMap.forEach((values, key) => {\r\n                const filteredPlants = values?.filter(plant => buplantmapping_RDOChecks && buplantmapping_RDOChecks[plant] && buplantmapping_RDOChecks[plant].toLowerCase() === 'yes')\r\n                if (filteredPlants?.includes(plantToMatch)) {\r\n                    matchedPlantsSet = filteredPlants;\r\n                    return matchedPlantsSet;\r\n                }\r\n            })\r\n        }\r\n        return matchedPlantsSet;\r\n    }\r\n\r\n    const getDropdownOptions = async (partInfo = null) => {\r\n        if (!partInfo) {\r\n            return [];\r\n        }\r\n\r\n        // if (responseData?.mcoPropeties?.mcostate?.toLowerCase() !== \"create\") {\r\n        //     let thisDropOptions = [];\r\n        //     const isexisttemplate = templateList.find(titem => titem?.templateName === partInfo?.materialType?.name);\r\n        //     if (isexisttemplate) {\r\n        //         thisDropOptions.push(isexisttemplate);\r\n        //     }\r\n        //     return thisDropOptions;\r\n        // }\r\n\r\n        let getMapTempList = [];\r\n\r\n        const partType = partInfo?.displayType;\r\n        // const partType = \"ATO MODEL\";\r\n        // const partType = \"Fastener\";\r\n\r\n        // - If Plant ID is MVO then fetch templates from the mapping \"BU Allowed Templates\" for MVO plant and \r\n        // fetch templates from the mapping \"Part Type to Templates\" mapping. \r\n        // If Both mappings are not empty then show the templates exist in both the mappings\r\n        const appliedChecks = [];\r\n        if (initialMVOChecks()) {\r\n            if (previousSequenceValidation(partInfo)) {\r\n                if (mrDetails?.previousSeqMR?.hasOwnProperty(partInfo?.name) && mrDetails?.previousSeqMR[partInfo?.name]?.length) {\r\n                    appliedChecks.push('story 2');\r\n                    const prevSeqTemplateValue = findMRTemplateByPart(mrDetails?.previousSeqMR, partInfo) || {};\r\n                    getMapTempList = findCustomMCOTemplates(prevSeqTemplateValue?.template, \"mvoallowedchanges\", partInfo);\r\n                }\r\n            } else {\r\n                appliedChecks.push('story 1');\r\n                getMapTempList = mappingRuleValidations('partTypeAndORGAllowed_TemplateMappings', partType);\r\n            }\r\n        } else {\r\n            // Story 4\r\n            if (mrDetails?.getHighestSeqCurrentOrActiveMR && Object.keys(mrDetails?.getHighestSeqCurrentOrActiveMR)?.length) {\r\n                const mrTemplateValue = findMRTemplateByPart(mrDetails?.getHighestSeqCurrentOrActiveMR, partInfo) || {};\r\n                getMapTempList = findCustomMCOTemplates(mrTemplateValue?.template, \"mvoTemplateCompatibility\", partInfo);\r\n                appliedChecks.push('story 4');\r\n            }\r\n\r\n            // Story 5\r\n            const getORGAllowedTemplateMappings = getTemplateMappingsFunc('ORGAllowedTemplateMappings');\r\n            const getFinalArr = getORGAllowedTemplateMappings?.filter((flitem) => {\r\n                return flitem?.details?.Plants[responseData?.mcoPropeties?.plantName] === \"Y\" && getMapTempList.includes(flitem?.details?.ALLOWABLE_ORG_TEMPLATES);\r\n            })?.map(mitem => {\r\n                return mitem?.details?.ALLOWABLE_ORG_TEMPLATES\r\n            }) || [];\r\n\r\n            // If current plant is one of the purchageValidation plant list from BUPlantMappings\r\n            // const buplantmappingChecks = mappingRuleValidations('buplantmapping');\r\n            const getbuplantmapping = getTemplateMappingsFunc('buplantmapping');\r\n            const purchagePlants = purchageToPrimaryValidationMapping(getbuplantmapping);\r\n            if (purchagePlants && purchagePlants.has(responseData?.mcoPropeties?.plantName)) {\r\n                // If Sequence is 1 then \r\n                // Get templates for plant using OrgAllowedTemplates and filter with templates came from Story 4\r\n                // Else sequence is not 1 then templates in story 4 is final list\r\n                if (mrDetails?.isFirstSequence && (Object.keys(mrDetails?.isFirstSequence).includes(partInfo?.name) && mrDetails?.isFirstSequence[partInfo?.name])) {\r\n                    getMapTempList = getFinalArr;\r\n\r\n                }\r\n            } else {\r\n                getMapTempList = getFinalArr;\r\n\r\n            }\r\n            if (getFinalArr?.length) {\r\n                appliedChecks.push('story 5');\r\n            }\r\n\r\n            // Story 6\r\n            // Fetch templates based on the type from part type to Templates mapping and \r\n            const getPartTypeDetails = getTemplateMappingsFunc('parttypetotemplate');\r\n            const parttypetotemplateArr = getPartTypeDetails.filter((item1) => {\r\n                return item1.details.ENGG_ITEM_TYPE === partType;\r\n            }) || [];\r\n\r\n            // if these templates are not empty then filter these templates with templates came from story 5.\r\n            if (parttypetotemplateArr?.length) {\r\n                let getFilteredTemp = parttypetotemplateArr[0]?.details?.allowableOrgTemplates?.filter((ftitem) => {\r\n                    return getMapTempList.includes(ftitem?.org_allowed_template);\r\n\r\n                }) || [];\r\n\r\n                if (getFilteredTemp?.length) {\r\n                    getMapTempList = getFilteredTemp?.map((finalItem) => {\r\n                        return finalItem?.org_allowed_template;\r\n                    });\r\n                    appliedChecks.push('story 6');\r\n                }\r\n\r\n\r\n            } else {\r\n                // Story 7\r\n                const flatenPartTypeTemplates = getPartTypeDetails?.map(partTypeTemplate => partTypeTemplate.details?.allowableOrgTemplates)?.flat();\r\n                const templatesForAllTypes = flatenPartTypeTemplates?.filter(eachRec => eachRec.exclusive_use?.toLowerCase() === 'yes')?.map(template => template.org_allowed_template) || [];\r\n                getMapTempList = getMapTempList?.filter(eachTemplate => !(templatesForAllTypes?.includes(eachTemplate)))\r\n            }\r\n\r\n            // Story 8\r\n            //vara--> here we have to call getbuplantMapping based on part RDO\r\n            const partRDOBasedBUMapping = getTemplateMappingsFuncForTypeAndBU('buplantmapping', partInfo.organization) //this needs correction\r\n\r\n\r\n            const plantsPair = getRDOOUOrgSetMappings(partRDOBasedBUMapping, partInfo.organization, responseData?.mcoPropeties?.plantName);\r\n            let templateFromHighestSequence = []\r\n            plantsPair.forEach(RDOPlantName => {\r\n                if (RDOPlantName !== responseData?.mcoPropeties?.plantName) {\r\n                    //1) PartRDOPlantName, HeighestSeq, ERPStatus Active, status current|pending|prepending\r\n                    //2) PartRDOPlantName, HeighestSeq, ERPStatus Active, status current|pending|prepending\r\n                    //get highestSequence template for this plant and part combination\r\n                    //if this template is not null then call RDOOUSetCompatible templates\r\n                    let resMRData = getHighestSeqCurrentPendingOrActiveMR(RDOPlantName, partInfo);\r\n                    if (resMRData) {\r\n                        let getCustomMCOTempaltes = findCustomMCOTemplates(resMRData.template, \"setcompatibletemplates\", partInfo);\r\n                        if (getCustomMCOTempaltes?.length)\r\n                            templateFromHighestSequence.push(getCustomMCOTempaltes);\r\n                    }\r\n                }\r\n            })\r\n            const finalTemplatesList = getMapTempList?.filter((citem) => {\r\n                const flattenedArray = templateFromHighestSequence.flat();\r\n                return flattenedArray.includes(citem);\r\n            }) || [];\r\n            getMapTempList = templateFromHighestSequence.length ? finalTemplatesList : getMapTempList;\r\n            appliedChecks.push('story 8');\r\n        }\r\n\r\n        let thisDropOptions = [];\r\n        if (getMapTempList.length) {\r\n            getMapTempList.forEach((ftItem) => {\r\n                const isexisttemplate = templateList.find(titem => titem?.templateName === ftItem);\r\n                if (isexisttemplate) {\r\n                    thisDropOptions.push(isexisttemplate);\r\n                }\r\n            });\r\n        }\r\n        thisDropOptions.sort((a, b) => a.templateName.localeCompare(b.templateName));\r\n        console.log(appliedChecks, \"=======dropdown option appliedChecks\", partInfo?.name);\r\n        thisDropOptions = thisDropOptions.sort((a, b) => a.templateName.localeCompare(b.templateName));\r\n        return thisDropOptions;\r\n    }\r\n\r\n    return getDropdownOptions;\r\n}\r\nexport { useGetDropdownOption };","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\nimport { MCOService } from 'services/mcoService';\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst BulkUploadPartAndTemplatePupup = (props) => {\r\n    const mcoService = new MCOService();\r\n    const { importBulkUpdateFile, setImportBulkUpdateFile, savePartAndOracleTempInRedux } = props;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    const instance = localStorage.getItem('instance')\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const importFileData = (e) => {\r\n        console.log('file selected');\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null)\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null)\r\n        }\r\n    }\r\n    const handleCloseImport = () => {\r\n        setImportedFileData(null)\r\n        setImportBulkUpdateFile(false);\r\n    };\r\n    const finalErrorTemplate = (showErrorAlert, uploadedTemplates) => {\r\n        return (\r\n            <div>\r\n                <div style={{ fontWeight: \"bold\" }}>\r\n                    {showErrorAlert?.success?.length} of {uploadedTemplates?.length} MR assignments successfully updated. {showErrorAlert?.error?.length + showErrorAlert?.warning?.length} failed.\r\n                </div>\r\n                {showErrorAlert?.error?.map((citem) => {\r\n                    return (<div key={shortId.generate()}><b style={{ color: \"red\" }}>{citem}</b></div>)\r\n                })}\r\n                {showErrorAlert?.warning?.map((citem) => {\r\n                    return (<div key={shortId.generate()}><b style={{ color: \"#ebc034\" }}>{citem}</b></div>)\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        if (importedFileData !== null) {\r\n            //alert('file is upl7oaded')\r\n            let postData = {\r\n                'file': importedFileData,\r\n                data: {\r\n                    Instance: instance,\r\n                }\r\n            };\r\n\r\n            // console.log(importSelectionValues, 'importSelectionValues');\r\n            console.log(postData, 'postData');\r\n            setIsLoading(true);\r\n            mcoService.bulkUploadPartAndTemplate(postData).then(async (response) => {\r\n                setimportfileBar(true);\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                setImportBulkUpdateFile(false)\r\n\r\n                if (response.status === 'success') {\r\n                    setImportResponse(response)\r\n\r\n                    const showErrorAlert = await savePartAndOracleTempInRedux(response?.data);\r\n                    if (Object.keys(showErrorAlert)?.length) {\r\n                        const altHtml = finalErrorTemplate(showErrorAlert, response?.data);\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"info\",\r\n                            desc: altHtml,\r\n                        });\r\n                    }\r\n                } else {\r\n                    if (response?.msg?.length) {\r\n                        const altHtml = response?.msg?.map((citem) => {\r\n                            return (<li key={shortId.generate()}>{citem}</li>)\r\n                        }) || [];\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: (response?.status === \"failed\") ? \"error\" : response?.status,\r\n                            desc: altHtml,\r\n                        });\r\n                    }\r\n                }\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    }\r\n    const handleDownload = () => {\r\n        let filelocation = 'partAndOracleTemp/sample-partAndOracleTemp.xlsx'\r\n        mcoService.downloadSampleFile(filelocation)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importBulkUpdateFile}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }}\r\n                style={{\r\n                    zIndex: 999, // Set your desired z-index value\r\n                }}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Bulk Upload Oracle Template\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Upload File (Excel File)\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                                    Upload file\r\n                                                    <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                                </Button>\r\n                                                {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={2}>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <a\r\n                                                    // href={sampleFileUrl}\r\n                                                    onClick={handleDownload}\r\n                                                    download=\"Example-XLSX-document\"\r\n                                                    rel=\"noreferrer\"\r\n                                                    // target=\"_blank\"\r\n                                                    //style={{ color: \"blue\" }}\r\n                                                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                                                >\r\n                                                    Click Here\r\n                                                </a> to download the sample Excel template for the Oracle Template Update.\r\n\r\n                                                {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                                                {/* </a> */}\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <b>Note:</b> Upload file must contain two columns with header labels in following order.\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                1. Part Name<br />\r\n                                                2. Oracle Template(Case sensitive)<br />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n            {\r\n                isLoading ? (\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Loader show={isLoading} />\r\n                    </div>\r\n                ) : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BulkUploadPartAndTemplatePupup","import { useEffect, useState } from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { MCOService } from \"services/mcoService\";\r\nimport CustomAlertBox from \"../CustomAlertBox\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst actionTextVar = {\r\n  promote: \"Promote >>\",\r\n};\r\n\r\nexport default function SaaSLifeCycleStepperComponent(props) {\r\n  const { selectedRoute } = props;\r\n\r\n  const [activeStep, setActiveStep] = useState(\"Create\");\r\n  const [enabledSteps, setEnabledSteps] = useState([\"Create\"]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let instance = localStorage.getItem(\"instance\");\r\n\r\n  let steps =\r\n    instance === \"SaaS\"\r\n      ? [\"Create\", \"Review\", \"Release\"]\r\n      : [\"Create\", \"Release\", \"Implemented\"];\r\n\r\n  const mcoService = new MCOService();\r\n  useEffect(() => {\r\n    // If user already promoted to next step previously, recover that step from localStorage\r\n    const savedStep = localStorage.getItem(\r\n      `saasLifecycleStep_${selectedRoute?.id}`\r\n    );\r\n    if (savedStep && steps.includes(savedStep)) {\r\n      setActiveStep(savedStep);\r\n      const currentIndex = steps.indexOf(savedStep);\r\n      setEnabledSteps(steps.slice(0, currentIndex + 1));\r\n    }\r\n  }, [selectedRoute?.id]);\r\n\r\n  const handlePromote = async () => {\r\n    if (!selectedRoute || !selectedRoute.id) return;\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const currentIndex = steps.indexOf(activeStep);\r\n       //  Only call routeStart before first promotion\r\n       if (activeStep === 'Create') {\r\n        const routeStartResponse = await mcoService.routeStart(selectedRoute.id);\r\n        console.log(\"routeStartResponse\", routeStartResponse);\r\n  \r\n        if (routeStartResponse?.routeStatus !== 'Started') {\r\n          throw new Error(\"Route not started properly\");\r\n        }\r\n      }\r\n      //  Step 2: Fetch Task List\r\n      const taskList = await mcoService.getTaskList(selectedRoute.id);\r\n      let taskId = null;\r\n      if (Array.isArray(taskList)) {\r\n        //  If multiple tasks, find the first one that's not complete\r\n        const pendingTask = taskList.find(\r\n          (task) => task.current?.toLowerCase() !== \"complete\"\r\n        );\r\n        taskId = pendingTask?.id;\r\n        if (!taskId && taskList.length === 1) {\r\n          //  Fallback if it's just one and may not have 'current' field\r\n          taskId = taskList[0].id;\r\n        }\r\n      } else if (typeof taskList === \"string\") {\r\n        taskId = taskList;\r\n      }\r\n       // Step 3: Approve Task\r\n      if (taskId) {\r\n        const approvalResponse = await mcoService.taskApproval(taskId);\r\n        if (approvalResponse?.success) {\r\n          const currentIndex = steps.indexOf(activeStep);\r\n          const nextStep = steps[currentIndex + 1];\r\n          if (nextStep) {\r\n            setEnabledSteps((prev) => [...new Set([...prev, nextStep])]);\r\n            setActiveStep(nextStep);\r\n            localStorage.setItem(\r\n              `saasLifecycleStep_${selectedRoute?.id}`,\r\n              nextStep\r\n            );\r\n          }\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: \" Task successfully approved!\",\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: \"error\",\r\n        desc:\r\n          error?.response?.data?.details?.Response?.ErrorMessage ||\r\n          \"Approval failed\",\r\n      });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n      <div\r\n        style={{\r\n          margin: \"auto auto 25px auto\",\r\n          textAlign: \"center\",\r\n          width: \"75%\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {openDesc && (\r\n          <CustomAlertBox\r\n            openAlert={openAlert}\r\n            openDesc={openDesc}\r\n            setOpenAlert={setOpenAlert}\r\n          />\r\n        )}\r\n        {isLoading && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        )}\r\n        <Stack sx={{ width: \"100%\" }} spacing={4}>\r\n          <Stepper alternativeLabel activeStep={steps.indexOf(activeStep)}>\r\n            {steps.map((label, sindex) => (\r\n              <Step key={label}>\r\n                <div\r\n                  style={{\r\n                    width: \"auto\",\r\n                    minWidth: \"110px\",\r\n                    display: \"inline-table\",\r\n                    padding: \"10px\",\r\n                    color: activeStep === label ? \"#ffffff\" : \"#5c5c5c\",\r\n                    background: activeStep === label ? \"#42a2da\" : \"#e6e7e8\",\r\n                    zIndex: \"1\",\r\n                    position: \"relative\",\r\n                    top: \"-10px\",\r\n                    borderRadius: \"-10px\",\r\n                    boxShadow: \"0px 2px 2px 0px rgba(0, 0, 0, 0.3)\",\r\n                  }}\r\n                  data-state={label}\r\n                >\r\n                  {sindex !== 0 && (\r\n                    <span\r\n                      style={{\r\n                        width: \"0\",\r\n                        height: \"0\",\r\n                        borderStyle: \"solid\",\r\n                        borderTop: \"7px solid transparent\",\r\n                        borderBottom: \"7px solid transparent\",\r\n                        borderLeft: \"10px solid #bdbdbd\",\r\n                        position: \"absolute\",\r\n                        left: \"-10px\",\r\n                        top: \"15.5px\",\r\n                      }}\r\n                    ></span>\r\n                  )}\r\n                  {label}\r\n                </div>\r\n                {(enabledSteps.includes(label) && activeStep === label && label !== 'Release') && (\r\n                  <div>\r\n                    <Link\r\n                      component=\"button\"\r\n                      variant=\"body2\"\r\n                      underline=\"none\"\r\n                      title={actionTextVar.promote}\r\n                      onClick={handlePromote}\r\n                    >\r\n                      {actionTextVar.promote}\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n        </Stack>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef, useMemo } from \"react\";\r\nimport { Tabs, Tab, Typography, Box, Link, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, styled } from '@mui/material';\r\nimport shortId from 'shortid';\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { MCOService } from 'services/mcoService';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport Loader from 'app/components/Loader';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { Store } from \"app/redux/Store\";\r\nimport {\r\n    updateResponseData,\r\n    updateMcoDetails,\r\n    update_generalValues,\r\n    resetValues\r\n} from 'app/redux/actions/MCODetailsAction';\r\nimport { updateGlobalBUandInstance } from \"app/redux/actions/GlobalBUandInstanceAction\";\r\nimport AffectedPartsTable from 'app/components/McoPages/AffectedPartsTable';\r\nimport LifeCycleStepperComponent from 'app/components/McoPages/LifeCycleStepper';\r\nimport PropertiesForm from \"app/components/McoPages/PropertiesForm\";\r\nimport CustomAlertBox from \"app/components/McoPages/CustomAlertBox\";\r\nimport SomethingWrong from \"app/components/McoPages/PageError\";\r\nimport SaveButtons from \"app/components/McoPages/PartsSaveButton\";\r\nimport HistoryDialogBox from \"app/components/McoPages/HistoryDialogBox\";\r\nimport RefreshButtons from \"app/components/McoPages/RefreshButtons\";\r\nimport TrackerHistoryLinks from \"app/components/McoPages/TrackerHistoryLinks\";\r\nimport TrackerProgressBar from \"./TrackerProgressBar\";\r\nimport generalInfo from \"app/utils/mcoUtils/generalInfo.json\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    fetchRSMEAndRMEDetails,\r\n    CloneDataFromMaster,\r\n    prepareItemPayload,\r\n    prepareFormData,\r\n    validationChecks,\r\n    initialMRFunctions,\r\n    collectSourcePlantTemplate,\r\n    updateMcoDetailsInDatabase,\r\n    prepareAffectedPartData,\r\n    exportMCOData,\r\n    getAffectedPartsData,\r\n    getIsMaterialFormEdited,\r\n    handleErrorForThrows\r\n} from \"app/utils/mcoUtils/utilities\";\r\nimport {\r\n    dropdownValidation,\r\n    getRDOOUOrgSetMappings\r\n} from \"app/utils/mcoUtils/dropdownValidation\";\r\n// import {\r\n//     dropdownValidationSAP,\r\n// } from \"app/utils/mcoUtils/dropdownValidationSAP\";\r\nimport { useGetDropdownOption } from \"app/hooks/mcoHooks/useGetDropdownOption\";\r\nimport BulkUploadPartAndTemplatePupup from \"app/components/bulkUploadPartAndTemplatePupup\";\r\nimport \"./mcoStyles.css\";\r\nimport SaaSLifeCycleStepperComponent from \"app/components/McoPages/SaaSLifeCycleStepperComponent\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n        marginBottom: \"30px\",\r\n        [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n}));\r\n\r\nfunction TabPanel(props) {\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={props?.value !== props?.index}\r\n            id={`simple-tabpanel-${props.index}`}\r\n            aria-labelledby={`simple-tab-${props?.index}`}\r\n            {...props.other}\r\n        >\r\n            {props.value === props.index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{props.children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst Mcodetails = () => {\r\n    const getDropdownOptions = useGetDropdownOption();\r\n    const dispatch = useDispatch();\r\n    const {\r\n        isPageHavingIssue,\r\n        responseData,\r\n        templates: templateList,\r\n        templateMappingsInfo,\r\n        lifeCycleData,\r\n        systemSetingsDetail,\r\n        mrDetails,\r\n        RSMEList,\r\n        RMEList,\r\n        isPropertyFormEdited,\r\n        eachTemplateOptions,\r\n        materialData,\r\n        updatedRoutes,\r\n    } = useSelector((state) => ({\r\n        cc: state.mcoDetails.isPageHavingIssue,\r\n        responseData: state.mcoDetails.responseData,\r\n        templates: state.mcoDetails.templates,\r\n        templateMappingsInfo: state.mcoDetails.templateMappingsInfo,\r\n        lifeCycleData: state.mcoDetails.lifeCycleData,\r\n        systemSetingsDetail: state.mcoDetails.systemSetingsDetail,\r\n        mrDetails: state.mcoDetails.mrDetails,\r\n        RSMEList: state.mcoDetails.RSMEList,\r\n        RMEList: state.mcoDetails.RMEList,\r\n        isPropertyFormEdited: state.mcoDetails.isPropertyFormEdited,\r\n        eachTemplateOptions: state.mcoDetails.eachTemplateOptions,\r\n        materialData: state.mcoDetails.materialData,\r\n        updatedRoutes: state.mcoDetails.updatedRoutes,\r\n    }), shallowEqual);\r\n    const [tapvalue, setTapvalue] = useState(0);\r\n    const [masterData, setMasterData] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [itemValidationArr, setItemValidationArr] = useState([]);\r\n    const [showTrackerBox, setShowTrackerBox] = useState(false);\r\n    const [showHistoryBox, setShowHistoryBox] = useState(false);\r\n    const [lifeCycleStep, setLifeCycleStep] = useState('Start');\r\n    const [stepData, setStepData] = useState(null);\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const [initialLoad, setInitialLoad] = useState(false);\r\n    const [plantType, setPlantType] = useState(localStorage.getItem(\"plantType\") || \"\");\r\n    useEffect(() => {\r\n        return () => localStorage.removeItem(\"plantType\"); \r\n    }, []);\r\n    const selectedRouteId = localStorage.getItem(\"selectedRouteId\");\r\n\r\n    const selectedRoute = useMemo(() => {\r\n      return updatedRoutes.find(route => route.id === selectedRouteId);\r\n    }, [updatedRoutes, selectedRouteId]);\r\n    \r\n    const mcoService = new MCOService();\r\n    const params = useParams();\r\n    const instance = localStorage.getItem('instance');\r\n    const handleChange = (event, newValue) => {\r\n        setTapvalue(newValue);\r\n    };\r\n\r\n    const collectMCOdetails = async (resData) => {        \r\n        try {\r\n            if (resData.length) {\r\n                return true;\r\n            }\r\n            const validFieldArr = resData?.mcoaffectedItem && (resData?.mcoaffectedItem?.map((vitem) => {\r\n                const checkAttValid = !Object.keys(vitem?.materialType?.attributeMap || {}).length;\r\n                return {\r\n                    id: vitem.id,\r\n                    materialTypeError: !vitem?.materialType?.name,\r\n                    attributeFormError: checkAttValid,\r\n                };\r\n            }) || []);\r\n            setItemValidationArr(validFieldArr);\r\n\r\n            const getMasterDetails = [];\r\n            if (resData?.mcoPropeties?.organizationId?.includes('SAP')) {\r\n                if (resData?.mcoaffectedItem) {\r\n                    resData?.mcoaffectedItem.forEach((vitem) => {\r\n                        if (!getMasterDetails.length && vitem?.relatedMCOs && Object.keys(vitem?.relatedMCOs[0]).includes('id') && vitem?.relatedMCOs[0]?.id) {\r\n                            let getMasterpayloadData = {\r\n                                id: vitem?.relatedMCOs[0]?.id, // property id\r\n                            }\r\n                            getMasterDetails.push(getMasterpayloadData);\r\n                        }\r\n                    });\r\n                }\r\n                // master check\r\n                if (getMasterDetails.length) {\r\n                    resData['isMaster'] = (getMasterDetails[0]?.id === resData?.mcoPropeties?.id) ? \"Y\" : \"N\";\r\n                }\r\n            }\r\n\r\n            if (!resData?.mcoPropeties?.hasOwnProperty(\"ECOExportToERP\")) {\r\n                resData.mcoPropeties.ECOExportToERP = \"\";\r\n            }\r\n            await dispatch(updateResponseData(resData));\r\n            await dispatch(update_generalValues({\r\n                currentMcoDetails: resData,\r\n            }));\r\n\r\n            await findAllMcoData(resData, getMasterDetails);\r\n        } catch (errs) {\r\n            handleErrorForThrows(errs, 'collectMCOdetails');\r\n            throw errs;\r\n        }\r\n    }\r\n    const findAndSaveExistingMco = async (locresData, attData, currMcoDetails, currentHaveValues) => {\r\n        try {\r\n            // let mcoaffectedItem = [];\r\n            locresData.mcoaffectedItem = locresData?.mcoaffectedItem.map((gitem) => {\r\n                const thisItem = { ...gitem };\r\n                const getmatchItem = attData.data[0].mcoaffectedItem?.find((material) => {\r\n                    return (gitem?.id === material.id);\r\n                }) || {};\r\n\r\n                const materialTypeDetails = getmatchItem?.materialType ?? null;\r\n\r\n                thisItem['materialType'] = materialTypeDetails;\r\n\r\n                // Oracle Fields\r\n                const env_exportToERP = (thisItem.exportToERP?.toLowerCase() === \"yes\") ? true : false;\r\n                let emr_exportToERP = getmatchItem?.exportToERP;\r\n                if (typeof getmatchItem?.exportToERP === \"string\" && getmatchItem?.exportToERP?.toLowerCase() === \"yes\") {\r\n                    emr_exportToERP = true;\r\n                }\r\n                if (typeof getmatchItem?.exportToERP === \"string\" && getmatchItem?.exportToERP?.toLowerCase() === \"no\") {\r\n                    emr_exportToERP = false;\r\n                }\r\n                thisItem.makeOrBuy = (getmatchItem?.makeOrBuy) ? getmatchItem?.makeOrBuy?.toLowerCase() : thisItem?.makeOrBuy?.toLowerCase();\r\n                thisItem.exportToERP = (getmatchItem?.exportToERP) ? emr_exportToERP : env_exportToERP;\r\n                thisItem.itemStatus = (getmatchItem?.itemStatus) ? getmatchItem?.itemStatus?.toLowerCase() : thisItem?.ErpStatus?.toLowerCase();\r\n\r\n                thisItem.isTemplateValueChange = false;\r\n                thisItem.isMakeOrBuyValueChange = false;\r\n                thisItem.isExportToERPValueChange = false;\r\n                thisItem.isItemStatusValueChange = false;\r\n\r\n                if (materialTypeDetails) {\r\n                    currentHaveValues = true;\r\n                }\r\n\r\n                // mcoaffectedItem.push(thisItem);\r\n\r\n                return thisItem;\r\n            });\r\n\r\n            if (!currMcoDetails?.mcoProperties?.hasOwnProperty(\"ECOExportToERP\") || currMcoDetails?.mcoProperties?.ECOExportToERP === \"\") {\r\n                locresData.mcoPropeties.ECOExportToERP = \"yes\";\r\n            } else {\r\n                locresData.mcoPropeties.ECOExportToERP = currMcoDetails?.mcoProperties?.ECOExportToERP;\r\n            }\r\n            await dispatch(updateMcoDetails({\r\n                mcoPropeties: locresData?.mcoPropeties,\r\n                mcoaffectedItem: locresData?.mcoaffectedItem,\r\n            }));\r\n            return currentHaveValues;\r\n        } catch (err) {\r\n            handleErrorForThrows(err, 'findAndSaveExistingMco');\r\n            throw err;\r\n        }\r\n    }\r\n    const findAndSaveInitialMco = async (locresData, currMcoDetails) => {\r\n        try {\r\n            locresData.mcoaffectedItem = locresData?.mcoaffectedItem.map((gitem, gkey) => {\r\n                const thisItem = { ...gitem };\r\n                // Oracle Fields\r\n                // const env_exportToERP = (thisItem?.exportToERP?.toLowerCase() === \"yes\") ? true : false;\r\n                let env_exportToERP = thisItem?.exportToERP;\r\n                if (typeof thisItem?.exportToERP === \"string\" && thisItem?.exportToERP?.toLowerCase() === \"yes\") {\r\n                    env_exportToERP = true;\r\n                }\r\n                if (typeof thisItem?.exportToERP === \"string\" && thisItem?.exportToERP?.toLowerCase() === \"no\") {\r\n                    env_exportToERP = false;\r\n                }\r\n                thisItem.makeOrBuy = thisItem?.makeOrBuy?.toLowerCase() ?? 'buy';\r\n                thisItem.exportToERP = env_exportToERP;\r\n                thisItem.itemStatus = thisItem?.ErpStatus?.toLowerCase() ?? 'active';\r\n\r\n                thisItem.isTemplateValueChange = false;\r\n                thisItem.isMakeOrBuyValueChange = false;\r\n                thisItem.isExportToERPValueChange = false;\r\n                thisItem.isItemStatusValueChange = false;\r\n                return thisItem;\r\n            });\r\n\r\n            if (!currMcoDetails || (!Object.keys(currMcoDetails)?.length || !currMcoDetails?.mcoProperties?.hasOwnProperty(\"ECOExportToERP\"))) {\r\n                locresData.mcoPropeties.ECOExportToERP = \"yes\";\r\n            } else {\r\n                locresData.mcoPropeties.ECOExportToERP = currMcoDetails?.mcoProperties?.ECOExportToERP;\r\n            }\r\n            await dispatch(updateMcoDetails({\r\n                mcoPropeties: locresData.mcoPropeties,\r\n                mcoaffectedItem: locresData.mcoaffectedItem,\r\n            }));\r\n\r\n            await dispatch(update_generalValues({\r\n                currentMcoDetails: locresData,\r\n            }));\r\n\r\n            return locresData;\r\n        } catch (err) {\r\n            handleErrorForThrows(err, 'findAndSaveInitialMco');\r\n            throw err\r\n        }\r\n    }\r\n    const findAndSaveMasterMco = async (locresData, currMcoDetails, getMasterDetails, currentHaveValues, materialDataArr) => {\r\n        try {\r\n            if (getMasterDetails.length) {\r\n                await mcoService.getattributesbyid(getMasterDetails).then(async (masterAttData) => {\r\n                    await handleMasterAttData(masterAttData, getMasterDetails, locresData, currMcoDetails, currentHaveValues, materialDataArr)\r\n                }).catch((error) => {\r\n                    handleError(locresData, materialDataArr);\r\n                });\r\n            }\r\n            return getMasterDetails;\r\n        } catch (err) {\r\n            handleErrorForThrows(err, 'findAndSaveMasterMco');\r\n            throw err;\r\n        }\r\n    }\r\n    const findAllMcoData = async (resData, getMasterDetails) => {\r\n        try {\r\n            let materialDataArr = [];\r\n            await collectSourcePlantTemplate(resData, getMasterDetails).then(async () => {\r\n                let getpayloadData = [{\r\n                    id: resData?.mcoPropeties?.id, // property id\r\n                    instance: instance\r\n                }]\r\n                let locresData = resData;\r\n                await mcoService.getattributesbyid(getpayloadData).then(async (attData) => {\r\n                    let currentHaveValues = false;\r\n                    let currMcoDetails = {};\r\n                    if (attData?.data[0]) {\r\n                        currMcoDetails = attData?.data[0];\r\n\r\n                        dispatch(update_generalValues({\r\n                            currentMcoDetails: currMcoDetails,\r\n                        }));\r\n\r\n                        const getcurrentHaveValues = await findAndSaveExistingMco(locresData, attData, currMcoDetails, currentHaveValues);\r\n                        if (typeof getcurrentHaveValues === \"boolean\") {\r\n                            currentHaveValues = getcurrentHaveValues;\r\n                        }\r\n                    } else {\r\n                        await findAndSaveInitialMco(locresData);\r\n                    }\r\n                    await findAndSaveMasterMco(locresData, currMcoDetails, getMasterDetails, currentHaveValues, materialDataArr)\r\n                });\r\n                // find ERP status and update \r\n                await setupERPStatus(locresData);\r\n            })\r\n        } catch (err) {\r\n            return err\r\n        }\r\n    }\r\n    const handleMasterAttData = async (masterAttData, getMasterDetails, locresData, currMcoDetails, currentHaveValues, materialDataArr) => {\r\n        const masterData = masterAttData?.data[0] || {};\r\n        const findMatchItem = getMatchItemFunc(getMasterDetails[0], locresData?.mcoPropeties);\r\n\r\n        masterData.plantName = locresData?.mcoPropeties?.plantName;\r\n        masterData.master = findMatchItem ? \"Y\" : \"N\";\r\n\r\n        setMasterData(masterData);\r\n        await dispatch(update_generalValues({ masterData: masterData }));\r\n\r\n        if (shouldSetLifeCycleStep(currMcoDetails, locresData)) {\r\n            setLifeCycleStep('Item');\r\n        }\r\n\r\n        let mcoaffectedItem = locresData?.mcoaffectedItem || [];\r\n        if (!currentHaveValues) {\r\n            mcoaffectedItem = mapMcoAffectedItem(locresData?.mcoaffectedItem, masterData.mcoaffectedItem);\r\n            if (!masterData?.mcoaffectedItem?.length) {\r\n                // auto saving for master mco \r\n                await defaultValueUpdates(locresData, materialDataArr);\r\n            }\r\n        }\r\n\r\n        // Clone RME and RSME value from master mco\r\n        const newMcoProperties = CloneDataFromMaster(locresData, masterData);\r\n        await dispatch(updateMcoDetails({\r\n            mcoProperties: newMcoProperties,\r\n            mcoaffectedItem,\r\n            masterData,\r\n            isMaster: findMatchItem ? \"Y\" : \"N\"\r\n        }));\r\n    }\r\n\r\n    const handleError = (locresData, materialDataArr) => {\r\n        setMasterData({});\r\n        dispatch(update_generalValues({ masterData: {} }));\r\n        // auto saving for master mco \r\n        defaultValueUpdates(locresData, materialDataArr);\r\n    }\r\n\r\n    const getMatchItemFunc = (detail, properties) => {\r\n        return detail?.id === properties?.id;\r\n    }\r\n\r\n    const shouldSetLifeCycleStep = (currMcoDetails, locresData) => {\r\n        return currMcoDetails?.clientReleaseDate && currMcoDetails?.clientReleaseDate !== '' && ['Review'].includes(locresData?.mcoProperties?.mcostate);\r\n    }\r\n\r\n    const mapMcoAffectedItem = (affectedItems, masterAffectedItems) => {\r\n        return affectedItems.map((gitem) => {\r\n            const matchItem = masterAffectedItems?.find(material => gitem?.id === material.id) || {};\r\n            gitem.materialType = matchItem.materialType || null;\r\n            return gitem;\r\n        });\r\n    }\r\n\r\n    const defaultValueUpdates = async (locresData, materialDataArr) => {\r\n        locresData.mcoaffectedItem.forEach(async (affval, affkey) => {\r\n            let findMaterialDetails = materialDataArr?.filter((foption, findex) => {\r\n                return ((affval?.materialType && foption.templateName === affval?.materialType?.name) || (foption.desc === affval?.attributeGroupData?.ERPItemTypeTemplate));\r\n            })\r\n            findMaterialDetails = (findMaterialDetails?.length) ? findMaterialDetails[0] : {};\r\n            if (Object.keys(findMaterialDetails).length && findMaterialDetails?.desc === affval?.attributeGroupData?.ERPItemTypeTemplate) {\r\n                let aff_mcoaffectedItem = locresData.mcoaffectedItem;\r\n                aff_mcoaffectedItem[affkey]['materialType'] = (Object.keys(findMaterialDetails).length) ? { name: findMaterialDetails?.templateName } : null;\r\n                await updateMaterialValues(aff_mcoaffectedItem, affkey, materialDataArr, locresData);\r\n\r\n                await dispatch(update_generalValues({\r\n                    isMaterialFormEdited: true\r\n                }));\r\n            }\r\n        })\r\n    }\r\n\r\n    const setupERPStatus = async (locresData) => {\r\n        const ackspayloadData = [];\r\n        locresData.mcoaffectedItem.forEach((mitem) => {\r\n            ackspayloadData.push(locresData.mcoPropeties.name + '_' + mitem.name);\r\n        });\r\n        await mcoService.getERPStatus(ackspayloadData).then(async (acksData) => {\r\n            if (acksData?.data) {\r\n                const getERPStatusDetails = acksData?.data.map((eitem) => {\r\n                    return {\r\n                        Item_Name: eitem?.details?.Item_Name,\r\n                        status: eitem?.details?.status,\r\n                    };\r\n                })\r\n\r\n                await dispatch(updateMcoDetails({\r\n                    itemERPStatus: [...getERPStatusDetails] // Update itemERPStatus\r\n                }))\r\n            }\r\n        }).catch((errs) => {\r\n            setIsLoading(false);\r\n            return errs;\r\n        })\r\n    }\r\n\r\n    // const isPlantExistingChecks = (titem, selectedRowData) => {\r\n    //     return titem.plants.some(fitem => fitem.plantName === selectedRowData?.relatedMCOs[0]?.plantName);\r\n    // }\r\n    const mergeAttributes = (selectedRowData, materialData, templateList, propertiesData) => {\r\n        let mergedObj = [];\r\n        materialData?.forEach(material => {\r\n            if (selectedRowData?.materialType?.name === material.templateName) {\r\n                // let getMasterTempArr = templateList?.filter(titem => {\r\n                //     if (titem?.plants) {\r\n                //         return isPlantExistingChecks(titem, selectedRowData);\r\n                //     } else {\r\n                //         return titem.plantName === selectedRowData?.relatedMCOs[0]?.plantName;\r\n                //     }\r\n                // }) || [];\r\n\r\n                // if (!getMasterTempArr.length) {\r\n                //     getMasterTempArr = templateList?.filter(titem => titem.plantName === selectedRowData?.relatedMCOs[0]?.plantName) || [];\r\n                // }\r\n\r\n                // if (getMasterTempArr.length) {\r\n                // getMasterTempArr.forEach(newmaterial => {\r\n                templateList.forEach(newmaterial => {\r\n                    if (selectedRowData?.materialType?.name === newmaterial.templateName) {\r\n                        const masterAttrObj = newmaterial?.attributes || [];\r\n                        const childAttrObj = material?.attributes || [];\r\n\r\n                        if (masterAttrObj && childAttrObj) {\r\n                            mergedObj = masterAttrObj;\r\n                            // if (selectedRowData?.relatedMCOs[0]?.id !== propertiesData?.id) {\r\n                            //     mergedObj = [...masterAttrObj, ...childAttrObj]\r\n                            // }\r\n                            mergedObj = selectedRowData?.relatedMCOs[0]?.id === propertiesData?.id\r\n                                ? masterAttrObj\r\n                                : masterAttrObj.concat(childAttrObj);\r\n                        }\r\n\r\n                        // remove duplicate if having\r\n                        if (mergedObj?.length) {\r\n                            const mergedArr = [...mergedObj];\r\n                            let uniqueArray = mergedArr.filter((item, index, self) => {\r\n                                return index === self?.findIndex((t) => (\r\n                                    t.name === item.name\r\n                                ))\r\n                            });\r\n                            mergedObj = uniqueArray;\r\n                        }\r\n\r\n                        dispatch(update_generalValues({ selectedRowFormdata: mergedObj }));\r\n                    }\r\n                });\r\n                // }\r\n            }\r\n        });\r\n        return mergedObj;\r\n    };\r\n\r\n    const updateFormData = async (selectedRowData, materialData, actType, propertiesData, affectedPartsData) => {\r\n        const findSelectedRowIndex = affectedPartsData?.findIndex(aitem => selectedRowData?.id === aitem?.id);\r\n\r\n        if (findSelectedRowIndex !== -1) {\r\n            await dispatch(update_generalValues({ selectedRowIndex: findSelectedRowIndex }));\r\n        }\r\n\r\n        const mergedObj = mergeAttributes(selectedRowData, materialData, templateList, propertiesData);\r\n\r\n        if (actType === 'form') {\r\n            await dispatch(update_generalValues({ selectedRowData }));\r\n        }\r\n\r\n        // meterialFormdata(findSelectedRowIndex, mergedObj, affectedPartsData);\r\n    };\r\n\r\n    const handleIconClick = async (selectedRowData, materialData, actType, responseData) => {       \r\n        const mcoData = responseData.mcoPropeties;\r\n        const MCOPlantName = mcoData?.plantName;\r\n        const partBU = selectedRowData?.organization;\r\n        const plantPair = getRDOOUOrgSetMappings(templateMappingsInfo, partBU, MCOPlantName);\r\n        if (!plantPair?.includes(MCOPlantName)) {\r\n            if ((!Object.keys(selectedRowData).length || !selectedRowData?.materialType) || (selectedRowData === 0)) {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"info\",\r\n                    desc: \"Please select Material Type\",\r\n                });\r\n                return; // Exit the function if materialType is not selected\r\n            }\r\n        }\r\n\r\n        const affectedPartsData = await getAffectedPartsData();\r\n        if (responseData?.mcoPropeties?.organizationId?.includes('SAP')) {\r\n            if (masterData && Object.keys(masterData)?.length === 0) {\r\n                const findmatchitem = affectedPartsData?.filter((aitem) => {\r\n                    return aitem?.relatedMCOs[0]?.id !== responseData?.mcoPropeties?.id;\r\n                }) || [];\r\n\r\n                if (findmatchitem.length) {\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: \"info\",\r\n                        desc: \"Please check master MCO attributes!\",\r\n                    });\r\n\r\n                    return; // Exit the function if master does not have values\r\n                }\r\n            }\r\n        }\r\n        if (selectedRowData?.materialType) {\r\n            await updateFormData(selectedRowData, materialData, actType, responseData?.mcoProperties, affectedPartsData);\r\n        } else {\r\n            const findSelectedRowIndex = affectedPartsData?.findIndex(aitem => selectedRowData?.id === aitem?.id);\r\n            const mcoaffectedItem = [...affectedPartsData];\r\n            mcoaffectedItem[findSelectedRowIndex]['materialType'] = null;\r\n            await dispatch(updateMcoDetails(prevMcoDetails => (\r\n                {\r\n                    ...prevMcoDetails,\r\n                    ...mcoaffectedItem // Update mcoaffectedItem\r\n                }\r\n            )))\r\n        }\r\n\r\n        await dispatch(update_generalValues({ showMaterialForm: true }));\r\n    };\r\n\r\n    const meterialFormdata = (findselectedRowIndex, mergedObj, affectedPartsData) => {\r\n        const formData = mergedObj;\r\n        let formInitaialValues = {};\r\n        Object.keys(formData).length && formData?.forEach((item, index) => {\r\n            const thisFieldName = item?.name;\r\n            if (item?.defaultValues !== \"\") {\r\n                formInitaialValues[thisFieldName] = item?.defaultValues;\r\n            } else if (item?.defaultValues === \"\" && item?.inputType === \"select\") {\r\n                formInitaialValues[thisFieldName] = item?.values;\r\n            } else {\r\n                formInitaialValues[thisFieldName] = '';\r\n            }\r\n            return true;\r\n        });\r\n\r\n\r\n        const mcoaffectedItem = [...affectedPartsData];\r\n        if (mcoaffectedItem[findselectedRowIndex]?.materialType\r\n            && Object.keys(mcoaffectedItem[findselectedRowIndex]?.materialType).includes(\"attributeMap\")\r\n        ) {\r\n            mcoaffectedItem[findselectedRowIndex]['materialType'] = {\r\n                name: mcoaffectedItem[findselectedRowIndex]['materialType'].name,\r\n                attributeMap: formInitaialValues\r\n            };\r\n            // dispatch(updateMcoDetails(prevMcoDetails => (\r\n            //     {\r\n            //         ...prevMcoDetails,\r\n            //         ...mcoaffectedItem // Update mcoaffectedItem\r\n            //     }\r\n            // )));\r\n\r\n            dispatch(update_generalValues({\r\n                affectedPartsData: mcoaffectedItem,\r\n            }));\r\n        }\r\n\r\n    }\r\n\r\n    const updateMaterialValues = async (mcoaffectedItem, findselectedRowIndex, materialDataArr, locresData) => {\r\n        // for auto save the default values\r\n        let findMinfo = mcoaffectedItem.filter((partsitem, partskey) => {\r\n            return partskey === findselectedRowIndex;\r\n        })\r\n\r\n        findMinfo = (findMinfo.length) ? findMinfo[0] : null;\r\n        await dispatch(updateMcoDetails({\r\n            mcoaffectedItem: mcoaffectedItem\r\n        }));\r\n\r\n        await dispatch(update_generalValues({\r\n            isMaterialFormEdited: true\r\n        }));\r\n\r\n        handleIconClick(findMinfo, materialDataArr, 'auto', locresData);\r\n    };\r\n\r\n    const submitAffectedParts = async (thistype) => {\r\n        try {\r\n            const affectedPartsData = await getAffectedPartsData();\r\n            await dispatch(updateMcoDetails({\r\n                mcoaffectedItem: affectedPartsData,\r\n            }));\r\n            // if (thistype === 'form') {\r\n            //     const { valid: isValid, errDesc: errorDescription } = await validationChecks(thistype, responseData, affectedPartsData, itemValidationArr);\r\n            //     console.log(\"errorDescription===\",errorDescription)\r\n            //     if (!isValid) {\r\n            //         handleValidationFailure(errorDescription);\r\n            //         return false    \r\n            //     };\r\n            // }\r\n\r\n            const mcoProperties = responseData?.mcoPropeties;\r\n            const plantName = mcoProperties?.plantName;\r\n            const namePlant = `${mcoProperties?.name}_${plantName}`;\r\n\r\n            if (thistype === 'form') setIsLoading(true);\r\n            const resData = await mcoService.getattributesbyid([{ id: mcoProperties?.id, instance: instance }]);\r\n            const { status: getAttrApiStatus, message: getAttrApiMsg } = resData;\r\n            if (getAttrApiStatus === \"failed\") {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: getAttrApiMsg,\r\n                });\r\n                return false;\r\n            }\r\n\r\n            const cloneresponseData = affectedPartsData\r\n                ? JSON.parse(JSON.stringify(affectedPartsData))\r\n                : [];\r\n\r\n            const filterFieldsForUpdate = cloneresponseData?.map(fitem => {\r\n                delete fitem?.isTemplateValueChange;\r\n                delete fitem?.isMakeOrBuyValueChange;\r\n                delete fitem?.isExportToERPValueChange;\r\n                delete fitem?.isItemStatusValueChange;\r\n                return fitem\r\n            }) || [];\r\n            const _payload = await prepareMRPayload();\r\n            const payloadData = {\r\n                id: mcoProperties?.id,\r\n                producthub: `${namePlant}`,\r\n                uniquePartId: `${namePlant}`,\r\n                mcoProperties: mcoProperties,\r\n                mcoaffectedItem: filterFieldsForUpdate,\r\n                source: responseData?.source,\r\n                target: responseData?.target,\r\n                partlistPayload: _payload\r\n            };\r\n            if (Object.keys(resData?.data).length && resData?.data[0]) {\r\n                const updatedData = await mcoService.updatePartListAndAttributes(payloadData);\r\n                if (updatedData.status === 'failed') {\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: \"error\",\r\n                        desc: `Something went wrong while updating MR data to Enovia. Please update the templates again.`,\r\n                    });\r\n                    return;\r\n                } else {\r\n                    if (typeof updatedData === 'object') {\r\n                        updatedData.data.mcoaffectedItem = affectedPartsData;\r\n                        await handleResponse(updatedData, 'updated', thistype);\r\n                        await dispatch(update_generalValues({\r\n                            bulkPartTemplates: []\r\n                        }));\r\n                    }\r\n                }                \r\n            } else {\r\n                const updatedData = await mcoService.updatePartListAndAddAttributes(payloadData);\r\n                if (updatedData.status === 'failed') {\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: \"error\",\r\n                        desc: `Something went wrong while updating MR data to Enovia. Please update the templates again.`,\r\n                    });\r\n                    return;\r\n                } else {\r\n                    if (typeof updatedData === 'object') {\r\n                        await handleResponse(updatedData, 'added', thistype);\r\n                        await dispatch(update_generalValues({\r\n                            bulkPartTemplates: []\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n            if (thistype === 'form') {\r\n                setTimeout(() => {\r\n                    setIsLoading(false);\r\n                }, 500);\r\n            }\r\n            return true;\r\n        } catch (err) {\r\n            return false\r\n        }\r\n    };\r\n\r\n    const handleMRDetails = async (responseData, isload = null) => {\r\n        try {\r\n            const affectedPartsData = await getAffectedPartsData();\r\n            const mrPayloadData = affectedPartsData?.map(eitem => ({\r\n                partAndPlant: `${eitem?.name}_${responseData?.mcoPropeties?.plantName}`,\r\n                partName: `${eitem?.name}`,\r\n                plantName: `${responseData?.mcoPropeties?.plantName}`,\r\n                revision: eitem?.revision,\r\n                mcoId: responseData?.mcoPropeties?.id,\r\n                mcoName: responseData?.mcoPropeties?.name,\r\n                ERPStatus: eitem?.itemStatus?.toLowerCase(),\r\n                makeOrBuy: eitem?.makeOrBuy?.toLowerCase(),\r\n                template: eitem?.materialType?.name,\r\n                mcobusinessUnit: responseData?.mcoPropeties?.businessUnit,\r\n                partId: eitem?.id,\r\n                instance: instance,\r\n            }));\r\n\r\n            const resData = await mcoService.getMRRelatedDetailsbyid({ mcoName: responseData?.mcoPropeties?.name });\r\n            if (isload === \"load\") {\r\n                if (!Object.keys(resData?.data || {}).length) {\r\n                    await mcoService.addMRRelatedDetails(mrPayloadData);\r\n                }\r\n            } else if (Object.keys(resData?.data || {}).length && resData?.data[0]) {\r\n                await mcoService.updateMRRelatedDetails(mrPayloadData);\r\n            } else {\r\n                await mcoService.addMRRelatedDetails(mrPayloadData);\r\n            }\r\n        } catch (error) {\r\n            if (isload === \"load\") {\r\n                handleErrorForThrows(error, 'handleMRDetails');\r\n                throw error;\r\n            } else {\r\n                return error?.message;\r\n            }\r\n        }\r\n    }\r\n    const handleResponse = async (updatedData, updateType, thistype) => {\r\n        // if (thistype === 'auto') return true;\r\n\r\n        if (thistype === 'form') {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"success\",\r\n                desc: `Attributes ${updateType} successfully!`,\r\n            });\r\n        }\r\n        await dispatch(update_generalValues({\r\n            isMaterialFormEdited: false\r\n        }));\r\n\r\n        if (updatedData?.data) {\r\n            const new_mcoaffectedItem = responseData.mcoaffectedItem?.map((mitem, minx) => {\r\n                return { ...mitem, ...updatedData?.data?.mcoaffectedItem?.[minx] }\r\n            }) || [];\r\n            await dispatch(updateMcoDetails({\r\n                mcoPropeties: updatedData?.data?.mcoProperties,\r\n                mcoaffectedItem: new_mcoaffectedItem\r\n            }));\r\n\r\n            await handleMRDetails(responseData);\r\n            await initialMRFunctions(responseData);\r\n        }\r\n    };\r\n\r\n    const submitPropertiesForm = async (saveType = 'form') => {\r\n        let propFormValid = validateProperties();\r\n        if (!propFormValid && saveType !== 'auto') {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"error\",\r\n                desc: \"Invalid Properties. Please check properties fields.\",\r\n            });\r\n            return propFormValid;\r\n        }\r\n\r\n        const data = prepareFormData(responseData);\r\n\r\n        await dispatch(update_generalValues({ isPropertyFormEdited: false }));\r\n\r\n        if (saveType !== 'auto') {\r\n            setIsLoading(true);\r\n        }\r\n        let isHavingErrors = false;\r\n        await mcoService.updateMCOData(responseData?.mcoPropeties?.id, data).then(async (resp) => {\r\n            if (typeof resp === 'object' && Object.keys(resp).length && !Object.keys(resp)?.includes('code')) {\r\n                // find and update the selected rme & rsme email address\r\n                const rmeEmailAddress = RMEList?.find((rFilter) => rFilter.key === resp?.rme) || null;\r\n                resp[\"rmeEmailAddress\"] = (rmeEmailAddress && Object.keys(rmeEmailAddress)?.length) ? rmeEmailAddress?.email : null;\r\n\r\n                const rsmeEmailAddress = RSMEList?.find((rFilter) => rFilter.key === resp?.rsme) || null;\r\n                resp[\"rsmeEmailAddress\"] = (rsmeEmailAddress && Object.keys(rsmeEmailAddress)?.length) ? rsmeEmailAddress?.email : null;\r\n\r\n                resp[\"ECOExportToERP\"] = '';\r\n                if (responseData?.mcoPropeties?.ECOExportToERP) {\r\n                    resp[\"ECOExportToERP\"] = responseData?.mcoPropeties?.ECOExportToERP;\r\n                }\r\n\r\n                await dispatch(updateMcoDetails({ mcoPropeties: resp }));\r\n\r\n                if (Object.keys(resp)?.includes('errorMsg') && (resp?.errorMsg && resp?.errorMsg !== \"\")) {\r\n                    if (saveType !== 'auto') {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"error\",\r\n                            desc: resp?.errorMsg,\r\n                        });\r\n\r\n                        setIsLoading(false);\r\n                        return false;\r\n                    }\r\n                    isHavingErrors = true;\r\n                }\r\n\r\n                if (saveType !== 'auto') {\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: \"success\",\r\n                        desc: \"Properties updated successfully!\",\r\n                    });\r\n                }\r\n\r\n                // Update mcoPropeties details to database\r\n                await updateMcoDetailsInDatabase(resp, responseData, \"savePropertiesOnly\");\r\n\r\n                if (saveType !== 'auto') {\r\n                    setIsLoading(false);\r\n                }\r\n            } else {\r\n                isHavingErrors = true;\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: \"An unexpected error occurred.\",\r\n                });\r\n                setIsLoading(false);\r\n            }\r\n        }).catch(err => {\r\n            isHavingErrors = true;\r\n            let errorValue = null;\r\n            if (err.message === 'Network Error') {\r\n                errorValue = ('Network error, please check your internet connection.');\r\n            } else if (err.code === 'ECONNABORTED') {\r\n                errorValue = ('A timeout occurred.');\r\n            } else if (err.response) {\r\n                // Server responded with a status other than 2xx\r\n                errorValue = (`Server error: ${err.response.status} ${err.response.statusText}`);\r\n            } else {\r\n                errorValue = ('An unexpected error occurred.');\r\n            }\r\n\r\n            // Additional check for net::ERR_NETWORK_CHANGED\r\n            if (err.message.includes('net::ERR_NETWORK_CHANGED')) {\r\n                errorValue = ('Network changed, please check your internet connection.');\r\n            }\r\n            if (errorValue) {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: errorValue,\r\n                });\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n        return isHavingErrors;\r\n    }\r\n    const validateProperties = () => {\r\n        const requiredFields = ['description', 'rme', 'rsme', 'startdate', 'ECOExportToERP'];\r\n        for (const item in responseData?.mcoPropeties) {\r\n            if (responseData?.mcoPropeties.hasOwnProperty(item)) {\r\n                if (requiredFields.includes(item)) {\r\n                    if (!responseData?.mcoPropeties[item] || responseData?.mcoPropeties[item] === \"Invalid Date\" || responseData?.mcoPropeties[item] === \"Unassigned\") {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    const updateMCOState = async (status, type = null) => {\r\n        if(instance === \"SaaS\"){\r\n            if(type === 'demote' && status === 'In Approval'){\r\n                status = 'In Work'\r\n            } else if(status === 'In Work') {\r\n                status = 'In Approval'\r\n            }\r\n        }\r\n        try {\r\n            if (type) setIsLoading(true);\r\n\r\n            let itemInformation = {};\r\n            if (status === \"Release\" || status === \"Approved\") {\r\n                itemInformation = await prepareItemPayload(responseData);\r\n            }\r\n\r\n            \r\n            let getMCOStateValidationResp = {};\r\n            getMCOStateValidationResp = await mcoService.mcoStatusValidation([responseData?.mcoPropeties?.name]);\r\n            if (getMCOStateValidationResp?.status === \"success\" && getMCOStateValidationResp?.data?.[responseData?.mcoPropeties?.name]?.status === \"failed\") {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: getMCOStateValidationResp?.data?.[responseData?.mcoPropeties?.name]?.message,\r\n                });\r\n                setIsLoading(false);\r\n                return false;\r\n            }\r\n            await mcoService.changeStateByMcoId(responseData?.mcoPropeties?.id, status, itemInformation).then(async (resp) => {\r\n                if (Object.keys(resp).length) {\r\n                    resp[\"ECOExportToERP\"] = '';\r\n                    if (responseData?.mcoPropeties?.ECOExportToERP) {\r\n                        resp[\"ECOExportToERP\"] = responseData?.mcoPropeties?.ECOExportToERP;\r\n                    }\r\n                    await dispatch(updateMcoDetails({\r\n                        mcoPropeties: resp,\r\n                    }))\r\n                    setStepData(resp?.mcostate);\r\n                    // update the properties in database\r\n                    await updateMcoDetailsInDatabase(resp, responseData, \"saveMcoState\");\r\n\r\n                    if (responseData?.mcoPropeties?.mcostate === resp?.mcostate) {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"error\",\r\n                            desc: (resp?.errorMsg) ? (resp?.errorMsg) : (\"Status update failed. Please verify the details and try again.\"),\r\n                        });\r\n                        return;\r\n                    }\r\n\r\n                    if ([\"Implemented\", \"Complete\"].includes(resp?.mcostate)) {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"success\",\r\n                            desc: \"Successfully implemented!\",\r\n                        });\r\n                        setStepData('Implemented');\r\n                    }\r\n\r\n                    // if ([\"Release\"].includes(resp?.mcostate)) {\r\n                    //     setLifeCycleStep('Stop');\r\n                    //     setStepData('Release');\r\n                    //     setOpenAlert(true);\r\n                    //     setOpenDesc({\r\n                    //         severity: \"success\",\r\n                    //         desc: \"Successfully released!\",\r\n                    //     });\r\n\r\n                    if ([\"Create\"].includes(resp?.mcostate)) {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"info\",\r\n                            desc: \"Demoted successfully!\",\r\n                        });\r\n                    }\r\n                    if ([\"Review\"].includes(resp?.mcostate)) {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"success\",\r\n                            desc: \"Promoted successfully!\",\r\n                        });\r\n                        setStepData('Review');\r\n                    }\r\n                }\r\n            });\r\n            if (type) setIsLoading(false);\r\n        } catch (error) {\r\n            setIsLoading(false);\r\n            return error?.message;\r\n        }\r\n    }\r\n\r\n    const checkEnoviaValidation = async (responseData) => {\r\n        let valid = false;\r\n        await mcoService.validationByMcoId(responseData?.mcoPropeties?.id).then(async (respValidation) => {\r\n            const skipValidation = false;\r\n            if (respValidation?.pass || skipValidation) {\r\n                valid = true;\r\n            } else if (respValidation?.fail?.length) {\r\n                const collectFails = [];\r\n                respValidation?.fail?.forEach((fitem) => {\r\n                    if (fitem?.includes('Pass~~') || fitem?.includes('Pass~')) {\r\n                        return true;\r\n                    }\r\n                    if (fitem?.includes('Fail~~')) {\r\n                        const failStr = fitem?.replace(\"Fail~~\", \"\");\r\n                        collectFails.push(failStr);\r\n                    } else if (fitem?.includes('Fail~')) {\r\n                        const failStr = fitem?.replace(\"Fail~\", \"\");\r\n                        collectFails.push(failStr);\r\n                    } else {\r\n                        collectFails.push(fitem);\r\n                    }\r\n                })\r\n                const altHtml = collectFails?.map((citem) => {\r\n                    return (<li key={shortId.generate()}>{citem}</li>)\r\n                });\r\n\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: altHtml,\r\n                });\r\n            }\r\n        });\r\n        return valid;\r\n    }\r\n    const handleLifeCycle = async (data, action) => {\r\n        responseData.action = action;\r\n        setIsLoading(true);\r\n        const newIsMaterialFormEdited = await getIsMaterialFormEdited();\r\n        // if (['Create', 'Review', 'Prepare', 'In Work', 'In Approval'].includes(data)) {\r\n        if (['Create', 'Release', 'Implemented   '].includes(data)) {\r\n            let getpayloadData = [{\r\n                id: responseData?.mcoPropeties?.id, // property id\r\n                instance: instance\r\n            }];\r\n            const mcoStartDate = new Date(responseData?.mcoPropeties?.startdate);\r\n            if (mcoStartDate.getFullYear() >= 2049) {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: \"Please set MCO date, promotion cannot be processed with default date.\"\r\n                });\r\n                setIsLoading(false);\r\n                return;\r\n            }   \r\n            const { status: getAttrApiStatus, message: getAttrApiMsg, data: getMCORespData } = await mcoService.getattributesbyid(getpayloadData);\r\n            if (getAttrApiStatus === \"failed\") {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: getAttrApiMsg,\r\n                });\r\n                setIsLoading(false);\r\n                return false;\r\n            }\r\n\r\n            const getLatestMCOData = getMCORespData?.find(xitem => xitem?.id === responseData?.mcoPropeties?.id) || {};\r\n            if (Object.keys(getMCORespData).length && getLatestMCOData[Object.keys(getMCORespData).length]) {\r\n                if (responseData?.mcoPropeties?.mcostate !== getLatestMCOData?.mcoProperties?.mcostate) {\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: \"error\",\r\n                        desc: `Promote Request was started already for ${getLatestMCOData?.mcoProperties?.name}, use refresh to confirm completion or error details`,\r\n                    });\r\n                    setIsLoading(false);\r\n                    return false;\r\n                } else {\r\n                    if (!isPropertyFormEdited) {\r\n                        await dispatch(updateMcoDetails({\r\n                            mcoPropeties: getLatestMCOData?.mcoProperties,\r\n                            mcoaffectedItem: getLatestMCOData?.mcoaffectedItem\r\n                        }));\r\n                    }\r\n                    if (!newIsMaterialFormEdited) {\r\n                        await dispatch(updateMcoDetails({\r\n                            mcoPropeties: getLatestMCOData?.mcoProperties,\r\n                            mcoaffectedItem: getLatestMCOData?.mcoaffectedItem\r\n                        }));\r\n                    }\r\n                }\r\n            }\r\n            if (isPropertyFormEdited) {\r\n                const getRepVal = await submitPropertiesForm('auto');\r\n                //if it is true means there is some error\r\n                if (getRepVal) {\r\n                    setIsLoading(false);\r\n                    return getRepVal;\r\n                }\r\n            }\r\n            if (['Create', 'Prepare', 'In Work'].includes(data) && newIsMaterialFormEdited) {\r\n                await submitAffectedParts('auto');\r\n            }\r\n\r\n            if (!(await handleCreateOrReview(data))) {\r\n                setIsLoading(false);\r\n            }\r\n        } else if (data === 'Release', 'Approved') {\r\n            if (!(await handleRelease())) {\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return false;\r\n    };\r\n\r\n    const handleCreateOrReview = async (data) => {\r\n        const skipThisValid = false;\r\n        const affectedPartsData = await getAffectedPartsData();\r\n        const { valid, errDesc } = await validationChecks('lifecycle', responseData, affectedPartsData, itemValidationArr);\r\n\r\n        if (!valid && !skipThisValid) {\r\n            handleValidationFailure(errDesc);\r\n            return false;\r\n        }\r\n\r\n        let validationResponse = await getValidationResponse();\r\n        const { valid: isDropDownValid, errDesc: errorDescription } = validationResponse;\r\n\r\n        if (!isDropDownValid && !skipThisValid) {\r\n            handleDropDownValidationFailure(errorDescription);\r\n            return false;\r\n        }\r\n\r\n        if (data === 'Create' || data === 'Prepare' || data === 'In Work') {\r\n            if (await handleCreate()) {\r\n                setIsLoading(false);\r\n                return false;\r\n            }\r\n        } else if (data === 'Review' || data === 'In Approval') {\r\n            if (await handleReview()) {\r\n                setIsLoading(false);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const getValidationResponse = async () => {\r\n        let validationReponse = { valid: true, errDesc: [] };\r\n        let callInternalValidation = true;\r\n        if (systemSetingsDetail?.length) {\r\n            let data = {\r\n                affectedItemsInfo: responseData,\r\n            };\r\n            if (window?.ExternalClass) {\r\n                const externalClass = new window.ExternalClass(data);\r\n                // Call the greet method with a name\r\n                validationReponse = await externalClass.dropdownValidation();\r\n                callInternalValidation = false;\r\n                if (!validationReponse.hasOwnProperty('valid')) {\r\n\r\n                    //validationReponse = await dropdownValidation(responseData);\r\n                }\r\n            } else {\r\n                //validationReponse = await dropdownValidation(responseData);\r\n            }\r\n        } else {\r\n            //validationReponse = await dropdownValidation(responseData);\r\n        }\r\n        if (callInternalValidation) {\r\n            if (responseData?.mcoPropeties?.organizationId?.includes('SAP')) {\r\n                //validationReponse = await dropdownValidationSAP(responseData);\r\n            } else {\r\n                validationReponse = await dropdownValidation(responseData);\r\n            }\r\n        }\r\n        return validationReponse;\r\n    }\r\n\r\n    const handleRelease = async () => {\r\n        if (!(await checkEnoviaValidation(responseData))) {\r\n            return false;\r\n        }\r\n\r\n        await updateMCOState('Implemented');\r\n        await updateMCOState('Complete');\r\n        return true;\r\n    };\r\n\r\n    const handleValidationFailure = (errDesc) => {\r\n        let altHtml = errDesc;\r\n        if (typeof errDesc === 'object' && !Array.isArray(errDesc) && errDesc !== null) {\r\n            if (Object.keys(errDesc).length) {\r\n                altHtml = Object.keys(errDesc)?.map((citem) => {\r\n                    return (<li key={shortId.generate()}>{errDesc[citem]}</li>)\r\n                });\r\n            }\r\n        } else if (Array.isArray(errDesc)) {\r\n            altHtml = errDesc?.map((citem) => {\r\n                return (<li key={shortId.generate()}>{citem}</li>)\r\n            });\r\n        } else if (typeof errDesc === 'string') {\r\n            altHtml = errDesc;\r\n        } else {\r\n            return;\r\n        }\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n            severity: \"error\",\r\n            desc: altHtml,\r\n        });\r\n    };\r\n\r\n    const handleDropDownValidationFailure = (errorDescription) => {\r\n        const failedMsg = errorDescription?.map((mItem) => (\r\n            <li key={shortId.generate()}>{mItem}</li>\r\n        ));\r\n\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n            severity: \"error\",\r\n            desc: failedMsg,\r\n        });\r\n    };\r\n\r\n    const handleCreate = async () => {\r\n        // await submitAffectedParts('auto');\r\n        if(instance === 'onPrem'){\r\n            if (await checkEnoviaValidation(responseData)) {\r\n                // const _payload = await prepareMRPayload();\r\n                // await mcoService.updateMRpartList(_payload);\r\n                await updateMCOState('Review');\r\n                return true;\r\n            }\r\n        } else {            \r\n            await updateMCOState(responseData.mcoPropeties.mcostate);\r\n        }\r\n        \r\n\r\n        return false;\r\n    };\r\n\r\n    const handleReview = async () => {\r\n        if(instance === 'onPrem'){\r\n            if (!(await checkEnoviaValidation(responseData))) {\r\n                return false;\r\n            }\r\n        }       \r\n\r\n        const currInstance = localStorage.getItem('instance');\r\n        const payloadData = { mcolists: [responseData?.mcoPropeties?.name], instance: currInstance };\r\n        try {\r\n            const resAffData = await mcoService.sendMCO(payloadData);\r\n            handleMCOServiceResponse(resAffData);\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const prepareMRPayload = async () => {\r\n        const affectedPartsData = await getAffectedPartsData();\r\n        return affectedPartsData?.map((eItem) => {\r\n            const partBusinessUnitValue = eItem?.organization;\r\n            const optionalYesTemplateList = templateMappingsInfo?.filter((acItem) => (\r\n                acItem.MappingType === 'orgallowedvalues' &&\r\n                acItem.BUID?.toLowerCase() === partBusinessUnitValue?.toLowerCase() &&\r\n                (acItem?.details?.Optional || \"\").toLowerCase() === \"y\"\r\n            )).map((eItem) => eItem?.details?.ALLOWABLE_ORG_TEMPLATES) || [];\r\n\r\n            const slOptionalNoValues = generalInfo?.mmiMBOM?.ComAssyOptionalNo?.includes(eItem?.materialType?.name) || false;\r\n\r\n            const prevPartMRMakeOrBuyValue = mrDetails?.previousSeqMR[eItem?.name]?.[0]?.makeOrBuy || null;\r\n\r\n            return {\r\n                PartObjectId: eItem?.id,\r\n                MCOId: responseData?.mcoPropeties?.id,\r\n                PartName: eItem?.name,\r\n                PartType: eItem?.type,\r\n                PlantName: responseData?.mcoPropeties?.plantName,\r\n                isMakeOrBuyChanged: (!!prevPartMRMakeOrBuyValue && prevPartMRMakeOrBuyValue !== eItem?.makeOrBuy),\r\n                newMakeOrBuyValue: eItem?.makeOrBuy,\r\n                template: eItem?.materialType?.name || \"Unassigned\",\r\n                slOptionalYesValue: optionalYesTemplateList?.includes(eItem?.materialType?.name),\r\n                slOptionalNoValues\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleMCOServiceResponse = (resAffData) => {\r\n        if (resAffData?.status === \"success\") {\r\n            setLifeCycleStep('Item');\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"info\",\r\n                desc: resAffData?.message,\r\n            });\r\n        } else {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"error\",\r\n                desc: resAffData?.message,\r\n            });\r\n        }\r\n    };\r\n\r\n    const fetchMCODetails = async () => {\r\n        try {\r\n            const resData = await mcoService.getMCOdetailById(params);\r\n            if (resData && Object.keys(resData).length) {\r\n                // life cycle state\r\n                setStepData(resData?.mcoPropeties?.mcostate);\r\n                // localStorage.setItem('systemName', resData?.source?.url);\r\n                const findInstanceValue = (generalInfo?.systemSettings?.[resData?.source?.url]) ? generalInfo?.systemSettings?.[resData?.source?.url] : null;\r\n                let data = {\r\n                    bu: resData?.mcoPropeties?.businessUnit,\r\n                    instance: findInstanceValue,\r\n                    systemName: resData?.source?.url\r\n                }\r\n                const currInstance = localStorage.getItem('instance');\r\n                if (!currInstance) {\r\n                    // localStorage.setItem('bussinessUnit', resData?.mcoPropeties?.businessUnit);\r\n                    localStorage.setItem('instance', findInstanceValue);\r\n                }\r\n                await dispatch(updateGlobalBUandInstance(data));\r\n\r\n                return {\r\n                    status: true,\r\n                    data: resData\r\n                }\r\n            } else {\r\n                dispatch(update_generalValues({\r\n                    isPageHavingIssue: true\r\n                }));\r\n\r\n                return {\r\n                    status: false,\r\n                    data: \"Something went wrong!\"\r\n                }\r\n            }\r\n        } catch (error) {\r\n            dispatch(update_generalValues({\r\n                isPageHavingIssue: true\r\n            }));\r\n\r\n            setIsLoading(false);\r\n            return {\r\n                status: false,\r\n                data: error\r\n            }\r\n        }\r\n    }\r\n\r\n    const generateTempalateOptions = async (resData) => {\r\n        let getTemplateOptions = {};\r\n        resData?.mcoaffectedItem?.forEach(async (affval) => {\r\n            let thisDropOptions = await getDropdownOptions(affval) || [];\r\n            getTemplateOptions[affval?.name] = thisDropOptions;\r\n        });\r\n\r\n        return getTemplateOptions;\r\n    }\r\n    const initialDefaultFunctions = async () => {\r\n        let resData = null;\r\n        try {\r\n            setIsLoading(true);\r\n            await dispatch(resetValues());\r\n            if(instance === 'onPrem')\r\n            await fetchRSMEAndRMEDetails();\r\n            resData = await fetchMCODetails();\r\n            if (resData?.status) {\r\n                await handleRefresh(false, resData?.data);\r\n                await collectMCOdetails(resData?.data);\r\n                await handleMRDetails(resData?.data, 'load');\r\n                await initialMRFunctions(resData?.data);\r\n                await prepareAffectedPartData();\r\n            }\r\n        } catch (error) {\r\n            await dispatch(update_generalValues({\r\n                isPageHavingIssue: true\r\n            }));\r\n            console.error(\"An error occurred:\", error);\r\n        } finally {\r\n            setTimeout(async () => {\r\n                setInitialLoad(true);\r\n                setIsLoading(false);\r\n            }, 1000); // Delay in milliseconds\r\n        }\r\n    }\r\n\r\n    const generateTemplateOptFunc = async (initialLoad) => {\r\n        const getTemplateOptions = await generateTempalateOptions(responseData);\r\n        if (initialLoad) {\r\n            await dispatch(update_generalValues({\r\n                eachTemplateOptions: getTemplateOptions\r\n            }));\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        generateTemplateOptFunc(initialLoad);\r\n    }, [initialLoad]);\r\n\r\n    const handleRefreshButtonFunc = async (refMcoData, mcoResponseData = {}) => {\r\n        setIsLoading(true);\r\n        try {\r\n            await handleRefresh(refMcoData, mcoResponseData);\r\n        } catch (error) {\r\n            return {\r\n                status: false,\r\n                data: error.message\r\n            };\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }\r\n    const handleRefresh = async (refMcoData, mcoResponseData = {}) => {\r\n        try {\r\n            if (params?.mco_id) {\r\n                const mcoLifeCyclepayload = [params?.mco_id];\r\n                const currentMCOLifeCycleDetails = await getCurrentMCOLifeCycleDetails(mcoLifeCyclepayload);\r\n\r\n                if (Object.keys(currentMCOLifeCycleDetails)?.length) {\r\n                    updateLifeCycleData(currentMCOLifeCycleDetails);\r\n\r\n                    if (refMcoData) {\r\n                        const resDataOfProperty = await mcoService.getMcoPropertyDetails(params?.mco_id);\r\n                        if (resDataOfProperty && Object.keys(resDataOfProperty).length) {\r\n                            const newMcoProperties = { ...mcoResponseData?.mcoPropeties, ...resDataOfProperty };\r\n                            await dispatch(updateMcoDetails({\r\n                                mcoPropeties: newMcoProperties,\r\n                            }));\r\n                            setStepData(resDataOfProperty?.mcostate);\r\n\r\n                            // const resData = await fetchMCODetails();\r\n                            // if (resData?.status) {\r\n                            // let locresData = resDataOfProperty;\r\n                            let getpayloadData = [{\r\n                                id: resDataOfProperty?.id, // property id\r\n                                instance: instance\r\n                            }];\r\n\r\n                            if (checkLifeCycleStep(currentMCOLifeCycleDetails, resDataOfProperty)) {\r\n                                setLifeCycleStep('Item');\r\n                            } else {\r\n                                setLifeCycleStep('Stop');\r\n                            }\r\n\r\n                            await mcoService.getattributesbyid(getpayloadData).then(async (attData) => {\r\n                                let currMcoDetails = {};\r\n                                if (attData?.data[0]) {\r\n                                    currMcoDetails = attData?.data[0];\r\n                                    await dispatch(update_generalValues({\r\n                                        currentMcoDetails: currMcoDetails,\r\n                                        affectedPartsData: currMcoDetails?.mcoaffectedItem,\r\n                                    }));\r\n                                    await dispatch(updateMcoDetails({\r\n                                        mcoPropeties: newMcoProperties,\r\n                                        mcoaffectedItem: currMcoDetails?.mcoaffectedItem,\r\n                                    }));\r\n                                    // for re-calculate the revisions\r\n                                    await prepareAffectedPartData();\r\n                                }\r\n                            })\r\n                        }\r\n                    } else {\r\n                        if (checkLifeCycleStep(currentMCOLifeCycleDetails, mcoResponseData?.mcoPropeties)) {\r\n                            setLifeCycleStep('Item');\r\n                        } else {\r\n                            setLifeCycleStep('Stop');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // find ERP status and update \r\n                await setupERPStatus(mcoResponseData);\r\n            }\r\n        } catch (error) {\r\n            handleErrorForThrows(error, 'handleRefresh');\r\n            throw error;\r\n        }\r\n    };\r\n\r\n    const getCurrentMCOLifeCycleDetails = async (mcoLifeCyclepayload) => {\r\n        try {\r\n            const getMcoDetails = await mcoService.getLifeCycleStatusByMCOName(mcoLifeCyclepayload);\r\n            return getMcoDetails?.data;\r\n        } catch (err) {\r\n            dispatch(update_generalValues({\r\n                isPageHavingIssue: true\r\n            }));\r\n            handleErrorForThrows(err);\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    const updateLifeCycleData = (currentMCOLifeCycleDetails) => {\r\n        dispatch(update_generalValues({\r\n            lifeCycleData: currentMCOLifeCycleDetails\r\n        }));\r\n    };\r\n\r\n    const checkLifeCycleStep = (currentMCOLifeCycleDetails, mcoResponseData) => {\r\n        const mcoId = params?.mco_id;\r\n        const mcoPromotedStatus = currentMCOLifeCycleDetails?.[mcoId]?.promoted;\r\n        const mcoReleaseStatus = currentMCOLifeCycleDetails?.[mcoId]?.releaseStatus;\r\n        const mcoState = mcoResponseData?.mcostate.toLowerCase();\r\n        return ([\"inprogress\", \"success\"]?.includes(mcoPromotedStatus) && mcoState === \"review\") || [\"failed\"]?.includes(mcoReleaseStatus);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Create a new script element\r\n        let script = null;\r\n        const scriptErrorHandling = (script) => {\r\n            return () => {\r\n                console.error(`Failed to load script: ${script.src}`);\r\n                // Handle the error, such as logging or displaying a message to the user\r\n            };\r\n        };\r\n        const loadScripts = async () => {\r\n            if (systemSetingsDetail?.length) {\r\n                let sitem = (systemSetingsDetail?.length) ? systemSetingsDetail[0] : null;\r\n                if (sitem) {\r\n                    if (typeof window?.ExternalClass === 'undefined') {\r\n                        script = document.createElement('script');\r\n                        // Set the source attribute to the JavaScript file you want to inject\r\n                        script.src = `${window.location.origin}/resources/js/${sitem.file1}.js`;\r\n\r\n                        // Use onload event to handle successful script loading\r\n                        // script.onload = () => {\r\n                        //     // console.log(`Script loaded: ${script.src}`);\r\n                        // };;\r\n\r\n                        // Use the error handler function, passing script as a parameter\r\n                        script.onerror = scriptErrorHandling(script);\r\n\r\n                        // Append the script element to the document body\r\n                        // document.body.appendChild(script);\r\n\r\n                        // Append the script element to the document body only if the Content-Type is JavaScript\r\n                        fetch(script.src).then(response => {\r\n                            if (!response.ok || !response.headers.get('content-type').includes('javascript')) {\r\n                                throw new Error('Not a JavaScript file');\r\n                            }\r\n                            return response.blob();\r\n                        }).then(() => {\r\n                            document.body.appendChild(script);\r\n                        }).catch(error => {\r\n                            console.error(`Failed to load script: ${script.src}`, error);\r\n                            // Handle the error, such as logging or displaying a message to the user\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        loadScripts();\r\n\r\n        // Clean up function to remove the script when the component unmounts\r\n        return () => {\r\n            if (systemSetingsDetail?.length) {\r\n                let sitem = (systemSetingsDetail?.length) ? systemSetingsDetail[0] : null;\r\n                if (sitem) {\r\n                    if (script && document.body.contains(script)) { // Check if script is a child of document body\r\n                        document.body.removeChild(script);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }, [systemSetingsDetail]);\r\n\r\n    useEffect(() => {\r\n        initialDefaultFunctions();\r\n    }, []);\r\n\r\n    const [importBulkUpdateFile, setImportBulkUpdateFile] = useState(false)\r\n    const bulkUploadPartandTemplate = () => {\r\n        setImportBulkUpdateFile(true)\r\n    }\r\n    const savePartAndOracleTempInRedux = async (data) => {\r\n        const bulkPartTemplates = data;\r\n        const collectInvalidTemplates = { success: [], error: [], warning: [] };\r\n        const affectedPartsData = await getAffectedPartsData();\r\n\r\n        // parts validation\r\n        let partNameExistList = [];\r\n        // let emptyPartsExist = false;\r\n        bulkPartTemplates?.forEach((btemp) => {\r\n            // if (!Object.keys(btemp).includes(\"Part Name\")) {\r\n            //     emptyPartsExist = true;\r\n            //     return;\r\n            // }\r\n            const getPartBulkTempValues = affectedPartsData?.find(affItem => {\r\n                return (Object.keys(btemp).includes(\"Part Name\") && btemp?.[\"Part Name\"]?.trim() === affItem?.name)\r\n            }) || {};\r\n            if (Object.keys(getPartBulkTempValues)?.length) {\r\n                partNameExistList.push(btemp?.[\"Part Name\"]);\r\n            } else {\r\n                collectInvalidTemplates.error.push(`ERROR: Part ${btemp?.[\"Part Name\"]} not found in MCO. Skipping`);\r\n            }\r\n        });\r\n\r\n        const new_mcoaffectedItem = affectedPartsData?.map((affval, affkey) => {\r\n            let newAffval = { ...affval };\r\n            let thisDropOptions = eachTemplateOptions?.[affval?.name] || [];\r\n            let getBulkTempValues = {};\r\n            if (!partNameExistList?.includes(affval?.name)) {\r\n                return affval;\r\n            }\r\n            if (bulkPartTemplates?.length) {\r\n                const getPartBulkTempValues = bulkPartTemplates?.find(btemp => {\r\n                    return (Object.keys(btemp).includes(\"Part Name\") && btemp[\"Part Name\"]?.trim() === affval?.name)\r\n                }) || {};\r\n                getBulkTempValues = materialData?.find((foption) => {\r\n                    return Object.keys(getPartBulkTempValues).includes(\"Oracle Template\") && getPartBulkTempValues[\"Oracle Template\"]?.trim() === foption.templateName;\r\n                }) || {};\r\n                if (Object.keys(getBulkTempValues)?.length) {\r\n                    const isExistsInOption = thisDropOptions?.some(eitem => eitem?.templateName === getBulkTempValues?.templateName);\r\n                    // like the template existing in the dropdown then only it will set the value or else will throw error\r\n                    if (isExistsInOption) {\r\n                        if (affval?.materialType?.name === getBulkTempValues?.templateName) {\r\n                            collectInvalidTemplates.warning.push(`WARNING: Same Oracle Template value already exists on MCO ${responseData?.mcoPropeties?.name} for ${affval?.name}.`);\r\n                        } else {\r\n                            // thisDropOptions.push(getBulkTempValues); // push the option to dropdown \r\n                            newAffval[\"materialType\"] = (getBulkTempValues) ? { name: getBulkTempValues?.templateName } : null;\r\n                            collectInvalidTemplates.success.push(`SUCCESS: ${getPartBulkTempValues[\"Oracle Template\"]} is updated for ${affval?.name} to ${responseData?.mcoPropeties?.plantName}`);\r\n                        }\r\n                    } else if (getPartBulkTempValues[\"Oracle Template\"]) {\r\n                        // incompatiblity checks need to be done\r\n                        // collectInvalidTemplates.error.push(`ERROR: ${getPartBulkTempValues[\"Oracle Template\"]} is not valid Oracle Template for Part ${affval?.name} to Plant ${responseData?.mcoPropeties?.plantName}`);\r\n                        collectInvalidTemplates.error.push(`ERROR: Part ${affval?.name} to plant ${responseData?.mcoPropeties?.plantName} is not valid due to Org Allowed, Part Type to Template, or EBOM disallowed or Missing.`);\r\n                    }\r\n                } else {\r\n                    collectInvalidTemplates.error.push(`ERROR: ${getPartBulkTempValues[\"Oracle Template\"]} is invalid template for ${affval?.name} to ${responseData?.mcoPropeties?.plantName}`);\r\n                }\r\n            } else {\r\n                collectInvalidTemplates.error.push(`Invalid file. Please check the file.`);\r\n            }\r\n\r\n            // Find makeORBuy value and assign it\r\n            if (Object.keys(getBulkTempValues)?.length) {\r\n                let partBusinessUnitValue = affval?.organization;\r\n                let buplantmapping_RDOPlants = templateMappingsInfo?.find((acitem) => {\r\n                    return acitem.MappingType === 'buplantmapping' && acitem.BUID?.toLowerCase() === partBusinessUnitValue?.toLowerCase() && acitem?.details?.Entity.toLowerCase() === \"bom or no bom\";\r\n                }) || {}\r\n                let hasMbomTemplateList = templateMappingsInfo?.filter((acitem) => {\r\n                    return acitem.MappingType === 'orgallowedvalues' && acitem.BUID?.toLowerCase() === partBusinessUnitValue?.toLowerCase() && acitem?.details?.Has_MBOM?.toLowerCase() === \"y\";\r\n                }).map((eitem) => {\r\n                    return eitem?.details?.ALLOWABLE_ORG_TEMPLATES;\r\n                }) || [];\r\n\r\n                let isExceptionalPlant = false;\r\n                let hasMbomTemplate = false;\r\n                if (Object.keys(hasMbomTemplateList).length) {\r\n                    if (hasMbomTemplateList?.includes(getBulkTempValues?.templateName)) {\r\n                        hasMbomTemplate = true;\r\n                    }\r\n                }\r\n                if (Object.keys(buplantmapping_RDOPlants).length) {\r\n                    const plantValue = buplantmapping_RDOPlants?.details?.PLANT;\r\n                    const getPlantList = Object.keys(plantValue).filter((ekeys) => {\r\n                        return plantValue[ekeys]?.toLowerCase() === \"no bom\"\r\n                    });\r\n                    if (getPlantList?.includes(responseData?.mcoPropeties?.plantName)) {\r\n                        isExceptionalPlant = true;\r\n                    }\r\n                };\r\n                if (hasMbomTemplate && !isExceptionalPlant) {\r\n                    newAffval['makeOrBuy'] = \"make\";\r\n                    newAffval['isMakeOrBuyValueChange'] = true;\r\n                } else {\r\n                    newAffval['makeOrBuy'] = \"buy\";\r\n                    newAffval['isMakeOrBuyValueChange'] = true;\r\n                }\r\n            }\r\n\r\n            return newAffval;\r\n        });\r\n\r\n        await dispatch(updateMcoDetails({\r\n            mcoaffectedItem: new_mcoaffectedItem,\r\n        }));\r\n        await dispatch(update_generalValues({\r\n            affectedPartsData: new_mcoaffectedItem,\r\n            bulkPartTemplates: data,\r\n            isMaterialFormEdited: true\r\n        }));\r\n\r\n        // if (emptyPartsExist) {\r\n        //     collectInvalidTemplates.error.push(`Some of the \"Part Name\" cells are empty. Please verify the file.`);\r\n        // }\r\n        return collectInvalidTemplates;\r\n    }\r\n    const handleExportMCOData = async () => {\r\n        const propertiesData = responseData?.mcoPropeties; // Extract PropertiesForm data\r\n        const affectedPartsData = responseData?.mcoaffectedItem; // Extract AffectedPartsTable data\r\n        exportMCOData(propertiesData, affectedPartsData).then((response) => {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n        });\r\n    };\r\n\r\n    const isFirstRender = useRef(true);\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            isFirstRender.current = false; // Set to false after the first render\r\n            return; // Skip the first run\r\n        }\r\n\r\n        handleRefreshButtonFunc(true, responseData);\r\n    }, [showTrackerBox]);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                (!isPageHavingIssue) ? (\r\n                    <>\r\n                        <Box className=\"breadcrumb\">\r\n                            <Grid\r\n                                container\r\n                                spacing={1}\r\n                                alignItems=\"center\"\r\n                            >\r\n                                <Grid item md={6} sm={12} xs={12}>\r\n                                    <Breadcrumb routeSegments={[{ name: responseData?.mcoPropeties?.name ? `${responseData.mcoPropeties.name} - MCO Details` : \"MCO Details\" }]} /></Grid>\r\n                                <Grid item md={6} sm={12} xs={12} className=\"textAlignRight\">\r\n                                    <TrackerHistoryLinks responseData={responseData} setShowTrackerBox={setShowTrackerBox} setShowHistoryBox={setShowHistoryBox} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                        <SimpleCard>\r\n                            <Grid container spacing={3} alignItems=\"center\" className=\"elementPostionRelative\">\r\n                                <RefreshButtons handleRefreshButtonFunc={handleRefreshButtonFunc} responseData={responseData} />\r\n                                {instance === \"SaaS\" ? (\r\n                                    <SaaSLifeCycleStepperComponent\r\n                                        selectedRoute={selectedRoute}\r\n                                    />\r\n                                    ) : (\r\n                                    <LifeCycleStepperComponent\r\n                                        stepData={stepData}\r\n                                        lifeCycleStep={lifeCycleStep}\r\n                                        handleLifeCycle={async (data) => {\r\n                                        if (isPropertyFormEdited) {\r\n                                            setOpenAlert(true);\r\n                                            setOpenDesc({\r\n                                            severity: \"error\",\r\n                                            desc: \"There are unsaved changes in the properties. Kindly save your edits before proceeding.\",\r\n                                            });\r\n                                            return;\r\n                                        }\r\n                                        if (await getIsMaterialFormEdited()) {\r\n                                            setOpenAlert(true);\r\n                                            setOpenDesc({\r\n                                            severity: \"error\",\r\n                                            desc: \"Saving changes is required or Reload to revert back to Prior Template values\",\r\n                                            });\r\n                                            return;\r\n                                        }\r\n                                        handleLifeCycle(data);\r\n                                        }}\r\n                                        demoteState={updateMCOState}\r\n                                    />\r\n                                    )}\r\n\r\n                            </Grid>\r\n                            <Box sx={{ width: '100%', position: 'relative' }}>\r\n                                {\r\n                                    ([1].includes(tapvalue)) ? (\r\n                                        <>\r\n                                            <SaveButtons\r\n                                                tapvalue={tapvalue}\r\n                                                stepData={stepData}\r\n                                                bulkUploadPartandTemplate={bulkUploadPartandTemplate}\r\n                                                submitAffectedParts={() => submitAffectedParts('form')}\r\n                                                exportMCOData={handleExportMCOData}\r\n                                            />\r\n                                        </>\r\n                                    ) : (<></>)\r\n                                }\r\n                                {\r\n                                    ([0].includes(tapvalue)) ? (\r\n                                        <>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                onClick={() => handleExportMCOData()}\r\n                                                className=\"exportMcoDataBtn\"\r\n                                            >\r\n                                                Export\r\n                                            </Button>\r\n                                            <Button variant=\"contained\"\r\n                                                onClick={() => {\r\n                                                    submitPropertiesForm('form');\r\n                                                }}\r\n                                                className=\"saveMcoDataBtn\"\r\n                                                disabled={([\"Release\", \"Implemented\"].includes(stepData) || (!isPropertyFormEdited))}\r\n                                            >\r\n                                                Save\r\n                                            </Button>\r\n                                        </>\r\n                                    ) : (<></>)\r\n                                }\r\n                                <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                                    <Tabs value={tapvalue} onChange={handleChange} aria-label=\"basic tabs example\">\r\n                                        <Tab label=\"Properties\" {...a11yProps(0)} />\r\n                                        <Tab label=\"Parts\" {...a11yProps(1)} />\r\n                                    </Tabs>\r\n                                </Box>\r\n                                <TabPanel value={tapvalue} index={0}>\r\n                                    <PropertiesForm  selectedRoute={selectedRoute} plantType={plantType}  tapvalue={tapvalue} stepData={stepData} submitPropertiesForm={submitPropertiesForm} />\r\n                                </TabPanel>\r\n                                <TabPanel value={tapvalue} index={1}>\r\n                                    <AffectedPartsTable\r\n                                        // updateMaterialValues={updateMaterialValues}\r\n                                        handleIconClick={handleIconClick}\r\n                                    />\r\n                                </TabPanel>\r\n                            </Box>\r\n                            <BulkUploadPartAndTemplatePupup\r\n                                importBulkUpdateFile={importBulkUpdateFile}\r\n                                setImportBulkUpdateFile={setImportBulkUpdateFile}\r\n                                savePartAndOracleTempInRedux={savePartAndOracleTempInRedux}\r\n                            />\r\n                        </SimpleCard>\r\n                    </>\r\n                ) : (\r\n                    <SomethingWrong />\r\n                )\r\n            }\r\n\r\n            {/* MODAL BOX FOR TRACKER*/}\r\n            <Dialog\r\n                open={showTrackerBox}\r\n                onClose={async () => {\r\n                    setShowTrackerBox(false)\r\n                }}\r\n                scroll={'paper'}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n                maxWidth={'md'}\r\n                fullWidth={true}\r\n                className=\"zIndex999\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">\r\n                    Tracker Details\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={async () => {\r\n                            await handleRefreshButtonFunc(true, responseData)\r\n                        }}\r\n                        disabled={((!lifeCycleData || !Object.keys(lifeCycleData)?.length) || responseData?.mcoPropeties?.mcostate?.toLowerCase() === \"create\")}\r\n                        className=\"floatRight\"\r\n                    >\r\n                        Refresh\r\n                    </Button>\r\n                </DialogTitle>\r\n                <DialogContent dividers={true}>\r\n                    <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n                        <TrackerProgressBar fromPage={\"mcodetails\"} mcoName={params?.mco_id} />\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={async () => {\r\n                        setShowTrackerBox(false);\r\n                    }}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* MODAL BOX FOR HISTORY*/}\r\n            <HistoryDialogBox showHistoryBox={showHistoryBox} setShowHistoryBox={setShowHistoryBox} />\r\n\r\n            {\r\n                (openDesc) ? (\r\n                    <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                ) : (<></>)\r\n            }\r\n            {\r\n                isLoading ? (\r\n                    <div className=\"textAlignCenter\">\r\n                        <Loader show={isLoading} />\r\n                    </div>\r\n                ) : <></>\r\n            }\r\n        </Container >\r\n    );\r\n};\r\nTabPanel.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    other: PropTypes.object,\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default Mcodetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Stepper, Step, StepLabel, StepContent, StepConnector, StepIcon } from '@mui/material';\r\nimport {\r\n    Box,\r\n    Paper,\r\n    Typography,\r\n    styled,\r\n} from \"@mui/material\";\r\nimport CancelIcon from '@mui/icons-material/Cancel'; // This is the 'x' icon\r\nimport { useSelector } from 'react-redux';\r\nimport './mcoStyle.css';\r\nimport { trimmingDisplayContent } from \"app/utils/mcoUtils/utilities\";\r\n\r\nlet stepsLists = [\r\n    {\r\n        type: 'item',\r\n        label: 'Item details send to ERP',\r\n        description: \"\",\r\n    },\r\n    {\r\n        type: 'bos',\r\n        label: 'Bill of specification details send to ERP',\r\n        description: \"\",\r\n    },\r\n    {\r\n        type: 'bom',\r\n        label: 'ERP Change Order Creation',\r\n        description: \"\",\r\n    },\r\n    {\r\n        type: 'release',\r\n        label: 'Update Enovia MCO Lifecycle to Release',\r\n        description: \"MCO release is in progress. This process will take some time, so please refresh after a while.\",\r\n    },\r\n];\r\n\r\n// Customizing the StepIcon to display an empty circle with a border\r\nconst CustomStepIcon = styled(StepIcon)(({ theme, completed }) => ({\r\n    width: 25, // Adjust size of the icon\r\n    height: 25, // Adjust size of the icon\r\n    border: `2px solid ${completed ? theme.palette.primary.main : theme.palette.grey[500]}`, // Border color based on completion status\r\n    borderRadius: '50%', // Make it a circle\r\n}));\r\n\r\n// Customizing the StepConnector to change its color\r\nconst StyledStepConnector = styled(StepConnector, { shouldForwardProp: (prop) => prop !== 'completed' })(({ theme, completed }) => ({\r\n    // Styling for incomplete steps\r\n    '& .MuiStepConnector-line': {\r\n        borderColor: theme.palette.grey[500], // Default color for incomplete steps\r\n    },\r\n    // Styling for completed steps\r\n    ...(completed && {\r\n        '& .MuiStepConnector-line': {\r\n            borderColor: theme.palette.primary.main, // Change this to the desired color for completed steps\r\n        },\r\n    }),\r\n}));\r\n\r\nexport default function VerticalLinearStepper({ activeStepValue, currentMCOTrackerdetails = {} }) {\r\n    const { responseData } = useSelector((state) => state.mcoDetails);\r\n    const [activeStep, setActiveStep] = useState(-1);\r\n    const [activeStatus, setActiveStatus] = useState(\"inprogress\");\r\n    const [steppersLists, setSteppersLists] = useState(stepsLists);\r\n    const completedSteps = [0];\r\n\r\n    useEffect(() => {\r\n        // console.log(stepsLists, \"======stepsLists\");\r\n        // console.log(activeStepValue, \"======activeStepValue\");\r\n        // console.log(currentMCOTrackerdetails, \"======currentMCOTrackerdetails\");\r\n\r\n        if (Object.keys(activeStepValue || {}).length) {\r\n            const mcoStateVal = responseData?.mcoPropeties?.mcostate?.toLowerCase();\r\n            // const newstepsLists = stepsLists?.filter(sfItem => {\r\n            //     return !activeStepValue?.skippedstage?.includes(sfItem?.type)\r\n            // }).map(citem => {\r\n            //     if (![\"release\"].includes(citem?.type)) {\r\n            //         citem.description = currentMCOTrackerdetails[`${citem?.type}Message`];\r\n            //     }\r\n            //     if ([\"release\"].includes(mcoStateVal)) {\r\n            //         citem.description = \"\";\r\n            //     }\r\n            //     return citem;\r\n            // });\r\n\r\n            const newstepsLists = stepsLists?.map(citem => {\r\n                if (activeStepValue?.skippedstage?.includes(citem?.type) && !citem?.label?.includes('Skipped')) {\r\n                    citem.label = `${citem.label} - Skipped not required`;\r\n                }\r\n                if (![\"release\"]?.includes(citem?.type)) {\r\n                    citem.description = currentMCOTrackerdetails[`${citem?.type}Message`];\r\n                }\r\n                if ([\"failed\"]?.includes(currentMCOTrackerdetails[`${citem?.type}Status`])) {\r\n                    citem.description = currentMCOTrackerdetails[`${citem?.type}Message`];\r\n                } else if ([\"release\"]?.includes(mcoStateVal)) {\r\n                    citem.description = \"\";\r\n                }\r\n                return citem;\r\n            });\r\n            setSteppersLists(newstepsLists);\r\n            setActiveStep(activeStepValue?.stepperValue);\r\n            setActiveStatus(activeStepValue?.currentStatus?.status);\r\n\r\n            // if (![\"release\"]?.includes(mcoStateVal) && [\"failed\"]?.includes(currentMCOTrackerdetails[`releaseStatus`])) {\r\n            //     setActiveStatus(\"failed\");\r\n            // } else {\r\n            //     setActiveStatus(activeStepValue?.currentStatus?.status);\r\n            // }\r\n        }\r\n    }, [activeStepValue]);\r\n\r\n    return (\r\n        <Box sx={{ maxWidth: 400 }}>\r\n            <Stepper activeStep={activeStep}\r\n                orientation=\"vertical\"\r\n                className='stepperContainer'\r\n            >\r\n                {steppersLists.map((step, index) => (\r\n                    <Step\r\n                        key={step.label}\r\n                    >\r\n                        <StepLabel\r\n                            // optional={\r\n                            //     index === 2 ? (\r\n                            //         <Typography variant=\"caption\">Last step</Typography>\r\n                            //     ) : null\r\n                            // }\r\n                            className={`stepperSpace ${activeStatus} ${(activeStepValue?.skippedstage?.includes(step?.type) ? \"skippedStep\" : \"\")}`}\r\n                            StepIconComponent={(props) => {\r\n                                const { active } = props;\r\n                                // console.log(props, '=====');\r\n                                // console.log(step, '=====');\r\n                                // console.log(activeStepValue?.skippedstage, '=====3');\r\n                                if (active && [\"failed\"]?.includes(activeStatus)) {\r\n                                    return <CancelIcon sx={{ color: 'red' }} /> // Customize color if needed\r\n                                } else {\r\n                                    return <CustomStepIcon {...props} />\r\n                                }\r\n                            }}\r\n                        >\r\n                            {step.label}\r\n                        </StepLabel>\r\n                        <StepContent className={`stepperContentSpace ${activeStatus}`}>\r\n                            <Typography>{trimmingDisplayContent(step.description)}</Typography>\r\n                        </StepContent>\r\n\r\n                        {/* Pass step information to CustomStepConnector */}\r\n                        <StyledStepConnector className={`${activeStatus}`} completed={completedSteps?.includes(index)} />\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            {\r\n                activeStep === steppersLists.length && (\r\n                    <Paper square elevation={0} sx={{ p: 3 }} style={{ textAlign: \"left\" }}>\r\n                        <Typography>All steps were successfully completed!</Typography>\r\n                    </Paper>\r\n                )\r\n            }\r\n        </Box >\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport VerticalLinearStepper from 'app/components/McoPages/TimelineListView';\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n    Box,\r\n    Grid,\r\n    styled,\r\n    Tooltip\r\n} from \"@mui/material\";\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'app/components/Loader';\r\nimport './mcoStyles.css';\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n    margin: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n    \"& .breadcrumb\": {\r\n        marginBottom: \"30px\",\r\n        [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n    },\r\n}));\r\n\r\nconst capitalize = s => s && s[0].toUpperCase() + s.slice(1)\r\n\r\nfunction FormRow(props) {\r\n    const labelArr = {\r\n        rme: \"Responsible Manufacturing Engineer\",\r\n        rsme: \"Responsible Senior Manufacturing Engineer\",\r\n        mcostate: \"State\",\r\n        responseFromErp: \"Export Status\",\r\n        plantName: \"Plant\",\r\n    };\r\n\r\n    if (props.label === 'description') {\r\n        return (\r\n            <>\r\n                <Grid item md={6} sm={6} xs={6} key={`${props.label}-label`}>\r\n                    Description\r\n                    <span style={{ float: \"right\" }}>:</span>\r\n                </Grid>\r\n                <Grid item md={6} sm={6} xs={6} key={props.label}>\r\n                    <Tooltip\r\n                        title={\r\n                            <div style={{ maxHeight: '300px', overflowY: 'scroll' }}>\r\n                                {props.value}\r\n                            </div>\r\n                        }\r\n                        arrow\r\n                        placement=\"top\"\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                textOverflow: 'ellipsis',\r\n                                overflow: 'hidden',\r\n                                whiteSpace: 'nowrap',\r\n                                maxWidth: '300px', // Adjust the max width as needed\r\n                                cursor: 'pointer'\r\n                            }}\r\n                        >\r\n                            {props.value.length > 50 ? `${props.value.substring(0, 50)}...` : props.value}\r\n                         </div>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid item md={6} sm={6} xs={6} key={props.label}>\r\n                {Object.keys(labelArr).includes(props.label)\r\n                    ? capitalize(labelArr[props.label])\r\n                    : capitalize(props.label)}\r\n                <span style={{ float: \"right\" }}>:</span>\r\n            </Grid >\r\n            <Grid item md={6} sm={6} xs={6}>\r\n                {(props.value !== \"\") ? props.value : \"-\"}\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TrackerFormView = ({ isLoading, mcodetails, activeStep, currentMCOTrackerdetails }) => {\r\n    if (isLoading) {\r\n        return true;\r\n    }\r\n    return (\r\n        (mcodetails) ? (\r\n            <Grid\r\n                container\r\n                spacing={1}\r\n                alignItems=\"center\"\r\n            >\r\n                <Grid item md={6} sm={12} xs={12}>\r\n                    <Grid\r\n                        container\r\n                        spacing={1}\r\n                        alignItems=\"center\"\r\n                        key=\"samplekeys\"\r\n                    >\r\n                        <Grid container spacing={2} alignItems=\"start\" className=\"caDetailsContainer\" key=\"samplekeys2\">\r\n                            {\r\n                                (mcodetails && Object.keys(mcodetails?.mcoPropeties)?.length) ? (\r\n                                    Object.keys(mcodetails?.mcoPropeties)?.map((eitem) => {\r\n                                        if (\r\n                                            [\r\n                                                \"id\",\r\n                                                \"type\",\r\n                                                \"physicalid\",\r\n                                                \"businessUnit\",\r\n                                                \"organizationId\",\r\n                                                \"responseFromErp\",\r\n                                                \"rmeEmailAddress\",\r\n                                                \"rsmeEmailAddress\",\r\n                                                \"errorMsg\",\r\n                                            ].includes(eitem)\r\n                                        ) {\r\n                                            return false;\r\n                                        }\r\n                                        return (\r\n                                            <FormRow key={eitem} label={eitem} value={mcodetails?.mcoPropeties[eitem]} />\r\n                                        )\r\n                                    })\r\n                                ) : (\r\n                                    <></>\r\n                                )\r\n                            }\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item md={6} sm={12} xs={12} style={{ textAlign: \"right\" }}>\r\n                    <VerticalLinearStepper activeStepValue={activeStep} currentMCOTrackerdetails={currentMCOTrackerdetails} />\r\n                </Grid>\r\n            </Grid>\r\n        ) : (\r\n            <div style={{ textAlign: \"center\", paddingBottom: \"10px\" }}>\r\n                Result not found!\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nconst TrackerProgressBar = (props) => {\r\n    const { lifeCycleData, responseData } = useSelector((state) => ({\r\n        lifeCycleData: state.mcoDetails.lifeCycleData,\r\n        responseData: state.mcoDetails.responseData,\r\n    }), shallowEqual);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [mcodetails, setMcodetails] = useState(null);\r\n    const [currentMCOTrackerdetails, setCurrentMCOTrackerdetails] = useState(null);\r\n    const [activeStep, setActiveStep] = useState({});\r\n\r\n    const prepareLifeCycleData = (resultData, currentmcoName) => {\r\n        setIsLoading(true);\r\n        setMcodetails(responseData);\r\n        const mcoStateVal = responseData?.mcoPropeties?.mcostate?.toLowerCase();\r\n\r\n        if (Object.keys(resultData).length === 0) {\r\n            setIsLoading(false);\r\n            return;\r\n        }\r\n\r\n        const currectMcoLifeCycleData = resultData[currentmcoName] || {};\r\n        // if (Object.keys(currectMcoLifeCycleData).length === 0) {\r\n        //     setIsLoading(false);\r\n        //     return;\r\n        // }\r\n\r\n        let findStepper = 0;\r\n        let findStatus = {};\r\n        let skipCustomStage = [];\r\n\r\n        if (!Object.keys(currectMcoLifeCycleData)?.length && [\"release\"].includes(mcoStateVal)) {\r\n            findStepper = 4;\r\n            findStatus = { type: 'release', status: 'success' };\r\n            skipCustomStage = [\"item\", \"bos\", \"bom\"];\r\n        } else if (Object.keys(currectMcoLifeCycleData)?.length) {\r\n            const isSkipped = false;\r\n            if (currectMcoLifeCycleData[\"promoted\"] === \"skipped\" || isSkipped) {\r\n                findStepper = 4;\r\n                findStatus = { type: 'release', status: 'success' };\r\n                skipCustomStage = [\"item\", \"bos\", \"bom\"];\r\n            } else {\r\n                for (const sitem of Object.keys(currectMcoLifeCycleData)) {\r\n                    if (Object.keys(findStatus).length && findStatus.status.includes(\"failed\")) continue;\r\n\r\n                    const status = currectMcoLifeCycleData[sitem];\r\n\r\n                    if (sitem === \"itemStatus\" && status === \"skipped\") {\r\n                        findStepper += 1;\r\n                        skipCustomStage.push(\"item\");\r\n                        continue;\r\n                    }\r\n                    if (sitem === \"bosStatus\" && status === \"skipped\") {\r\n                        findStepper += 1;\r\n                        skipCustomStage.push(\"bos\");\r\n                        continue;\r\n                    }\r\n                    if (sitem === \"bomStatus\" && status === \"skipped\") {\r\n                        findStepper += 1;\r\n                        skipCustomStage.push(\"bom\");\r\n                        continue;\r\n                    }\r\n\r\n                    if ([\"itemStatus\", \"bosStatus\", \"bomStatus\", \"releaseStatus\"].includes(sitem) && [\"inprogress\", \"success\", \"failed\"].includes(status)) {\r\n                        if ([\"success\"].includes(status)) {\r\n                            findStepper += 1;\r\n                            // if (sitem === \"bomStatus\" && [\"release\", \"implemented\"].includes(mcoStateVal)) {\r\n                            //     findStepper += 1;\r\n                            // }\r\n                        }\r\n                        findStatus = { type: sitem.replace(\"Status\", \"\"), status };\r\n                    }\r\n                }\r\n\r\n                // Checks applied for handling old data \r\n                if (!Object.keys(currectMcoLifeCycleData || {})?.includes('releaseStatus')) {\r\n                    if (findStepper == 3 && [\"release\", \"implemented\"].includes(mcoStateVal)) {\r\n                        findStepper += 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        setActiveStep({ stepperValue: findStepper, currentStatus: findStatus, skippedstage: skipCustomStage });\r\n        setCurrentMCOTrackerdetails(currectMcoLifeCycleData); // Adding this line to set current MCO tracker details\r\n        setIsLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentmcoName = props?.mcoName;\r\n        prepareLifeCycleData(lifeCycleData, currentmcoName);\r\n    }, [lifeCycleData, responseData]);\r\n\r\n    return (\r\n        <Container>\r\n            {\r\n                (!props?.fromPage) ? (\r\n                    <>\r\n                        <Box className=\"breadcrumb\">\r\n                            <Breadcrumb routeSegments={[{ name: \"MCO Status Tracker\" }]} />\r\n                        </Box>\r\n                        <SimpleCard>\r\n                            <TrackerFormView isLoading={isLoading} mcodetails={mcodetails} activeStep={activeStep} currentMCOTrackerdetails={currentMCOTrackerdetails} />\r\n                        </SimpleCard>\r\n                    </>\r\n                ) : (\r\n                    <TrackerFormView isLoading={isLoading} mcodetails={mcodetails} activeStep={activeStep} currentMCOTrackerdetails={currentMCOTrackerdetails} />\r\n                )\r\n            }\r\n            {isLoading ? (\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <Loader show={isLoading} />\r\n                </div>\r\n            ) : <></>}\r\n        </Container>\r\n    );\r\n};\r\n\r\nFormRow.propTypes = {\r\n    label: PropTypes.node.isRequired,\r\n    value: PropTypes.node.isRequired\r\n};\r\nTrackerProgressBar.propTypes = {\r\n    mcoName: PropTypes.node.isRequired,\r\n    fromPage: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default TrackerProgressBar;"],"names":["props","setOpenView","setView","onChange","value","other","_jsxs","Box","sx","display","flexDirection","alignItems","children","_jsx","DateTimePickerToolbar","Button","onClick","handleTodayButtonClick","today","dayjs","variant","size","style","margin","position","bottom","left","_ref","title","_Fragment","Tooltip","justifyContent","top","width","zIndex","AutorenewIcon","fontSize","color","animation","height","_props$status","colorCode","status","toLowerCase","s","toUpperCase","slice","backgroundColor","borderRadius","useStyles","makeStyles","spanRed","forwardRef","ref","selectedRowData","selectedRowFormdata","formData","responseData","masterData","selectedRowIndex","useSelector","state","_state$mcoDetails","_state$mcoDetails2","_state$mcoDetails3","_state$mcoDetails4","_state$mcoDetails5","mcoDetails","shallowEqual","formValues","setFormValues","useState","yubformData","setYubformData","classes","useEffect","yupObj","formInitaialValues","Object","keys","length","forEach","item","thisFieldName","name","includes","attributeGroupData","mandatory","Yup","required","defaultValues","partsSchema","shape","Formik","initialValues","onSubmit","e","saveMaterialDetails","enableReinitialize","validationSchema","validateOnChange","validateOnBlur","values","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setSubmitting","setFieldValue","validateForm","isValid","submitForm","setTimeout","async","_masterData$mcoaffect","_masterData$mcoaffect2","collectMasterFields","currentFormFields","map","ffitem","ffkey","_masterData$mcoaffect3","_masterData$mcoaffect4","_selectedRowData$mate","_selectedRowData$mate2","mcoaffectedItem","materialType","attributeMap","thisItem","_masterData$mcoaffect5","_masterData$mcoaffect6","push","_masterData$mcoaffect7","_masterData$mcoaffect8","filter","fkey","updateCurrFieldValue","Array","isArray","_selectedRowData$mate3","_selectedRowData$mate4","useImperativeHandle","callsubmitForm","_values$thisInputName","thisInputName","isMaster","isdisabled","plantName","master","material_master","currentFieldValue","className","Grid","container","spacing","md","sm","xs","inputType","TextField","fullWidth","id","target","type","disabled","marginBottom","Select","displayEmpty","renderValue","selected","MenuItem","vitem","shortId","vcinx","FormControlLabel","label","labelPlacement","control","Checkbox","RadioGroup","row","mb","vrinx","Radio","textAlign","MaterialAttributeDialogBox","_responseData$mcoaffe","attributeformData","showMaterialForm","dispatch","useDispatch","childCompRef","useRef","Dialog","open","onClose","update_generalValues","scroll","maxWidth","DialogTitle","DialogContent","dividers","DialogContentText","tabIndex","MaterialForm","affectedPartsData","_getStorevalue$mcoDet","_getStorevalue$mcoDet2","getStorevalue","Store","getState","getAffectedPartsData","findSaveIndex","findIndex","material","materialIndex","formvalue","isMaterialFormEdited","DialogActions","current","mcostate","exportToERPDropDownOpt","itemStatusDropDownOpt","makeOrBuyDropDownOpt","emptyChecks","columns","dataKey","widthValue","column","MemoizedTableRow","React","_responseData$mcoProp","_findMaterialDetails","_affval$attributeGrou","_ErpStatus","_ErpStatus$","_Object$keys","_Object$keys2","_thisDropOptions","_Object$keys3","_Object$keys4","_Object$keys5","_mrDetails$activeMR","_mrDetails$activeMR$a","_Object$keys6","_mrDetails$activeMR2","_mrDetails$previousSe","_thisDropOptions2","_Object$keys7","_Object$keys8","_Object$keys10","_affval$makeOrBuy","_affval$itemStatus","_thisDropOptions4","_Object$keys14","_responseData$mcoProp2","_responseData$mcoProp3","_findMaterialDetails4","_thisDropOptions6","_thisDropOptions7","_responseData$mcoProp4","rowIndex","dropdownOpts","handleIconClick","materialData","mrDetails","eachTemplateOptions","parentMCODetails","_state$mcoDetails6","_state$mcoDetails7","affval","setAffval","findMaterialDetails","findDropdownValue","mcoPropeties","desc","ERPItemTypeTemplate","ErpStatus","itemERPStatus","efitem","Item_Name","labelValue","findLabelForTooltip","thisDropOptions","templExistOrNot","find","mtemp","prevSelectedTemplateObj","foption","_findMaterialDetails2","Name","templateName","activeMRData","activeMR","hasOwnProperty","previousSeqMRData","previousSeqMR","activeMRtemplExistOrNot","_findMaterialDetails3","activeTemplateObj","template","isTemplateValueChange","defaultOptValue","_Object$keys9","previousSeqMRTemplateObj","findex","_thisDropOptions3","_Object$keys11","_Object$keys12","_Object$keys13","isRevisionTempExist","fcheckItem","getMakeBuyValue","makeOrBuy","getExportToERPValue","exportToERP","getItemStatusValue","itemStatus","_activeMRData$ERPStat","isMakeOrBuyValueChange","isItemStatusValueChange","ERPStatus","uniqueArray","index","self","indexOf","isHavingParentTemplate","_parentMCODetails$mco","_findPartDetails$mate","_findPartDetails$mate2","findPartDetails","eitem","mcoProperties","_thisRowData","fetchData","TableCell","oldRevision","paddingLeft","newRevision","displayType","minWidth","description","materialTypeTemplate","handleMaterialTypeSelect","_thisDropOptions5","selectedOption","option","listKey","makeBuy","makeOrBuyselectedOption","exportStatus","StatusColors","exportToERP_selectedOption","currentSequence","itemStatus_selectedOption","organizationId","actions","role","prevProps","nextProps","AffectedPartsTable","_state$mcoDetails8","setDropdownOpts","sortConfig","setSortConfig","key","direction","sortedData","setSortedData","tableRef","instance","localStorage","getItem","VirtuosoTableComponents","Scroller","TableContainer","component","Paper","Table","borderCollapse","TableHead","TableRow","_ref2","_item","TableBody","_window","window","ExternalClass","externalClass","affectedItemsInfo","optsList","getDropdownOptions","console","error","loadExternalFunction","sortedDataNew","sortAffData","exportAffectedPartsData","TableVirtuoso","data","components","fixedHeaderContent","fcolumns","_responseData$mcoProp5","_responseData$mcoProp6","_responseData$mcoProp7","columnLabel","styleObj","cursor","handleSort","prevConfig","itemContent","_index","actionTextVar","LifeCycleStepperComponent","_lifeCycleData$respon","_lifeCycleData$respon2","lifeCycleData","stepData","lifeCycleStep","activeStep","setactiveStep","steps","Stack","promoted","RotatingInProgressIcon","Stepper","alternativeLabel","marginTop","sindex","Step","padding","background","boxShadow","borderStyle","borderTop","borderBottom","borderLeft","borderRight","Link","underline","handleLifeCycle","demoteState","capitalize","labelArr","startDate","rme","rsme","responseFromErp","businessUnit","ECOExportToERP","plantType","selectedRoute","RSMEList","RMEList","currentMcoDetails","isPropertyFormEdited","errorFields","setErrorFields","openAlert","setOpenAlert","openDesc","setOpenDesc","action","arguments","undefined","_values$rme","_values$rsme","startdate","currentDate","Date","setHours","parts","split","altHtml","citem","severity","_responseData$mcoProp8","_responseData$mcoProp9","_responseData$mcoProp10","_filterValue","_currentMcoDetails$ER","_responseData$mcoProp11","_currentMcoDetails$ER2","_currentMcoDetails$ER3","ERPstatus","filterValue","rmeFilter","updateMcoDetails","disableAllFields","startDateDisplayValue","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","minDate","views","newValue","getTime","$d","format","slots","toolbar","CustomDateTimePickerToolbar","Autocomplete","autoHighlight","onInputChange","newInputValue","options","renderInput","params","renderOption","mr","flexShrink","ERPErrorDescription","trimmingDisplayContent","CustomAlertBox","WrappedComponent","bulkUploadPartandTemplate","right","exportMCOData","submitAffectedParts","ScrollableTable","historyList","setHistoryList","isLoading","setIsLoading","isHavingErrors","setIsHavingErrors","mcoService","MCOService","useParams","getMcoHistorybyid","mco_id","then","_histData$data","log","histData","catch","err","fetchHistoryList","overflow","maxHeight","stickyHeader","align","code","Loader","show","BootstrapDialog","styled","theme","HistoryDialogBox","showHistoryBox","setShowHistoryBox","setOpen","handleClose","event","reason","m","p","IconButton","palette","grey","CloseIcon","HistoryTable","autoFocus","handleRefreshButtonFunc","location","reload","setShowTrackerBox","useGetDropdownOption","getTemplateMappingsFunc","getTemplateMappingsFuncForTypeAndBU","useGetTemplateMappings","templateMappingsInfo","ORGAllowedTemplateMappings","mapType","item1","BUID","MappingType","templateList","templates","findCustomMCOTemplates","getMapTempList","getMappedTemplatesList","getMVOAllowedChangesDetails","_getMappedTemplatesLi","_getMappedTemplatesLi2","_getMappedTemplatesLi3","acitem","_acitem$details","details","MVO_TEMPLATE_FROM","MVO_TEMPLATES_TO","tItem","MVO_TEMPLATE_TO","getmvoTemplateCompatibility","_getMappedTemplatesLi4","_getMappedTemplatesLi5","_getMappedTemplatesLi6","_getMappedTemplatesLi7","_acitem$details2","MVO_TEMPLATE_OPTION","allowableOrgTemplates","fiItem","_fiItem$status","ALLOWABLE_ORG_TEMPLATE","getSetCompatibleTemplates","_getMappedTemplatesLi8","_getMappedTemplatesLi9","_getMappedTemplatesLi10","_acitem$details3","TEMPLATE_ORG_EXISTING","TEMPLATE_ORG_MODIFYING","findMRTemplateByPart","mrLists","partInfo","groupByValues","anyObject","Map","purchagetoPrimaryMap","purchageValue","eachKey","has","get","set","purchageToPrimaryValidationMapping","primaryToPurchageValidation","purchageValidationMapping","_item1$details","Entity","_purchageValidationMa","primaryToPurchagePlants","PLANT","primaryToPurchageValidationMapping","partType","appliedChecks","initialMVOChecks","_generalInfo$masterPl","generalInfo","_mrDetails$previousSe2","resValue","activeMRinfo","previousSeqMRinfo","sequence","previousSequenceValidation","prevSeqTemplateValue","ruleType","returnValue","getPartTypeDetails","getORGAllowedTemplateMappings","parttypetotemplateArr","ENGG_ITEM_TYPE","plantOrgAllowedTemplates","orgAllowedTemplates","_orgAllowedTemplates$","_orgAllowedTemplates$2","Plants","templatesMappingsArr","_parttypetotemplateAr","_parttypetotemplateAr2","item2","_item1$details2","org_allowed_template","ALLOWABLE_ORG_TEMPLATES","_getPartTypeDetails$m","_flatenPartTypeTempla","flatenPartTypeTemplates","partTypeTemplate","_partTypeTemplate$det","flat","templatesForAllTypes","eachRec","_eachRec$exclusive_us","exclusive_use","uniqueTemplatesForAllTypes","eachTemplate","_eachTemplate$details","_templatesMappingsArr","_tItem$details","getbuplantmapping","_acitem$details4","PO_ORG","mappingRuleValidations","_getORGAllowedTemplat","_getMapTempList2","getHighestSeqCurrentOrActiveMR","mrTemplateValue","getFinalArr","flitem","_flitem$details","_flitem$details2","mitem","_mitem$details","purchagePlants","isFirstSequence","_parttypetotemplateAr3","_parttypetotemplateAr4","_parttypetotemplateAr5","getFilteredTemp","ftitem","finalItem","_getPartTypeDetails$m2","_flatenPartTypeTempla2","_getMapTempList","_partTypeTemplate$det2","_eachRec$exclusive_us2","plantsPair","_templateMappingsInfo","_templateMappingsInfo2","plantToMatch","buplantmapping_RDOChecks","_acitem$details5","matchedPlantsSet","_templateMappingsInfo3","plantGroups","_item1$details3","filteredPlants","plant","getRDOOUOrgSetMappings","organization","templateFromHighestSequence","RDOPlantName","resMRData","getHighestSeqCurrentPendingOrActiveMR","hscpAMRData","eachMrData","partName","fitem","partAndPlant","getCustomMCOTempaltes","finalTemplatesList","ftItem","isexisttemplate","titem","sort","a","b","localeCompare","StyledTable","whiteSpace","paddingRight","textTransform","VisuallyHiddenInput","clip","clipPath","importBulkUpdateFile","setImportBulkUpdateFile","savePartAndOracleTempInRedux","noFileError","setNoFileError","importResponse","setImportResponse","importfileBar","setimportfileBar","importedFileData","setImportedFileData","importedFileName","setImportedFileName","PaperProps","paddingTop","startIcon","CloudUploadIcon","accept","file","files","fileType","pop","colSpan","handleDownload","downloadSampleFile","download","rel","handleImportFile","hasError","postData","Instance","bulkUploadPartAndTemplate","response","showErrorAlert","finalErrorTemplate","uploadedTemplates","_showErrorAlert$succe","_showErrorAlert$error","_showErrorAlert$warni","_showErrorAlert$error2","_showErrorAlert$warni2","fontWeight","success","warning","_response$msg","msg","_response$msg2","handleCloseImport","SaaSLifeCycleStepperComponent","setActiveStep","enabledSteps","setEnabledSteps","savedStep","currentIndex","handlePromote","routeStartResponse","routeStart","routeStatus","Error","taskList","getTaskList","taskId","pendingTask","task","_task$current","approvalResponse","taskApproval","nextStep","prev","Set","setItem","_error$response","_error$response$data","_error$response$data$","_error$response$data$2","Response","ErrorMessage","Container","breakpoints","down","TabPanel","hidden","Typography","a11yProps","Mcodetails","_responseData$mcoProp35","_responseData$mcoProp36","_responseData$mcoProp37","isPageHavingIssue","systemSetingsDetail","updatedRoutes","cc","tapvalue","setTapvalue","setMasterData","itemValidationArr","setItemValidationArr","showTrackerBox","setLifeCycleStep","setStepData","initialLoad","setInitialLoad","setPlantType","removeItem","selectedRouteId","useMemo","route","findAllMcoData","resData","getMasterDetails","materialDataArr","collectSourcePlantTemplate","_resData$mcoPropeties5","getpayloadData","locresData","getattributesbyid","currentHaveValues","currMcoDetails","attData","getcurrentHaveValues","_currMcoDetails$mcoPr","_currMcoDetails$mcoPr2","_currMcoDetails$mcoPr3","gitem","_attData$data$0$mcoaf","_getmatchItem$materia","_thisItem$exportToERP","_getmatchItem$exportT","_getmatchItem$exportT2","_getmatchItem$makeOrB","_thisItem$makeOrBuy","_getmatchItem$itemSta","_thisItem$ErpStatus","getmatchItem","materialTypeDetails","env_exportToERP","emr_exportToERP","isExportToERPValueChange","handleErrorForThrows","findAndSaveExistingMco","_currMcoDetails$mcoPr4","_currMcoDetails$mcoPr5","gkey","_thisItem$exportToERP2","_thisItem$exportToERP3","_thisItem$makeOrBuy$t","_thisItem$makeOrBuy2","_thisItem$ErpStatus$t","_thisItem$ErpStatus2","findAndSaveInitialMco","handleMasterAttData","masterAttData","handleError","findAndSaveMasterMco","setupERPStatus","_locresData$mcoPropet","findMatchItem","getMatchItemFunc","shouldSetLifeCycleStep","mapMcoAffectedItem","defaultValueUpdates","newMcoProperties","CloneDataFromMaster","detail","properties","_locresData$mcoProper","clientReleaseDate","affectedItems","masterAffectedItems","matchItem","affkey","_affval$attributeGrou2","_affval$materialType","aff_mcoaffectedItem","updateMaterialValues","ackspayloadData","getERPStatus","acksData","getERPStatusDetails","_eitem$details","_eitem$details2","errs","updateFormData","actType","propertiesData","findSelectedRowIndex","aitem","mergeAttributes","mergedObj","newmaterial","_mergedObj","masterAttrObj","attributes","childAttrObj","_selectedRowData$rela","relatedMCOs","concat","t","mcoData","MCOPlantName","partBU","plantPair","_aitem$relatedMCOs$","prevMcoDetails","findselectedRowIndex","findMinfo","partsitem","partskey","namePlant","thistype","getAttrApiStatus","message","getAttrApiMsg","cloneresponseData","JSON","parse","stringify","filterFieldsForUpdate","_payload","prepareMRPayload","payloadData","producthub","uniquePartId","source","partlistPayload","updatedData","updatePartListAndAttributes","handleResponse","bulkPartTemplates","updatePartListAndAddAttributes","handleMRDetails","isload","mrPayloadData","_eitem$itemStatus","_eitem$makeOrBuy","_eitem$materialType","revision","mcoId","mcoName","mcobusinessUnit","partId","getMRRelatedDetailsbyid","addMRRelatedDetails","updateMRRelatedDetails","updateType","_updatedData$data2","new_mcoaffectedItem","minx","_updatedData$data","_updatedData$data$mco","initialMRFunctions","submitPropertiesForm","saveType","propFormValid","validateProperties","prepareFormData","updateMCOData","resp","rmeEmailAddress","rFilter","email","rsmeEmailAddress","_responseData$mcoProp12","errorMsg","updateMcoDetailsInDatabase","errorValue","statusText","requiredFields","updateMCOState","_responseData$mcoProp13","_getMCOStateValidatio","_getMCOStateValidatio2","_getMCOStateValidatio3","_getMCOStateValidatio4","_responseData$mcoProp14","_responseData$mcoProp16","itemInformation","prepareItemPayload","getMCOStateValidationResp","_getMCOStateValidatio5","_getMCOStateValidatio6","_getMCOStateValidatio7","_responseData$mcoProp15","mcoStatusValidation","changeStateByMcoId","_responseData$mcoProp17","_responseData$mcoProp19","_responseData$mcoProp18","checkEnoviaValidation","_responseData$mcoProp20","valid","validationByMcoId","_respValidation$fail","respValidation","pass","fail","_respValidation$fail2","collectFails","failStr","replace","handleCreateOrReview","errDesc","validationChecks","handleValidationFailure","validationResponse","getValidationResponse","isDropDownValid","errorDescription","handleDropDownValidationFailure","handleCreate","handleReview","validationReponse","callInternalValidation","dropdownValidation","_responseData$mcoProp25","_responseData$mcoProp26","handleRelease","failedMsg","mItem","_responseData$mcoProp27","currInstance","mcolists","resAffData","sendMCO","handleMCOServiceResponse","eItem","_generalInfo$mmiMBOM","_generalInfo$mmiMBOM$","_eItem$materialType","_responseData$mcoProp28","_responseData$mcoProp29","_eItem$materialType2","_eItem$materialType3","partBusinessUnitValue","optionalYesTemplateList","acItem","_acItem$BUID","_acItem$details","Optional","_eItem$details","slOptionalNoValues","ComAssyOptionalNo","prevPartMRMakeOrBuyValue","PartObjectId","MCOId","PartName","PartType","PlantName","isMakeOrBuyChanged","newMakeOrBuyValue","slOptionalYesValue","initialDefaultFunctions","_resData","_resData2","_resData3","_resData4","_resData5","resetValues","fetchRSMEAndRMEDetails","getMCOdetailById","_resData$mcoPropeties6","_generalInfo$systemSe","_resData$source","_generalInfo$systemSe2","_resData$source2","_resData$mcoPropeties7","_resData$source3","findInstanceValue","url","bu","systemName","updateGlobalBUandInstance","fetchMCODetails","handleRefresh","_resData$mcoaffectedI","_resData$mcoPropeties","_resData$mcoPropeties2","_resData$mcoPropeties4","validFieldArr","_vitem$materialType","_vitem$materialType2","checkAttValid","materialTypeError","attributeFormError","_getMasterDetails$","_resData$mcoPropeties3","_vitem$relatedMCOs$","_vitem$relatedMCOs$2","getMasterpayloadData","updateResponseData","collectMCOdetails","prepareAffectedPartData","generateTemplateOptFunc","getTemplateOptions","_resData$mcoaffectedI2","generateTempalateOptions","refMcoData","mcoResponseData","mcoLifeCyclepayload","currentMCOLifeCycleDetails","getCurrentMCOLifeCycleDetails","updateLifeCycleData","resDataOfProperty","getMcoPropertyDetails","checkLifeCycleStep","_currMcoDetails","_currMcoDetails2","getMcoDetails","getLifeCycleStatusByMCOName","_currentMCOLifeCycleD","_currentMCOLifeCycleD2","_ref3","mcoPromotedStatus","mcoReleaseStatus","releaseStatus","mcoState","script","sitem","_window2","document","createElement","src","origin","file1","onerror","scriptErrorHandling","fetch","ok","headers","blob","body","appendChild","loadScripts","contains","removeChild","handleExportMCOData","isFirstRender","SomethingWrong","Breadcrumb","routeSegments","TrackerHistoryLinks","SimpleCard","RefreshButtons","getIsMaterialFormEdited","newIsMaterialFormEdited","_responseData$mcoProp21","_responseData$mcoProp22","getFullYear","getMCORespData","getLatestMCOData","xitem","_responseData$mcoProp23","_responseData$mcoProp24","_getLatestMCOData$mco","_getLatestMCOData$mco2","getRepVal","SaveButtons","borderColor","Tabs","Tab","PropertiesForm","BulkUploadPartAndTemplatePupup","collectInvalidTemplates","partNameExistList","btemp","getPartBulkTempValues","affItem","_btemp$PartName","trim","newAffval","getBulkTempValues","_btemp$PartName2","_getPartBulkTempValue","_affval$materialType2","_getBulkTempValues2","_responseData$mcoProp30","_getBulkTempValues3","_responseData$mcoProp31","some","_getBulkTempValues","_responseData$mcoProp32","_responseData$mcoProp33","buplantmapping_RDOPlants","_acitem$BUID","hasMbomTemplateList","_acitem$BUID2","_acitem$details2$Has_","Has_MBOM","_eitem$details3","isExceptionalPlant","hasMbomTemplate","_getBulkTempValues4","_buplantmapping_RDOPl","_responseData$mcoProp34","plantValue","getPlantList","ekeys","_plantValue$ekeys","TrackerProgressBar","fromPage","stepsLists","CustomStepIcon","StepIcon","completed","border","primary","main","StyledStepConnector","StepConnector","shouldForwardProp","prop","VerticalLinearStepper","activeStepValue","currentMCOTrackerdetails","activeStatus","setActiveStatus","steppersLists","setSteppersLists","completedSteps","_activeStepValue$curr","mcoStateVal","newstepsLists","_activeStepValue$skip","_citem$label","_ref4","_ref5","_ref6","skippedstage","stepperValue","currentStatus","orientation","step","_activeStepValue$skip2","StepLabel","StepIconComponent","_ref7","active","CancelIcon","StepContent","square","elevation","FormRow","float","overflowY","arrow","placement","textOverflow","substring","TrackerFormView","mcodetails","paddingBottom","setMcodetails","setCurrentMCOTrackerdetails","currentmcoName","prepareLifeCycleData","resultData","currectMcoLifeCycleData","findStepper","findStatus","skipCustomStage","isSkipped"],"sourceRoot":""}