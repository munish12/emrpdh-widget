{"version":3,"file":"static/js/561.d371ac7a.chunk.js","mappings":"mLAKA,MAqDA,EArDuBA,IAA4C,IAA3C,UAAEC,EAAS,SAAEC,EAAQ,aAAEC,GAAcH,EACzD,MACMI,EAAa,SAEnB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,aAAc,CAAEC,SANX,MAMqBN,cAC1BO,KAAMV,EAENW,QAASA,CAACC,EAAOC,KACE,cAAXA,GAGJX,GAAa,EAAM,EAGvBY,GAAI,CAAEC,IAAK,kBAAoBT,UAG/BU,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFN,QAASA,CAACC,EAAOC,KACE,cAAXA,GAGJX,GAAa,EAAM,EAEvBgB,SAAUjB,EAASiB,SACnBJ,GAAI,CAAEK,MAAO,OAAQC,UAAW,uBAAwBd,SAAA,CAEhC,YAAtBL,EAASiB,UAA2Bd,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAAf,SAAC,aAAyBF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IACnD,YAAtBJ,EAASiB,UAA2Bd,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAAf,SAAC,aAAyBF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IACnD,UAAtBJ,EAASiB,UAAyBd,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAAf,SAAC,WAAuBF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAE/C,qBAAX,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUqB,OACPN,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEC,WAAY,QAASlB,SAAC,oCAGpCF,EAAAA,EAAAA,KAAA,MAAAE,SACKL,EAASwB,WAGjBrB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACAL,EAASwB,WA3CjB,MAeWtB,IAiCrB,C,gGClDI,SAASuB,EAAOC,GAC3B,MAAOjB,EAAMkB,GAAWC,EAAAA,UAAe,GAMvC,OAJAC,EAAAA,EAAAA,YAAU,KACNF,EAAQD,EAAMI,KAAK,GACpB,CAACJ,EAAMI,QAGN3B,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAQ,CACLlB,GAAI,CAAEmB,MAAO,OAAQC,OAASC,GAAUA,EAAMD,OAAOE,OAAS,GAC9D1B,KAAMA,EAAKJ,UACXU,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAChCF,EAAAA,EAAAA,KAACkC,EAAAA,EAAgB,CAACL,MAAM,UAAUV,MAAO,CACrCW,OAAQ,WAGhB9B,EAAAA,EAAAA,KAAA,OAAAE,SAAK,yBAKzB,C,8FCvBA,MAWA,EAXoBqB,IAClB,MAAM,SAAEY,IAAaC,EAAAA,EAAAA,KACfC,EAASC,EAAAA,EAAYH,EAASI,cAEpC,OACEvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAY,CAAAtC,UACXF,EAAAA,EAAAA,KAACqC,EAAM,IAAKd,KACC,C,+CCTZ,MAAMe,EAAc,CAAEG,Q,SAAShB,MAAW,IAAM,yD,gGCCvD,MAAMiB,GAAgBC,EAAAA,EAAAA,GAAO,MAAPA,EAAc,MAClC5B,MAAO,OACP6B,OAAQ,OACRC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChB,QAAS,CACPhC,MAAO,OACP6B,OAAQ,QAEV,oBAAqB,CACnBI,SAAU,WACVC,MAAO,EACPC,MAAO,EACPvC,IAAK,wBAeT,EAXgBwC,KAEZnD,EAAAA,EAAAA,KAAC0C,EAAa,CAAAxC,UACZU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACJ,SAAS,WAAU9C,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKqD,IAAI,iCAAiCC,IAAI,MAC9CtD,EAAAA,EAAAA,KAACkC,EAAAA,EAAgB,CAACqB,UAAU,uB,wDC1BpC,MAAMC,EAAY,CACdC,QAAS,sBACTC,UAAW,yBACXC,SAAU,yBACVC,KAAM,0BAgBJC,EAAa,CACfC,KAAM,WAGGC,EAAc,CACvBC,YAAa,CACTC,QAAS,CACL/C,KAAM,QACNuC,QAAS,CACLK,KAAM,UACNI,aAAcV,EAAUC,SAE5BC,UAAW,CACPI,KAAM,UACNI,aAAc,WAElBC,MAAON,EACPO,KAAMZ,IAGda,UAAW,CACPJ,QAAS,CACL/C,KAAM,QACNuC,QAAS,CACLK,KAAM,UACNI,aAAcV,EAAUC,SAE5BC,UAAW,CACPI,KAAM,UACNI,aAAc,WAElBE,KAAMZ,IAGdc,WAAY,CACRL,QAAS,CACL/C,KAAM,OACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,EACPU,WAAY,CACRC,MAAO,UACPC,QAAS,aAIrBC,WAAY,CACRT,QAAS,CACL/C,KAAM,OACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,EACPU,WAAY,CACRC,MAAO,UACPC,QAAS,aAIrBE,QAAS,CACLV,QAAS,CACL/C,KAAM,QACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAnFW,CACnBkB,MAAO,UACPd,KAAM,UACNe,KAAM,UACNX,aAAcV,EAAUC,SAgFhBU,MAAON,EACPO,KAAMZ,IAGdsB,QAAS,CACLb,QAAS,CACL/C,KAAM,QACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,EACPO,KAAMZ,IAGduB,YAAa,CACTd,QAAS,CACL/C,KAAM,OACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,EACPU,WAAY,CACRC,MAAO,UACPC,QAAS,aAIrBO,YAAa,CACTf,QAAS,CACL/C,KAAM,OACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,EACPU,WAAY,CACRC,MAAO,UACPC,QAAS,aAIrBQ,KAAM,CACFhB,QAAS,CACL/C,KAAM,QACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,EACPO,KAAMZ,IAGd0B,SAAU,CACNjB,QAAS,CACL/C,KAAM,OACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,EACPU,WAAY,CACRC,MAAO,UACPC,QAAS,aAIrBU,IAAK,CACDlB,QAAS,CACL/C,KAAM,OACNuC,QAAS,CACLK,KAAM,UACNI,aAAc,WAElBR,UAAW,CACPI,KAAM,UACNI,aAAcV,EAAUC,SAE5BU,MAAON,KAKNuB,EAAe,CACxB,OACA,iHACA,iHACA,iHACA,kHACA,kHACA,mHACA,mHACA,mHACA,mHACA,oHACA,oHACA,oHACA,oHACA,oHACA,oHACA,qHACA,qHACA,qHACA,qHACA,sHACA,sHACA,sHACA,sHACA,sH,gGC9NJ,MAuDA,EAvDuBzF,IAA4C,IAA3C,UAAEC,EAAS,SAAEC,EAAQ,aAAEC,GAAcH,EACzD,MACMI,EAAa,SAEnB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,aAAc,CAAEC,SANX,MAMqBN,cAC1BO,KAAMV,EAENW,QAASA,CAACC,EAAOC,KACE,cAAXA,GAGJX,GAAa,EAAM,EAGvBY,GAAI,CAAEC,IAAK,kBAAoBT,UAG/BU,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFN,QAASA,CAACC,EAAOC,KACE,cAAXA,GAGJX,GAAa,EAAM,EAEvBgB,SAAUjB,EAASiB,SACnBJ,GAAI,CAAEK,MAAO,OAAQC,UAAW,uBAAwBd,SAAA,CAEhC,YAAtBL,EAASiB,UAA2Bd,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAAf,SAAC,aAAyBF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IACnD,YAAtBJ,EAASiB,UAA2Bd,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAAf,SAAC,aAAyBF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IACnD,UAAtBJ,EAASiB,UAAyBd,EAAAA,EAAAA,KAACiB,EAAAA,EAAU,CAAAf,SAAC,WAAuBF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAE/C,qBAAX,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUqB,OACPN,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEC,WAAY,QAASlB,SAAC,oCAGpCF,EAAAA,EAAAA,KAAA,MAAAE,SACKL,EAASwB,WAIlBrB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKL,EAASwB,WA5CrB,MAeWtB,IAmCrB,C,yGCpDX,MAgBA,EAhBuBsF,KAEfrF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACPF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAS3B,MAAO,CAAE6B,SAAU,YAAa9C,UAC5EU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1E,MAAO,CAAEc,UAAW,UAAW/B,SAAA,CAAC,4EAE/DF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASA,IAAMC,OAAOC,SAASC,SAASjG,SAAC,iB,4HCTzF,MAAMkG,GAAYzD,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,EAAYhD,IAAA,IAAC,MAAEoC,EAAK,mBAAEsE,EAAkB,SAAEC,GAAU3G,EAAA,MAAM,CAC1E4G,cAAeF,GAAsB,OACrCG,WAAYF,EAAW,SAAW,SAClCG,SAAUH,EAAW,SAAW,GAChCI,aAAcJ,EAAW,WAAa,GACvC,IAgFYK,EAAKC,IAAiE,IAAhE,SAAE1G,EAAQ,UAAEqD,EAAS,SAAE+C,EAAQ,cAAEC,KAAkBhF,GAAOqF,EAC3E,OACE5G,EAAAA,EAAAA,KAACoG,EAAS,CACRC,mBAAoBE,EACpBD,SAAUA,EACV/C,WAAWsD,EAAAA,EAAAA,GAAK,CACd,CAACtD,GAAa,KAAK,IAErBuD,UAAU,KACVC,GAAI,EACJC,GAAI,EACJC,SAAS,OACT7F,WAAW,MACX8F,WAAW,SACP3F,EAAKrB,SAERA,GACS,EAIHiH,EAAKC,IAAiE,IAAhE,SAAElH,EAAQ,UAAEqD,EAAS,SAAE+C,EAAQ,cAAEC,KAAkBhF,GAAO6F,EAC3E,OACEpH,EAAAA,EAAAA,KAACoG,EAAS,CACRC,mBAAoBE,EACpBD,SAAUA,EACV/C,WAAWsD,EAAAA,EAAAA,GAAK,CACd,CAACtD,GAAa,KAAK,IAErBuD,UAAU,KACVC,GAAI,EACJC,GAAI,EACJC,SAAS,OACT7F,WAAW,MACX8F,WAAW,SACP3F,EAAKrB,SAERA,GACS,EAIHmH,EAAYC,IAAiE,IAAhE,SAAEpH,EAAQ,UAAEqD,EAAS,SAAE+C,EAAQ,cAAEC,KAAkBhF,GAAO+F,EAClF,OACEtH,EAAAA,EAAAA,KAACoG,EAAS,CACRC,mBAAoBE,EACpBD,SAAUA,EACV/C,WAAWsD,EAAAA,EAAAA,GAAK,CACd,CAACtD,GAAa,KAAK,IAErBuD,UAAU,IACVC,GAAI,EACJC,GAAI,EACJC,SAAS,UACL1F,EAAKrB,SAERA,GACS,EAuBHqH,EAAOC,IAAiE,IAAhE,SAAEtH,EAAQ,UAAEqD,EAAS,SAAE+C,EAAQ,cAAEC,KAAkBhF,GAAOiG,EAC7E,OACExH,EAAAA,EAAAA,KAACoG,EAAS,CACRC,mBAAoBE,EACpBD,SAAUA,EACV/C,WAAWsD,EAAAA,EAAAA,GAAK,CACd,CAACtD,GAAa,KAAK,IAErBuD,UAAU,OACVI,WAAW,SACP3F,EAAKrB,SAERA,GACS,C,uPChLhB,MAAMuH,GAAiB9E,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MACnCE,QAAS,OACT6E,SAAU,OACV5E,WAAY,aAGR6E,GAAiBhF,EAAAA,EAAAA,IAAO,KAAPA,EAAa,MAClCiF,OAAQ,EACRX,SAAU,OACVY,cAAe,MACfC,cAAe,SACfvB,cAAe,iBAGXwB,GAAUpF,EAAAA,EAAAA,IAAO,OAAPA,EAAehD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC7C4G,cAAe,aACf1E,MAAOE,EAAMkC,QAAQG,KAAKV,UAC3B,IASKsE,IAPYrF,EAAAA,EAAAA,IAAO,KAAPA,EAAasF,IAAA,IAAC,MAAElG,GAAOkG,EAAA,MAAM,CAC7CL,OAAQ,EACRM,WAAY,EACZL,cAAe,MACfhG,MAAOE,EAAMkC,QAAQG,KAAKR,KAC3B,KAEkBjB,EAAAA,EAAAA,IAAOwF,EAAAA,EAAPxF,EAAa,MAC9BuF,WAAY,EACZE,aAAc,MACdN,cAAe,cAyCjB,EAtCmBO,IAAwB,IAAvB,cAAEC,GAAeD,EACnC,MACMzE,GADQ2E,EAAAA,EAAAA,KACKtE,QAAQG,KAAKR,KAEhC,OACE5D,EAAAA,EAAAA,KAACyH,EAAc,CAAAvH,UAQbU,EAAAA,EAAAA,MAAC4H,EAAAA,EAAW,CACVC,WAAWzI,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAACzH,GAAI,CAAEmB,MAAO+B,GAAO1D,SAAC,kBACtCQ,GAAI,CAAEmC,QAAS,OAAQC,WAAY,SAAUE,SAAU,YAAa9C,SAAA,EAEpEF,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAACC,GAAI,UAAUzI,UACrBF,EAAAA,EAAAA,KAACgI,EAAU,CAACnG,MAAM,UAAS3B,SAAC,WAG7BoI,EACGA,EAAcM,KAAI,CAACC,EAAOC,IACnBA,IAAUR,EAAcS,OAAS,GACtC/I,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAA0BC,GAAIE,EAAMG,KAAK9I,UAC/CF,EAAAA,EAAAA,KAAC+H,EAAO,CAAA7H,SAA2B2I,EAAMI,MAA3BC,IAAAA,aADFA,IAAAA,aAKdlJ,EAAAA,EAAAA,KAAC2H,EAAc,CAAAzH,SAA2B2I,EAAMI,MAA3BC,IAAAA,cAGvB,SAES,E,0BCrErB,MAAMC,GAAexG,EAAAA,EAAAA,IAAOyG,EAAAA,EAAPzG,EAAe,MAClCC,OAAQ,OACR7B,MAAO,WAGHsI,GAAe1G,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,EAAK,OAAEuH,GAAQ3J,EAAA,MAAM,CACzDiD,OAAQ,OACR7B,MAAO,OACPwI,OAAQ,MACRrG,MAAO,OACPsG,aAAc,MACdxG,SAAU,WACVyG,OAAQ,kBACRlF,WAAuB,WAAX+E,EAAsBvH,EAAMkC,QAAQR,QAAQK,KAAO/B,EAAMkC,QAAQE,MAAML,KACnFjC,MAAkB,WAAXyH,GAAuB,mBAC/B,IAWD,EATmBrB,IAAsB,IAArB,IAAE5E,EAAG,OAAEiG,GAAQrB,EACjC,OACErH,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACJ,SAAS,WAAU9C,SAAA,EACtBF,EAAAA,EAAAA,KAACmJ,EAAY,CAAC9F,IAAKA,KACnBrD,EAAAA,EAAAA,KAACqJ,EAAY,CAACC,OAAQA,MAClB,E,+EChBV,MAAMI,GAAgB/G,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAClCC,OAAQ,OACRC,QAAS,OACT8G,cAAe,SACfpF,WAAY,WAGRqF,GAAkBjH,EAAAA,EAAAA,IAAOkH,IAAPlH,EAAkB,MACxCmH,SAAU,MAGNC,GAAapH,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC/CkD,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBiH,QAAS,sBACTnI,MAAOE,EAAMkC,QAAQR,QAAQK,KAC7BS,WAAY,UACb,IAEK0F,GAAatH,EAAAA,EAAAA,IAAO,MAAPA,EAAcsF,IAAA,IAAC,MAAElG,GAAOkG,EAAA,MAAM,CAC/CC,WAAY,OACZrG,MAAOE,EAAMkC,QAAQR,QAAQK,KAC7B,OAAQ,CACNoG,UAAW,EACXjD,SAAU,OACVmB,aAAc,OAEhB,SAAU,CAAEhH,WAAY,OACzB,IAEK+I,GAAcxH,EAAAA,EAAAA,IAAO,MAAPA,EAAc0F,IAAA,IAAC,MAAEtG,GAAOsG,EAAA,MAAM,CAChD2B,QAAS,MACTI,SAAU,IACVnD,SAAU,OACVuC,aAAc,MACdpB,aAAc,MACd5B,WAAY,WACZ6D,UAAW,aACXxI,MAAOE,EAAMkC,QAAQR,QAAQK,KAC7BS,WAAY,UACb,IAEK+F,GAAc3H,EAAAA,EAAAA,IAAO,OAAPA,EAAe4H,IAAA,IAAC,MAAExI,GAAOwI,EAAA,MAAM,CACjDtD,SAAU,OACV7F,WAAY,MACZS,MAAOE,EAAMkC,QAAQR,QAAQK,KAC9B,IAEK0G,GAAmB7H,EAAAA,EAAAA,IAAO,MAAPA,EAAc8H,IAAA,IAAC,MAAE1I,GAAO0I,EAAA,MAAM,CACrDT,QAAS,OACTnH,QAAS,OACTE,eAAgB,WACjB,IAEK2H,GAAa/H,EAAAA,EAAAA,IAAO,MAAPA,EAAciE,IAAA,IAAC,MAAE7E,GAAO6E,EAAA,MAAM,CAC/CoD,QAAS,MACT/C,SAAU,OACVmD,SAAU,IACVZ,aAAc,MACd3G,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChBlB,MAAOE,EAAMkC,QAAQR,QAAQK,KAC7BS,WAAY,UACb,IAEKoG,GAAUhI,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAAS5B,MAAO,WACxC6J,GAAcjI,EAAAA,EAAAA,IAAO2H,EAAP3H,EAAoB,MAAS,KAG3CkI,EAAoB,GA+O1B,EA7OgBzD,IAAsB,IAArB,YAAE0D,GAAa1D,EAC9B,MAAO2D,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,IACzCK,EAAgB,2BAChBC,EAAgBC,SAASC,cAAc,gBAoBvCC,EAAaC,UACjBC,YAAW,KACT,IACIC,EAAgB,CAClBzH,KAAM,kCACN0H,UAAW,uBACXC,OAAQ,8BACR9C,KAAM,gBALO,IAAImC,GAQVY,KAAKH,GACdhB,EAAkBmB,KAAKH,GACnBd,GAASM,EAAeR,EAAkB,GAC7C,IAAK,EAGJoB,GAAiBC,EAAAA,EAAAA,cAAY,KAC7BX,GACFA,EAAcY,SAAS,CACrBxL,IAAK4K,EAAca,aACnBC,SAAU,UAEd,GACC,CAACd,KAEJ7J,EAAAA,EAAAA,YAAU,KACJqJ,GACFM,EAAe,CACb,CACES,UAAW,2BACX1H,KAAM,wEACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,eACN8C,OAAQ,8BACRzC,OAAQ,SACRkD,KAAM,IAER,CACEV,UAAW,2BACX1H,KAAM,8DACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,WACN8C,OAAQ,4BACRzC,OAAQ,SACRkD,KAAM,IAER,CACEV,UAAW,2BACX1H,KAAM,MACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,eACN8C,OAAQ,8BACRzC,OAAQ,SACRkD,KAAM,IAER,CACEV,UAAW,2BACX1H,KAAM,iDACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,WACN8C,OAAQ,4BACRzC,OAAQ,SACRkD,KAAM,IAER,CACEV,UAAW,2BACX1H,KAAM,wEACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,eACN8C,OAAQ,8BACRzC,OAAQ,SACRkD,KAAM,IAER,CACEV,UAAW,2BACX1H,KAAM,8DACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,WACN8C,OAAQ,4BACRzC,OAAQ,SACRkD,KAAM,IAER,CACEV,UAAW,2BACX1H,KAAM,MACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,eACN8C,OAAQ,8BACRzC,OAAQ,SACRkD,KAAM,IAER,CACEV,UAAW,2BACX1H,KAAM,iDACNkI,KAAM,2BACNC,GAAI,2BACJtD,KAAM,WACN8C,OAAQ,4BACRzC,OAAQ,SACRkD,KAAM,KAGZ,GACC,CAACzB,KAEJrJ,EAAAA,EAAAA,YAAU,KACRuK,IACO,IAAMjB,GAAW,KACvB,CAACI,EAAaa,IAEjB,MAAM,QAAEhI,IAAYsE,EAAAA,EAAAA,KACd9E,EAAUQ,EAAQR,QAAQK,KAC1B2I,EAAcxI,EAAQG,KAAKX,QAEjC,OACE7C,EAAAA,EAAAA,MAAC8I,EAAa,CAAAxJ,SAAA,EACZU,EAAAA,EAAAA,MAACmJ,EAAU,CAAA7J,SAAA,EACTU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACP,QAAQ,OAAOC,WAAW,SAAQ5C,SAAA,EACrCF,EAAAA,EAAAA,KAAC0M,EAAU,CAACrJ,IAAI,4BAA4BiG,OAAO,YACnD1I,EAAAA,EAAAA,MAACqJ,EAAU,CAAA/J,SAAA,EACTF,EAAAA,EAAAA,KAAC2G,EAAAA,GAAE,CAAAzG,SAAC,eACJF,EAAAA,EAAAA,KAACuH,EAAAA,GAAI,CAAArH,SAAC,kBAGVF,EAAAA,EAAAA,KAAC2M,EAAAA,EAAU,CAAC3G,QAAS8E,EAAY5K,UAC/BF,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAClB,SAAS,QAAO/G,SAAC,gBAG3BU,EAAAA,EAAAA,MAACgJ,EAAe,CAAC2C,GAAG,cAAarM,SAAA,CAC9BkL,EAAYxC,KAAI,CAAClD,EAAMkH,KACtBhM,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAEFyJ,EAAE,OACFhK,QAAQ,OACRnC,GAAI,CACFqC,eAAgBuI,IAAkB5F,EAAKoG,WAAa,YACpD5L,SAAA,CAEDoL,IAAkB5F,EAAKoG,YAAa9L,EAAAA,EAAAA,KAACoJ,EAAAA,EAAM,CAAC/F,IAAKqC,EAAKqG,UACvDnL,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAAC0J,GAAG,OAAM5M,SAAA,CACXoL,IAAkB5F,EAAKoG,YACtB9L,EAAAA,EAAAA,KAAC2G,EAAAA,GAAE,CACDjG,GAAI,CACFqG,GAAI,MACJE,SAAU,OACVpF,MAAO4B,GACPvD,SAEDwF,EAAKuD,QAGVjJ,EAAAA,EAAAA,KAACmK,EAAW,CAAAjK,SAAEwF,EAAKtB,QACnBpE,EAAAA,EAAAA,KAACsK,EAAW,CAAApK,SAAC,sBArBVgJ,IAAAA,eA2BTlJ,EAAAA,EAAAA,KAACwK,EAAgB,CAAAtK,UACfU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAAC0J,GAAG,OAAM5M,SAAA,EACZU,EAAAA,EAAAA,MAAC8J,EAAU,CAAAxK,SAAA,EACTF,EAAAA,EAAAA,KAAC2K,EAAO,CAACrH,IAAI,SAASD,IAAI,iCAC1BzC,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAAC0J,GAAG,OAAM5M,SAAA,EACZF,EAAAA,EAAAA,KAACmH,EAAAA,GAAE,CAACzG,GAAI,CAAEsG,GAAI,EAAGD,GAAI,OAAQ7G,SAAC,qBAC9BF,EAAAA,EAAAA,KAAC4K,EAAW,CAAA1K,SAAC,kBAGjBF,EAAAA,EAAAA,KAACsK,EAAW,CAAApK,SAAC,0BAInBU,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAC+M,EAAAA,EAAO,CACNrM,GAAI,CACF6D,WAAY,SAAQyI,EAAAA,EAAAA,IAAgBP,gBAGxCzM,EAAAA,EAAAA,KAACiN,EAAAA,EAAS,CACRC,YAAY,gBACZC,WAAS,EACTC,QAAS,EACTC,WAAS,EACT3M,GAAI,CAAE,aAAc,CAAEmB,MAAO4B,IAC7B6J,WAAY,CACVC,cACE3M,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACP,QAAQ,OAAM3C,SAAA,EACjBF,EAAAA,EAAAA,KAAC2M,EAAAA,EAAU,CAACa,KAAK,QAAOtN,UACtBF,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAAjI,SAAC,iBAERF,EAAAA,EAAAA,KAAC2M,EAAAA,EAAU,CAACa,KAAK,QAAOtN,UACtBF,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAAjI,SAAC,oBAIZuN,QAAS,CAAEC,KAAM,6BAEnBC,MAAOzC,EACP0C,SAAWC,GAAM1C,EAAW0C,EAAEC,OAAOH,OACrCI,QA/NoBvN,IAC1B,GAAkB,UAAdA,EAAMwN,MAAoBxN,EAAMyN,SAAU,CAC5C,IAAIC,EAAchD,EAAQiD,OAC1B,GAAoB,KAAhBD,EAAoB,CACtB,IAAIE,EAAW,IAAIhD,GACfS,EAAgB,CAClBzH,KAAM8J,EACNpC,UAAWR,GAEb8C,EAASpC,KAAKH,GACdhB,EAAkBmB,KAAKH,GACnBd,GAASM,EAAe+C,GAC5B1C,GACF,CACAP,EAAW,GACb,UAmNgB,E,0BCrTpB,MAAMkD,GAAY1L,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9C,eAAgB,CACdgB,IAAK2N,EAAAA,GAAe,GACpB,CAACvM,EAAMwM,YAAYC,KAAK,OAAQ,CAAEjF,OAAQ,IAE5C,eAAgB,CACdvG,SAAU,WACVrC,IAAK,EACLuC,MAAO,GAEV,IAEKuL,GAAQ9L,EAAAA,EAAAA,IAAO,MAAPA,EAAcsF,IAAA,IAAC,MAAElG,GAAOkG,EAAA,MAAM,CAC1CjF,SAAU,QACVE,MAAOnB,EAAM0D,QAAQ,GACrB8D,OAAQxH,EAAM0D,QAAQ,GACtB9E,IAAK,QACL+N,WAAY,wBACZC,UAAW5M,EAAM6M,QAAQ,GACzBpF,aAAc,EACd1H,OAAQ,MACRf,MAAO,IACP0F,SAAU,SACV,4CAA6C,CAC3C1F,MAAO,oBACPkC,KAAMlB,EAAM0D,QAAQ,IAEvB,IAmBD,EAjBiB4C,IAAyB,IAAxB,KAAEwG,EAAI,SAAE3O,GAAUmI,EAClC,MAAO/H,EAAMkB,IAAWyJ,EAAAA,EAAAA,WAAS,GAE3BH,EAAca,UAClBnK,GAASlB,IAAUA,GAAK,EAG1B,OACEM,EAAAA,EAAAA,MAACyN,EAAS,CAAAnO,SAAA,EACP4O,EAAAA,EAAAA,cAAaD,EAAM,CAAE7I,QAAS8E,KAC/B9K,EAAAA,EAAAA,KAACyO,EAAK,CAAClL,WAAWsD,EAAAA,EAAAA,GAAK,CAAEkI,UAAWzO,IAAQJ,SACzCI,GAAOwO,EAAAA,EAAAA,cAAa5O,EAAU,CAAE4K,gBAAiB,SAE1C,E,gBC7CEnI,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC9B5B,MAAO,IACPiJ,QAAS,OACT/H,UAAW,SACXiG,WAAY,OACZ8G,YAAa,YAGDrM,EAAAA,EAAAA,IAAO,KAAPA,EAAa,MACzBiF,OAAQ,EACRQ,aAAc,MACd7B,cAAe,kBAGE5D,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC/BiF,OAAQ,MACRqH,WAAY,MACZpM,QAAS,OACTE,eAAgB,cAGGJ,EAAAA,EAAAA,IAAOmD,EAAAA,EAAPnD,EAAehD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAClDiI,OAAQ,MACRsH,YAAa,OACbC,aAAc,OACd1I,SAAU,SACV+C,aAAc,QACdkF,WAAY,YACZ,WAAY,CACV,UAAW,CACT7M,MAAO,UACP0C,WAAY,GAAGxC,EAAMkC,QAAQR,QAAQK,kBACrCsL,gBAAiB,GAAGrN,EAAMkC,QAAQR,QAAQK,kBAC1CuL,UAAW,CAAC,CAAExN,MAAO,uBAGzB,UAAW,CACT,UAAW,CACTA,MAAO,UACP0C,WAAY,GAAGxC,EAAMkC,QAAQP,UAAUI,kBACvCsL,gBAAiB,GAAGrN,EAAMkC,QAAQP,UAAUI,kBAC5CuL,UAAW,CAAC,CAAExN,MAAO,uBAG1B,I,0FCxCD,MAAMyN,GAAa3M,EAAAA,EAAAA,GAAOS,EAAAA,EAAPT,EAAYhD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC7CkD,QAAS,eACThB,MAAOE,EAAMkC,QAAQG,KAAKX,QAC1B,cAAe,CACb2L,gBAAiBrN,EAAMkC,QAAQsL,OAAOC,OAEzC,IA8CD,GA5CkBjO,IAChB,MAAOkO,EAAUC,GAAejO,EAAAA,SAAe,MACzCvB,EAAWuB,EAAAA,SAAekO,QAAQpO,EAAMrB,UAC9C,IAAI,uBAAE0P,GAAyB,EAAI,mBAAEC,EAAqB,QAAWtO,EACrE,MAAM,SAAEY,IAAaC,EAAAA,EAAAA,KAMf0N,EAAcA,KAClBJ,EAAY,KAAK,EAGnB,OACE9O,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsP,EAAU,CAACtJ,QAVKxF,IACnBkP,EAAYlP,EAAMwP,cAAc,EASG9P,SAAEqB,EAAM0O,cACzCjQ,EAAAA,EAAAA,KAACkQ,EAAAA,EAAa,CAACnO,MAAOI,EAASgO,OAAOhO,EAASiO,aAAalQ,UAC1DF,EAAAA,EAAAA,KAACqQ,EAAAA,EAAI,CACHC,UAAW,EACXC,mBAAoB,KACpBd,SAAUA,EACVnP,OAAQmP,EACRlP,QAASuP,EACT1P,aAAc,CACZC,SAAU,SACVN,WAAY8P,GAEdW,gBAAiB,CACfnQ,SAAU,MACVN,WAAY8P,GACZ3P,SAEDA,EAAS0I,KAAI,CAAC6H,EAAO3H,KACpB9I,EAAAA,EAAAA,KAAA,OAAKgG,QAAS4J,GAA0BE,EAAY5P,SACjDuQ,GADuDvH,IAAAA,oBAMvD,E,iBClDcvG,EAAAA,EAAAA,GAAO+N,GAAAA,EAAP/N,EAAuB,MAClD6G,aAAc,EACdjF,WAAY,0BCDU5B,EAAAA,EAAAA,GAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CACpDqD,SAAU,WACVrC,IAAK,EACLsC,KAAM,EACNnB,OAAQ,EACRf,MAAO,OACP8B,QAAS,OACTC,WAAY,SACZF,OAAQ0L,EAAAA,GACR/J,WAAYxC,EAAMkC,QAAQR,QAAQK,KAClCjC,MAAOE,EAAMkC,QAAQG,KAAKX,QAC1B,iBAAkB,CAChB5B,MAAOE,EAAMkC,QAAQG,KAAKX,SAE7B,KAEmBd,EAAAA,EAAAA,GAAO,QAAPA,EAAgBsF,IAAA,IAAC,MAAElG,GAAOkG,EAAA,MAAM,CAClDlH,MAAO,OACP0I,OAAQ,OACRkH,QAAS,OACT1J,SAAU,OACViI,YAAa,OACbtM,OAAQ,mBACR2B,WAAYxC,EAAMkC,QAAQR,QAAQK,KAClCjC,MAAOE,EAAMkC,QAAQG,KAAKX,QAC1B,iBAAkB,CAAE5B,MAAOE,EAAMkC,QAAQG,KAAKX,SAC/C,KC7Bed,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,EAAK,MAAEhB,GAAOpB,EAAA,MAAM,CACnDmC,OAAQ,GACRf,MAAOA,EACP0F,SAAU,SACVzD,SAAU,WACV0L,WAAY,mBACZnK,WAAYxC,EAAMkC,QAAQM,WAAWE,QACrC,CAAC1C,EAAMwM,YAAYC,KAAK,OAAQ,CAC9B7N,IAAK,EACLsC,KAAM,EACNsG,OAAQ,EACRvG,SAAU,YAEb,KAEsBL,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MACnCb,OAAQ,GACRf,MAAO,OACP6B,OAAQ,OACRI,SAAU,WACVuB,WAAY,2BCpBI5B,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC9BC,OAAQ,OACRC,QAAS,OACTG,SAAU,gBCHIL,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC5BmH,SAAU,EACVlH,OAAQ,OACRI,SAAU,eJDZ,MKGA,GAJqBrD,IAAmB,IAAlB,SAAEO,GAAUP,EAChC,OAAOK,EAAAA,EAAAA,KAAC4Q,EAAAA,SAAQ,CAACC,UAAU7Q,EAAAA,EAAAA,KAAC8Q,EAAAA,EAAW,IAAI5Q,SAAEA,GAAoB,E,wBCAnE,MAYA,GAZkBP,IAAmB,IAAlB,SAAEO,GAAUP,EAC7B,MAAM,SAAEwC,IAAaC,EAAAA,EAAAA,KACrB,IAAIgO,EAAc,IAAKjO,EAASgO,OAAOhO,EAASiO,cAEhD,OACExP,EAAAA,EAAAA,MAACsP,EAAAA,EAAa,CAACnO,MAAOqO,EAAYlQ,SAAA,EAChCF,EAAAA,EAAAA,KAAC+Q,GAAAA,GAAW,IACX7Q,IACa,E,oDCLpB,MAAM8Q,IAAgBrO,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAClD,gBAAiB,CACf+O,WAAY,gDACZuC,UAAW,gBACXpP,MAAOE,EAAMkC,QAAQiN,OAAOC,OAE9B,kBAAmB,CACjBzC,WAAY,gDACZuC,UAAW,eACXpP,MAAOE,EAAMkC,QAAQiN,OAAOC,OAE9B,qBAAsB,CACpB1K,SAAU,SACViI,WAAY,8CAGd,eAAgB,CACdnK,WAAYxC,EAAMkC,QAAQR,QAAQK,MAEpC,mBAAoB,CAClB/C,MAAO,GACP0F,SAAU,SACV1D,eAAgB,oBAChB,cAAe,CAAEF,QAAS,QAC1B,cAAe,CAAEA,QAAS,SAE7B,IAEKuO,IAAazO,EAAAA,EAAAA,IAAO0O,GAAAA,EAAP1O,EAAmBsF,IAAA,IAAC,MAAElG,GAAOkG,EAAA,MAAM,CACpDrF,OAAQ,GACR7B,MAAO,OACPyF,WAAY,MACZC,SAAU,SACV0I,aAAc,OACd3F,aAAc,MACdpB,aAAc,MACdvF,QAAS,OACTE,eAAgB,2BAChBlB,MAAOE,EAAMkC,QAAQG,KAAKX,QAE1B,UAAW,CAAEc,WAAY,6BACzB,UAAW,CACTxD,MAAO,GACPkG,SAAU,OACViI,YAAa,OACbC,aAAc,OACdrH,cAAe,SACfjG,MAAO,SAEV,IAEKyP,IAAa3O,EAAAA,EAAAA,IAAO,MAAPA,EAAc0F,IAAA,IAAC,MAAEtG,GAAOsG,EAAA,MAAM,CAC/CtH,MAAO,EACP6B,OAAQ,EACRf,MAAO,UACP4E,SAAU,SACVyB,WAAY,OACZ8G,YAAa,MACbxF,aAAc,mBACdjF,WAAYxC,EAAMkC,QAAQR,QAAQS,aAEnC,IAEKqN,IAAW5O,EAAAA,EAAAA,IAAO,OAAPA,EAAe4H,IAAA,IAAC,MAAExI,GAAOwI,EAAA,MAAM,CAC9CtD,SAAU,WACViI,YAAa,SACbpH,cAAe,SACfjG,MAAOE,EAAMkC,QAAQiN,OAAOC,MAE7B,IAEKK,IAAa7O,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC/BqH,QAAS,UACTvD,SAAU,SACV+C,aAAc,YAIViI,GAAgChH,IAA+B,IAA9B,KAAE/E,EAAI,SAAExF,EAAQ,KAAEwR,GAAMjH,EAC7D,MAAOkH,EAAWC,IAAgB3G,EAAAA,EAAAA,WAAS,GACrC4G,GAAaC,EAAAA,EAAAA,QAAO,MACpBC,GAAkBD,EAAAA,EAAAA,QAAO,IACzB,SAAEE,IAAaC,EAAAA,GAAAA,OACf,KAAEhJ,EAAI,KAAE4F,EAAI,SAAEqD,EAAQ,MAAEC,GAAUzM,EAalC0M,GAAmBlG,EAAAA,EAAAA,cAAamG,IACpC,GAAkB,UAAdA,EAAKpJ,KACP,IAAK,IAAIwH,KAAS4B,EAAKnS,SACrBkS,EAAiB3B,GAIH,UAAd4B,EAAKpJ,KAAkB8I,EAAgBO,SAAWD,EAAKjG,aACtD2F,EAAgBO,SAAW,EAC1B,GACL,IAeH,OAbA5Q,EAAAA,EAAAA,YAAU,KACR,GAAKmQ,EAAL,CAEAO,EAAiBP,EAAWS,SAG5B,IAAK,IAAI7B,KAASoB,EAAWS,QAAQpS,SAC/BuQ,EAAM8B,aAAa,UAAYP,GAAqB,WAAT/I,GAC7C2I,GAAa,EAPM,CASvB,GACC,CAACI,EAAUI,EAAkBnJ,KAG9BrI,EAAAA,EAAAA,MAACoQ,GAAa,CAAA9Q,SAAA,EACZU,EAAAA,EAAAA,MAACwQ,GAAU,CACT7N,WAAWsD,EAAAA,EAAAA,GAAK,CACd,8BAA8B,EAC9B2L,eAAyB,YAATd,EAChBpR,MAAOqR,IAET3L,QAAU6H,GA3CKA,KAAO,IAAD4E,GAEH,OAAD5E,QAAC,IAADA,GAAS,QAAR4E,EAAD5E,EAAGC,cAAM,IAAA2E,OAAR,EAADA,EAAWC,QAAQ,eAGxCX,EAAgBO,QAAU,EAC1BF,EAAiBP,EAAWS,SAC5BV,GAAcD,GAAU,EAoCJgB,CAAY9E,GAAI3N,SAAA,EAEhCU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACP,QAAQ,OAAOC,WAAW,SAAQ5C,SAAA,CACpC2O,IAAQ7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAMrD,SAAE2O,IAChCqD,IAAYlS,EAAAA,EAAAA,KAACsR,GAAU,KACxBtR,EAAAA,EAAAA,KAACuR,GAAQ,CAAChO,UAAW,mBAAmBrD,SAAE+I,OAG3CkJ,IAASnS,EAAAA,EAAAA,KAACwR,GAAU,CAACjO,UAAU,4BAA2BrD,SAAEiS,EAAMxE,SAEnE3N,EAAAA,EAAAA,KAAA,OACEuD,WAAWsD,EAAAA,EAAAA,GAAK,CACd+L,kBAAkB,EAClBC,aAAclB,EACdmB,YAAanB,IACZzR,UAEHF,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAClB,SAAS,QAAQvG,GAAI,CAAEoH,cAAe,UAAW5H,SAAC,wBAM5DF,EAAAA,EAAAA,KAAA,OACE+S,IAAKlB,EACLtO,UAAU,0BACVpC,MAAOwQ,EAAY,CAAE3Q,UAAW,OAAU,CAAEA,UAAW+Q,EAAgBO,QAAU,MAAOpS,SAEvFA,MAEW,EAIpB,GAAeuB,EAAAA,KAAWgQ,I,mPCrI1B,MAAM5Q,GAAQY,EAAAA,YAAiB,SAAeF,EAAOwR,GACjD,OAAO/S,EAAAA,EAAAA,KAACgT,GAAAA,EAAQ,CAAC1C,UAAW,EAAGyC,IAAKA,EAAKhN,QAAQ,YAAaxE,GAClE,IAEM0R,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAC9B6D,WAAY,MACZ,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEtD,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBAIrD4M,IAAsBxQ,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CACxCyQ,KAAM,gBACNC,SAAU,aACVzQ,OAAQ,EACR6D,SAAU,SACVzD,SAAU,WACVuG,OAAQ,EACRtG,KAAM,EACNuD,WAAY,SACZzF,MAAO,IAgWX,KA9VwB4B,EAAAA,EAAAA,IAAO2Q,GAAAA,EAAP3Q,EAAehD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CACnD,0BAA2B,CACvByP,gBAAiB,WAErB,2BAA4B,CACxBpF,QAASjI,EAAM0D,QAAQ,IAE9B,IAEgDlE,IAAW,IAADgS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACrC,IAAIC,GAAAA,EAAtB,MACMC,EAAa,IAAIC,GAAAA,GACjB,qBAAEC,EAAoB,wBAAEC,EAAuB,aAAErU,EAAY,YAAEsU,EAAW,aAAEC,GAAiB9S,GAC5F+S,EAAaC,IAAkBtJ,EAAAA,EAAAA,WAAS,IACxCuJ,EAAgBC,IAAqBxJ,EAAAA,EAAAA,WAAS,IAC9CyJ,EAAeC,IAAoB1J,EAAAA,EAAAA,WAAS,IAC5C2J,EAAkBC,IAAuB5J,EAAAA,EAAAA,UAAS,OAClD6J,EAAkBC,IAAuB9J,EAAAA,EAAAA,UAAS,OAClD+J,EAAeC,IAAoBhK,EAAAA,EAAAA,UAAS,MAE7CiK,EAAWC,aAAaC,QAAQ,aAChC,mBAAEC,IAAuBC,EAAAA,GAAAA,MAIxBC,EAASC,IAAcvK,EAAAA,EAAAA,WAAS,IAChCwK,EAAuBC,IAA4BzK,EAAAA,EAAAA,UAAS,CAC/D0K,GAAI,KAqGFC,EAA2BA,CAACpV,EAAOC,KACtB,cAAXA,GAGJkU,GAAiB,EAAM,GAS3BjT,EAAAA,EAAAA,YAAU,KACgB,OAAlB2T,QAAkB,IAAlBA,GAAAA,EAAoBtM,MAGpB,GAEL,CAACsM,IAKJ,OACIzU,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM4T,EACV2B,WAAY,CACR1U,MAAO,CACHiO,gBAAiB,OACjBT,UAAW,SAEjBzO,SAAA,EACFF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oDAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACVF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UACdF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC7BF,EAAAA,EAAAA,KAACiT,GAAW,CAAA/S,UACRU,EAAAA,EAAAA,MAACsV,GAAAA,EAAS,CAAAhW,SAAA,EACNU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAMd,yBAITU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAACjJ,WAAS,EAAAnN,SAAA,EAClBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAChK,GAAG,gBAAerM,SAAC,gBAC/BF,EAAAA,EAAAA,KAACwW,GAAAA,EAAM,CACHC,QAAQ,gBACRlK,GAAG,gBACHtD,KAAK,KACLuE,KAAK,SACLkJ,MAAM,aACNrJ,WAAS,EACTlM,MAAO,CAAEJ,MAAO,MAAOC,UAAW,SAClC2M,MAAO8H,EAAsBE,GAAKF,EAAsBE,GAAK,GAC7D/H,SAxIXpN,IACjCkV,GAA0BiB,IACf,IACAA,EACH,CAACnW,EAAMsN,OAAO7E,MAAOzI,EAAMsN,OAAOH,UAGhB,OAAtBnN,EAAMsN,OAAO7E,MAAiBuM,GAAW,EAAO,EAiI8BtV,SAGnB,OAAlBmV,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzM,KAAKgO,IACtB5W,EAAAA,EAAAA,KAAC6W,GAAAA,EAAQ,CAAqBlJ,MAAOiJ,EAAOE,OACxC3V,MAAO,CAAEiO,gBAAiB,QAASlP,SAElC0W,EAAOE,QAHGF,EAAOE,eAQjCvB,IAAYvV,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,6CAGjDU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAC,cAGxBF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,UACnBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAChK,GAAG,gBAAerM,SAAEgV,UAGxCtU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAC,8BAGxBU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EAC/BU,EAAAA,EAAAA,MAACkF,EAAAA,EAAM,CAACgB,UAAU,QAAQf,QAAQ,YAAYgR,WAAW/W,EAAAA,EAAAA,KAACgX,GAAAA,EAAe,IAAI9W,SAAA,CAAC,eAE1EF,EAAAA,EAAAA,KAACmT,GAAmB,CAACjS,KAAK,OAAO+H,KAAK,OAAOgO,OAAO,cAAcrJ,SAjM1FC,IACpBqJ,QAAQC,IAAI,iBACZ,MAAMC,EAAOvJ,EAAEC,OAAOuJ,MAAM,GAC5B,GAAID,EAAM,CACN,MAAME,EAAWF,EAAKnO,KAAKsO,MAAM,KAAKC,MACrB,SAAbF,GAAoC,QAAbA,GAEvBzC,EAAoBhH,EAAEC,OAAOuJ,MAAM,IACnCtC,EAAoBlH,EAAEC,OAAOuJ,MAAM,GAAGpO,MACtCsL,GAAe,KAEfA,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,MAE5B,MACIN,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,KACxB,OAgLyCP,IAAgBtU,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0CAEvB4U,IAAqB9U,EAAAA,EAAAA,KAAA,KAAAE,SAAI4U,WAGlC9U,EAAAA,EAAAA,KAACmW,GAAAA,EAAQ,CAAAjW,UACLU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACqB,QAAS,EAAEvX,SAAA,EAClBU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,KAEIgG,QAvFzB0R,KAEnB1D,EAAW2D,mBADQ,mDACwB,EAsFCC,SAAS,wBACTC,IAAI,aAGJ1W,MAAO,CAAEU,MAAO,OAAQkU,OAAQ,WAAY7V,SAC/C,eAEG,8EAORU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,sPAIhBU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,CAAC,cACtBF,EAAAA,EAAAA,KAAA,SAAM,cACNA,EAAAA,EAAAA,KAAA,SAAM,kBACFA,EAAAA,EAAAA,KAAA,SAAM,qBACHA,EAAAA,EAAAA,KAAA,6BAUjDY,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA5MC+R,KACrB,IAAIC,GAAW,EASf,IARiC,OAA7BvC,EAAsBE,IAAeF,EAAsBE,GAAG5M,OAAS,KACvEyM,GAAW,GACXwC,GAAW,IAEU,OAArBpD,GAA6BA,EAAiB7L,OAAS,KACvDwL,GAAe,GACfyD,GAAW,IAEXA,GAEqB,OAArBpD,EAA2B,CAE3B,GAAI3O,OAAOgS,QAAQ,qNAAsN,CACrO9D,GAAwB,GACxBE,GAAa,GAEb6C,QAAQC,IAAI,sBACZ,IAAIe,EAAW,CACX,KAAQtD,EACRuD,KAAM,CACFxC,GAAIF,EAAsBE,GAC1ByC,SAAUlD,IAKlBgC,QAAQC,IAAIe,EAAU,YACtBlE,EAAWqE,0BAA0BH,GAAUI,MAAMC,IACjDrB,QAAQC,IAAIoB,EAAU,kBACtB9D,EAAkB8D,GAClB5D,GAAiB,GACjBE,EAAoB,MACpBE,EAAoB,MACpBZ,GAAwB,GAExBE,GAAa,GACbvU,GAAa,GACY,aAAb,OAARyY,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,SACVxJ,GAAa,GACbsU,EAAY,CACRtT,SAAU,UACVO,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,OAEQ,YAAb,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,UACjBxJ,GAAa,GACbsU,EAAY,CACRtT,SAAU,QACVO,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAExB,GAOR,CACAtB,QAAQC,IAAI,yBAChB,GAgJ8CjX,SAAC,UACnCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QA5NR0S,KACtB7D,EAAoB,MACpBV,GAAwB,EAAM,EA0N2BjU,SAAC,kBAMtDF,EAAAA,EAAAA,KAACG,GAAAA,EAAQ,CACLG,KAAMoU,EACNiE,iBAAkB,IAClBpY,QAASqV,EACTxV,aAAc,CAAEC,SAAU,MAAON,WAAY,SAAUG,UAEvDU,EAAAA,EAAAA,MAACC,GAAK,CACFN,QAASqV,EACT9U,UAAW0T,GAAkC,OAAdA,QAAc,IAAdA,GAA+B,QAAjBjB,EAAdiB,EAAgBoE,uBAAe,IAAArF,GAA/BA,EAAiCxK,QAAyB,OAAdyL,QAAc,IAAdA,GAA6B,QAAfhB,EAAdgB,EAAgBqE,qBAAa,IAAArF,GAA7BA,EAA+BzK,OAAuB,QAAZ,UACrHrI,GAAI,CAAEK,MAAO,QAASb,SAAA,EAEtBF,EAAAA,EAAAA,KAACiB,GAAAA,EAAU,CAAAf,UAAGsU,GAAkC,OAAdA,QAAc,IAAdA,GAA+B,QAAjBf,EAAde,EAAgBoE,uBAAe,IAAAnF,GAA/BA,EAAiC1K,QAAyB,OAAdyL,QAAc,IAAdA,GAA6B,QAAfd,EAAdc,EAAgBqE,qBAAa,IAAAnF,GAA7BA,EAA+B3K,OAAuB,QAAZ,YAEnHyL,IAAiC,OAAdA,QAAc,IAAdA,GAA+B,QAAjBb,EAAda,EAAgBoE,uBAAe,IAAAjF,GAA/BA,EAAiC5K,QAAwB,OAAdyL,QAAc,IAAdA,GAA6B,QAAfZ,EAAdY,EAAgBqE,qBAAa,IAAAjF,GAA7BA,EAA+B7K,SAC1F/I,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIU,EAAAA,EAAAA,MAAA,OAAAV,SAAA,CACmB,OAAdsU,QAAc,IAAdA,OAAc,EAAdA,EAAgBgE,IAAI,KAACxY,EAAAA,EAAAA,KAAA,SAEH,OAAdwU,QAAc,IAAdA,GAAAA,EAAgBsE,sBAAyBlY,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,CAAE,yBACH,OAAdsU,QAAc,IAAdA,OAAc,EAAdA,EAAgBsE,qBAAqB,KAAC9Y,EAAAA,EAAAA,KAAA,SAAM,mBACpDA,EAAAA,EAAAA,KAAA,UACfA,EAAAA,EAAAA,KAAA,MAAAE,SAEsB,OAAdsU,QAAc,IAAdA,GAA+B,QAAjBX,EAAdW,EAAgBoE,uBAAe,IAAA/E,OAAjB,EAAdA,EAAiCjL,KAAKmQ,IAE9B/Y,EAAAA,EAAAA,KAAA,MAAAE,SACK6Y,GADI7P,IAAAA,oBAOrBlJ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAIO,OAAduU,QAAc,IAAdA,GAAAA,EAAgBwE,mBACbpY,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,CAAE,sBACoC,OAAdsU,QAAc,IAAdA,OAAc,EAAdA,EAAgBwE,kBAAkB,KAAChZ,EAAAA,EAAAA,KAAA,SAAM,gBACjDA,EAAAA,EAAAA,KAAA,UACZA,EAAAA,EAAAA,KAAA,MAAAE,SAEsB,OAAdsU,QAAc,IAAdA,GAA6B,QAAfV,EAAdU,EAAgBqE,qBAAa,IAAA/E,OAAf,EAAdA,EAA+BlL,KAAKmQ,IAE5B/Y,EAAAA,EAAAA,KAAA,MAAAE,SACK6Y,GADI7P,IAAAA,oBAQ5BlJ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,UAMjBD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIU,EAAAA,EAAAA,MAAA,OAAAV,SAAA,CACKsU,EAAegE,IAAI,KAACxY,EAAAA,EAAAA,KAAA,SAAM,8BACCwU,EAAeyE,gBAAgB,KAACjZ,EAAAA,EAAAA,KAAA,qBAQrF,G,+DCvXX,MAAMiT,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAC9B6D,WAAY,MACZ,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEtD,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBAmN3D,GA/MkChF,IACZ,IAAIwS,GAAAA,EAAtB,MACMmF,EAAyB,IAAIC,GAAAA,GAC7B,qBAAEC,EAAoB,wBAAEC,GAA4B9X,GAKnDuT,EAAkBC,IAAuB9J,EAAAA,EAAAA,UAAS,OAIlDrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OACnC,mBAAEoK,IAAuBC,EAAAA,GAAAA,MAGxBC,EAASC,IAAcvK,EAAAA,EAAAA,WAAS,IAChCwK,EAAuBC,IAA4BzK,EAAAA,EAAAA,UAAS,CAC/D0K,GAAI,GACJ2D,aAAc,eAoBZC,EAA+B/Y,IACjCkV,GAA0BiB,IACf,IACAA,EACH,CAACnW,EAAMsN,OAAO7E,MAAOzI,EAAMsN,OAAOH,UAGhB,OAAtBnN,EAAMsN,OAAO7E,MAAiBuM,GAAW,GAC7C0B,QAAQsC,KAAKhZ,EAAMsN,OAAQ,wBAAwB,EA4DvD,OAPApM,EAAAA,EAAAA,YAAU,KACgB,OAAlB2T,QAAkB,IAAlBA,GAAAA,EAAoBtM,MAGpB,GAEL,KAECnI,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM8Y,EACVvD,WAAY,CACR1U,MAAO,CACHiO,gBAAiB,OACjBT,UAAW,SAEjBzO,SAAA,EACFF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,kCAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACVF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UACdF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC7BF,EAAAA,EAAAA,KAACiT,GAAW,CAAA/S,UACRU,EAAAA,EAAAA,MAACsV,GAAAA,EAAS,CAAAhW,SAAA,EACNU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAMd,yBAITU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAACjJ,WAAS,EAAAnN,SAAA,EAClBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAChK,GAAG,gBAAerM,SAAC,gBAC/BF,EAAAA,EAAAA,KAACwW,GAAAA,EAAM,CACHC,QAAQ,gBACRlK,GAAG,gBACHtD,KAAK,KACLuE,KAAK,SACLkJ,MAAM,aACNrJ,WAAS,EACTlM,MAAO,CAAEJ,MAAO,MAAOC,UAAW,SAClC2M,MAAO8H,EAAsBE,GAAKF,EAAsBE,GAAK,GAC7D/H,SAAU2L,EAA4BrZ,SAGnB,OAAlBmV,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzM,KAAKgO,IACtB5W,EAAAA,EAAAA,KAAC6W,GAAAA,EAAQ,CAAqBlJ,MAAOiJ,EAAOE,OACxC3V,MAAO,CAAEiO,gBAAiB,QAASlP,SAElC0W,EAAOE,QAHGF,EAAOE,eAQjCvB,IAAYvV,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,6CAGjDU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAC,oBAGxBU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAE8N,WAAY,QAAS/O,UAC/BF,EAAAA,EAAAA,KAACsW,GAAAA,EAAW,CAAApW,UAERU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACPC,KAAG,EACH,kBAAgB,qCAChBzQ,KAAK,eACL0Q,aAAa,aAEb/L,SAAU2L,EAA4BrZ,SAAA,EAEtCF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,aAAakM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,iBAC/D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,YAAYkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,4BAIzE5B,IAAqB9U,EAAAA,EAAAA,KAAA,KAAAE,SAAI4U,sBAQtDlU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA/IC+R,KACrB,IAAIC,GAAW,EAKf,IAJiC,OAA7BvC,EAAsBE,IAAeF,EAAsBE,GAAG5M,OAAS,KACvEyM,GAAW,GACXwC,GAAW,GAEXA,EAAY,OAMhB,IAAIE,EAAW,CACX6B,IAAKtE,EAAsBE,GAC3B2D,aAAc7D,EAAsB6D,cAIxCpC,QAAQC,IAAIe,EAAU,YACtBgB,EAAuBc,yBAAyB9B,GAAUI,MAAMC,IAC5DrB,QAAQC,IAAIoB,EAAU,kBAItBxD,EAAoB,MAEpBjV,GAAa,GACbsU,EAAY,CACRtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAEpBa,GAAwB,EAAM,GAChC,EA+G4CnZ,SAAC,UACnCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QA/JR0S,KAEtBW,GAAwB,EAAM,EA6J2BnZ,SAAC,iBAMpDL,GACEG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACvEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACN,ECxNLgT,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAC9B6D,WAAY,MACZ,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEtD,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBA0J3D,GAtJ6ChF,IACvB,IAAIwS,GAAAA,EAAtB,MACMmF,EAAyB,IAAIC,GAAAA,GAC7B,sCAAEe,EAAqC,yCAAEC,GAA6C5Y,GACrFuT,EAAkBC,IAAuB9J,EAAAA,EAAAA,UAAS,OAClDrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OACnC,mBAAEoK,IAAuBC,EAAAA,GAAAA,MACxBC,EAASC,IAAcvK,EAAAA,EAAAA,WAAS,IAChCwK,EAAuBC,IAA4BzK,EAAAA,EAAAA,UAAS,CAC/D0K,GAAI,GACJ2D,aAAc,eAQZC,EAA+B/Y,IACjCkV,GAA0BiB,IACf,IACAA,EACH,CAACnW,EAAMsN,OAAO7E,MAAOzI,EAAMsN,OAAOH,UAGhB,OAAtBnN,EAAMsN,OAAO7E,MAAiBuM,GAAW,EAAO,EAyBxD,OACI5U,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM4Z,EACVrE,WAAY,CACR1U,MAAO,CACHiO,gBAAiB,OACjBT,UAAW,SAEjBzO,SAAA,EACFF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,yCAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACVF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UACdF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC7BF,EAAAA,EAAAA,KAACiT,GAAW,CAAA/S,UACRU,EAAAA,EAAAA,MAACsV,GAAAA,EAAS,CAAAhW,SAAA,EACNU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAMd,yBAITU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAACjJ,WAAS,EAAAnN,SAAA,EAClBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAChK,GAAG,gBAAerM,SAAC,gBAC/BF,EAAAA,EAAAA,KAACwW,GAAAA,EAAM,CACHC,QAAQ,gBACRlK,GAAG,gBACHtD,KAAK,KACLuE,KAAK,SACLkJ,MAAM,aACNrJ,WAAS,EACTlM,MAAO,CAAEJ,MAAO,MAAOC,UAAW,SAClC2M,MAAO8H,EAAsBE,GAAKF,EAAsBE,GAAK,GAC7D/H,SAAU2L,EAA4BrZ,SAGnB,OAAlBmV,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzM,KAAKgO,IACtB5W,EAAAA,EAAAA,KAAC6W,GAAAA,EAAQ,CAAqBlJ,MAAOiJ,EAAOE,OACxC3V,MAAO,CAAEiO,gBAAiB,QAASlP,SAElC0W,EAAOE,QAHGF,EAAOE,eAQjCvB,IAAYvV,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,6CAGjDU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAC,oBAGxBU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAE8N,WAAY,QAAS/O,UAC/BF,EAAAA,EAAAA,KAACsW,GAAAA,EAAW,CAAApW,UAERU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACPC,KAAG,EACH,kBAAgB,qCAChBzQ,KAAK,eACL0Q,aAAa,aAEb/L,SAAU2L,EAA4BrZ,SAAA,EAEtCF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,aAAakM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,iBAC/D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,YAAYkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,4BAIzE5B,IAAqB9U,EAAAA,EAAAA,KAAA,KAAAE,SAAI4U,sBAQtDlU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA5GC+R,KACrB,IAAIC,GAAW,EAKf,IAJiC,OAA7BvC,EAAsBE,IAAeF,EAAsBE,GAAG5M,OAAS,KACvEyM,GAAW,GACXwC,GAAW,GAEXA,EAAY,OAChB,IAAIE,EAAW,CACX6B,IAAKtE,EAAsBE,GAC3B2D,aAAc7D,EAAsB6D,cAExCJ,EAAuBkB,gCAAgClC,GAAUI,MAAMC,IACnErB,QAAQC,IAAIoB,EAAU,kBACtBxD,EAAoB,MACpBjV,GAAa,GACbsU,EAAY,CACRtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAEpB2B,GAAyC,EAAM,GACjD,EAwF4Cja,SAAC,UACnCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QA3HR0S,KAEtByB,GAAyC,EAAM,EAyHUja,SAAC,iBAMpDL,GACEG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACvEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACN,E,4BC5JX,MAAMgT,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAC9B6D,WAAY,MACZ,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEtD,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBA0J3D,GAtJwChF,IAClB,IAAIwS,GAAAA,EAAtB,MACMmF,EAAyB,IAAIC,GAAAA,GAC7B,iCAAEkB,EAAgC,oCAAEC,GAAwC/Y,GAC3EuT,EAAkBC,IAAuB9J,EAAAA,EAAAA,UAAS,OAClDrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OACnC,mBAAEoK,IAAuBC,EAAAA,GAAAA,MACxBC,EAASC,IAAcvK,EAAAA,EAAAA,WAAS,IAChCwK,EAAuBC,IAA4BzK,EAAAA,EAAAA,UAAS,CAC/D0K,GAAI,GACJ2D,aAAc,eAQZC,EAA+B/Y,IACjCkV,GAA0BiB,IACf,IACAA,EACH,CAACnW,EAAMsN,OAAO7E,MAAOzI,EAAMsN,OAAOH,UAGhB,OAAtBnN,EAAMsN,OAAO7E,MAAiBuM,GAAW,EAAO,EAyBxD,OACI5U,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+Z,EACVxE,WAAY,CACR1U,MAAO,CACHiO,gBAAiB,OACjBT,UAAW,SAEjBzO,SAAA,EACFF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oCAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACVF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UACdF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC7BF,EAAAA,EAAAA,KAACiT,GAAW,CAAA/S,UACRU,EAAAA,EAAAA,MAACsV,GAAAA,EAAS,CAAAhW,SAAA,EACNU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAMd,yBAITU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAACjJ,WAAS,EAAAnN,SAAA,EAClBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CAAChK,GAAG,gBAAerM,SAAC,gBAC/BF,EAAAA,EAAAA,KAACwW,GAAAA,EAAM,CACHC,QAAQ,gBACRlK,GAAG,gBACHtD,KAAK,KACLuE,KAAK,SACLkJ,MAAM,aACNrJ,WAAS,EACTlM,MAAO,CAAEJ,MAAO,MAAOC,UAAW,SAClC2M,MAAO8H,EAAsBE,GAAKF,EAAsBE,GAAK,GAC7D/H,SAAU2L,EAA4BrZ,SAGnB,OAAlBmV,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzM,KAAKgO,IACtB5W,EAAAA,EAAAA,KAAC6W,GAAAA,EAAQ,CAAqBlJ,MAAOiJ,EAAOE,OACxC3V,MAAO,CAAEiO,gBAAiB,QAASlP,SAElC0W,EAAOE,QAHGF,EAAOE,eAQjCvB,IAAYvV,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,6CAGjDU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAC,oBAGxBU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAE8N,WAAY,QAAS/O,UAC/BF,EAAAA,EAAAA,KAACsW,GAAAA,EAAW,CAAApW,UAERU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACPC,KAAG,EACH,kBAAgB,qCAChBzQ,KAAK,eACL0Q,aAAa,aAEb/L,SAAU2L,EAA4BrZ,SAAA,EAEtCF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,aAAakM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,iBAC/D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,YAAYkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,4BAIzE5B,IAAqB9U,EAAAA,EAAAA,KAAA,KAAAE,SAAI4U,sBAQtDlU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA5GC+R,KACrB,IAAIC,GAAW,EAKf,IAJiC,OAA7BvC,EAAsBE,IAAeF,EAAsBE,GAAG5M,OAAS,KACvEyM,GAAW,GACXwC,GAAW,GAEXA,EAAY,OAChB,IAAIE,EAAW,CACX6B,IAAKtE,EAAsBE,GAC3B2D,aAAc7D,EAAsB6D,cAExCJ,EAAuBqB,2BAA2BrC,GAAUI,MAAMC,IAC9DrB,QAAQC,IAAIoB,EAAU,kBACtBxD,EAAoB,MACpBjV,GAAa,GACbsU,EAAY,CACRtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAEpB8B,GAAoC,EAAM,GAC5C,EAwF4Cpa,SAAC,UACnCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QA3HR0S,KAEtB4B,GAAoC,EAAM,EAyHepa,SAAC,iBAMpDL,GACEG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACvEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACN,EC3KLua,IAAY7X,EAAAA,EAAAA,IAAO0E,EAAAA,GAAP1E,EAAkBhD,IAAA,IAAC,MAAEoC,EAAK,KAAE2P,GAAM/R,EAAA,MAAM,CACxDsH,SAAU,OACViD,UAAW,OACXhC,WAAY,OACZE,aAAc,OACd7B,cAAe,YACf1D,QAAkB,YAAT6O,GAAsB,OAC/B7P,MAAOE,EAAMkC,QAAQG,KAAKV,UAE3B,IAEK+W,GAAkB,CACtB5X,QAAS,OACT4D,SAAU,SACV+C,aAAc,MACd5G,OAAQ,GACR4D,WAAY,MACZ4B,aAAc,MACdsS,eAAgB,OAChB3X,eAAgB,gBAChB2L,WAAY,oBACZ,UAAW,CAAEnK,WAAY,6BACzB,mBAAoB,CAClBkC,SAAU,SACV1D,eAAgB,qBAElB,UAAW,CACTkE,SAAU,OACViI,YAAa,OACbC,aAAc,OACdrH,cAAe,WAGb6S,IAAehY,EAAAA,EAAAA,IAAO,IAAPA,EAAYsF,IAAA,IAAC,MAAElG,GAAOkG,EAAA,MAAM,IAC5CwS,GACH5Y,MAAOE,EAAMkC,QAAQG,KAAKX,QAC3B,IAEKmX,IAAejY,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,EAAY0F,IAAA,IAAC,MAAEtG,GAAOsG,EAAA,MAAM,CAC/C,MAAO,IACFoS,GACH5Y,MAAOE,EAAMkC,QAAQG,KAAKX,SAE5B,mBAAoB,CAClB2L,gBAAiB,6BAEpB,IAEKyL,IAAalY,EAAAA,EAAAA,IAAO4E,EAAAA,GAAP5E,EAAa4H,IAAA,IAAC,KAAEmH,EAAI,MAAE3P,GAAOwI,EAAA,MAAM,CACpDtD,SAAU,WACViI,YAAa,SACbrM,QAAkB,YAAT6O,GAAsB,OAC/B7P,MAAOE,EAAMkC,QAAQiN,OAAOC,MAC7B,IAGK2J,IAA0BnY,EAAAA,EAAAA,IAAO4E,EAAAA,GAAP5E,EAAa8H,IAAA,IAAC,KAAEiH,EAAI,MAAE3P,GAAO0I,EAAA,MAAM,CACjExD,SAAU,WACViI,YAAa,SACbrM,QAAkB,YAAT6O,GAAsB,OAC/B7P,MAAOE,EAAMkC,QAAQiN,OAAOC,MAC7B,IAEKG,IAAa3O,EAAAA,EAAAA,IAAO,MAAPA,EAAciE,IAAA,IAAC,MAAE7E,GAAO6E,EAAA,MAAM,CAC/CoD,QAAS,MACT9B,WAAY,OACZ8G,YAAa,MACbvI,SAAU,SACV+C,aAAc,QACdjF,WAAYxC,EAAMkC,QAAQiN,OAAOC,MAClC,IAEKK,IAAa7O,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MAC/BqH,QAAS,UACTvD,SAAU,SACV+C,aAAc,YAGVuR,GAAkB3T,IAAgB,IAAf,MAAE4T,GAAO5T,EAChC,MAAM,SAAEjF,EAAQ,eAAE8Y,IAAmB7Y,EAAAA,EAAAA,MAC9B8Y,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACrC,KAAEyG,GAASvP,EAASgZ,gBAAgBC,YACpCrZ,GAAQwG,EAAAA,GAAAA,KACR8S,GAAaC,EAAAA,GAAAA,GAAcvZ,EAAMwM,YAAYC,KAAK,QAIjD0F,EAAsBC,IAA2BlJ,EAAAA,EAAAA,WAAS,IAC1DmO,EAAsBC,IAA2BpO,EAAAA,EAAAA,WAAS,IAC1DiP,EAAuCC,IAA4ClP,EAAAA,EAAAA,WAAS,IAC5FrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCoP,EAAkCC,IAAuCrP,EAAAA,EAAAA,WAAS,GACnFsQ,EAA2B/a,IACjB,eAAVA,EACF2T,GAAwB,GACL,cAAV3T,EACT6Y,GAAwB,GACL,oCAAV7Y,EACT2Z,GAAyC,GACtB,+BAAV3Z,GACT8Z,GAAoC,EACtC,EAGIkB,EAAqBA,KACrBH,GACFI,EAAkB,CAAE/J,KAAM,SAC5B,EAGI+J,EAAqBC,IACzB,IAAIC,EAA2BxZ,EAASI,aAAe,WACnDqZ,EAAuBzZ,EAASwZ,GAEpCV,EAAe,IACV9Y,EACH,CAACwZ,GAA2B,IACvBC,EACHR,YAAa,IACRQ,EAAqBR,eACrBM,KAGP,EAGEG,EAAgB1D,GACbA,EAAKvP,KAAI,CAAClD,EAAMoD,IACH,UAAdpD,EAAKxE,MAELlB,EAAAA,EAAAA,KAACwa,GAAS,CAA0B9I,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACzEwF,EAAKgR,OADQxN,IAAAA,YAKhBxD,EAAKxF,UAELF,EAAAA,EAAAA,KAACyR,GAA6B,CAACC,KAAMA,EAAMhM,KAAMA,EAAKxF,UACpDF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAE+G,WAAY,QAAShI,SAChC2b,EAAanW,EAAKxF,cAIF,YAAdwF,EAAKxE,MAEZlB,EAAAA,EAAAA,KAAC2a,GAAY,CAEXmB,KAAMpW,EAAKsD,KACXzF,UAAW,GAAY,YAATmO,GAAsB,mBACpCmG,IAAI,sBACJ/J,OAAO,SAAQ5N,UAEfU,EAAAA,EAAAA,MAACyQ,GAAAA,EAAU,CAAiBpI,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,SAAA,CAEvDwF,EAAKmJ,MACA7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAMrD,SAAEwF,EAAKmJ,QAE7B7O,EAAAA,EAAAA,KAAA,QAAMuD,UAAU,sBAAqBrD,SAAEwF,EAAKwM,YAGvDlS,EAAAA,EAAAA,KAAC6a,GAAU,CAACnJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACjDwF,EAAKuD,QAERjJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC2Y,GAAG,SACPrW,EAAKyM,QAASnS,EAAAA,EAAAA,KAACwR,GAAU,CAAAtR,SAAEwF,EAAKyM,MAAMxE,UAZxBjI,EAAKuD,OANjBC,IAAAA,YAsBc,WAAdxD,EAAKxE,MAEZlB,EAAAA,EAAAA,KAAC4a,GAAY,CAAA1a,cAEM8b,IAAdtW,EAAKxE,MAAoC,WAAdwE,EAAKxE,MAAmC,UAAdwE,EAAKxE,MACzDlB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAEmB,WAAdwF,EAAKxE,MACJN,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAAAxI,UACNU,EAAAA,EAAAA,MAACyQ,GAAAA,EAAU,CAACrL,QAASA,KACnBuV,EAAwB7V,EAAKsD,KAAK,EACjBC,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,SAAA,CAC/C,OAAJwF,QAAI,IAAJA,GAAAA,EAAMmJ,MACL7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAO7C,GAAI,CAAEK,MAAO,IAAKb,SACtCwF,EAAKmJ,QAGRjO,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACFG,UAAU,kBACV7C,GAAI,CACFoM,GAAI,OACJ7F,SAAU,OACVpE,QAAkB,YAAT6O,GAAsB,QAC/BxR,SAEDwF,EAAKwM,eAIZlS,EAAAA,EAAAA,KAAC6a,GAAU,CAACnJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACjDwF,EAAKuD,QAGRjJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC2Y,GAAG,SAEPrW,EAAKyM,QACJnS,EAAAA,EAAAA,KAACwR,GAAU,CAACjO,UAAU,mBAAkBrD,SAAEwF,EAAKyM,MAAMxE,UA9BjDjI,EAAKuD,SAkCfjJ,EAAAA,EAAAA,KAACic,GAAmC,CAClC/B,sCAAuCA,EACvCC,yCAA0CA,QAI9Cna,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CACN1C,QAASwV,EACT7S,GAAI,GAAGjD,EAAKsD,OACZzF,UAAW+D,IAAA,IAAC,SAAE4U,GAAU5U,EAAA,OACtB4U,EACI,iBAA0B,YAATxK,GAAsB,mBACvC,GAAY,YAATA,GAAsB,kBAAkB,EAChDxR,UAEDU,EAAAA,EAAAA,MAACyQ,GAAAA,EAAU,CAAiBpI,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,SAAA,CACxD,OAAJwF,QAAI,IAAJA,GAAAA,EAAMmJ,MACL7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAO7C,GAAI,CAAEK,MAAO,IAAKb,SACtCwF,EAAKmJ,QAGRjO,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACFG,UAAU,kBACV7C,GAAI,CACFoM,GAAI,OACJ7F,SAAU,OACVpE,QAAkB,YAAT6O,GAAsB,QAC/BxR,SAEDwF,EAAKwM,eAIZlS,EAAAA,EAAAA,KAAC6a,GAAU,CAACnJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACjDwF,EAAKuD,QAGRjJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC2Y,GAAG,SAEPrW,EAAKyM,QACJnS,EAAAA,EAAAA,KAACwR,GAAU,CAACjO,UAAU,mBAAkBrD,SAAEwF,EAAKyM,MAAMxE,UA9BxCjI,EAAKuD,WAuC5BrI,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC4a,GAAY,CAAA1a,UACXF,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAAAxI,UACNF,EAAAA,EAAAA,KAACqR,GAAAA,EAAU,CAACrL,QAASA,KACnBuV,EAAwB7V,EAAKsD,KAAK,EACjBC,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,UACpDU,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAAC8a,GAAuB,CAACpJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SAC9DwF,EAAKuD,WAPJvD,EAAKuD,SAJEC,IAAAA,aAiBnBlJ,EAAAA,EAAAA,KAACmc,GAAuC,CACtCjI,qBAAsBA,EACtBC,wBAAyBA,EACzBrU,aAAcA,EACdsU,YAAaA,EACbC,aAAcA,IAGbxU,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGLib,GACElb,EAAAA,EAAAA,KAAA,OAAKuD,UAAU,kBAAiBrD,UAC9BF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,KAAMuZ,OAEdlb,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,QArIGiJ,IAAAA,YA4IE,WAAdxD,EAAKxE,MAEZlB,EAAAA,EAAAA,KAAC4a,GAAY,CAAA1a,cAEM8b,IAAdtW,EAAKxE,MAAoC,WAAdwE,EAAKxE,MAAmC,UAAdwE,EAAKxE,MACzDlB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAEmB,WAAdwF,EAAKxE,MACJN,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAAAxI,UACNU,EAAAA,EAAAA,MAACyQ,GAAAA,EAAU,CAACrL,QAASA,KACnBuV,EAAwB7V,EAAKsD,KAAK,EACjBC,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,SAAA,CAC/C,OAAJwF,QAAI,IAAJA,GAAAA,EAAMmJ,MACL7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAO7C,GAAI,CAAEK,MAAO,IAAKb,SACtCwF,EAAKmJ,QAGRjO,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACFG,UAAU,kBACV7C,GAAI,CACFoM,GAAI,OACJ7F,SAAU,OACVpE,QAAkB,YAAT6O,GAAsB,QAC/BxR,SAEDwF,EAAKwM,eAIZlS,EAAAA,EAAAA,KAAC6a,GAAU,CAACnJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACjDwF,EAAKuD,QAGRjJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC2Y,GAAG,SAEPrW,EAAKyM,QACJnS,EAAAA,EAAAA,KAACwR,GAAU,CAACjO,UAAU,mBAAkBrD,SAAEwF,EAAKyM,MAAMxE,UA9BjDjI,EAAKuD,SAkCfjJ,EAAAA,EAAAA,KAACoc,GAA8B,CAC7B/B,iCAAkCA,EAClCC,oCAAqCA,QAIzCta,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CACN1C,QAASwV,EACT7S,GAAI,GAAGjD,EAAKsD,OACZzF,UAAW8Y,IAAA,IAAC,SAAEH,GAAUG,EAAA,OACtBH,EACI,iBAA0B,YAATxK,GAAsB,mBACvC,GAAY,YAATA,GAAsB,kBAAkB,EAChDxR,UAEDU,EAAAA,EAAAA,MAACyQ,GAAAA,EAAU,CAAiBpI,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,SAAA,CACxD,OAAJwF,QAAI,IAAJA,GAAAA,EAAMmJ,MACL7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAO7C,GAAI,CAAEK,MAAO,IAAKb,SACtCwF,EAAKmJ,QAGRjO,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACFG,UAAU,kBACV7C,GAAI,CACFoM,GAAI,OACJ7F,SAAU,OACVpE,QAAkB,YAAT6O,GAAsB,QAC/BxR,SAEDwF,EAAKwM,eAIZlS,EAAAA,EAAAA,KAAC6a,GAAU,CAACnJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACjDwF,EAAKuD,QAGRjJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC2Y,GAAG,SAEPrW,EAAKyM,QACJnS,EAAAA,EAAAA,KAACwR,GAAU,CAACjO,UAAU,mBAAkBrD,SAAEwF,EAAKyM,MAAMxE,UA9BxCjI,EAAKuD,WAuC5BrI,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC4a,GAAY,CAAA1a,UACXF,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAAAxI,UACNF,EAAAA,EAAAA,KAACqR,GAAAA,EAAU,CAACrL,QAASA,KACnBuV,EAAwB7V,EAAKsD,KAAK,EACjBC,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,UACpDU,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAAC8a,GAAuB,CAACpJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SAC9DwF,EAAKuD,WAPJvD,EAAKuD,SAJEC,IAAAA,aAiBnBlJ,EAAAA,EAAAA,KAACmc,GAAuC,CACtCjI,qBAAsBA,EACtBC,wBAAyBA,EACzBrU,aAAcA,EACdsU,YAAaA,EACbC,aAAcA,IAGbxU,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGLib,GACElb,EAAAA,EAAAA,KAAA,OAAKuD,UAAU,kBAAiBrD,UAC9BF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,KAAMuZ,OAEdlb,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,QArIGiJ,IAAAA,aA8InBlJ,EAAAA,EAAAA,KAAC4a,GAAY,CAAA1a,cAEM8b,IAAdtW,EAAKxE,MAAoC,WAAdwE,EAAKxE,MAAmC,UAAdwE,EAAKxE,MACzDlB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAEmB,WAAdwF,EAAKxE,MACJN,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAAAxI,UACNU,EAAAA,EAAAA,MAACyQ,GAAAA,EAAU,CAACrL,QAASA,KACnBuV,EAAwB7V,EAAKsD,KAAK,EACjBC,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,SAAA,CAC/C,OAAJwF,QAAI,IAAJA,GAAAA,EAAMmJ,MACL7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAO7C,GAAI,CAAEK,MAAO,IAAKb,SACtCwF,EAAKmJ,QAGRjO,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACFG,UAAU,kBACV7C,GAAI,CACFoM,GAAI,OACJ7F,SAAU,OACVpE,QAAkB,YAAT6O,GAAsB,QAC/BxR,SAEDwF,EAAKwM,eAIZlS,EAAAA,EAAAA,KAAC6a,GAAU,CAACnJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACjDwF,EAAKuD,QAGRjJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC2Y,GAAG,SAEPrW,EAAKyM,QACJnS,EAAAA,EAAAA,KAACwR,GAAU,CAACjO,UAAU,mBAAkBrD,SAAEwF,EAAKyM,MAAMxE,UA9BjDjI,EAAKuD,SAkCfjJ,EAAAA,EAAAA,KAACsc,GAAwB,CACvBlD,qBAAsBA,EACtBC,wBAAyBA,QAI7BrZ,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CACN1C,QAASwV,EACT7S,GAAI,GAAGjD,EAAKsD,OACZzF,UAAWiE,IAAA,IAAC,SAAE0U,GAAU1U,EAAA,OACtB0U,EACI,iBAA0B,YAATxK,GAAsB,mBACvC,GAAY,YAATA,GAAsB,kBAAkB,EAChDxR,UAEDU,EAAAA,EAAAA,MAACyQ,GAAAA,EAAU,CAAiBpI,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,SAAA,CACxD,OAAJwF,QAAI,IAAJA,GAAAA,EAAMmJ,MACL7O,EAAAA,EAAAA,KAACmI,EAAAA,EAAI,CAAC5E,UAAU,OAAO7C,GAAI,CAAEK,MAAO,IAAKb,SACtCwF,EAAKmJ,QAGRjO,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACFG,UAAU,kBACV7C,GAAI,CACFoM,GAAI,OACJ7F,SAAU,OACVpE,QAAkB,YAAT6O,GAAsB,QAC/BxR,SAEDwF,EAAKwM,eAIZlS,EAAAA,EAAAA,KAAC6a,GAAU,CAACnJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SACjDwF,EAAKuD,QAGRjJ,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC2Y,GAAG,SAEPrW,EAAKyM,QACJnS,EAAAA,EAAAA,KAACwR,GAAU,CAACjO,UAAU,mBAAkBrD,SAAEwF,EAAKyM,MAAMxE,UA9BxCjI,EAAKuD,WAuC5BrI,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC4a,GAAY,CAAA1a,UACXF,EAAAA,EAAAA,KAAC0I,EAAAA,QAAO,CAAAxI,UACNF,EAAAA,EAAAA,KAACqR,GAAAA,EAAU,CAACrL,QAASA,KACnBuV,EAAwB7V,EAAKsD,KAAK,EACjBC,KAAK,QAAQvI,GAAI,CAAEK,MAAO,QAASb,UACpDU,EAAAA,EAAAA,MAACmP,EAAAA,SAAQ,CAAA7P,SAAA,EACPF,EAAAA,EAAAA,KAACsR,GAAU,CACT/N,UAAW,aACX7C,GAAI,CAAEmC,QAAkB,YAAT6O,GAAsB,WAEvC1R,EAAAA,EAAAA,KAAC8a,GAAuB,CAACpJ,KAAMA,EAAMnO,UAAU,mBAAkBrD,SAC9DwF,EAAKuD,WAPJvD,EAAKuD,SAJEC,IAAAA,aAiBnBlJ,EAAAA,EAAAA,KAACmc,GAAuC,CACtCjI,qBAAsBA,EACtBC,wBAAyBA,EACzBrU,aAAcA,EACdsU,YAAaA,EACbC,aAAcA,IAGbxU,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGLib,GACElb,EAAAA,EAAAA,KAAA,OAAKuD,UAAU,kBAAiBrD,UAC9BF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,KAAMuZ,OAEdlb,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,QArIGiJ,IAAAA,cAgJ3B,OAAOlJ,EAAAA,EAAAA,KAAA,OAAKuD,UAAU,aAAYrD,SAAE2b,EAAab,IAAa,EAGhE,GAAevZ,EAAAA,KAAWsZ,I,gBCrmB1B,MAAMwB,IAAW5Z,EAAAA,EAAAA,GAAO6Z,GAAAA,EAAP7Z,EAAa,MAC5BC,OAAQ,OACRoH,QAAS,gBAGLyS,IAAY9Z,EAAAA,EAAAA,GAAO,MAAPA,EAAchD,IAAA,IAAC,SAAE+c,GAAU/c,EAAA,MAAM,CACjDsH,SAAU,OACV7F,WAAY,MACZmF,cAAe,aACf6B,cAAesU,GAAY,OAC5B,IAYD,GAVmBzU,IAA0C,IAAzC,SAAE/H,EAAQ,MAAEyc,EAAK,SAAED,EAAQ,KAAE7N,GAAM5G,EACrD,OACErH,EAAAA,EAAAA,MAAC2b,GAAQ,CAACjM,UAAW,EAAEpQ,SAAA,EACrBF,EAAAA,EAAAA,KAACyc,GAAS,CAACC,SAAUA,EAASxc,SAAEyc,IAC/BD,IAAY1c,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC1C,GAAI,CAAEqG,GAAI,GAAI7G,SAAEwc,IACjCxc,IACQ,E,UCpBc0c,EAAAA,EAAAA,KAAWjd,IAAA,IAAC,QAAEsE,KAAYlC,GAAOpC,EAAA,MAAM,CAChE,UAAW,CACP,SAAU,CACNwP,aAAc,OACdD,YAAa,OACb,CAACnN,EAAMwM,YAAYC,KAAK,OAAQ,CAC5BW,aAAc,OACdD,YAAa,SAGrB,YAAa,CACTlF,QAAS,WACT,CAACjI,EAAMwM,YAAYC,KAAK,OAAQ,CAC5BxE,QAAS,aAGjB,WAAY,CACRA,QAAS,kBACT,CAACjI,EAAMwM,YAAYC,KAAK,OAAQ,CAC5BxE,QAAS,oBAGjB,YAAa,CACTA,QAAS,sBACT,CAACjI,EAAMwM,YAAYC,KAAK,OAAQ,CAC5BxE,QAAS,wBAGjB,YAAa,CACTiF,WAAY,kBACZ,CAAClN,EAAMwM,YAAYC,KAAK,OAAQ,CAC5BS,WAAY,oBAGpB,YAAa,CACTC,YAAa,kBACb,CAACnN,EAAMwM,YAAYC,KAAK,OAAQ,CAC5BU,YAAa,oBAGrB,UAAW,CAAEtH,OAAQ,mBACrB,WAAY,CACRM,WAAY,kBACZ8G,YAAa,mBAEjB,WAAY,CACR9E,UAAW,kBACX9B,aAAc,mBAElB,WAAY,CACRR,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAC5B5G,OAAQ,SAGhB,YAAa,CACTQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAC5BpG,aAAc,SAGtB,UAAW,CAAErH,MAAO,QACpB,eAAgB,CAAEc,MAAO,WACzB,cAAe,CAAEuI,SAAU,mBAC3B,cAAe,CAAEyS,SAAU,mBAC3B,qBAAsB,CAAEA,SAAU,oBAClC,iBAAkB,CAAE9b,MAAO,SAC3B,aAAc,CAAE8b,SAAU,SAC1B,aAAc,CAAEA,SAAU,SAC1B,cAAe,CAAEA,SAAU,UAC3B,aAAc,CAAEzS,SAAU,SAC1B,aAAc,CAAEA,SAAU,SAC1B,aAAc,CAAEpJ,UAAW,SAC3B,aAAc,CAAEoJ,SAAU,SAC1B,aAAc,CAAEA,SAAU,SAC1B,aAAc,CAAEA,SAAU,SAC1B,aAAc,CAAEA,SAAU,SAC1B,aAAc,CAAEA,SAAU,SAC1B,cAAe,CAAEA,SAAU,UAC3B,UAAW,CAAExH,OAAQ,mBACrB,cAAe,CAAEka,UAAW,mBAC5B,UAAW,CAAEla,OAAQ,QACrB,iBAAkB,CAAEA,OAAQ,SAC5B,qBAAsB,CAAEka,UAAW,oBACnC,WAAY,CAAEla,OAAQ,oBACtB,WAAY,CAAEA,OAAQ,kBAAmB7B,MAAO,mBAChD,WAAY,CAAE6B,OAAQ,kBAAmB7B,MAAO,sBAC7Cgc,GAAsB,EAAG,GAAI,IAAM,UACnCA,GAAsB,EAAG,GAAI,EAAG,SAChCA,IAAuB,IAAK,EAAG,IAAM,UACrCA,IAAuB,IAAK,EAAG,EAAG,SAClCC,MAEV,IA7FM,MA+FDD,GAAwB,WAKxB,IAHFE,EAAGC,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,GACNC,EAAUD,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,IACbE,EAAIF,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,MAEHG,EAAY,CAAC,EAEjB,IAAK,IAAIC,EAPJJ,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,EAOYI,GAAKL,EAAKK,IAC1BD,EAAU,MAAMC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAC/CxV,OAAQ,GAAG0V,EAAIH,IAAaC,gBAEhCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDlT,UAAW,GAAGoT,EAAIH,IAAaC,gBAEnCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDhV,aAAc,GAAGkV,EAAIH,IAAaC,gBAEtCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDpO,YAAa,GAAGsO,EAAIH,IAAaC,gBAErCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDlV,WAAY,GAAGoV,EAAIH,IAAaC,gBAEpCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDlV,WAAY,GAAGoV,EAAIH,IAAaC,eAChCpO,YAAa,GAAGsO,EAAIH,IAAaC,gBAErCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDlT,UAAW,GAAGoT,EAAIH,IAAaC,eAC/BhV,aAAc,GAAGkV,EAAIH,IAAaC,gBAGtCC,EAAU,MAAMC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAC/CpT,QAAS,GAAGsT,EAAIH,IAAaC,gBAEjCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDnO,WAAY,GAAGqO,EAAIH,IAAaC,gBAEpCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDvV,cAAe,GAAGyV,EAAIH,IAAaC,gBAEvCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDjO,aAAc,GAAGmO,EAAIH,IAAaC,gBAEtCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDlO,YAAa,GAAGoO,EAAIH,IAAaC,gBAErCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDlO,YAAa,GAAGoO,EAAIH,IAAaC,eACjCjO,aAAc,GAAGmO,EAAIH,IAAaC,gBAEtCC,EAAU,OAAOC,IAAa,OAATF,EAAgB,KAAO,MAAQ,CAChDnO,WAAY,GAAGqO,EAAIH,IAAaC,eAChCvV,cAAe,GAAGyV,EAAIH,IAAaC,gBAI3C,OAAOC,CACX,EAEML,GAAqB,WAKrB,IAHFC,EAAGC,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,IACNC,EAAUD,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,EACbE,EAAIF,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,KAEHG,EAAY,CAAC,EAEjB,IAAK,IAAIC,EAPJJ,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,EAOYI,GAAKL,EAAKK,GAAKH,EAC/BE,EAAU,MAAMC,KAAO,CACnBvc,MAAO,GAAGuc,IAAIF,gBAElBC,EAAU,UAAUC,KAAO,CACvBT,SAAU,GAAGS,IAAIF,gBAErBC,EAAU,UAAUC,KAAO,CACvBlT,SAAU,GAAGkT,IAAIF,gBAErBC,EAAU,MAAMC,KAAO,CACnB1a,OAAQ,GAAG0a,IAAIF,gBAEnBC,EAAU,UAAUC,KAAO,CACvBR,UAAW,GAAGQ,IAAIF,gBAEtBC,EAAU,UAAUC,KAAO,CACvBtc,UAAW,GAAGsc,IAAIF,gBAI1B,OAAOC,CACX,ECjLME,KCTsBX,EAAAA,EAAAA,KAAWjd,IAAA,IAAC,QAAEsE,KAAYlC,GAAOpC,EAAA,MAAM,CAC/D,UAAW,CACP,wBAAyB,CACrBiD,OAAQ,OACR7B,MAAO,OACPyI,aAAc,MACd/C,SAAU,UAEd,QAAS,CAAEiI,WAAY,iBACvB,cAAe,CAAEC,UAAW5M,EAAM6M,QAAQ,KAC1C,cAAe,CACX3H,SAAU,OACVV,cAAe,aACfnF,WAAY,OAEhB,iBAAkB,CAAE6F,SAAU,WAAYpF,MAAO,qBACjD,6BAA8B,CAAEA,MAAO,6BACvC,kBAAmB,CAAEgB,QAAS,WAC9B,uCAAwC,CACpC,kBAAmB,CAAEA,QAAS,mBAC9B,kBAAmB,CAAEA,QAAS,sBAC9B,mBAAoB,CAAE2a,WAAY,YAEtC,wCAAyC,CACrC,cAAe,CAAE3a,QAAS,oBAE9B,wCAAyC,CACrC,cAAe,CAAEA,QAAS,oBAE9B,wBAAyB,CAAED,OAAQ,mBACnC,mBAAoB,CAAE+L,UAAW,mBACjC,aAAc,CAAE/L,OAAQ,kBAAmB7B,MAAO,mBAClD,aAAc,CACV6B,OAAQ,kBACRka,UAAW,kBACX/b,MAAO,mBAEX,0BAA2B,CAAE+b,UAAW,mBACxC,2BAA4B,CAAE7V,SAAU,mBACxC,kBAAmB,CAAEpE,QAAS,mBAC9B,mBAAoB,CAAE2a,WAAY,UAClC,oBAAqB,CAAEhX,WAAY,YACnC,kBAAmB,CACfuP,OAAQ,WAEZ,eAAgB,CACZA,OAAQ,QAEZ,UAAW,CACPnT,OAAQ,kBACR7B,MAAO,mBAEX,wCAAyC,CACrCmH,WAAY,wBAEhB,aAAc,CACVuV,QAAS,GAEb,oBAAqB,CACjBA,QAAS,IAGpB,IDrDiB9d,IAAmB,IAAlB,SAAEO,GAAUP,EAU3B,OAAOO,GAAY,IAAI,GAG3B,GAAeuB,EAAAA,KAAW8b,G,gQEZ1B,MAAMG,GAAkB/a,EAAAA,EAAAA,IAAO2Q,EAAAA,EAAP3Q,EAAehD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CACnD,2BAA4B,CACxBqK,QAASjI,EAAM0D,QAAQ,IAE3B,2BAA4B,CACxBuE,QAASjI,EAAM0D,QAAQ,IAE9B,IAEc,SAASkY,EAAiB1V,GAA0C,IAAzC,aAAE2V,EAAY,qBAAEC,GAAsB5V,EAC5E,MAAO3H,EAAMkB,GAAWC,EAAAA,UAAe,GAEjCqO,EAAcA,CAACtP,EAAOC,KAET,kBAAXA,GAAyC,kBAAXA,IAGlCe,GAAQ,GACRqc,IAAsB,EAO1B,OAJAnc,EAAAA,EAAAA,YAAU,KACNF,EAAQoc,EAAa,GACtB,CAACA,KAGA5d,EAAAA,EAAAA,KAACyB,EAAAA,SAAc,CAAAvB,UACXU,EAAAA,EAAAA,MAAC8c,EAAe,CACZnd,QAASuP,EACT,kBAAgB,0BAChBxP,KAAMA,EAAKJ,SAAA,EAEXF,EAAAA,EAAAA,KAAC8V,EAAAA,EAAW,CAACpV,GAAI,CAAEod,EAAG,EAAGjR,EAAG,GAAKN,GAAG,0BAAyBrM,SAAC,sCAG9DF,EAAAA,EAAAA,KAAC2M,EAAAA,EAAU,CACP,aAAW,QACX3G,QAAS8J,EACTpP,GAAKqB,IAAK,CACNiB,SAAU,WACVE,MAAO,EACPvC,IAAK,EACLkB,MAAOE,EAAMkC,QAAQ8Z,KAAK,OAC3B7d,UAEHF,EAAAA,EAAAA,KAACge,EAAAA,EAAS,OAEdhe,EAAAA,EAAAA,KAACgW,EAAAA,EAAa,CAACiI,UAAQ,EAAA/d,UACnBU,EAAAA,EAAAA,MAACsd,EAAAA,EAAU,CAACC,cAAY,EAAAje,SAAA,CAAC,gGAErBF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAS,wCAIjBA,EAAAA,EAAAA,KAAC8X,EAAAA,EAAa,CAAA5X,UACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAAS8J,EAAY5P,SAAC,eAO5D,C,eChEA,MAAMke,GAAwBC,EAAAA,EAAAA,eAAc,CACxCnD,WAAW,EACXoD,YAAa,KACbC,cAAe,KACflJ,mBAAoB,KACpBmJ,cAAe,GACfC,iBAAkB,GAClBC,qBAAsB,GACtBC,aAAa,EACbC,oBAAqBA,IAAM,KAC3BC,yBAA0BA,IAAM,KAChCC,oBAAqBA,IAAM,GAC3BC,kBAAmBA,IAAM,GACzBC,2BAA4BA,IAAM,GAClCC,kBAAmBA,IAAM,OAGhBC,EAAyBvf,IAAmB,IAAlB,SAAEO,GAAUP,EAC/C,MAAM,UAAEwf,EAAS,YAAEC,IAAgBC,EAAAA,EAAAA,OAC7B,oBACFC,IACAC,EAAAA,EAAAA,KAAaC,IAAK,CAClBF,oBAAqBE,EAAMC,oBAAoBC,MAC/CC,EAAAA,IAGEC,EAAiB,IAAIzG,EAAAA,EACrB0G,EAAc,IAAIC,EAAAA,EAClBC,GAAWC,EAAAA,EAAAA,MACX9Z,GAAW+L,EAAAA,EAAAA,OACVqM,EAAa2B,IAAkBhV,EAAAA,EAAAA,UAAS,OACxCiV,EAAmBC,IAAwBlV,EAAAA,EAAAA,WAAS,IACpDiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAEpCsT,EAAe6B,IAAoBnV,EAAAA,EAAAA,UAASkK,aAAaC,QAAQ,kBAAoB,OACrFwI,EAAcyC,IAAmBpV,EAAAA,EAAAA,WAAS,IAC1CoK,EAAoBiL,IAAyBrV,EAAAA,EAAAA,UAAS,OACtDuT,EAAe+B,IAAoBtV,EAAAA,EAAAA,UAAS,KAC5CwT,EAAkB+B,IAAuBvV,EAAAA,EAAAA,UAAS,KAClDyT,EAAsB+B,IAA2BxV,EAAAA,EAAAA,UAAS,KAC1D0T,EAAa+B,IAAkBzV,EAAAA,EAAAA,WAAS,GAKzC4T,EAA4B8B,IAC9BL,EAAsBK,EAAO,EAE3B7B,EAAuB6B,IACzBJ,EAAiBI,GACjBH,EAAoBG,EAAO,EAEzB5B,EAAqB4B,IACvBH,EAAoBG,GACpBJ,EAAiBI,EAAO,EAEtB3B,EAA8B2B,IAChCF,EAAwBE,EAAO,EAE7B1B,EAAqB0B,IACvBD,EAAeC,EAAO,EA0F1B,OA3EAjf,EAAAA,EAAAA,YAAU,KACF4c,IAAmC,OAApBI,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB3V,SAAU,GAC3CoW,GAAaA,EAAUyB,kBAIvB3B,GAAkB,GAClBW,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EAAAC,EAAAC,EAAAC,EACrDlC,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzCrC,EAA0B,OAANgC,QAAM,IAANA,GAAY,QAANE,EAANF,EAAQ3I,YAAI,IAAA6I,OAAN,EAANA,EAAcI,cAClCvC,EAA+B,OAANiC,QAAM,IAANA,GAAY,QAANG,EAANH,EAAQ3I,YAAI,IAAA8I,OAAN,EAANA,EAAcI,QAEvCtC,EAAwB,OAAN+B,QAAM,IAANA,GAAY,QAANI,EAANJ,EAAQ3I,YAAI,IAAA+I,OAAN,EAANA,EAAcE,cAEhCnC,GAAkB,EAAM,KAIhCE,GAAaA,EAAUyB,iBAAmBxB,GAC1CA,EAAYkC,iBAAiBhJ,MAAMiJ,IAC/BrK,QAAQC,IAAI,iBAAkBoK,EAAY,GAElD,GACD,CAACpC,EAAWC,EAAad,KAE5B5c,EAAAA,EAAAA,YAAU,KACO,OAATyd,QAAS,IAATA,GAAAA,EAAWyB,kBAAoBtC,IAC/BjK,GAAa,GACbwL,EAAY2B,eAAelJ,MAAMwI,IAGrB,IAADW,EAFe,UAAlBX,EAAOxX,OACPyW,EAAS,gBAAiB,CAAEP,MAAO,CAAEkC,SAAgB,OAANZ,QAAM,IAANA,OAAM,EAANA,EAAQ3I,KAAK,GAAIwJ,eAAe,KAErE,OAANb,QAAM,IAANA,GAAY,QAANW,EAANX,EAAQ3I,YAAI,IAAAsJ,GAAZA,EAAc1Y,SACdkX,EAAqB,OAANa,QAAM,IAANA,OAAM,EAANA,EAAQ3I,KAAK,IAC5B9D,GAAa,GAErB,IACDuN,OAAMC,IACLxN,GAAa,GACb8L,GAAqB,EAAK,IAElC,GACD,CAAChB,KAEJzd,EAAAA,EAAAA,YAAU,KACNwV,QAAQC,IAAImI,EAAqB,4BAEjC,MAAMwC,EAAqBthB,IAAW,IAADuhB,EAEjC,GAAY,OAAR7b,QAAQ,IAARA,GAAkB,QAAV6b,EAAR7b,EAAU8L,gBAAQ,IAAA+P,GAAlBA,EAAoBC,SAAS,aAC7B,OAAO,EAEX,MAAMtC,EAAKvK,aAAaC,QAAQ,iBAEhC8B,QAAQC,IAAIoH,EAAe,+BAC3BrH,QAAQC,IAAIuI,EAAI,iCAIZA,GAAMA,IAAOnB,IAEb8B,GAAgB,GAChBnJ,QAAQC,IAAIuI,EAAI,iCACpB,EAMJ,OAHAzZ,OAAOgc,iBAAiB,UAAWH,GAG5B,KACH7b,OAAOic,oBAAoB,UAAWJ,EAAkB,CAC3D,KAKDlhB,EAAAA,EAAAA,MAACwd,EAAsB+D,SAAQ,CAC3BxU,MAAO,CACHuN,YACAoD,cACAC,gBACAlJ,qBACAmJ,gBACAC,mBACAC,uBACAC,cACAC,oBAvHiB+B,IACzBP,EAAiBO,EAAO,EAuHhB9B,2BACAC,sBACAC,oBACAC,6BACAC,qBACF/e,SAAA,CAGa,OAATif,QAAS,IAATA,GAAAA,EAAWyB,iBACT5gB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAEUggB,GAQGlgB,EAAAA,EAAAA,KAACqF,EAAAA,EAAc,KAPhBrF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACMoe,IAAgBpD,EAAahb,GAC3BF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,SAAUe,SAAU,WAAYjC,MAAO,OAAQJ,IAAK,OAAQT,UACjFF,EAAAA,EAAAA,KAACkC,EAAAA,EAAgB,UAPZhC,EAiBhC0d,GAAiB5d,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACdF,EAAAA,EAAAA,KAAC2d,EAAiB,CAACC,aAAcA,EAAcC,qBA7HlCA,KAAO,IAADuE,EAC/B,GAAY,OAARlc,QAAQ,IAARA,GAAkB,QAAVkc,EAARlc,EAAU8L,gBAAQ,IAAAoQ,GAAlBA,EAAoBJ,SAAS,aAC7B/b,OAAOC,SAASC,aACb,CACH,MAAMuZ,EAAKvK,aAAaC,QAAQ,iBAC5BsK,GACAU,EAAiBV,EAEzB,CACAW,GAAgB,EAAM,MAqHN,OAEiB,EAIzC,G,iHC5MO,MAAMgC,EAAa,CACxBC,SAAU,CACRC,eAAgB,CACd7U,KAAM,CACJ8U,YAAa,WAInBC,aAAc,CACZF,eAAgB,CACdG,KAAM,CACJzb,SAAU,OACV+C,QAAS,YAEX0D,KAAM,CACJzG,SAAU,OACVT,WAAY,WACZ6D,UAAW,YACXL,QAAS,uBAIf2Y,uBAAwB,CACtBJ,eAAgB,CACd7U,KAAM,CACJwB,YAAa,MAInB0T,qBAAsB,CACpBL,eAAgB,CACd7U,KAAM,CACJwB,YAAa,MAInB2T,qBAAsB,CACpBN,eAAgB,CACd7U,KAAM,CACJwB,YAAa,KAInB4T,UAAW,CACTP,eAAgB,CACd7U,KAAM,CACJzG,SAAU,OACVV,cAAe,OACfnF,WAAY,OAEd2hB,UAAW,CACTpU,UAAWvJ,EAAAA,EAAa,MAI9B4d,eAAgB,CACdT,eAAgB,CACd,IAAK,CACHU,UAAW,cAEbC,KAAM,CACJC,oBAAqB,YACrBC,oBAAqB,cACrBxgB,OAAQ,OACR7B,MAAO,QAETsiB,KAAM,CACJzgB,OAAQ,QAEV0gB,EAAG,CACD5I,eAAgB,OAChB7Y,MAAO,WAET,QAAS,CACPe,OAAQ,QAEV,kBAAmB,CACjBd,OAAQ,qBAIdyhB,OAAQ,CACNhB,eAAgB,CACd7U,KAAM,CACJiB,UAAWvJ,EAAAA,EAAa,OAI9Boe,aAAc,CACZjB,eAAgB,CACd7U,KAAM,CACJ,WAAY,CACV7K,QAAS,WAKjB4gB,WAAY,CACVlB,eAAgB,CACdmB,QAAS,CACPzc,SAAU,UAIhB0c,YAAa,CACXpB,eAAgB,CACd7U,KAAM,CACJzG,SAAU,cAIhB2c,kBAAmB,CACjBrB,eAAgB,CACd7U,KAAM,CACJ,WAAY,CACV7K,QAAS,WAKjBghB,QAAS,CACPtB,eAAgB,CACd7U,KAAM,CACJlE,aAAc,MACdmF,UACE,oHClHV,EAVqB,CACnBmV,WAAY,CACV7c,SAAU,GACV8c,MAAO,CAAE9c,SAAU,SAGrBqC,OAAQ,CAAE0a,OAAQ7e,EAAAA,EAAI,MACtBkd,WAAY,IAAKA,ICIZ,MCVM4B,EAAqB,CAChC1hB,aAAc,UACd6N,YAAa,OACb8T,kBAAkB,EAElB/T,ODJF,WACE,IAAIA,EAAS,CAAC,EAMd,OAJAgU,EAAAA,EAAAA,SAAQpgB,EAAAA,GAAa,CAAC4J,EAAOK,KAC3BmC,EAAOnC,IAAOoW,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,OAAM,CAAC,EAAGC,EAAc3W,GAAO,IAGpDwC,CACT,CACsBoU,GCJpBpJ,gBCVsB,CACtBC,YAAa,CACXzZ,MAAM,EACN+P,KAAM,OACN3P,MAAO,aACPyiB,SAAU,8CAEZC,OAAQ,CACN9iB,MAAM,EACN+iB,OAAO,EACP3iB,MAAO,cDET4iB,iBAAkB,CAChBhjB,MAAM,EACNrB,MAAM,EACNyB,MAAO,cAGT6iB,OAAQ,CACNjjB,MAAM,EACN+iB,OAAO,EACP3iB,MAAO,e,eEjBX,MAAM8iB,GAAkBxG,EAAAA,EAAAA,eAAc,CAClClc,SAAU8hB,EACVhJ,eAAgBA,SAGP6J,EAAmBnlB,IAA6B,IAA5B,SAAEwC,EAAQ,SAAEjC,GAAUP,EACnD,MAAOolB,EAAiBC,IAAsB/Z,EAAAA,EAAAA,UAC1C9I,GAAY8hB,GAGVgB,EAAuB,WAAkB,IAAjBC,EAAMhI,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEpC,MAAMiI,GAASd,EAAAA,EAAAA,OAAM,CAAC,EAAGU,EAAiBG,GAC1CF,EAAmBG,EACvB,EAGMC,GAAeC,EAAAA,EAAAA,UAAQ,MACzBljB,SAAU4iB,EACV9J,eAAgBgK,KAChB,CAACF,IAEL,OACI/kB,EAAAA,EAAAA,KAAC6kB,EAAgB1C,SAAQ,CAACxU,MAAOyX,EAAallB,SACzCA,GACsB,EAInC,G,0EC9BA,MAEA,EAF0BoV,KAAMgQ,EAAAA,EAAAA,YAAWlH,EAAAA,E,yECA3C,MAEA,EAFoBhc,KAAMkjB,EAAAA,EAAAA,YAAWT,EAAAA,E,oFCOrC,MAAMU,EAAe,CACnBC,mBAAmB,EACnBC,SAAU,SACVC,SAAU,CAAC,EACXC,QAAS,CAAC,EACVC,aAAc,CACZC,cAAe,IAEjBC,kBAAmB,GACnBC,wBAAyB,GACzBC,kBAAmB,KACnBC,sBAAsB,EACtBC,sBAAsB,EACtBC,gBAAiB,CAAC,EAClBC,oBAAqB,CAAC,EACtBC,iBAAkB,KAClBC,UAAW,GACXC,OAAQ,GACRC,OAAQ,GACRC,aAAc,GACdC,WAAY,CAAC,EACbC,qBAAsB,GACtBC,2BAA4B,GAC5BC,oBAAqB,GAErBC,UAAW,GACXC,kBAAmB,CAAC,EACpBC,cAAe,CAAC,EAChBC,oBAAqB,GACrBC,oBAAqB,CAAC,EACtBC,kBAAmB,GACnBC,wBAAyB,CAAC,EAC1BC,gBAAiB,CAAC,EAClBC,eAAgB,CAAC,EACjBC,kBAAkB,EAClBC,iBAAkB,CAAC,EACnBC,gBAAiB,CAAC,GAyDpB,EAtD0B,WAAyC,IAA/BjI,EAAKtC,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAGqI,EAAchW,EAAM2N,UAAAnU,OAAA,EAAAmU,UAAA,QAAAlB,EAC9D,OAAQzM,EAAOrO,MACb,KAAKwmB,EAAAA,GACH,MAAO,IACFlI,EACHmI,cAAepY,EAAOqY,SAE1B,KAAKC,EAAAA,GACH,MAAO,IAAKtY,EAAOqY,SAErB,KAAKE,EAAAA,GASL,KAAKC,EAAAA,GACH,MAAO,IACFvI,EACHoG,aAAc,IACTpG,EAAMoG,gBACNrW,EAAOqY,UAIhB,KAAKI,EAAAA,GACH,MAAO,IACFxI,KACAjQ,EAAOqY,SAGd,KAAKK,EAAAA,GACH,MAAO,IACFzI,EACH6H,gBAAiB9X,EAAOqY,SAG5B,KAAKM,EAAAA,GACH,MAAO,IAEF3C,EACHoC,cAAenI,EAAMmI,eAIzB,QACE,MAAO,IAAKnI,GAGlB,EC/FA,MAAM2I,GAAaC,E,SAAAA,KAEb7C,EAAe,CACnB8C,SAAmB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYE,UAAW,CAAC,EACjCC,cAAwB,OAAVH,QAAU,IAAVA,OAAU,EAAVA,EAAYG,eAAgB,CAAC,GAc7C,EAX0B,WAAyC,IAA/B9I,EAAKtC,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAGqI,EAMtC,OAN0DrI,UAAAnU,OAAA,EAAAmU,UAAA,QAAAlB,GAC/C9a,KAKJ,IAAKse,EAGlB,E,cClBA,MAAM+F,EAAe,CACnB7F,GAAI,GACJxK,SAAU,GACVqT,WAAY,IAcd,EAXmC,WAAyC,IAA/B/I,EAAKtC,UAAAnU,OAAA,QAAAiT,IAAAkB,UAAA,GAAAA,UAAA,GAAGqI,EAAchW,EAAM2N,UAAAnU,OAAA,EAAAmU,UAAA,QAAAlB,EACvE,OAAQzM,EAAOrO,OACRsnB,EAAAA,EACI,IAAKhJ,KAAUjQ,EAAOqY,SAGtB,IAAKpI,EAGlB,ECJA,GARoBiJ,EAAAA,EAAAA,IAAgB,CAGlCC,WAAYC,EACZC,WAAYC,EACZpJ,oBAAqBqJ,I,QCRvB,MACMC,EAAc,CAACC,EAAAA,GAYd,MAAMC,GAAQC,EAAAA,EAAAA,IACnBC,EAdmB,CAAC,GAgBpBC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,OAAmBN,IAdbO,GAAMA,I,uDCNf,MAAMd,EAAsB,sBAEtBe,EAA6BpR,GAASxM,UAC/C,IACEuL,QAAQC,IAAIgB,EAAM,kCAClBqR,EAAS,CACPtoB,KAAMsnB,EACNZ,QAASzP,GAEb,CAAE,MAAOtK,GACPqJ,QAAQ/S,MAAM0J,EAChB,E,6JCTsB,I,QAAI4b,GAAvB,MAEM5B,EAAc,cACdC,EAAc,cACdC,EAAuB,uBACvBC,EAAgC,gCAChCC,EAAyB,yBACzBP,EAAqB,qBAErBQ,EAAe,eAEfwB,EAAoBC,IAAM,CACrCzoB,KAAMwmB,EACNE,QAAS+B,IAGEC,EAAezR,GAASxM,UACnC,UAEQ6d,EAAS,CACbtoB,KAAM2mB,EACND,QAASzP,GAGb,CAAE,MAAOtK,GACPqJ,QAAQ/S,MAAM0J,EAChB,GAEWgc,EAAsB1R,GAASxM,UAC1C,UACQ6d,EAAS,CACbtoB,KAAM4mB,EACNF,QAASzP,GAEb,CAAE,MAAOtK,GACPqJ,QAAQ/S,MAAM0J,EAChB,GAEWic,EAAoB3R,GAASxM,UACxC,UACQ6d,EAAS,CACbtoB,KAAM6mB,EACNH,QAASzP,GAEb,CAAE,MAAOtK,GACPqJ,QAAQ/S,MAAM0J,EAChB,GAEWkc,EAAwB5R,GAASxM,UAC5C,UACQ6d,EAAS,CACbtoB,KAAM8mB,EACNJ,QAASzP,GAEb,CAAE,MAAOtK,GACPqJ,QAAQ/S,MAAM0J,EAChB,GAEWmc,EAAcA,IAAMre,UAC/B,UACQ6d,EAAS,CACbtoB,KAAMgnB,GAEV,CAAE,MAAOra,GACPqJ,QAAQ/S,MAAM0J,EAChB,E,gDCjEK,MAAMua,EAAcA,KACvB,MAAMpf,EAAO/C,OAAOC,SAAS8L,SAC7B,IAAIiY,EAAkB,GACtB,GAAa,MAATjhB,EACA,MAAO,CACHqf,QAASrf,EACTsf,aAAc2B,GAGtB,GAAIjhB,EAAKgZ,SAAS,SACd,MAAO,CACHqG,QAAS,IACTC,aAAc2B,GAItB,IAAIC,EAAYlhB,EAAKuO,MAAM,KAC3B2S,EAAYA,EAAUC,QAAOC,GAAmB,KAAVA,IAEtC,IAAIC,EAAY,IAChB,GAAIH,EAAUnhB,OAAS,EACE,UAAjBmhB,EAAU,IAAmC,WAAjBA,EAAU,IACjB,QAAjBA,EAAU,KACVD,EAAkBC,EAAU,GAC5BG,EAAYH,EAAU,GAAK,UAGhC,GAAyB,IAArBA,EAAUnhB,QAAiC,QAAjBmhB,EAAU,GAC3C,MAAO,CACH7B,QAAS,IACTC,aAAc2B,GAGtB,MAAO,CACH5B,QAASgC,EACT/B,aAAc2B,EACjB,C,kFCnCE,MAUMK,EAAmBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAClC,MAAMC,EAAW1kB,OAAOkP,aAAaC,QAAQ,sBAC7C,IAAKuV,EAED,OADAzT,QAAQ/S,MAAM,gCACP,KAGX,MAAMymB,EAAcC,KAAKC,MAAMH,GACzBpJ,EAAyB,OAAXqJ,QAAW,IAAXA,GAAwB,QAAbL,EAAXK,EAAarJ,mBAAW,IAAAgJ,OAAb,EAAXA,EAA0BhJ,YACxCwJ,EAAqB,OAAXH,QAAW,IAAXA,GAAwB,QAAbJ,EAAXI,EAAarJ,mBAAW,IAAAiJ,GAAQ,QAARC,EAAxBD,EAA0BQ,cAAM,IAAAP,OAArB,EAAXA,EAAkCQ,IAC5CC,EAAsB,OAAXN,QAAW,IAAXA,GAAoB,QAATF,EAAXE,EAAaO,eAAO,IAAAT,OAAT,EAAXA,EAAsBM,OAEvC,IAAKzJ,IAAgB2J,EAEjB,OADAhU,QAAQ/S,MAAM,4DACP,KAGX,MAAMyjB,EAAU,CACZwD,IAAKC,KAAKC,MAAMC,KAAKC,MAAQ,KAAS,KACtCrT,KAAM,CACFoJ,YAAaA,EACb2J,SAAU,CACNO,SAAkB,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUjiB,KACpByiB,MAAe,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,MACjBT,IAAKF,KAMjB,IAAIY,EAAQ,KACZ,IACI1lB,OAAO2lB,OAASA,EAAAA,OAChBD,EAAQE,IAAAA,OAAWjE,EAJR,iBAIyB,QACxC,CAAE,MAAOzjB,GAEL,OADA+S,QAAQ/S,MAAM,sBAAuBA,GAC9B,IACX,CACA,OAAOwnB,CAAK,C,kECnDT,MAAMrd,EAAe,GACfwd,EAAe,IAEfC,EAAsB,E,4ECF5B,MAAMC,EAAgBA,CAACC,EAAUC,KACpC,IAAIC,EAAmBF,EAMvB,OAJAC,EAAa/H,SAAQ,CAACxW,EAAO7E,KAAW,IAADsjB,EACnC,MAAMlf,EAAc,IAAImf,OAAO,MAAMvjB,OAAY,KACjDqjB,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBE,QAAQpf,EAAaS,EAAM,IAE7Dwe,CAAgB,EAGdI,EAAgBA,CAACpU,EAAMnK,IAC7Bwe,MAAMC,QAAQtU,GAKZA,EAAKuU,MAAK,CAACpJ,EAAGqJ,KACnB,MAAMC,OAAoB5Q,IAAXsH,EAAEtV,GAAqBsV,EAAEtV,GAAK6e,WAAWC,cAAgB,GAClEC,OAAoB/Q,IAAX2Q,EAAE3e,GAAqB2e,EAAE3e,GAAK6e,WAAWC,cAAgB,GAExE,OAAKE,MAAMJ,IAAYI,MAAMD,GAIzBH,EAASG,GAAgB,EACzBH,EAASG,EAAe,EACrB,EALEE,WAAWL,GAAUK,WAAWF,EAKjC,KAdR7V,QAAQ/S,MAAM,mCACP,IAiBE+oB,EAAqCA,CAAC/U,EAAMnK,IAChDmK,EAAKuU,MAAK,CAACpJ,EAAGqJ,KACnB,MAAMC,EAAStJ,EAAE6J,QAAQnf,IAAQ,GAC3B+e,EAASJ,EAAEQ,QAAQnf,IAAQ,GACjC,OAAO4e,EAAOE,cAAcM,cAAcL,EAAOD,cAAc,IAItDO,EAAelV,GACnBA,EAAKuU,MAAK,CAACpJ,EAAGqJ,KACnB,MAAMW,EAAShK,EAAE5M,MAAQ4M,EAAE5M,MAAMoW,cAAgB,GAC3CS,EAASZ,EAAEjW,MAAQiW,EAAEjW,MAAMoW,cAAgB,GACjD,OAAOQ,EAAOF,cAAcG,EAAO,G,qFCzChC,MAAMvgB,EAAmBwgB,IAE9B,GAAIA,EAAIC,MAAM,QAAS,CAErB,OADcD,EAAIE,MAAM,GAAGnW,MAAM,KAAKmW,MAAM,GAAI,GAAGC,KAAK,IAE1D,CAEA,IAAIC,EACJ,GAAI,2BAA2BC,KAAKL,GAOlC,OANAI,EAAIJ,EAAIM,UAAU,GAAGvW,MAAM,IACV,IAAbqW,EAAE7kB,SACJ6kB,EAAI,CAACA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAIA,EAAE,KAEvCA,EAAI,KAAOA,EAAED,KAAK,IAEX,CAAEC,GAAK,GAAM,IAAMA,GAAK,EAAK,IAAS,IAAJA,GAASD,KAAK,IACzD,EAuHK,SAASI,IACd,MAAMC,EAAS/nB,OAAO+nB,QAAU/nB,OAAOgoB,SACvC,IAAIC,EAAQ,IAAIC,YAAY,GAC5BH,EAAOI,gBAAgBF,GAEvB,OADYA,EAAM,EAEpB,CAsBO,MA+BMG,EAAqBlW,IAChC,IAAImW,EAAiB,GACjBC,EAA0B,GAE9B,OAAOpW,EAAKvP,KAAIlD,IACd,GAAIA,EAAKuD,KAAM,CACb,MAAMulB,EAAW9oB,EAAKuD,KAAKwkB,MAAM,qBAAuB,GACxDa,EAAiBE,EAAS9B,MAAK,CAACpJ,EAAGqJ,KACjC,MAAM8B,EAAQnL,EAAEgJ,QAAQ,iBAAkB,IAAIoC,cACxCC,EAAQhC,EAAEL,QAAQ,iBAAkB,IAAIoC,cAC9C,OAAOD,EAAMrB,cAAcuB,EAAM,GAErC,CAEA,GAAIjpB,EAAKkpB,gBAAiB,CACxB,MAAMC,EAAoBnpB,EAAKkpB,gBAAgBnB,MAAM,qBAAuB,GAC5Ec,EAA0BM,EAAkBnC,MAAK,CAACpJ,EAAGqJ,KACnD,MAAM8B,EAAQnL,EAAEgJ,QAAQ,iBAAkB,IAAIoC,cACxCC,EAAQhC,EAAEL,QAAQ,iBAAkB,IAAIoC,cAC9C,OAAOD,EAAMrB,cAAcuB,EAAM,GAErC,CAEA,MAAO,IACFjpB,EACHuD,KAAMqlB,EAAeX,KAAK,IAC1BiB,gBAAiBL,EAAwBZ,KAAK,IAC/C,GACD,EAGG,SAASmB,EAAmBC,GAEjC,SAASC,EAAiBC,GACtB,MAAO,CACHC,OAAQD,EAAIC,UACTC,OAAOC,YACND,OAAOE,QAAQJ,GACV9E,QAAOxqB,IAAA,IAAEqO,GAAIrO,EAAA,MAAa,WAARqO,CAAgB,IAClC0e,MAAK,CAACpJ,EAAGqJ,IAAMrJ,EAAE,GAAG8J,cAAcT,EAAE,OAGrD,CAGA,MAAM2C,EAAaP,EAAWQ,MAAK7pB,GAAwB,eAAhBA,EAAKwpB,SAG1CM,EAAmBF,EAAaN,EAAiBM,GAAc,KAG/DG,EAAsBV,EACvB5E,QAAOzkB,GAAwB,eAAhBA,EAAKwpB,SACpBtmB,IAAIomB,GACJtC,MAAK,CAACpJ,EAAGqJ,IAAMrJ,EAAE4L,OAAO9B,cAAcT,EAAEuC,UAG7C,OAAOM,EAAmB,CAACA,KAAqBC,GAAuBA,CACzE,CAEO,MAAMC,EAAsBA,CAACpM,EAAGqJ,IAC9BrJ,EAAE8J,cAAcT,OAAG3Q,EAAW,CAAE2T,YAAa,Q,iJC/P/C,MAAMC,EAAY,CACvB,CAAEjiB,MAAO,eAAgB+I,MAAO,gBAChC,CAAE/I,MAAO,SAAU+I,MAAO,UAC1B,CAAE/I,MAAO,aAAc+I,MAAO,cAC9B,CAAE/I,MAAO,WAAY+I,MAAO,YAC5B,CAAE/I,MAAO,iBAAkB+I,MAAO,kBAClC,CAAE/I,MAAO,QAAS+I,MAAO,SACzB,CAAE/I,MAAO,wBAAyB+I,MAAO,yBACzC,CAAE/I,MAAO,iBAAkB+I,MAAO,kBAClC,CAAE/I,MAAO,eAAgB+I,MAAO,gBAChC,CAAE/I,MAAO,aAAc+I,MAAO,cAC9B,CAAE/I,MAAO,cAAe+I,MAAO,eAC/B,CAAE/I,MAAO,sBAAuB+I,MAAO,uBACvC,CAAE/I,MAAO,cAAe+I,MAAO,eAC/B,CAAE/I,MAAO,UAAW+I,MAAO,WAC3B,CAAE/I,MAAO,UAAW+I,MAAO,WAC3B,CAAE/I,MAAO,4BAA6B+I,MAAO,8BAElCmZ,EAAkB,CAC7B,CAAEliB,MAAO,IAAK+I,MAAO,cACrB,CAAE/I,MAAO,IAAK+I,MAAO,sBACrB,CAAE/I,MAAO,IAAK+I,MAAO,aACrB,CAAE/I,MAAO,IAAK+I,MAAO,qBACrB,CAAE/I,MAAO,IAAK+I,MAAO,0BACrB,CAAE/I,MAAO,IAAK+I,MAAO,WACrB,CAAE/I,MAAO,IAAK+I,MAAO,WACrB,CAAE/I,MAAO,IAAK+I,MAAO,mBACrB,CAAE/I,MAAO,IAAK+I,MAAO,+BACrB,CAAE/I,MAAO,IAAK+I,MAAO,iBAEVoZ,EAAiB,CAC5B,CAAEniB,MAAO,SAAU+I,MAAO,UAC1B,CAAE/I,MAAO,MAAO+I,MAAO,OACvB,CAAE/I,MAAO,MAAO+I,MAAO,QAGZqZ,GAAkB1C,EAAAA,EAAAA,IAAY,CACzC,CAAE1f,MAAO,WAAY+I,MAAO,YAC5B,CAAE/I,MAAO,MAAO+I,MAAO,OACvB,CAAE/I,MAAO,MAAO+I,MAAO,OACvB,CAAE/I,MAAO,MAAO+I,MAAO,OACvB,CAAE/I,MAAO,MAAO+I,MAAO,OACvB,CAAE/I,MAAO,MAAO+I,MAAO,OACvB,CAAE/I,MAAO,MAAO+I,MAAO,SASZsZ,EAAqB,CAChC,CAAEriB,MAAO,IAAK+I,MAAO,OACrB,CAAE/I,MAAO,IAAK+I,MAAO,OAQVuZ,EAA2B,CACtC,CAAEtiB,MAAO,IAAK+I,MAAO,OACrB,CAAE/I,MAAO,IAAK+I,MAAO,OAGVwZ,EAAmB,CAC9B,QACA,WACA,SAGWC,EAAuB,CAClC,CAAExiB,MAAO,IAAK+I,MAAO,OACrB,CAAE/I,MAAO,IAAK+I,MAAO,OAGV0Z,EAA2B,CACtC,CAAEziB,MAAO,IAAK+I,MAAO,OACrB,CAAE/I,MAAO,IAAK+I,MAAO,OAEV2Z,GAAkBhD,EAAAA,EAAAA,IAAY,CACzC,CAAE1f,MAAO,SAAU+I,MAAO,UAC1B,CAAE/I,MAAO,OAAQ+I,MAAO,S,kICrFnB,MAAM4Z,EAAkBC,wBAGlBC,EAAkCD,uBAClCE,EAA+BF,+CAC/BG,EAA+BH,gCAE/BI,EAA2BJ,8CAC3BK,EAAiCL,8CA0BjCM,EAAmBN,wBAEnBO,EAA+B,CACxCC,QAAS,CACL,eAAgB,qBAGXC,EAAwC,CACjDD,QAAS,CACL,eAAgB,kEAGXE,EAA8B,CACvCF,QAAS,CACL,eAAgB,mBAChB,cArCmCR,0B,8ICX3C,MAAMW,EAAYV,EAAAA,GACZW,EAASV,EAAAA,GACTW,EAASV,EAAAA,GAETW,EAAiCd,CAAAA,gBAAAA,kBAAAA,QAAAA,4CAAAA,UAAAA,aAAAA,0BAAAA,+CAAAA,MAAAA,IAAAA,UAAAA,YAAAA,mBAAAA,kCAAAA,0BAAAA,wCAAAA,mBAAAA,kCAAAA,aAAAA,kBAAAA,QAAAA,iCAAAA,WAAAA,6CAAAA,OAAAA,2BAAAA,SAAAA,IAAAA,YAAAA,0FAAAA,KAAAA,0BAAAA,UAAAA,KAAAA,SAAAA,wBAAAA,SAAAA,mDAAAA,KAAAA,cAAAA,aAAAA,0CAAAA,YAAAA,kBAAAA,KAAAA,sCAAAA,SAAAA,aAAAA,SAAAA,wCAAAA,UAAAA,GAAAA,WAAAA,kEAAAA,YAAAA,aAAAA,iBAAAA,qDAAAA,wBAAAA,6DAAAA,yBAAAA,iDAAAA,uBAAAA,wCAAAA,wBAAAA,mDAAAA,oBAAAA,yFAAAA,mBAAAA,GAAAA,uBAAAA,SAAAA,kBAAAA,iDAAAA,sBAAAA,kCAAAA,sBAAAA,qDAAAA,aAAAA,gEAAAA,oBAAAA,QAAAA,qBAAAA,0BAAAA,kBAAAA,sCAAAA,iBAAAA,iEAAAA,iBAAAA,kBAAAA,oBAAAA,QAAAA,sBAAAA,qFAAAA,qBAAAA,KAAAA,SAAAA,2DAAAA,mBAAAA,2DAAAA,6BAAAA,YAAAA,GAAAA,aAAAA,KAAAA,k0BAAAA,QAAAA,6DAAAA,uBAAAA,QAAAA,qBAAAA,sDAAAA,gBAAAA,IAAAA,mBAAAA,OAAAA,YAAAA,kBAAAA,aAAAA,oBAAAA,oBAAAA,0BAAAA,aAAAA,oBAAAA,OAAAA,OAAAA,aAAAA,oRAAAA,OAAAA,oBAAAA,SAAAA,IAAAA,QAAAA,IAAAA,gCAAAA,uBAAAA,6BAAAA,gCAAAA,6BAAAA,+CAAAA,yBAAAA,8CAAAA,+BAAAA,8CAAAA,sBAAAA,cAAAA,4BAAAA,yBAAAA,mBAAAA,wBAAAA,YAAAA,UAAAA,YAAAA,KAAAA,WAAAA,cAAAA,KAAAA,gDAAAA,aAAAA,SAAAA,qBAAAA,SAAAA,IAAAA,gDAAAA,cAAAA,cAAAA,WAAAA,UAAAA,0BAAAA,UAAAA,SAAAA,eAAAA,YAAAA,0BAAAA,8BAAAA,GAAAA,wBAAAA,+FAAAA,wBAAAA,iDAAAA,sBAAAA,0CAAAA,iBAAAA,IAAAA,OAAAA,cAAAA,OAAAA,4BAAAA,cAAAA,yCAAAA,WAAAA,wCAAYc,iCAAkC,EAIrF,GACEC,KAAM,CACJC,SAAUL,EACVM,OAAQL,EACRM,YAPiB,GAAGxrB,OAAOC,SAASwrB,wBAQpCC,OAAQ,CAAC,SAAU,UAAW,QAAS,UACvCC,MAAM,EACNC,kBAAmBR,EACnBD,OAAQA,GAEVU,eAAgB,CACdC,YAAa,GAAG9rB,OAAOC,SAASwrB,W,gDChBpC,MAAMnM,EAAe,CACjB3E,iBAAiB,EACjBoR,eAAe,EACfC,KAAM,MC8CV,EAhDoBC,KAChB,MAAM,UAAE/S,EAAS,SAAEgT,IAAa9S,EAAAA,EAAAA,MAwChC,OAdA3d,EAAAA,EAAAA,YAAU,KACN,GAAKyd,IAIS,OAATA,QAAS,IAATA,IAAAA,EAAWyB,iBAAiB,CAC7B,MAAMwR,GAAcC,EAAAA,EAAAA,KAAcpsB,OAAOC,SAAS4V,KAAM7V,OAAOC,SAASwrB,QACxES,EAASG,eAAeF,GA/BlBzmB,WASV,UACUwmB,EAASI,oBACnB,CAAE,MAAOpuB,GACc,iBAAfA,EAAM8E,KAENiO,QAAQ/S,MAAM,yBAA0BA,EAAM+G,SAI9CgM,QAAQ/S,MAAM,gCAAiCA,EAGvD,GAaIquB,EACJ,IACD,CAACL,IAAYhT,EAAoB,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWyB,kBAEjCzB,GAAuB,OAATA,QAAS,IAATA,GAAAA,EAAWyB,iBAItB5gB,EAAAA,EAAAA,KAACyyB,EAAAA,GAAM,IAHJ,IAGO,ECdtB,EA9BkB9yB,IAAmB,IAAlB,SAAEO,GAAUP,EAC7B,MAAM,UAAEwf,IAAcE,EAAAA,EAAAA,MAetB,IAAIqT,EADoBvT,GAAaA,EAAUyB,gBAG/C,OACE5gB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGwyB,EACCxyB,GAGAF,EAAAA,EAAAA,KAACkyB,EAAW,KAEb,E,qCC9BP,MAAMS,GAAUhwB,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,EAAY,MAC1BE,QAAS,OACTC,WAAY,aAGR8vB,GAAajwB,EAAAA,EAAAA,IAAOgwB,EAAPhwB,EAAgB,MACjCyH,SAAU,IACVT,cAAe,SACf5G,eAAgB,aAGZ8vB,GAAMlwB,EAAAA,EAAAA,IAAO,MAAPA,EAAc,MACxB5B,MAAO,OACPqH,aAAc,WAGV0qB,GAAenwB,EAAAA,EAAAA,IAAOgwB,EAAPhwB,EAAgB,MACnC5B,MAAO,OACP+B,WAAY,SACZC,eAAgB,SAChBH,OAAQ,uBAuBV,EApBiBmwB,KACf,MAAMhT,GAAWC,EAAAA,EAAAA,MACjB,OACEhgB,EAAAA,EAAAA,KAAC8yB,EAAY,CAAA5yB,UACXU,EAAAA,EAAAA,MAACgyB,EAAU,CAAA1yB,SAAA,EACTF,EAAAA,EAAAA,KAAC6yB,EAAG,CAACxvB,IAAI,uCAAuCC,IAAI,MAEpDtD,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLjE,MAAM,UACNkE,QAAQ,YACRrF,GAAI,CAAE6F,cAAe,cACrBP,QAASA,IAAM+Z,GAAU,GAAG7f,SAC7B,gBAIU,E,eCvCnB,MAWA,EANmB8yB,KACf,MAAMC,GAAgB7K,EAAAA,EAAAA,KAEtB,OAAqB,OAAb6K,QAAa,IAAbA,GAAAA,EAAe5K,QAAQ6K,WAAW,KAAqB,OAAbD,QAAa,IAAbA,OAAa,EAAbA,EAAe5K,QAAU,KAAmB,OAAb4K,QAAa,IAAbA,OAAa,EAAbA,EAAe5K,QAAO,E,eCL3G,MAsDM8K,EAAS,CACX3tB,UAAW,CACP3C,QAAS,OACT8G,cAAe,SACf7G,WAAY,SACZC,eAAgB,SAChBH,OAAQ,QACRwM,gBAAiB,WAErBuN,MAAO,CACH1V,SAAU,OACVpF,MAAO,QAEXqJ,QAAS,CACLjE,SAAU,OACVpF,MAAO,OACPI,UAAW,SACXiI,UAAW,QAGfkpB,OAAQ,CACJlpB,UAAW,OACXF,QAAS,YACT/C,SAAU,OACVmI,gBAAiB,UACjBvN,MAAO,OACP4H,OAAQ,OACRD,aAAc,MACduM,OAAQ,UACRrH,WAAY,6BACZgM,eAAgB,OAChB/J,QAAS,OACT,SAAU,CACNvB,gBAAiB,aAK7B,EA5FyBikB,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAC3B,MAAM7T,EAAc,IAAIC,EAAAA,GAClB,UAAEX,EAAS,SAAEgT,IAAa9S,EAAAA,EAAAA,MAC1BU,GAAWC,EAAAA,EAAAA,MACX9Z,GAAW+L,EAAAA,EAAAA,MACXyP,OAAwC1F,KAAf,QAAdsX,EAAAptB,EAASsZ,aAAK,IAAA8T,OAAA,EAAdA,EAAgB5R,YAAuC,QAAjB6R,EAAGrtB,EAASsZ,aAAK,IAAA+T,OAAA,EAAdA,EAAgB7R,UACpEC,OAAkD3F,KAApB,QAAdwX,EAAAttB,EAASsZ,aAAK,IAAAgU,OAAA,EAAdA,EAAgB7R,iBAA4C,QAAjB8R,EAAGvtB,EAASsZ,aAAK,IAAAiU,OAAA,EAAdA,EAAgB9R,eACpFzK,QAAQC,IAAkB,QAAfuc,EAACxtB,EAASsZ,aAAK,IAAAkU,OAAA,EAAdA,EAAgB/R,cAAe,iCAC3CzK,QAAQC,IAAIwK,EAAe,iBAC3B,MAAOgS,EAAkBC,IAAuB3oB,EAAAA,EAAAA,WAAS,GAYnD4oB,EAASloB,UACX,IACQwT,EAAUyB,uBAEJuR,EAAS2B,QAAQ,CACnBC,sBAAuB9tB,OAAOC,SAASwrB,QAInD,CAAE,MAAOvtB,GACL,GAGR,OACIvD,EAAAA,EAAAA,MAAA,OAAKO,MAAOgyB,EAAO3tB,UAAUtF,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAImB,MAAOgyB,EAAOxW,MAAMzc,SAAC,kBACvByhB,GAOE/gB,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAGmB,MAAOgyB,EAAOjoB,QAAQhL,SAAC,iEAC1BF,EAAAA,EAAAA,KAAA,KAAGmB,MAAOgyB,EAAOjoB,QAAQhL,SAAC,4EAC1BF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QArCtBguB,KACbL,GACD9T,EAAYoU,iBAAiB,CAAEC,SAAUxS,IAAYpJ,MAAMwI,IACvD8S,GAAoB,GAEpBhoB,YAAW,KACPioB,GAAQ,GACT,IAAK,GAEhB,EA4B+D3zB,SAAC,uBATxDU,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EAAEF,EAAAA,EAAAA,KAAA,KAAGmB,MAAOgyB,EAAOjoB,QAAQhL,SAAC,0DAExBF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASA,IAAM+Z,EAASiT,IAAe,WAAW9yB,SAAC,oBAUrF,E,qCCnDC,SAASi0B,EAAYx0B,GAAuF,IAAtF,WAAEy0B,GAAa,EAAK,cAAEC,EAAa,aAAE1a,EAAY,aAAE2a,EAAY,MAAEnzB,EAAQ,CAAC,EAAC,KAAEqM,GAAM7N,EACpH,MAAM,mBAAE0V,IAAuBC,EAAAA,EAAAA,KAQ/B,OANA5T,EAAAA,EAAAA,YAAU,KACFiY,GACA2a,EAAa3a,EACjB,GACD,CAACA,KAGA3Z,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACH7S,SAAUywB,EACV7wB,UAAU,eACVoW,aAAcA,EACdhM,MAAO0mB,EACPzmB,SAAWC,GAAMymB,EAAazmB,EAAEC,OAAOH,OACvCxM,MAAOA,EACPqM,KAAMA,GAAU,SAChB+mB,cAAY,EACZC,YAAcC,IAAc,IAADC,EAEvB,IAAIC,EAAiB,GAKrB,OAJAA,EAAmC,OAAlBtf,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBka,MAChC3Y,GAAYA,EAAOge,eAAiBH,IAGnB,QAAfC,EAACC,SAAc,IAAAD,GAAdA,EAAgBE,aAAgBD,EAAe7d,OAAS,EAAE,EAEpE5W,SAEiB,OAAlBmV,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzM,KAAI,CAACgO,EAAQ9N,KAC9B,MAAM+rB,EAAU,QAAU/rB,EAC1B,OACI9I,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAClJ,MAAOiJ,EAAOge,aAAa10B,SAGhC0W,EAAOE,QAH+B+d,EAIhC,KAK/B,C,0BCzCA,MAiEM1B,EAAS,CACb3tB,UAAW,CACT3C,QAAS,OACT8G,cAAe,SACf7G,WAAY,SACZC,eAAgB,SAChBH,OAAQ,QACRwM,gBAAiB,WAEnBuN,MAAO,CACL1V,SAAU,OACVpF,MAAO,QAETqJ,QAAS,CACPjE,SAAU,OACVpF,MAAO,OACPI,UAAW,SACXiI,UAAW,QAGbkpB,OAAQ,CACNlpB,UAAW,OACXF,QAAS,YACT/C,SAAU,OACVmI,gBAAiB,UACjBvN,MAAO,OACP4H,OAAQ,OACRD,aAAc,MACduM,OAAQ,UACRrH,WAAY,6BACZgM,eAAgB,OAChB/J,QAAS,OACT,SAAU,CACRvB,gBAAiB,aAKvB,EAvGiB0lB,KACf,MAAMrV,GAAsBF,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,uBAClDlB,EAAe6B,IAAoBnV,EAAAA,EAAAA,UAAS,KAC5CiK,EAAU6f,IAAe9pB,EAAAA,EAAAA,UAAS,IAgBzC,OATAvJ,EAAAA,EAAAA,YAAU,KACuB,KAA3B+d,EAAoBC,IACtBU,EAAiBX,EAAoBC,IAEF,KAAjCD,EAAoBuV,UACtBD,EAAYtV,EAAoBuV,SAClC,GACC,KAGDp0B,EAAAA,EAAAA,MAAA,OAAKO,MAAOgyB,EAAO3tB,UAAUtF,SAAA,EAE3BF,EAAAA,EAAAA,KAAA,MAAImB,MAAOgyB,EAAOxW,MAAMzc,SAAC,6BACzBU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACE,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cACnDpC,MAAO,CAAEiO,gBAAiB,YAAapF,QAAS,QAAS9J,SAAA,EAEzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACxDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,0BACNF,EAAAA,EAAAA,KAACm0B,EAAY,CACXE,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,OAEhB4Y,aAAc4E,GAAgC,GAC9C+V,aAAeW,IACb7U,EAAiB6U,GACjB/d,QAAQC,IAAI8d,EAAqB,sBAAsB,QAM7Dr0B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACxDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,sBACNF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,WACRlK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTlM,MAAO,CAAEJ,MAAO,OAChB4M,MAAOuH,GAAsB,GAC7BtH,SA9CkBpN,IAC1B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACjB,aAAT7E,GACF8rB,EAAYpnB,EACd,EA0CqCzN,SAE5BmwB,EAAAA,GAAgBznB,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,mBAO1B,E,eC/DV,MAQA,EARkBunB,GAAe3zB,IAE7BvB,EAAAA,EAAAA,KAAC4Q,EAAAA,SAAQ,CAACC,UAAU7Q,EAAAA,EAAAA,KAACmD,EAAAA,EAAO,IAAIjD,UAC9BF,EAAAA,EAAAA,KAACk1B,EAAS,IAAK3zB,MCHf4zB,EAASC,GAASC,EAAAA,EAAAA,OAAK,IAAM,kCAC7BC,EAAYF,GAASC,EAAAA,EAAAA,OAAK,IAAM,4EAChCE,EAAUH,GAASC,EAAAA,EAAAA,OAAK,IAAM,mEAC9BG,EAAaJ,GAASC,EAAAA,EAAAA,OAAK,IAAM,qFACjCI,EAAqBL,GAASC,EAAAA,EAAAA,OAAK,IAAM,mEACzCK,EAAmBN,GAASC,EAAAA,EAAAA,OAAK,IAAM,iCACvCM,EAAmBP,GAASC,EAAAA,EAAAA,OAAK,IAAM,iCACvCO,EAAeR,GAASC,EAAAA,EAAAA,OAAK,IAAM,kCAazC,EAXsB,CAClB,CAAErsB,KAAM,UAAW6sB,SAAS71B,EAAAA,EAAAA,KAACm1B,EAAM,KACnC,CAAEnsB,KAAM,oBAAqB6sB,SAAS71B,EAAAA,EAAAA,KAACs1B,EAAS,KAChD,CAAEtsB,KAAM,WAAY6sB,SAAS71B,EAAAA,EAAAA,KAACu1B,EAAO,KACrC,CAAEvsB,KAAM,sBAAuB6sB,SAAS71B,EAAAA,EAAAA,KAACw1B,EAAU,KACnD,CAAExsB,KAAM,oBAAqB6sB,SAAS71B,EAAAA,EAAAA,KAACy1B,EAAkB,KACzD,CAAEzsB,KAAM,oBAAqB6sB,SAAS71B,EAAAA,EAAAA,KAAC01B,EAAgB,KACvD,CAAE1sB,KAAM,oBAAqB6sB,SAAS71B,EAAAA,EAAAA,KAAC21B,EAAgB,KACvD,CAAE3sB,KAAM,YAAa6sB,SAAS71B,EAAAA,EAAAA,KAAC41B,EAAY,M,eCf/C,MAYA,GAZqBj2B,IAAmB,IAADm2B,EAAA,IAAjB,SAAE51B,GAAUP,EAC9B,MAAM,YAAE2e,IAAgBhJ,EAAAA,EAAAA,MAClB,UAAE6J,IAAcE,EAAAA,EAAAA,MACtB,OACc,OAATF,QAAS,IAATA,GAAAA,EAAWyB,iBAA8B,OAAXtC,QAAW,IAAXA,GAAqB,QAAVwX,EAAXxX,EAAa4M,gBAAQ,IAAA4K,GAArBA,EAAuB9T,SAAS,SAAa9hB,GAAaF,EAAAA,EAAAA,KAAC+1B,EAAAA,GAAQ,CAACptB,GAAG,iBAGtG,E,4PCqCR,MAIMsK,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAC9B6D,WAAY,MACZ,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEtD,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBAIrD4M,IAAsBxQ,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CACxCyQ,KAAM,gBACNC,SAAU,aACVzQ,OAAQ,EACR6D,SAAU,SACVzD,SAAU,WACVuG,OAAQ,EACRtG,KAAM,EACNuD,WAAY,SACZzF,MAAO,IAwaX,GArayBQ,IACrB,MAAM,iBAAEkd,EAAgB,kBAAEM,EAAiB,mBAAE1J,IAAuBC,EAAAA,EAAAA,KAE9D0gB,EAAc,IAAIC,GAAAA,GAClB,eAAEC,EAAc,kBAAEC,EAAiB,gBAAEC,EAAe,aAAE/hB,GAAiB9S,GACtE80B,EAAcC,IAAmBrrB,EAAAA,EAAAA,WAAS,IAC1CsrB,EAAeC,IAAoBvrB,EAAAA,EAAAA,WAAS,IAC5CsK,EAASC,IAAcvK,EAAAA,EAAAA,WAAS,IAChCqJ,EAAaC,IAAkBtJ,EAAAA,EAAAA,WAAS,IACxCuJ,EAAgBC,IAAqBxJ,EAAAA,EAAAA,WAAS,IAE9CyJ,EAAeC,IAAoB1J,EAAAA,EAAAA,WAAS,IAC5C2J,EAAkBC,IAAuB5J,EAAAA,EAAAA,UAAS,OAClD6J,EAAkBC,IAAuB9J,EAAAA,EAAAA,UAAS,OAElDwK,EAAuBC,IAA4BzK,EAAAA,EAAAA,UAAS,CAC/DwrB,QAAS,GACTvhB,SAAU,GACVS,GAAI,MAED/V,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAMnCyrB,EAAgCA,CAACC,EAAQC,KAC3C1f,QAAQC,IAAIwf,EAAQ,cAAeC,GACnClhB,GAA0BiB,IACf,IACAA,EACH,CAACggB,GAAoB,OAAXA,EAAkBC,EAAiBA,EAAejpB,UAGrD,YAAXgpB,GAAwBL,GAAgB,GAC7B,aAAXK,GAAyBH,GAAiB,GAC/B,OAAXG,GAAmBnhB,GAAW,GAClC0B,QAAQsC,KAAK/D,EAAuB,wBAAwB,EA+JhE,OAJA/T,EAAAA,EAAAA,YAAU,QAEP,CAAC+c,KAGA7d,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM41B,EAAeh2B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACVF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UACdF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC7BU,EAAAA,EAAAA,MAACqS,GAAW,CAAA/S,SAAA,EACRU,EAAAA,EAAAA,MAACi2B,GAAAA,EAAS,CAAA32B,SAAA,EACNU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,UACnBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CACPpV,MAAO,CACHC,WAAY,OACZS,MAAO,uBACT3B,SACL,2BAILU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACT31B,MAAO,CAAEJ,MAAO,OAChBg2B,UAAU,EACVC,QAtLnBL,KACrB,MAAMhW,EAAS,IAAIsW,IAqBnB,OAHkB,OAAlB5hB,QAAkB,IAAlBA,GAAAA,EAAoB8O,SAAQze,IACxBib,EAAOuW,IAAIxxB,EAAKixB,GAAQ,IAErBnK,MAAM2K,KAAKxW,EAAO,EAgKwByW,CAAgB,UACzBzpB,MAAO8H,EAAsBE,GAC7B/H,SAAUA,CAACypB,EAAGC,IACVZ,EAA8B,KAAMY,GAExC9C,YAAaA,IAAM,KACnB+C,YAAcC,IACVx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IACFuqB,EACJzxB,QAAQ,WACR2Q,MAAM,aACNxJ,YAAY,cAGpB2I,WAAY,CACR1U,MAAO,CACHH,UAAW,UAGnBy2B,sBAAsB,EACtBC,kBAAgB,EAChBC,qBAAsBA,CAAC/gB,EAAQjJ,IAAUiJ,IAAWjJ,EACpDiqB,kBAAmBA,CAAChhB,EAAQjJ,IACxB8H,EAAsBE,GAAGqM,SAASrU,GAEtCkqB,UAAW,CACP12B,MAAO,CACH8F,SAAU,UAIrBsO,IAAYvV,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEc,UAAW,OAAQJ,MAAO,OAAQ3B,SAAC,6CAGpEU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,UACnBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CACPpV,MAAO,CACHC,WAAY,OACZS,MAAO,uBACT3B,SACL,gBAILU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,QAAOnW,SAAA,EACpBF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACT31B,MAAO,CAAEJ,MAAO,OAChBg2B,UAAU,EACVC,QAASlH,EAAAA,GACTniB,MAAO8H,EAAsBghB,QAC7B7oB,SAAUA,CAACypB,EAAGC,IACVZ,EAA8B,UAAWY,GAE7C9C,YAAaA,IAAM,KACnB+C,YAAcC,IACVx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IACFuqB,EACJzxB,QAAQ,WACR2Q,MAAM,kBACNxJ,YAAY,cAGpB2I,WAAY,CACR1U,MAAO,CACHH,UAAW,UAGnBy2B,sBAAsB,EACtBC,kBAAgB,EAChBC,qBAAsBA,CAAC/gB,EAAQjJ,IAAUiJ,IAAWjJ,EACpDiqB,kBAAmBA,CAAChhB,EAAQjJ,IACxB8H,EAAsBghB,QAAQzU,SAASrU,GAE3CkqB,UAAW,CACP12B,MAAO,CACH8F,SAAU,UAIrBovB,IAAiBr2B,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEc,UAAW,OAAQJ,MAAO,OAAQ3B,SAAC,kCAGzEU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,UACnBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CACPpV,MAAO,CACHC,WAAY,OACZS,MAAO,uBACT3B,SACL,gBAILU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,QAAOnW,SAAA,EACpBF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACT31B,MAAO,CAAEJ,MAAO,OAChBg2B,UAAU,EACVC,QAASjH,EAAAA,GACTpiB,MAAO8H,EAAsBP,SAC7BtH,SAAUA,CAACypB,EAAGC,IACVZ,EAA8B,WAAYY,GAE9C9C,YAAaA,IAAM,KACnB+C,YAAcC,IACVx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IACFuqB,EACJzxB,QAAQ,WACR2Q,MAAM,kBACNxJ,YAAY,cAGpB2I,WAAY,CACR1U,MAAO,CACHH,UAAW,UAGnBy2B,sBAAsB,EACtBC,kBAAgB,EAChBC,qBAAsBA,CAAC/gB,EAAQjJ,IAAUiJ,IAAWjJ,EAEpDiqB,kBAAmBA,CAAChhB,EAAQjJ,IACxB8H,EAAsBP,SAAS8M,SAASrU,GAE5CkqB,UAAW,CACP12B,MAAO,CACH8F,SAAU,UAIrBsvB,IAAkBv2B,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEc,UAAW,OAAQJ,MAAO,OAAQ3B,SAAC,qCAK9EU,EAAAA,EAAAA,MAACsV,GAAAA,EAAS,CAAAhW,SAAA,EACNU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EAC/BU,EAAAA,EAAAA,MAACkF,EAAAA,EAAM,CAACgB,UAAU,QAAQf,QAAQ,YAAYgR,WAAW/W,EAAAA,EAAAA,KAACgX,GAAAA,EAAe,IAAI9W,SAAA,CAAC,eAE1EF,EAAAA,EAAAA,KAACmT,GAAmB,CAACjS,KAAK,OAAO+H,KAAK,OAAOgO,OAAO,cAAcrJ,SAxSlFC,IAIpB,MAAMuJ,EAAOvJ,EAAEC,OAAOuJ,MAAM,GAC5B,GAAID,EAAM,CACN,MAAME,EAAWF,EAAKnO,KAAKsO,MAAM,KAAKC,MACrB,SAAbF,GAAoC,QAAbA,GAEvBzC,EAAoBhH,EAAEC,OAAOuJ,MAAM,IACnCtC,EAAoBlH,EAAEC,OAAOuJ,MAAM,GAAGpO,MACtCsL,GAAe,KAEfA,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,MAE5B,MACIN,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,KACxB,OAqRiCP,IAAgBtU,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEc,UAAW,OAAQJ,MAAO,OAAQ3B,SAAC,0CAEnE4U,IAAqB9U,EAAAA,EAAAA,KAAA,KAAAE,SAAI4U,KAC1B9U,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAE8N,WAAY,QAAS/O,UAO/BF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACgB,UAAU,QAAQf,QAAQ,YAAYgR,WAAW/W,EAAAA,EAAAA,KAAC83B,GAAAA,EAAiB,IAAK9xB,QA/V7F0R,KACnBse,EAAYre,mBAFC,uBAE2B,EA8VgGzX,SAAC,wCAWjIU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAxSA+xB,KAC9BriB,GAA0BsiB,IACf,CACHvB,QAAS,GACTvhB,SAAU,GACVS,GAAI,OAGZd,EAAoB,MACpBshB,GAAkB,GAClBphB,EAAoB,MACpBR,GAAe,GACf+hB,GAAgB,GAChBE,GAAiB,GACjBhhB,GAAW,EAAM,EA0RgDtV,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAvRKiyB,KAMzB,IALsC,OAAlCxiB,EAAsBghB,SAAoBhhB,EAAsBghB,QAAQ1tB,OAAS,IAAKutB,GAAgB,IACnE,OAAnC7gB,EAAsBP,UAAqBO,EAAsBP,SAASnM,OAAS,IAAKytB,GAAiB,IAC5E,OAA7B/gB,EAAsBE,IAAeF,EAAsBE,GAAG5M,OAAS,IAAKyM,GAAW,IAClE,OAArBZ,GAA6BA,EAAiB7L,OAAS,IAAKwL,GAAe,GAE3EkB,EAAsBghB,QAAQ1tB,OAAS,GAAK0M,EAAsBP,SAASnM,OAAS,GAAK0M,EAAsBE,GAAG5M,OAAS,GAA0B,OAArB6L,EAA2B,CAC3J,IAAIsD,EAAW,CAAE,KAAQtD,EAAkBuD,KAAM1C,GACjDpB,GAAa,GACb8hB,GAAkB,GAClBH,EAAYE,eAAehe,GAAUI,MAAK3M,UAEtC,IAAItK,EACAP,EAFJ2T,EAAkB8D,GAGdA,EAAS2f,WAAa,GACtB72B,GACIT,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAEU,MAAO,OAAQ3B,SAAA,CACH,uBACDqY,EAAS4f,iBAAiB,KAACn4B,EAAAA,EAAAA,KAAA,SAAM,qBACnCuY,EAASU,gBAAgB,KAACjZ,EAAAA,EAAAA,KAAA,SAAM,sBAC/BuY,EAAS2f,WAAW,KAACl4B,EAAAA,EAAAA,KAAA,YAGjDc,EAAW,QACXhB,GAAa,GACbsU,EAAY,CACRtT,SAAUA,EACVO,KAAMA,IAEVgT,GAAa,KAEbhT,GACIT,EAAAA,EAAAA,MAAA,OAAAV,SAAA,CAAK,YACOF,EAAAA,EAAAA,KAAA,SAAM,uBACOuY,EAAS4f,iBAAiB,KAACn4B,EAAAA,EAAAA,KAAA,SAAM,qBACnCuY,EAASU,gBAAgB,KAACjZ,EAAAA,EAAAA,KAAA,SAAM,sBAC/BuY,EAAS2f,WAAW,KAACl4B,EAAAA,EAAAA,KAAA,YAGjDc,EAAW,UACXuT,GAAa,IAGjBvU,GAAa,GACbsU,EAAY,CACRtT,SAAUA,EACVO,KAAMA,IAEVqU,GAA0BsiB,IACf,CACHvB,QAAS,GACTvhB,SAAU,GACVS,GAAI,OAGZd,EAAoB,MACpBE,EAAoB,YAKdihB,EAAYoC,qBAAqB9f,MAAMwI,IACzCsV,EAAgBtV,EAAOmL,UACvBlN,EAAkB+B,EAAOmL,SAAS,IAEtC5X,GAAa,EAAM,GAE3B,GAoNkDnU,SAAC,iBAyB7CL,GACEG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EAAcY,GAAI,CAAE,wBAAyB,CAAE0O,gBAAiB,WACvIpP,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACN,E,gECtdX,MAuJA,GApJwBsB,IAEtB,MAAMy0B,EAAc,IAAIC,GAAAA,GACjBoC,EAAgBC,IAAqBrtB,EAAAA,EAAAA,WAAS,IAC9CqO,EAAcif,IAAmBttB,EAAAA,EAAAA,WAAc,OAAL1J,QAAK,IAALA,OAAK,EAALA,EAAOi3B,eAAgB,KACjE7qB,EAAO8qB,IAAYxtB,EAAAA,EAAAA,UAAS,YAE5BytB,EAAeC,IAAoB1tB,EAAAA,EAAAA,WAAS,IAC5C2tB,EAAgBC,IAAqB5tB,EAAAA,EAAAA,WAAS,IAC9CrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAqEzC,OACErK,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAxE6B8yB,KACjCR,GAAkB,EAAK,EAuEiBp4B,SACrC,YAGDU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+3B,EAAen4B,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,UAChCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,UACjCU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAAApW,SAAA,EACVF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAS,CAACxsB,GAAG,sCAAqCrM,SAAC,2BACpDU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACT,kBAAgB,sCAChBxQ,KAAK,iCACL0E,MAAOA,EACPC,SAnCApN,IACpBi4B,EAASj4B,EAAMsN,OAAOH,OACK,YAAvBnN,EAAMsN,OAAOH,MACf4qB,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOi3B,cAEvBD,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAEzB,EA4B2C94B,SAAA,EAEvBF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,UAAUkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,cAC5D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,eAAekM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,qCAUjF9V,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAtGQizB,KAChCX,GAAkB,EAAM,EAqGmCp4B,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAzFakzB,KAC3BZ,GAAkB,GAElBphB,QAAQC,IAAS,OAAL5V,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAAoB,sBACvC,IAAI7gB,GAAmB,YAAVxK,EAA4B,OAALpM,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAA0B,OAALz3B,QAAK,IAALA,OAAK,EAALA,EAAOi3B,eAAiB,GACpFW,EAAiB,OAAJhhB,QAAI,IAAJA,OAAI,EAAJA,EAAMvP,KAAIlD,IACf,CACR,gBAAiBA,EAAK0zB,aACtB,YAAe1zB,EAAKrE,KACpB,WAAYqE,EAAK+wB,QAChBre,SAAU1S,EAAKwP,SAChB,sBAAuBsX,MAAMC,QAAY,OAAJ/mB,QAAI,IAAJA,OAAI,EAAJA,EAAMiQ,MAAW,OAAJjQ,QAAI,IAAJA,OAAI,EAAJA,EAAMiQ,GAAG5M,QAAS,EAC5D,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMiQ,GAAGgY,KAAK,MACd,SAYRqI,EAAYqC,eAAe,CAAE,KAAQc,EAAY,WAAc,aAAc7gB,MAAMC,IACjFsgB,EAAkBtgB,GAtCpBogB,GAAiB,GAyCf74B,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAChB,GACF,EAuD0CtY,SAAC,iBAqBzCL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACJ,E,yBCvKP,MA6BA,GA7B6Bo5B,GAClB15B,IAA+D,IAA9D,KAAEwY,EAAO,GAAE,SAAEmhB,EAAW,CAAC,EAAC,YAAEC,EAAc,MAAOh4B,GAAO5B,EAC5D,MAsBM65B,EAtBWC,EAACthB,EAAMmhB,KACpB,IAAK9M,MAAMC,QAAQtU,GACf,MAAO,GAGX,IAAKmhB,IAAaA,EAAS/sB,GACvB,OAAOgtB,EAGX,MAAMG,EAAQJ,EAAS/sB,IAAM+sB,EAASrwB,MAAQqwB,EAASK,WACjDC,EAA6B,IAAjBN,EAASO,IAAY,GAAK,EAE5C,MAAO,IAAI1hB,GAAMuU,MAAK,CAACpJ,EAAGqJ,KACtB,MAAMmN,EAASC,OAAOzW,EAAEoW,IAAU,IAAI5M,cAChCkN,EAASD,OAAOpN,EAAE+M,IAAU,IAAI5M,cAEtC,OAAIgN,EAASE,GAAgBJ,EACzBE,EAASE,EAAeJ,EACrB,CAAC,GACV,EAGaH,CAASthB,EAAMmhB,GAClC,OAAOt5B,EAAAA,EAAAA,KAACq5B,EAAgB,CAAClhB,KAAMqhB,EAAYF,SAAUA,KAAc/3B,GAAS,E,gBCCpF,MAAM04B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAEK8xB,GAAWA,KAEf,IAAIC,GADaloB,EAAAA,EAAAA,MACSuN,MAC1B,MAAM,kBAAET,IAAsBzJ,EAAAA,EAAAA,KACxB0gB,EAAc,IAAIC,GAAAA,GACjBmE,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1CirB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9CutB,EAAcpC,IAAmBnrB,EAAAA,EAAAA,UAAS,KAC1CsuB,EAAae,IAAkBrvB,EAAAA,EAAAA,UAAS,KACxCsvB,EAAqBC,IAA0BvvB,EAAAA,EAAAA,aAC/CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxC0vB,EAAkBC,IAAuB3vB,EAAAA,EAAAA,UAAS,KAClDrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCquB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,CAAC,IAGnCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,IAC3CgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,MAC3FhgB,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,GAErCkwB,GAAuB5O,EAAAA,GAAAA,IAAcoO,EAAkB,gBAEvDS,GAAoBlvB,EAAAA,EAAAA,cAAYjE,IAAmB,IAAlB,SAAEwsB,GAAUxsB,EACjD6yB,EAAYrG,EAAS,GACpB,KAWH/yB,EAAAA,EAAAA,YAAU,KACR2S,GAAa,GACb2hB,EAAYoC,qBACT9f,MAAMwI,IACLsV,EAAgBtV,EAAOmL,UACvBqO,EAAexZ,EAAOmL,UACtB2O,EAAoB9Z,EAAOmL,UAC3BlN,EAAkB+B,EAAOmL,SAAS,IAEnCoP,SAAQ,KACPhnB,GAAa,EAAM,GACnB,GACH,KAEH3S,EAAAA,EAAAA,YAAU,KACRk5B,EAAoBpC,EAAa,GAChC,CAACA,KAEJ92B,EAAAA,EAAAA,YAAU,KAAO,IAAD45B,EACUC,EAAAC,EAAV,QAAdF,EAAInB,SAAU,IAAAmB,GAAVA,EAAYhyB,SACdxJ,GAAa,GACbsU,EAAY,CACVtT,SAAoB,QAAZy6B,EAAEpB,SAAU,IAAAoB,OAAA,EAAVA,EAAYjyB,OACtBjI,KAAgB,QAAZm6B,EAAErB,SAAU,IAAAqB,OAAA,EAAVA,EAAYtwB,WAGtBivB,EAAa,CAAC,EAGdl0B,OAAOw1B,eAAiB,KACtBx1B,OAAOy1B,QAAQC,aAAa,CAAC,EAAGnwB,SAASmR,MAAM,CAChD,GACA,CAACwd,IAIJ,MAQMpa,GAAWC,EAAAA,EAAAA,MACX4b,GAAkB9pB,EAAAA,EAAAA,QAAO,gBAOzB+pB,EAAsBC,IAC1BF,EAAgBtpB,QAAU,OAC1B,MAAMypB,EAAuBD,EAC7BlwB,YAAW,KACTmU,EAAS,iBAAqC,OAApBgc,QAAoB,IAApBA,OAAoB,EAApBA,EAAsBxvB,KAAM,CACpDiT,MAAO,CAAEwc,aAAcJ,EAAgBtpB,QAASypB,yBAChD,GACD,IAAI,EAGHE,EAA8BC,IAClC7B,GAAgB,GAChBG,EAAuB0B,EAAY,GAwCrCx6B,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEdx5B,EAAAA,EAAAA,YAAU,KACR,GAAI82B,EAAc,CAChB,MAAM8D,EAAmB9D,EAAarO,QAAQoS,IAAgB,IAADC,EAAAC,EAAAC,EAC3D,MAAwB,KAAhBjC,IACI,OAAV8B,QAAU,IAAVA,GAAwB,QAAdC,EAAVD,EAAYnD,oBAAY,IAAAoD,OAAd,EAAVA,EAA0B1P,cACvB9K,SAASyY,EAAY3N,iBACxByP,EAAWl7B,KACRyrB,cACA9K,SAASyY,EAAY3N,iBACP,QADqB2P,EACtCF,EAAW/V,cAAM,IAAAiW,OAAA,EAAjBA,EAAmBE,MAAMC,GACvBA,EAAMC,UACH/P,cACA9K,SAASyY,EAAY3N,oBAEb,QADZ4P,EACDH,EAAW5mB,UAAE,IAAA+mB,OAAA,EAAbA,EAAeC,MAAMhnB,GACnBA,EAAGmX,cAAc9K,SAASyY,EAAY3N,mBAExCyP,EAAWrnB,SACR4X,cACA9K,SAASyY,EAAY3N,gBACxByP,EAAW9F,QAAQ3J,cAAc9K,SAC/ByY,EAAY3N,cACb,IAEL8N,EAAoB0B,EACtB,IACC,CAAC7B,EAAajC,IAEjB,MAAMsE,EAAwBxD,IAC5BuB,EAAYvB,GACZ,MAEME,EAFiBuD,GAAoB7C,GAExB8C,CAAe,CAAE7kB,KAAMqgB,EAAcc,WAAU2D,iBAAkBH,EAAsBvD,gBAC1GnD,EAAgBoD,EAAWj4B,MAAM4W,KAAK,EAIxC,OACEvX,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,kBAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAzHqBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAwHpBxvB,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,WAAW,SAAQ5C,SAAA,EAC5DF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAlIjBo3B,OAkIuCl9B,SAAC,YAGnDF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEk8B,KAAM,MACpBr9B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QA/HiBu3B,KAC3B3B,EAAgBtpB,QAAU,SAC1B1G,YAAW,KACTmU,EAAS,kBAAkB,GAC1B,IAAI,EA4HG5e,MAAO,CAAE6N,YAAa,QAAS9O,SAChC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QA1LoBw3B,KAC9B3B,EAAmBd,EAAa,GAAG,EA0LzB55B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAsB,OAAZo3B,QAAY,IAAZA,IAAAA,EAAchyB,OACxB/C,QAtMey3B,KACzBxB,EAA2BlB,EAAa,IACxCV,GAAgB,EAAK,EAqMXl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAIDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAjGuB03B,KACjCvH,GAAkB,EAAK,EAiGbh1B,MAAO,CAAE6N,YAAa,QAAS9O,SAChC,YAIDF,EAAAA,EAAAA,KAAC29B,GAAe,CAACnF,aAAcA,EAAcQ,mBAAoB+B,QAEnEn6B,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAAO,CAAE2b,UAAW,KACpBihB,aAAc,IACdC,QAAS,CACP,CACE/0B,KAAM,eACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,OAAOzc,SAAC,kBAChCi+B,YAAa,EACbC,aAAc,GACdC,OAAQh2B,IAAA,IAAC,KAAE8P,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMihB,cAAmB,GAEvD,CACEnwB,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,cAAczc,SAAC,gBACvCi+B,YAAa,EACbC,aAAc,GACdC,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM9W,MAAW,GAE/C,CACE4H,KAAM,UACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,WAAWzc,SAAC,aACpCi+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,WACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,WAAWzc,SAAC,aACpCi+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,KACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,sBAAsBzc,SAAC,wBAC/Ci+B,YAAa,EACbC,aAAc,GACdC,OAAQ5zB,IAAA,IAAC,KAAE0N,GAAM1N,EAAA,OAAKzK,EAAAA,EAAAA,KAAA,OAAAE,SAAW,OAAJiY,QAAI,IAAJA,GAAAA,EAAMxC,GAAMwC,EAAKxC,GAAG+W,OAAO9jB,KAAKlD,GAASA,IAAMioB,KAAK,MAAQ,IAAS,IAGtG2Q,WAAYnD,EACZoD,gBAAc,EACd9J,SAAUA,EACV2G,kBAAmBA,EACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAa,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAqC,IAAZ,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAc,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACtH7B,iBAAkBH,aAM1Bl8B,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,SAEe,IAAxB66B,EAAahyB,QAAiB/I,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAC7BU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CAAC,qCACkB,KACnCF,EAAAA,EAAAA,KAAA,KAAAE,SAAuB,OAAnBq6B,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBnB,eAAiB,iBAAe,KACzDp5B,EAAAA,EAAAA,KAAA,KAAAE,SAAuB,OAAnBq6B,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBrlB,iBAErBlV,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACNF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,SAAC,sDAMzBU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QArNA+4B,KACxBvE,EAAuB,MACvBH,GAAgB,EAAM,EAmN6Bn6B,SAAC,YAG9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAnNa2F,UAC3B0uB,GAAgB,GAChB,IACEhmB,GAAa,GACb,MAAM2qB,EAAwB,OAAZjE,QAAY,IAAZA,OAAY,EAAZA,EAAcnyB,KAAIlD,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,WAC7CypB,EAAYiJ,eAAeD,GAAW1mB,MAAK3M,UAC/C7L,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAElBsiB,EAAY,CAAC,GACbE,EAAgB,UAEVhF,EAAYoC,qBAAqB9f,MAAMwI,IAC3CsV,EAAgBtV,EAAOmL,UACvBqO,EAAexZ,EAAOmL,UACtB2O,EAAoB9Z,EAAOmL,UAC3BlN,EAAkB+B,EAAOmL,SAAS,GAClC,GAEN,CAAE,MAAO9nB,GACP,OAAOA,CACT,CAAC,QACCkQ,GAAa,EACf,GA0L4CnU,SAAC,kBAI3CF,EAAAA,EAAAA,KAACk/B,GAAe,CACdhJ,eAAgBA,EAChBC,kBAAmBA,EACnBC,gBAAiBA,EACjB/hB,aAAcA,IAGdxU,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGHib,GACElb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAClCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,KAAMuZ,OAEdlb,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MAGI,EAIhB,MCnXA,GAVwBk/B,KAEhBn/B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEIF,EAAAA,EAAAA,KAACk6B,GAAQ,M,wFCLd,MAAMkF,GAAaC,WAAAA,GAAA,KACxBC,iBAAmB,IACVC,GAAAA,EACJC,IAAI,GAAGlP,EAAAA,qBAAmCQ,EAAAA,IAC1CxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,mBAAoB0J,GAC3B,MAEX,KACF6xB,aAAgBvnB,GACPonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,wBACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,eAAgB0J,GACvB,MAEX,KACF+xB,YAAeznB,GACNonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,oBACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,cAAe0J,GACtB,MAEX,KAEFgyB,YAAe1nB,GACNonB,GAAAA,EACJO,IACC,GAAGxP,EAAAA,uBACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,cAAe0J,GACtB,MAEX,KAEFkyB,YAAeC,GACNT,GAAAA,EAAYU,OACjB,GAAG3P,EAAAA,uBACH,CAAEnY,KAAM,CAAE6nB,QACVlP,EAAAA,IAECxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,wBAAyBA,GACjCA,CAAK,GAEf,ECtEJ,MAqPA,GArPwBxE,IAajB,IAbkB,KACvBW,EAAI,kBACJ4/B,EAAiB,WACjBC,EAAU,sBACVC,EAAqB,mBACrBC,EAAkB,OAClBC,EAAM,SACNhJ,EAAQ,aACRiJ,EAAY,gBACZC,EAAe,SACfC,EAAQ,cACRC,EAAa,gBACbC,GACDhhC,EAWC,OACEiB,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EAAKJ,SAAA,EACjBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAA5V,SACS,OAAlBwgC,EAAyB,gBAAkB,oBAE9C1gC,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,OACL0E,MAAOwyB,EAAWl3B,MAAQ,GAC1B2E,SAAUwyB,EACV/yB,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACsW,GAAAA,EAAW,CAAApW,UACVU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACTC,KAAG,EACH/L,MAAOwyB,EAAWS,WAAa,MAC/B,kBAAgB,qCAChB33B,KAAK,YACL2E,SAAUwyB,EAAsBlgC,SAAA,EAEhCF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,IAAIkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,SACtD1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,IAAIkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,eAK5D1W,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,mBACa,UAIrBF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACsW,GAAAA,EAAW,CAAApW,UACVU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACTC,KAAG,EACH/L,MAAOwyB,EAAWU,iBAAmB,IACrC,kBAAgB,qCAChB53B,KAAK,kBACL2E,SAAUwyB,EAAsBlgC,SAAA,EAEhCF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,IAAIkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,SACtD1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,IAAIkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,eAK5D1W,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,iBACRlK,GAAG,kBACHtD,KAAK,WACLoE,WAAS,EACTM,MAAOwyB,EAAWW,UAAY,GAC9BlzB,SAAUwyB,EAAsBlgC,SAlFpB,CACtB,CAAEyN,MAAO,MAAO+I,MAAO,OACvB,CAAE/I,MAAO,SAAU+I,MAAO,UAC1B,CAAE/I,MAAO,OAAQ+I,MAAO,QACxB,CAAE/I,MAAO,OAAQ+I,MAAO,SAgFG9N,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOjJ,OADKiJ,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oBAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,kBACRlK,GAAG,mBACHtD,KAAK,YACLoE,WAAS,EACTM,MAAOwyB,EAAWY,WAAa,GAC/BnzB,SAAUwyB,EAAsBlgC,SA5GnB,CACvB,CAAEyN,MAAO,OAAQ+I,MAAO,QACxB,CAAE/I,MAAO,SAAU+I,MAAO,WA4GE9N,KAAKgO,IACrB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,aAMF,WAAzBwyB,EAAWY,YACVngC,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,gBAKRU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,SAAA,EACjCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAG1E,MAAO,CAAE+G,WAAY,OAAQhI,UAC7CF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,SACLyN,MAAM,QACN/I,MAAO2yB,EACPv6B,QAAQ,WACRsH,WAAS,EACTzF,OAAO,SACPgG,SAAUwyB,MAEP,aAEPpgC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,WACLyN,MAAM,gBACN/I,MAAO2pB,EACPvxB,QAAQ,WACRsH,WAAS,EACTzF,OAAO,SACPgG,SAAUwyB,MAEP,aAEPpgC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACL3E,MAAO,CAAE8F,SAAU,OAAQiD,UAAW,OACtClE,QAASu6B,EAAargC,UAEtBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,cAITF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAEugC,KAC7BzgC,EAAAA,EAAAA,KAAA,OACEmB,MAAO,CACLyB,OAAQ,QACRo+B,UAAW,OACXv3B,OAAQ,iBACRD,aAAc,MACdy3B,aAAc,UACd/gC,SAEDygC,EAAgB/3B,KAAI,CAAC8Q,EAAK5Q,KACzB9I,EAAAA,EAAAA,KAACkhC,GAAAA,EAAK,CAEJ//B,MAAO,CACL+N,YAAa,OACb9G,aAAc,MACdvF,QAAS,OACTE,eAAgB,gBAChBD,WAAY,UACZ5C,UAEFU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACHC,WAAS,EACT1C,WAAW,SACX3B,MAAO,CAAE+G,WAAY,OAAQhI,SAAA,EAE7BF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAIwZ,EAAI1L,MAAQ,KAAChO,EAAAA,EAAAA,KAAA,KAAAE,SAAIwZ,EAAI/L,cAG7B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAAC2M,GAAAA,EAAU,CAAC3G,QAASA,IAAMw6B,EAAgB13B,GAAO5I,UAChDF,EAAAA,EAAAA,KAACmhC,GAAAA,EAAU,YArBZr4B,cAgCjB9I,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,wBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,gBACL0E,MAAOwyB,EAAWiB,eAAiB,GACnCxzB,SAAUwyB,EACV/yB,WAAS,EACTzF,OAAO,mBAKfhH,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASk6B,EAAkBhgC,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASq6B,EAAmBngC,SACf,OAAlBwgC,EAAyB,MAAQ,gBAG/B,E,sCC/Nb,MAAMzG,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKvH,GAAQY,EAAAA,YAAiB,SAAeF,EAAOwR,GACnD,OAAO/S,EAAAA,EAAAA,KAACgT,GAAAA,EAAQ,CAAC1C,UAAW,EAAGyC,IAAKA,EAAKhN,QAAQ,YAAaxE,GAChE,IAEM8/B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAIL0/B,GAAmB,CACvBt4B,KAAM,KACN23B,UAAW,KACXC,gBAAiB,KACjBC,SAAU,KACVC,UAAW,KACXpgB,OAAQ,KACRygB,cAAe,MAGF,SAASI,KACtB,MAAMxL,EAAc,IAAIC,GAAAA,GAClB,mBAAE5gB,IAAuBC,EAAAA,EAAAA,KACzBmsB,EAAe,IAAIrC,IAClBsC,EAAWC,IAAgB12B,EAAAA,EAAAA,aAE3B22B,EAAcC,IAAmB52B,EAAAA,EAAAA,UAAS,CAC/C62B,YAAa,IACbC,cAAe,IACfC,kBAAmB,MAGfv0B,EAAU4zB,KAEhB,IAAIthB,GAAWC,EAAAA,EAAAA,MAEf,MAAOiiB,EAAUC,IAAej3B,EAAAA,EAAAA,WAAS,IAClCk3B,EAAiBC,IAAsBn3B,EAAAA,EAAAA,aACvCo3B,EAAkBC,IAAuBr3B,EAAAA,EAAAA,aAGzCs3B,EAAQC,IAAav3B,EAAAA,EAAAA,WAAS,IAC9Bw3B,EAAeC,IAAoBz3B,EAAAA,EAAAA,UAAS,KAC5Cy1B,EAAeiC,IAAoB13B,EAAAA,EAAAA,UAAS,OAC5Ck1B,EAAYyC,IAAiB33B,EAAAA,EAAAA,UAAS,CAAC,IACvC01B,EAAiBkC,IAAsB53B,EAAAA,EAAAA,UAAS,KAChDq1B,EAAQwC,IAAa73B,EAAAA,EAAAA,UAAS,KAC9BqsB,EAAUyL,IAAe93B,EAAAA,EAAAA,UAAS,KAClCw1B,EAAUuC,IAAe/3B,EAAAA,EAAAA,UAAS,KAElCg4B,EAAYC,IAAiBj4B,EAAAA,EAAAA,UAAS,KACtCk4B,EAAgBC,IAAqBn4B,EAAAA,EAAAA,UAAS,KAC9CrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OACzCvJ,EAAAA,EAAAA,YAAU,KACR+/B,EAAanC,mBAAmBhnB,MAAMwI,IACpC6gB,EAAa7gB,EAAO,GACpB,GACD,IAEH,MAgJMuiB,EAA4B7iC,IAChC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OAC9B,IAAIw1B,EAAc,CAAC,EAEnB,GAAa,YAATr6B,EACFq6B,EAAc,IACT1B,EACH2B,QAAS,KACT/c,OAAQ,KACRgd,IAAK,KACL/X,SAAU,KACVgY,KAAM,KACNC,QAAS,KACT7C,gBAAiB,KACjB8C,SAAU,KACVC,aAAc,KACdC,SAAU,KAEV,CAAC56B,GAAO0E,QAEL,GAAa,UAAT1E,EAAkB,CAC3B,MAAM,GACJsD,EAAE,UACFswB,EAAS,gBACTgE,EAAe,SACf8C,EAAQ,aACRC,EAAY,SACZC,EAAQ,oBACRC,GACEn2B,GAEE,IAAE61B,EAAG,SAAE/X,EAAQ,SAAEsY,EAAQ,KAAEN,EAAI,QAAEC,GAAYI,EAEnDR,EAAc,IACT1B,EACH2B,QAASh3B,EACTswB,UAAWA,EACX8G,SAAUA,EACVH,IAAKA,EACL3C,gBAAiBA,EACjBpV,SAAUA,EACVsY,SAAUA,EACVN,KAAMA,EACNC,QAASA,EACTE,aAAcA,EACdC,SAAUA,EAEd,MACEP,EAAc,IACT1B,EACH,CAAC34B,GAAO0E,GAQZk0B,EAAgByB,EAAY,EAmBxBU,GAPyB,OAATtC,QAAS,IAATA,GAAAA,EAAWvX,QAC9ByS,GACCA,EAAMnG,UAAYmL,EAAanL,SAC/BmG,EAAM1nB,WAAa0sB,EAAa1sB,WAIR8uB,CAAC94B,EAASpK,KAIpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,GAGE+4B,EAAsBA,CAACzjC,EAAOC,KACnB,cAAXA,GAIJyhC,GAAY,EAAM,GAkDW3V,EAAAA,GAAAA,IAAclX,EAAoB,gBAGjE,OACEzU,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,yBAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBAEJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAAoB,KAACF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAI/DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,eACL0E,MAAOi0B,EAAaxI,aACpBxrB,SAAUy1B,EACVa,OA3GgB1jC,IAC9B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBq2B,EAAex2B,EAAMQ,OAAOme,QAAQ,OAAQ,KAClDuV,GAAiBuC,IAAQ,IACpBA,EACH,CAACn7B,GAAOk7B,KACP,EAsGW92B,WAAS,EACTzF,OAAO,cAIXhH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,gBAAmB,KACzBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAIpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,OACL0E,MAAOi0B,EAAavgC,KACpBuM,SAAUy1B,EACVh2B,WAAS,EACTzF,OAAO,cAIXhH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAAiB,KACvBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAIpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,gBACRlK,GAAG,iBACHtD,KAAK,UACLoE,WAAS,EACTM,MAAOi0B,EAAanL,QACpB7oB,SAAUy1B,EAAyBnjC,SAElC4vB,EAAAA,GAAelnB,KAAKgO,IACnB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAOD,QAAzBi0B,EAAanL,SACY,WAAzBmL,EAAanL,WACX71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAAgB,KACtBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAIpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EACC,CACAjK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOi0B,EAAa1sB,SACpBtH,SAAUy1B,EAAyBnjC,SAElC6vB,EAAAA,GAAgBnnB,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,iBAoFP,WAAzBi0B,EAAanL,SACY,QAAzBmL,EAAanL,WACX71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI1DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChBg2B,UAAQ,EACR9tB,KAAK,KACP0E,MAAOs1B,EAAWvW,KAAKgD,GAAAA,IACrB9hB,SAAWC,GApdNw2B,EAAC7jC,EAAOU,KACjC,MAAM01B,EAAiBp2B,EAAMsN,OAAOH,MAEpC,GAAa,OAATzM,EACFgiC,EAActM,QACT,GAAa,WAAT11B,EAAmB,CAC5B,MAIMojC,EAJqB5C,EAAUvX,QAAQvT,GAC3CggB,EAAe5U,SAASpL,EAAOimB,aAGQj0B,KAAKgO,IAAM,CAClDimB,UAAWjmB,EAAOimB,UAClBtwB,GAAIqK,EAAOrK,OAGb62B,EAAkBkB,EACpB,GAocqCD,CAAmBx2B,EAAG,MACzC2mB,YAAcC,GAAaA,EAAS/H,KAAKgD,GAAAA,IAAqB/B,KAAK,MACjE4W,UAAW,CACT7jC,GAAI,CACF,mBAAoB,CAClB0O,gBAAiB,2BAGrBlP,SAEDmV,EAAmBzM,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOge,aAAa10B,SAC5D0W,EAAOge,cADKhe,EAAOge,uBA8BP,QAAzBgN,EAAanL,UACb71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAGRU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAjZQw+B,KAC5B7B,EAAiB,MACjBH,GAAU,GACVI,EAAc,CACZ35B,KAAM,GACN23B,UAAW,GACXC,gBAAiB,GACjBC,SAAU,GACVC,UAAW,GACXK,cAAe,KAEjByB,EAAmB,GAAG,EAsY6B3iC,SAChC,qBAIHF,EAAAA,EAAAA,KAAA,SAAM,QAENA,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACI,GAAI,EAAEzF,UACVF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,OACEmB,MAAO,CACLyB,OAAQ,QACRo+B,UAAW,OACXv3B,OAAQ,iBACRD,aAAc,MACdzI,MAAO,SACPb,SAEDuiC,EAAc75B,KAAI,CAAC67B,EAAUC,KAC5B1kC,EAAAA,EAAAA,KAACkhC,GAAAA,EAAK,CAEJ//B,MAAO,CACL+N,YAAa,OACb9G,aAAc,MACdvF,QAAS,OACTE,eAAgB,gBAChBD,WAAY,SACZF,OAAQ,QACR1C,UAEFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAS2C,QAAS,EAAEvF,UAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEukC,EAASx7B,MACvBjJ,EAAAA,EAAAA,KAAC2M,GAAAA,EAAU,CACT3G,QAASA,IAtchB8C,KAC3B,GAAIA,GAAS,GAAKA,EAAQ25B,EAAc15B,OAAQ,CAAC,IAAD47B,EAC9ChC,EAAiB75B,GACjB05B,GAAU,GACVI,EAAc,IAAKH,EAAc35B,KAEjC,MAAM87B,EAA+B,QAAvBD,EAAGlC,EAAc35B,UAAM,IAAA67B,OAAA,EAApBA,EAAsBhkB,OAAO,GACxCkkB,EAAc1V,OAAOE,QAAQuV,GAAY,CAAC,GAAGh8B,KACjDX,IAAA,IAAE+F,EAAKL,GAAM1F,EAAA,MAAM,CACjB+F,MACAL,QACD,IAGHk1B,EAAmBgC,EACrB,GAubiDC,CAAoBJ,GAAQxkC,UAE3CF,EAAAA,EAAAA,KAAC+kC,GAAAA,EAAQ,OAEX/kC,EAAAA,EAAAA,KAAC2M,GAAAA,EAAU,CACT3G,QAASA,KAAMg/B,OAldpBl8B,EAkd0C47B,OAjdvEhC,GAAkBuC,IAChB,MAAMC,EAAc,IAAID,GAExB,OADAC,EAAYC,OAAOr8B,EAAO,GACnBo8B,CAAW,IAJSp8B,KAkdkD,EAAA5I,UAE7CF,EAAAA,EAAAA,KAACmhC,GAAAA,EAAU,cAtBduD,qBAoCvB1kC,EAAAA,EAAAA,KAAA,UACAY,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAjWW2F,UAAa,IAADy5B,EAAAC,EAAAC,EACvC,MAAMC,EAAWla,KAAKC,MAAM,IAA8B,KAArByC,EAAAA,GAAAA,OAErC,GACwC,MAAb,QAAzBqX,EAAAxD,EAAaxI,oBAAY,IAAAgM,OAAA,EAAzBA,EAA2Bj3B,UAC1ByzB,EAAaxI,cACgB,MAAb,QAAjBiM,EAAAzD,EAAavgC,YAAI,IAAAgkC,OAAA,EAAjBA,EAAmBl3B,UAClByzB,EAAavgC,MAGmB,MAAb,QAApBikC,EAAA1D,EAAanL,eAAO,IAAA6O,OAAA,EAApBA,EAAsBn3B,UACrByzB,EAAanL,SACY,QAAzBmL,EAAanL,UAAsBmL,EAAa1sB,SAGjD,YADA8uB,EAAoB,mCAAoC,SAI1D,MAAMV,EAAc,IACf1B,EACHr1B,GAAIg5B,EAAS1Y,WACb2Y,WAAY/C,EACZ9sB,GAAIstB,EACJzc,OAAQ2c,GAGVnN,EAAYyP,eAAenC,GAAahrB,MAAMotB,IAAU,IAADC,EACrD,GAAID,GAAyB,QAArBC,EAAIxW,OAAOkN,KAAKqJ,UAAK,IAAAC,GAAjBA,EAAmB58B,QAA2B,YAAb,OAAJ28B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,QAA/C,CAAqE,IAADs8B,EAClE,MAAMC,EAAc,OAAJH,QAAI,IAAJA,GAAa,QAATE,EAAJF,EAAMx6B,eAAO,IAAA06B,OAAT,EAAJA,EAAeh9B,KAAKk9B,IAC1B9lC,EAAAA,EAAAA,KAAA,MAAAE,SAA8B4lC,GAArB58B,KAAAA,cAEnB86B,EAAoB6B,EAAS,QAE/B,MAGAj6B,YAAW,KACTmU,EAAS,YAAa,CAAEP,MAAO,CAAEtU,QAAS,8BAA+B5B,OAAQ,YAAc,GAC9F,IAAI,GACP,EA0T4CpJ,SAC/B,gBAMLF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QArUG+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EAkU+B7f,SACvB,sBASTF,EAAAA,EAAAA,KAACG,GAAAA,EAAQ,CACPG,KAAM2hC,EACNtpB,iBAAkB,IAClBpY,QAAS0jC,EACT7jC,aAAc,CAAEC,SAAU,MAAON,WAAY,SAAUG,UAEvDF,EAAAA,EAAAA,KAACa,GAAK,CACJN,QAAS0jC,EACTnjC,SAAUuhC,EACV3hC,GAAI,CAAEK,MAAO,QAASb,SAErBiiC,MAGHtiC,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAELD,EAAAA,EAAAA,KAACgmC,GAAe,CACd1lC,KAAMiiC,EACNrC,kBA5nBgBA,KACxBsC,GAAU,EAAM,EA4nBR9B,cAAeA,EACfP,WAAYA,EACZC,sBAnmBqBvyB,IAC7B,MAAM,KAAE5E,EAAI,MAAE0E,GAAUE,EAAEC,OACb,WAAT7E,EACF65B,EAAUn1B,GACQ,aAAT1E,EACT85B,EAAYp1B,GAEZi1B,GAAeqD,IAAU,IACpBA,EACH,CAACh9B,GAAO0E,KAEZ,EAylBQ0yB,mBA7jBiBA,KACzB,MAAM6F,EAAoB,IACrB/F,EACHxf,OAAQggB,EAAgBwF,QAAO,CAACC,EAAKC,KACnCD,EAAIC,EAAKr4B,KAAOq4B,EAAK14B,MACdy4B,IACN,CAAC,IAaN,GAV0C,KAAtCF,EAAkBrF,kBACpBqF,EAAmC,gBAAI,KAEL,KAAhCA,EAAkBtF,YACpBsF,EAA6B,UAAI,KAE/B/W,OAAOkN,KAAK6J,EAAkBvlB,QAAQ5X,SACxCm9B,EAA0B,OAAI,CAACA,EAAkBvlB,SAG7B,OAAlB+f,EAAwB,CAC1B,MAAM4F,EAAuB,IAAI7D,GACjC6D,EAAqB5F,GAAiBwF,EACtCxD,EAAiB4D,EACnB,MACE5D,GAAkB6D,GAAsB,IACnCA,EACHL,KAIJ1D,GAAU,GACVI,EAAcrB,IACdsB,EAAmB,IACnBF,EAAiB,KAAK,EA6hBdrC,OAAQA,EACRhJ,SAAUA,EACViJ,aA1lBWA,KACnB,MAAMiG,EAAY7F,EAAgBhE,MAAMjjB,GAAQA,EAAI1L,MAAQsyB,IACtDmG,EAAc9F,EAAgBhE,MAAMjjB,GAAQA,EAAI/L,QAAU2pB,IAE5DkP,GAAaC,EACfzD,EAAY,oCAIdH,GAAoB6D,GAAa,IAC5BA,EACH,CAAE14B,IAAKsyB,EAAQ3yB,MAAO2pB,MAExBwL,EAAU,IACVC,EAAY,IACZC,EAAY,IAAG,EA4kBPxC,gBAzkBe13B,IACvB+5B,GAAoB6D,IAClB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQxB,OAAOr8B,EAAO,GACf69B,CAAO,GACd,EAqkBMlG,SAAUA,EACVE,gBAAiBA,WAM7B,CCjtBA,MAAM1G,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKvH,GAAQY,EAAAA,YAAiB,SAAeF,EAAOwR,GACnD,OAAO/S,EAAAA,EAAAA,KAACgT,GAAAA,EAAQ,CAAC1C,UAAW,EAAGyC,IAAKA,EAAKhN,QAAQ,YAAaxE,GAChE,IAEM8/B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAGL0/B,GAAmB,CACvBt4B,KAAM,KACN23B,UAAW,KACXC,gBAAiB,KACjBC,SAAU,KACVC,UAAW,KACXpgB,OAAQ,KACRygB,cAAe,MAGF,SAASwF,KACtB,MAAM5Q,EAAc,IAAIC,GAAAA,GAClB,YAAEtX,EAAW,mBAAEtJ,IAAuBC,EAAAA,EAAAA,KACtCmsB,EAAe,IAAIrC,IAClBsC,EAAWC,IAAgB12B,EAAAA,EAAAA,YAC5BwC,EAAU4zB,MACTY,EAAUC,IAAej3B,EAAAA,EAAAA,WAAS,IAClCk3B,EAAiBC,IAAsBn3B,EAAAA,EAAAA,aACvCo3B,EAAkBC,IAAuBr3B,EAAAA,EAAAA,aAGzCs3B,EAAQC,IAAav3B,EAAAA,EAAAA,WAAS,IAE9By1B,EAAeiC,IAAoB13B,EAAAA,EAAAA,UAAS,OAC5Ck1B,EAAYyC,IAAiB33B,EAAAA,EAAAA,UAAS,CAAC,IACvC01B,EAAiBkC,IAAsB53B,EAAAA,EAAAA,UAAS,KAChDq1B,EAAQwC,IAAa73B,EAAAA,EAAAA,UAAS,KAC9BqsB,EAAUyL,IAAe93B,EAAAA,EAAAA,UAAS,KAClCw1B,EAAUuC,IAAe/3B,EAAAA,EAAAA,UAAS,KAClCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAElCiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,GAG3C,IAAI8U,GAAWC,EAAAA,EAAAA,OACE/N,EAAAA,EAAAA,MAAjB,MACMulB,GAASqP,EAAAA,EAAAA,OAERC,EAAqBC,IAA0B97B,EAAAA,EAAAA,aAC/C22B,EAAcC,IAAmB52B,EAAAA,EAAAA,UAAS,CAAC,IAC3Cw3B,EAAeC,IAAoBz3B,EAAAA,EAAAA,UAAS,KAC5Cg4B,EAAYC,IAAiBj4B,EAAAA,EAAAA,UAAS,KACtCk4B,GAAgBC,KAAqBn4B,EAAAA,EAAAA,UAAS,KAErDvJ,EAAAA,EAAAA,YAAU,KACR+/B,EAAanC,mBAAmBhnB,MAAMwI,IACpC6gB,EAAa7gB,EAAO,GACpB,GACD,IAEH,MAuJMuiB,GAA4B7iC,IAChC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OAE9B,IAAIw1B,EAAc,CAAC,EAEnB,GAAa,YAATr6B,EACFq6B,EAAc,IACT1B,EACH2B,QAAS,KACT/c,OAAQ,KACRgd,IAAK,KACL/X,SAAU,KACVgY,KAAM,KACNC,QAAS,KACT7C,gBAAiB,KACjB8C,SAAU,KACVC,aAAc,KACdC,SAAU,KAKVluB,GAAI,KAEJ,CAAC1M,GAAO0E,QAEL,GAAa,UAAT1E,EAAkB,CAC3B,MAAM,GACJsD,EAAE,UACFswB,EAAS,gBACTgE,EAAe,aACf+C,EAAY,SACZC,EAAQ,SACRF,EAAQ,oBACRG,GACEn2B,GAEE,IAAE61B,EAAG,SAAE/X,EAAQ,SAAEsY,EAAQ,KAAEN,EAAI,QAAEC,GAAYI,EAEnDR,EAAc,IACT1B,EACH2B,QAASh3B,EACTswB,UAAWA,EACX+G,aAAcA,EACdC,SAAUA,EACVF,SAAUA,EACVH,IAAKA,EACL3C,gBAAiBA,EACjBpV,SAAUA,EACVsY,SAAUA,EACVN,KAAMA,EACNC,QAASA,EAEb,MACEJ,EAAc,IACT1B,EACH,CAAC34B,GAAO0E,GAUZk0B,EAAgByB,EAAY,EASxBU,IANyB,OAATtC,QAAS,IAATA,GAAAA,EAAWvX,QAC9ByS,GACCA,EAAMnG,UAAYmL,EAAanL,SAC/BmG,EAAM1nB,WAAa0sB,EAAa1sB,WAGR8uB,CAAC94B,EAASpK,KAIpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,GAGE+4B,GAAsBA,CAACzjC,EAAOC,KACnB,cAAXA,GAIJyhC,GAAY,EAAM,EA0GpB,OArDAxgC,EAAAA,EAAAA,YAAU,KACE,OAAN81B,QAAM,IAANA,GAAAA,EAAQwP,QACV3yB,GAAa,GACb2hB,EAAYiR,gBAAgB,CAAE16B,GAAU,OAANirB,QAAM,IAANA,OAAM,EAANA,EAAQwP,SAAU1uB,MAAMotB,IAAU,IAADwB,EAEjE,GADA7yB,GAAa,GACTqxB,GAAc,OAANvW,aAAM,IAANA,QAAkB,QAAZ+X,EAAN/X,OAAQkN,KAAKqJ,UAAK,IAAAwB,GAAlBA,EAAoBn+B,OAAQ,CACtC,MAAMo+B,EAAmBzB,EAEzBqB,EAAuBI,GAEvBjE,EACEiE,EAAiBxxB,IAEnB+sB,EACEyE,EAAiB3B,YAEnBpC,GACE+D,EAAiB3gB,QAEnBqb,EAAgB,CACdt1B,GAAI46B,EAAiB56B,GACrB+Z,UAAW6gB,EAAiB7gB,UAC5B8S,aAAc+N,EAAiB/N,aAC/B/3B,KAAM8lC,EAAiB9lC,KACvBo1B,QAAS0Q,EAAiB1Q,QAC1BvhB,SAAUiyB,EAAiBjyB,SAC3BquB,QAAS4D,EAAiB5D,QAC1B1G,UAAWsK,EAAiBtK,UAC5B4G,KAAM0D,EAAiB1D,KACvBD,IAAK2D,EAAiB3D,IACtB/X,SAAU0b,EAAiB1b,SAC3B+Z,WAAY2B,EAAiB3B,WAC7B5B,aAAcuD,EAAiBvD,aAC/BC,SAAUsD,EAAiBtD,SAE3BluB,GAAIwxB,EAAiBxxB,IAKzB,MACEoK,EAAS,YAAa,CAAEP,MAAO,CAAEtU,QAAS,sBAAuB5B,OAAQ,UAC3E,KAGFsC,YAAW,KACTmU,EAAS,YAAa,CAAEP,MAAO,CAAEtU,QAAS,sBAAuB5B,OAAQ,UAAY,GACpF,IACL,GACC,KAEJijB,EAAAA,GAAAA,IAAclX,EAAoB,iBAG/BzU,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,uBAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBAEJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBACNF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,eACL0E,MAAOi0B,EAAaxI,aACpBxrB,SAAUy1B,GACVh2B,WAAS,EACTzF,OAAO,SACPjE,UAAQ,OAIZ/C,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBACNF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,OACL0E,MAAOi0B,EAAavgC,KACpBuM,SAAUy1B,GACVh2B,WAAS,EACTzF,OAAO,cAIgB,QAAzBg6B,EAAanL,SACY,WAAzBmL,EAAanL,WACX71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,eACNF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,gBACRlK,GAAG,iBACHtD,KAAK,UACLoE,WAAS,EACTM,MAAmB,OAAZi0B,QAAY,IAAZA,OAAY,EAAZA,EAAcnL,QACrB7oB,SAAUy1B,GAAyBnjC,SAEpB,OAAd4vB,EAAAA,SAAc,IAAdA,EAAAA,QAAc,EAAdA,EAAAA,GAAgBlnB,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B/M,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cACNF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLE,MAAM,WACNnK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOi0B,EAAa1sB,SACpBtH,SAAUy1B,GAAyBnjC,SAEnB,OAAf6vB,EAAAA,SAAe,IAAfA,EAAAA,QAAe,EAAfA,EAAAA,GAAiBnnB,KAAKgO,IACrB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,iBAoFP,WAAzBi0B,EAAanL,SAAiD,QAAzBmL,EAAanL,WAClD71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI1DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChBg2B,UAAQ,EACR9tB,KAAK,KACL0E,MAAOs1B,EAAWvW,KAAKgD,GAAAA,IACvB9hB,SAAWC,GA9YJw2B,EAAC7jC,EAAOU,KACjC,MAAM01B,EAAiBp2B,EAAMsN,OAAOH,MAEpC,GAAa,OAATzM,EACFgiC,EAActM,QACT,GAAa,WAAT11B,EAAmB,CAC5B,MAAMkmC,EAA8B,OAAT1F,QAAS,IAATA,OAAS,EAATA,EAAWvX,QAAQvT,GAC5CggB,EAAe5U,SAASpL,EAAOimB,aAG3ByH,EAAkC,OAAlB8C,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBx+B,KAAKgO,IAAM,CACnDimB,UAAWjmB,EAAOimB,UAClBtwB,GAAIqK,EAAOrK,OAGb62B,GAAkBkB,EACpB,GA8XmCD,CAAmBx2B,EAAG,MACvC2mB,YAAcC,GAAaA,EAAS/H,KAAKgD,GAAAA,IAAqB/B,KAAK,MACnE4W,UAAW,CACT7jC,GAAI,CACF,mBAAoB,CAClB0O,gBAAiB,2BAGrBlP,SAEiB,OAAlBmV,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzM,KAAKgO,IACxB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOge,aAAa10B,SAC5D0W,EAAOge,cADKhe,EAAOge,uBA+BL,QAAzBgN,EAAanL,UACb71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAGRU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QApdQw+B,KAC5B7B,EAAiB,MACjBH,GAAU,GACVI,EAAc,CACZ35B,KAAM,GACN23B,UAAW,GACXC,gBAAiB,GACjBC,SAAU,GACVC,UAAW,GACXK,cAAe,KAEjByB,EAAmB,GAAG,EAyc6B3iC,SAChC,qBAIHF,EAAAA,EAAAA,KAAA,SAAM,QAENA,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACI,GAAI,EAAEzF,UACVF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAA,OACEmB,MAAO,CACLyB,OAAQ,QACRo+B,UAAW,OACXv3B,OAAQ,iBACRD,aAAc,MACdzI,MAAO,SACPb,SAEY,OAAbuiC,QAAa,IAAbA,OAAa,EAAbA,EAAe75B,KAAI,CAAC67B,EAAUC,KAC7B1kC,EAAAA,EAAAA,KAACkhC,GAAAA,EAAK,CAEJ//B,MAAO,CACL+N,YAAa,OACb9G,aAAc,MACdvF,QAAS,OACTE,eAAgB,gBAChBD,WAAY,SACZF,OAAQ,QACR1C,UAEFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAS2C,QAAS,EAAEvF,UAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEukC,EAASx7B,MACvBjJ,EAAAA,EAAAA,KAAC2M,GAAAA,EAAU,CACT3G,QAASA,IA5gBhB8C,KAC3B,GAAIA,GAAS,GAAKA,EAAQ25B,EAAc15B,OAAQ,CAAC,IAAD47B,EAAA0C,EAC9C1E,EAAiB75B,GACjB05B,GAAU,GAEV,MAAM8E,EAAoB,IAAK7E,EAAc35B,IAEvC87B,EAA+B,QAAvBD,EAAGlC,EAAc35B,UAAM,IAAA67B,OAAA,EAApBA,EAAsBhkB,OAAO,GACxCkkB,EAA4C,QAAjCwC,EAAGlY,OAAOE,QAAQuV,GAAY,CAAC,UAAE,IAAAyC,OAAA,EAA9BA,EAAgCz+B,KAClDX,IAAA,IAAE+F,EAAKL,GAAM1F,EAAA,MAAM,CACjB+F,MACAL,QACD,IAGHk1B,EAAmBgC,GAEnBjC,EAAc0E,EAChB,GA0fiDxC,CAAoBJ,GAAQxkC,UAE3CF,EAAAA,EAAAA,KAAC+kC,GAAAA,EAAQ,OAEX/kC,EAAAA,EAAAA,KAAC2M,GAAAA,EAAU,CACT3G,QAASA,IAxhBd8C,KAC7B,GAAIA,GAAS,GAAKA,EAAQ25B,EAAc15B,OAAQ,CAC9C,MAAMu9B,EAAuB,IAAI7D,GACjC6D,EAAqBnB,OAAOr8B,EAAO,GACnC45B,EAAiB4D,EACnB,GAmhBiDtB,CAAsBN,GAAQxkC,UAE7CF,EAAAA,EAAAA,KAACmhC,GAAAA,EAAU,cAtBduD,kBAoCrB1kC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAjZW2F,UAAa,IAADy5B,EAAAC,EAAAC,EAEC,MAAb,QAAzBF,EAAAxD,EAAaxI,oBAAY,IAAAgM,OAAA,EAAzBA,EAA2Bj3B,SAC1ByzB,EAAaxI,cACgB,MAAb,QAAjBiM,EAAAzD,EAAavgC,YAAI,IAAAgkC,OAAA,EAAjBA,EAAmBl3B,SAClByzB,EAAavgC,MAGmB,MAAb,QAApBikC,EAAA1D,EAAanL,eAAO,IAAA6O,OAAA,EAApBA,EAAsBn3B,SACrByzB,EAAanL,UACY,QAAzBmL,EAAanL,SAAsBmL,EAAa1sB,UAMnD2sB,GAAiBoD,IACf,MAAM3B,EAAc,IACf2B,EACH14B,GAAIq1B,EAAar1B,GACjB+Z,UAAWsb,EAAatb,UACxBkf,WAAY/C,EACZ9sB,GAAIstB,EACJzc,OAAQ2c,IAkBV,OAfAnN,EAAYuR,eAAejE,GAAahrB,MAAMotB,IAAU,IAADC,EACrD,GAAID,GAAyB,QAArBC,EAAIxW,OAAOkN,KAAKqJ,UAAK,IAAAC,GAAjBA,EAAmB58B,QAA2B,YAAb,OAAJ28B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,QAA/C,CAAqE,IAADs8B,EAClE,MAAMC,EAAc,OAAJH,QAAI,IAAJA,GAAa,QAATE,EAAJF,EAAMx6B,eAAO,IAAA06B,OAAT,EAAJA,EAAeh9B,KAAKk9B,IAC1B9lC,EAAAA,EAAAA,KAAA,MAAAE,SAA8B4lC,GAArB58B,KAAAA,cAEnB86B,GAAoB6B,EAAS,QAE/B,MAGAj6B,YAAW,KACTmU,EAAS,YAAa,CAAEP,MAAO,CAAEtU,QAASw6B,EAAKltB,IAAKlP,OAAQo8B,EAAKp8B,SAAW,GAC3E,IAAI,IAGFg6B,CAAW,IA7BlBU,GAAoB,mCAAoC,QA8BxD,EAuW4C9jC,SAC/B,gBAMLF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAlXG+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EA+W+B7f,SACvB,sBAQTF,EAAAA,EAAAA,KAACG,GAAAA,EAAQ,CACPG,KAAM2hC,EACNtpB,iBAAkB,IAClBpY,QAAS0jC,GACT7jC,aAAc,CAAEC,SAAU,MAAON,WAAY,SAAUG,UAEvDF,EAAAA,EAAAA,KAACa,GAAK,CACJN,QAAS0jC,GACTnjC,SAAUuhC,EACV3hC,GAAI,CAAEK,MAAO,QAASb,SAErBiiC,MAIHtiC,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAEF0e,GAAezD,GACdlb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAClCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,MAAM,OAEd3B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAIND,EAAAA,EAAAA,KAACgmC,GAAe,CACd1lC,KAAMiiC,EACNrC,kBAzrBgBA,KACxBsC,GAAU,EAAM,EAyrBR9B,cAAeA,EACfP,WAAYA,EACZC,sBAvrBqBvyB,IAC7B,MAAM,KAAE5E,EAAI,MAAE0E,GAAUE,EAAEC,OAEb,WAAT7E,EACF65B,EAAUn1B,GACQ,aAAT1E,EACT85B,EAAYp1B,GAEZi1B,GAAeqD,IAAU,IACpBA,EAEH,CAACh9B,GAAO0E,KAEZ,EA2qBQ0yB,mBA/oBiBA,KACzB,MAAM6F,EAAoB,IACrB/F,EACHxf,OAAQggB,EAAgBwF,QAAO,CAACC,EAAKC,KACnCD,EAAIC,EAAKr4B,KAAOq4B,EAAK14B,MACdy4B,IACN,CAAC,IAcN,GAX0C,KAAtCF,EAAkBrF,kBACpBqF,EAAmC,gBAAIY,GAEL,KAAhCZ,EAAkBtF,YACpBsF,EAA6B,UAAI,KAG/B/W,OAAOkN,KAAK6J,EAAkBvlB,QAAQ5X,SACxCm9B,EAA0B,OAAI,CAACA,EAAkBvlB,SAG7B,OAAlB+f,EAAwB,CAC1B,MAAM4F,EAAuB,IAAI7D,GACjC6D,EAAqB5F,GAAiBwF,EACtCxD,EAAiB4D,EACnB,MACE,GAAI7D,EACFC,GAAkB6D,GAAsB,IACnCA,EACHL,SAEG,CAELxD,EADgB,CAACwD,GAEnB,CAGF1D,GAAU,GACVI,EAAcrB,IACdsB,EAAmB,IACnBF,EAAiB,KAAK,EAymBdrC,OAAQA,EACRhJ,SAAUA,EACViJ,aA5qBWA,KACnB,MAAMiG,EAAY7F,EAAgBhE,MAAMjjB,GAAQA,EAAI1L,MAAQsyB,IACtDmG,EAAc9F,EAAgBhE,MAAMjjB,GAAQA,EAAI/L,QAAU2pB,IAE5DkP,GAAaC,EACfzD,EAAY,oCAIdH,GAAoB6D,GAAa,IAC5BA,EACH,CAAE14B,IAAKsyB,EAAQ3yB,MAAO2pB,MAExBwL,EAAU,IACVC,EAAY,IACZC,EAAY,IAAG,EA8pBPxC,gBA3pBe13B,IACvB+5B,GAAoB6D,IAClB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQxB,OAAOr8B,EAAO,GACf69B,CAAO,GACd,EAupBMlG,SAAUA,EACVE,gBAAiBA,WAM7B,CC3yBA,MAiCA,GAjCuB,CACrB,CACE33B,KAAM,YACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACm/B,GAAe,OAKtB,CACEn2B,KAAM,kBACNy+B,OAAO,EACP5R,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACwhC,GAAc,OAMrB,CACEx4B,KAAM,wBACNy+B,OAAO,EACP5R,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC4mC,GAAY,QCjCRc,GAAY,CACrBC,GAAI,CAAC,MACLC,MAAO,CAAC,KAAM,SACdC,OAAQ,CAAC,KAAM,QAAS,UACxBC,MAAO,CAAC,KAAM,QAAS,SAAU,U,gBCkBrC,MA2GA,GAxGwBvmC,IACtB,MAAMy0B,EAAc,IAAIC,GAAAA,GACjBoC,EAAgBC,IAAqBrtB,EAAAA,EAAAA,WAAS,IAC9CqO,EAAcif,IAAmBttB,EAAAA,EAAAA,WAAc,OAAL1J,QAAK,IAALA,OAAK,EAALA,EAAOmgC,YAAa,KAC9D/zB,EAAO8qB,IAAYxtB,EAAAA,EAAAA,UAAS,YAE5BytB,EAAeC,IAAoB1tB,EAAAA,EAAAA,WAAS,IAC5C2tB,EAAgBC,IAAqB5tB,EAAAA,EAAAA,WAAS,IAC9CrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MA2CzC,OACErK,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QA9C6B8yB,KACjCR,GAAkB,EAAK,EA6CiBp4B,SACrC,YAGDU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+3B,EAAen4B,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,UAChCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,UACjCU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAAApW,SAAA,EACVF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAS,CAACxsB,GAAG,sCAAqCrM,SAAC,2BACpDU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACT,kBAAgB,sCAChBxQ,KAAK,iCACL0E,MAAOA,EACPC,SAjCApN,IACpBi4B,EAASj4B,EAAMsN,OAAOH,OACK,YAAvBnN,EAAMsN,OAAOH,MACf4qB,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOmgC,WAEvBnJ,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBACzB,EA2B2C94B,SAAA,EAEvBF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,UAAUkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,cAC5D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,eAAekM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,qCAUjF9V,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QA5EQizB,KAChCX,GAAkB,EAAM,EA2EmCp4B,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAzEakzB,KAC3BZ,GAAkB,GAClB,IAAIngB,GAAmB,YAAVxK,EAA4B,OAALpM,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAA0B,OAALz3B,QAAK,IAALA,OAAK,EAALA,EAAOmgC,YAAc,GACjFvI,EAAiB,OAAJhhB,QAAI,IAAJA,OAAI,EAAJA,EAAMvP,KAAIlD,IACf,CACR,aAAcA,EAAKm3B,UACnB,WAAYn3B,EAAK+wB,QACjBre,SAAU1S,EAAKwP,SACf,gBAAiBxP,EAAKo8B,gBAI1B9L,EAAYqC,eAAe,CAAE,KAAQc,EAAY,WAAc,WAAY7gB,MAAMC,IAC/EsgB,EAAkBtgB,GAfpBogB,GAAiB,GAiBf74B,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAChB,GACF,EAqD0CtY,SAAC,iBAIzCL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACJ,ECpGDg6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAEK2/B,GAAQA,KACZ,MAAMtG,EAAe,IAAIrC,IAClBhF,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCy2B,EAAWC,IAAgB12B,EAAAA,EAAAA,UAAS,KACpCsuB,EAAae,IAAkBrvB,EAAAA,EAAAA,UAAS,KACxC+8B,EAAkBC,IAAuBh9B,EAAAA,EAAAA,aACzCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCquB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,CAAC,IAGnCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,IAC3CgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,KAE5FE,GAAoBlvB,EAAAA,EAAAA,cAAYjE,IAAmB,IAAlB,SAAEwsB,GAAUxsB,EACjD6yB,EAAYrG,EAAS,GACpB,KAEIvZ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAwB3CvJ,EAAAA,EAAAA,YAAU,KAZR2S,GAAa,GACbotB,EAAanC,mBACVhnB,MAAMwI,IACL6gB,EAAa7gB,GACbwZ,EAAexZ,GACfonB,EAAqBpnB,EAAO,IAE7Bua,SAAQ,KACPhnB,GAAa,EAAM,GAKV,GACZ,IAEH,MAAO8zB,EAAmBD,IAAwBj9B,EAAAA,EAAAA,UAAS,IAC3D,IAAIm9B,GAAmB7b,EAAAA,GAAAA,IAAc,IAAI4b,GAAoB,cAE7DzmC,EAAAA,EAAAA,YAAU,KACRwmC,EAAqBxG,EAAU,GAC9B,CAACA,IAEJ,MAUM3hB,GAAWC,EAAAA,EAAAA,MACXqoB,GAAev2B,EAAAA,EAAAA,QAAO,gBAStBw2B,EAA2BC,IAC/BlO,GAAgB,GAChB4N,EAAoBM,EAAY,EAyB5BC,EAAmBC,IACvBJ,EAAa/1B,QAAU,OACvB,MAAMo2B,EAAoBD,EAC1B78B,YAAW,KACTmU,EAAS,cAA+B,OAAjB2oB,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBn8B,KAAM,CAC9CiT,MAAO,CAAEmpB,UAAWN,EAAa/1B,QAASo2B,sBAC1C,GACD,IAAI,EAGH1E,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,GAGJxJ,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEdx5B,EAAAA,EAAAA,YAAU,KACR,MAAM46B,EAAmBoF,EAAUvX,QAAQoS,GACjB,KAAhB9B,GACN8B,EAAWM,UACR/P,cACA9K,SAASyY,EAAY3N,gBACxByP,EAAWrnB,SACR4X,cACA9K,SAASyY,EAAY3N,gBACxByP,EAAW9F,QAAQ3J,cAAc9K,SAC/ByY,EAAY3N,iBAGlBob,EAAqB5L,EAAiB,GACrC,CAAC7B,EAAaiH,IAEjB,MAAM5E,EAAwBxD,IAC5BuB,EAAYvB,GACZ,MACME,EADcuD,GAAoBgL,GACrBa,CAAY,CAAEzwB,KAAMupB,EAAWpI,WAAU8O,mBAAkBnL,iBAAkBH,EAAsBvD,gBACtHoI,EAAanI,EAAWj4B,MAAM4W,MAC9B+vB,EAAqB1O,EAAWj4B,MAAM4W,KAAK,EAG7C,OACEvX,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,eAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAzGqBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAwGpBxvB,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,WAAW,SAAQ5C,SAAA,EAC5DF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAlHjBo3B,OAkHuCl9B,SAAC,YAGnDF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEk8B,KAAM,MACpBr9B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QA7Gc6iC,KACxBR,EAAa/1B,QAAU,SACvB1G,YAAW,KACTmU,EAAS,eAAgB,CACvBP,MAAO,CAAEmpB,UAAWN,EAAa/1B,UACjC,GACD,IAAI,EAuG8BpS,SAC5B,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QA7JoBw3B,KAC9BgL,EAAgBzN,EAAa,GAAG,EA6JtB55B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAsB,OAAZo3B,QAAY,IAAZA,IAAAA,EAAchyB,OACxB/C,QA1Key3B,KACzB6K,EAAwBvN,EAAa,IACrCV,GAAgB,EAAK,EAyKXl5B,MAAO,CAAEyG,OAAQ,UAAW1H,SAC7B,YAIDF,EAAAA,EAAAA,KAAC29B,GAAe,CACd+D,UAAWpI,GAA6C,IAAjCnK,OAAOkN,KAAK/C,GAAUvwB,OAAeq/B,EAAmB1G,EAC/E1I,mBAAoB+B,QAIxBn6B,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACCkb,GAEClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZga,UAAW,KACX5c,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAInBlC,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAAO,CAAE2b,UAAW,KACpBihB,aAAc,IACdC,QAAS,CACP,CACE/0B,KAAM,YACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,OAAOzc,SAAC,eAChCi+B,YAAa,EACbC,aAAc,GACdC,OAAQh2B,IAAA,IAAC,KAAE8P,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM0kB,WAAgB,GAEpD,CACE5zB,KAAM,UACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,WAAWzc,SAAC,aACpCi+B,YAAa,EACbC,aAAc,GACdC,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMse,SAAc,GAElD,CACExtB,KAAM,WACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,WAAWzc,SAAC,aACpCi+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,cACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,gBAAgBzc,SAAC,kBACzCi+B,YAAa,EACbC,aAAc,KAgBhBE,WAAyB,OAAbhF,EAAoB6O,EAAoBC,EAEtD7J,gBAAc,EACd9J,SAAUA,EACV2G,kBAAmBA,EACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAa,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAqC,IAAZ,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAc,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACtH7B,iBAAkBH,YAO1Bj9B,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KACLW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,kBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,SAEe,IAAxB66B,EAAahyB,QAAiB/I,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAC7BU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CAAC,oCACeF,EAAAA,EAAAA,KAAA,KAAAE,SAAoB,OAAhB8nC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBnL,YAAe,IAAI,kBAC3D78B,EAAAA,EAAAA,KAAA,KAAAE,SAAoB,OAAhB8nC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB9yB,WAAa,+BAA6B,UAO1ElV,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACNF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,SAAC,mDAMzBU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAnOA+4B,KACxB1E,GAAgB,EAAM,EAkO6Bn6B,SAAC,YAG9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAlOU2F,UACxB0uB,GAAgB,GAEhB,IACE,MAAM2E,EAAwB,OAAZjE,QAAY,IAAZA,OAAY,EAAZA,EAAcnyB,KAAIlD,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,WAC7Ck1B,EAAa1B,YAAYf,GAC/BlE,EAAY,CAAC,GACbE,EAAgB,GAClB,CAAE,MAAO72B,GACP,OAAOA,CACT,CAEAs9B,EAAanC,mBAAmBhnB,MAAMwI,IACpC6gB,EAAa7gB,EAAO,IAEtBkjB,EAAoB,6BAA8B,UAAU,EAmNnB9jC,SAAC,mBAG9B,EAIhB,M,gBCrVe,SAAS4oC,GAAyBnpC,GAQ7C,IAR8C,KAChDW,EAAI,YACJyoC,EAAW,eACXC,EAAc,YACdC,EAAW,kBACXC,EAAiB,kBACjBhJ,EAAiB,UACjBiJ,GACDxpC,EACC,OACEiB,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EAAKJ,SAAA,EACjBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAA5V,SAAC,8BAEbU,EAAAA,EAAAA,MAACoV,GAAAA,EAAa,CAAA9V,SAAA,EACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,MACNzN,KAAK,MACL0E,MAAOo7B,EAAYvF,IACnB51B,SAAUo7B,EACV37B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,WACNzN,KAAK,WACL0E,MAAOo7B,EAAYtd,SACnB7d,SAAUo7B,EACV37B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,WACNzN,KAAK,WACL0E,OAAkB,OAAXo7B,QAAW,IAAXA,OAAW,EAAXA,EAAahF,WAAY,GAChCn2B,SAAUo7B,EACV37B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,UACNzN,KAAK,UACL0E,MAAOo7B,EAAYrF,QACnB91B,SAAUo7B,EACV37B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,OACNzN,KAAK,OACL0E,MAAOo7B,EAAYtF,KACnB71B,SAAUo7B,EACV37B,WAAS,EACTzF,OAAO,aAIY,QAAtBuhC,EAAU1S,UACT71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,YACNzN,KAAK,YACL0E,MAAOo7B,EAAYK,UACnBx7B,SAAUo7B,EACV37B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,cACNzN,KAAK,cACL0E,MAAOo7B,EAAYM,YACnBz7B,SAAUo7B,EACV37B,WAAS,EACTzF,OAAO,oBAMjB5H,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAEgpC,QAE/BtoC,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASk6B,EAAkBhgC,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASijC,EAAY/oC,SAAC,aAItC,CCtHA,MAAM+5B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAGI,SAASynC,KAAe,IAADrhC,EACpC,MAAMw5B,EAAe,IAAIrC,IACnB,mBAAE/pB,IAAuBC,EAAAA,EAAAA,MACxBi0B,EAAcC,IAAmBv+B,EAAAA,EAAAA,aACjCw+B,EAAQjH,IAAav3B,EAAAA,EAAAA,WAAS,GAC/BwC,EAAU4zB,MAQT8H,EAAWO,IAAgBz+B,EAAAA,EAAAA,UAAS,CACzC0K,GAAI,GACJmsB,YAAa,IACbrL,QAAS,GACTvhB,SAAU,GACVy0B,MAAO,GACP9M,UAAW,GACX8G,SAAU,GACViG,WAAY,GACZ/I,gBAAiB,GACjB+C,aAAc,GACdC,SAAU,MAGLkF,EAAac,IAAkB5+B,EAAAA,EAAAA,UAAS,CAAC,IACzCi+B,EAAmBY,IAAwB7+B,EAAAA,EAAAA,aAC3Cg4B,EAAYC,IAAiBj4B,EAAAA,EAAAA,UAAS,KACtCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MACzC,IAAI8U,GAAWC,EAAAA,EAAAA,MAEf,MAAM+pB,EAAuB,CAC3B,CACEp8B,MAAO,IACP+I,MAAO,OAET,CACE/I,MAAO,IACP+I,MAAO,QAIXhV,EAAAA,EAAAA,YAAU,KACR+/B,EAAanC,mBAAmBhnB,MAAMwI,IACpC0oB,EAAgB1oB,EAAO8b,MAAM,GAC7B,GACD,IAIH,MAgFMoN,EAAyBxpC,IAC7B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACf6F,EACH,CAAClgC,GAAO0E,GAEV+7B,EAAapG,EAAY,EAOrBpD,EAAoBA,KACxBsC,GAAU,GACVsH,EAAqB,IACrBD,EAAe,GAAG,EAId7F,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAQJ,OACEtK,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,sBAEtCjJ,EAAAA,EAAAA,KAACiqC,GAAAA,GAAM,CACLC,cAtKgB,CACpB39B,GAAI,GACJia,OAAQ,GACRiQ,QAAS,GACTvhB,SAAU,GACVi1B,oBAAqB,CAAC,GAkKlBC,SAAUA,OACRlqC,UAEFF,EAAAA,EAAAA,KAACqqC,GAAAA,GAAI,CAAAnqC,UACHF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBAEJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,eACOF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIjDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,YACL0E,MAAOw7B,EAAUtM,UACjBjvB,SAAUo8B,EACV38B,WAAS,EACTzF,OAAO,cAMX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,UACHtD,KAAK,UACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAU1S,QACjB7oB,SAAUo8B,EAAsB9pC,SAE/B4vB,EAAAA,GAAelnB,KAAKgO,IACnB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAOJ,QAAtBw7B,EAAU1S,SAA2C,WAAtB0S,EAAU1S,SAA8C,QAAtB0S,EAAU1S,WAC3E71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,mBACWF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIrDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,kBACNzN,KAAK,QACL0E,MAAOw7B,EAAUQ,MACjB/7B,SAAUo8B,EACV38B,WAAS,EACTzF,OAAO,iBAMS,QAAtBuhC,EAAU1S,SACY,WAAtB0S,EAAU1S,SAA8C,QAAtB0S,EAAU1S,WAC1C71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUj0B,SACjBtH,SAAUo8B,EAAsB9pC,SAE/B6vB,EAAAA,GAAgBnnB,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,iBAST,QAAxB1F,EAAA,CAAC,SAAU,MAAO,cAAM,IAAAA,OAAA,EAAxBA,EAA0B+Z,SAASmnB,EAAU1S,YAC5C71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,cACHtD,KAAK,cACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUrH,YACjBl0B,SAAUo8B,EAAsB9pC,SAE/B8vB,EAAAA,GAAmBpnB,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,gBA0CT,QAAtBw7B,EAAU1S,UACT71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,qBACaF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIvDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,YACNzN,KAAK,WACL0E,MAAOw7B,EAAUxF,SACjB/1B,SAAUo8B,EACV38B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,oBACYF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAItDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,kBACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUtI,gBACjBjzB,SAAUo8B,EAAsB9pC,SAE/B6pC,EAAqBnhC,KAAKgO,IACzB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,aAOG,MAA9Bw7B,EAAUtI,kBACTjgC,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,oBAEJF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAItCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,aACL0E,MAAOw7B,EAAUS,WACjBh8B,SAAUo8B,EACV38B,WAAS,EACTzF,OAAO,iBAMf5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,iBACSF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAInDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,eACHtD,KAAK,eACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUvF,aACjBh2B,SAAUo8B,EAAsB9pC,SAE/B6pC,EAAqBnhC,KAAKgO,IACzB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,cACMF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIhDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUtF,SACjBj2B,SAAUo8B,EAAsB9pC,SAE/B2vB,EAAAA,GAAgBjnB,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,aAM3BuJ,QAAQC,IAAIgyB,EAAU1S,QAAS,qBACT,QAAtB0S,EAAU1S,UACT71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,6BAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CACuC,IAApCivB,OAAOkN,KAAK0M,GAAahgC,SACxB/I,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAASA,KACPw8B,GAAU,EAAK,EACftiC,SACH,6BAIFivB,OAAOkN,KAAK0M,GAAahgC,OAAS,IACjC/I,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAG3F,UAC/BF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAC9BU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAE6oC,EAAYvF,OACvB,IAAI,QAET5iC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,eAAc,IAAE6oC,EAAYtd,YAC5B,IAAI,QAET7qB,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,WAAU,IAAE6oC,EAAYhF,YACxB,IAAI,QAETnjC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,cAAa,IAAE6oC,EAAYrF,WAC3B,IAAI,QAET9iC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,WAAU,IAAE6oC,EAAYtF,QACxB,IAAI,OAEc,QAAtB0F,EAAU1S,UACT71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gBAAe,IAAE6oC,EAAYK,aAC7B,IAAI,QAETxoC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kBAAiB,IAAE6oC,EAAYM,eAC/B,QAGTzoC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,CACG,KACDF,EAAAA,EAAAA,KAAC+kC,GAAAA,EAAQ,CACP/+B,QAASA,KACPw8B,GAAU,EAAK,0BAezCxiC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACL5E,KAAK,SACL6E,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAndGskC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC3B,MAAMC,EAAW,CACfv+B,GACE48B,EAAUtM,UACV,IACAsM,EAAU1S,QACV,IACA0S,EAAUj0B,SACZsR,OAAQ2iB,EAAUtM,UAAY,IAAMsM,EAAU1S,QAC9CoG,UAAWsM,EAAUtM,UACrBpG,QAAS0S,EAAU1S,QACnBkT,MAAOR,EAAUQ,MACjBhG,SAAUwF,EAAUxF,SACpBiG,WAAYT,EAAUS,WACtB/I,gBAAiBsI,EAAUtI,gBAC3B+C,aAAcuF,EAAUvF,aACxBC,SAAUsF,EAAUtF,SAGpB/B,YAAaqH,EAAUrH,YACvBgC,oBAAqBiF,GAGV,OAATI,QAAS,IAATA,GAAAA,EAAWj0B,WACb41B,EAAmB,SAAa,OAAT3B,QAAS,IAATA,OAAS,EAATA,EAAWj0B,SAClC41B,EAAa,GACX3B,EAAUtM,UACV,IACAsM,EAAU1S,QACV,IACA0S,EAAUj0B,SACZ41B,EAAiB,OACf3B,EAAUtM,UACV,IACAsM,EAAU1S,QACV,IACA0S,EAAUj0B,UAIoB,MAAb,QAAnBq1B,EAAApB,EAAUtM,iBAAS,IAAA0N,OAAA,EAAnBA,EAAqBp8B,SAAkBg7B,EAAUtM,WACnB,MAAb,QAAjB2N,EAAArB,EAAU1S,eAAO,IAAA+T,OAAA,EAAjBA,EAAmBr8B,SAAkBg7B,EAAU1S,SAChB,MAAb,QAAlBgU,EAAAtB,EAAUj0B,gBAAQ,IAAAu1B,OAAA,EAAlBA,EAAoBt8B,SAAkBg7B,EAAUj0B,UACd,MAAb,QAArBw1B,EAAAvB,EAAUrH,mBAAW,IAAA4I,OAAA,EAArBA,EAAuBv8B,SAAkBg7B,EAAUrH,cAC5B,QAAtBqH,EAAU1S,SAAsD,MAAb,QAAnBkU,EAAAxB,EAAUtM,iBAAS,IAAA8N,OAAA,EAAnBA,EAAqBx8B,SAAkBg7B,EAAUtM,aAC3D,QAAtBsM,EAAU1S,SAA4D,MAAb,QAAzBmU,EAAAzB,EAAUtI,uBAAe,IAAA+J,OAAA,EAAzBA,EAA2Bz8B,SAAkBg7B,EAAUtI,mBACjE,QAAtBsI,EAAU1S,SAAqD,MAAb,QAAlBoU,EAAA1B,EAAUtF,gBAAQ,IAAAgH,OAAA,EAAlBA,EAAoB18B,SAAkBg7B,EAAUtF,YAC1D,QAAtBsF,EAAU1S,SAAsB0S,EAAUj0B,UAI3CusB,EAAa7B,YAAYkL,GAAUxyB,MAAMotB,IAAU,IAADqF,EACFC,EAAAC,EAA9C,GAAIvF,GAAY,OAAJA,QAAI,IAAJA,GAAAA,EAAMvtB,MAAY,OAAJutB,QAAI,IAAJA,GAAU,QAANqF,EAAJrF,EAAMvtB,YAAI,IAAA4yB,GAAVA,EAAYhiC,OACpC,GAAQ,OAAJ28B,QAAI,IAAJA,GAAa,QAATsF,EAAJtF,EAAMvtB,KAAK,UAAE,IAAA6yB,GAAbA,EAAez+B,GACjBy3B,EAAoB,4BAA6B,WAEjDp4B,YAAW,KACTmU,EAAS,UAAU,GAClB,UACE,GAAQ,OAAJ2lB,QAAI,IAAJA,GAAa,QAATuF,EAAJvF,EAAMvtB,KAAK,UAAE,IAAA8yB,GAAbA,EAAezyB,IAAK,CAAC,IAAD0yB,EAC7BlH,EAAwB,OAAJ0B,QAAI,IAAJA,GAAa,QAATwF,EAAJxF,EAAMvtB,KAAK,UAAE,IAAA+yB,OAAT,EAAJA,EAAe1yB,IAAK,QAC1C,CAEA,IAdJwrB,EAAoB,gCAAiC,QAiBvD,EAiZ0C9jC,SACzB,gBAKLF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QApXC+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EAiXiC7f,SACvB,2BAUbL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAGLD,EAAAA,EAAAA,KAAC8oC,GAAyB,CACxBxoC,KAAMmpC,EACNlpC,QAAS2/B,EACT6I,YAAaA,EACb7I,kBAAmBA,EACnB8I,eA/akBn7B,IACtBg8B,EAAe,IACVd,EACH,CAACl7B,EAAEC,OAAO7E,MAAO4E,EAAEC,OAAOH,OAC1B,EA4aEs7B,YAzacA,KAClBzG,GAAU,EAAM,EAyaZ0G,kBAAmBA,EACnBC,UAAWA,EACX17B,QAASA,MAIjB,CCnkBA,MAAMwsB,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAGI,SAASspC,KAAa,IAADljC,EAClC,MAAM,YAAE0W,IAAgBrJ,EAAAA,EAAAA,KAClBmsB,EAAe,IAAIrC,IAClBmK,EAAcC,IAAmBv+B,EAAAA,EAAAA,aACjCw+B,EAAQjH,IAAav3B,EAAAA,EAAAA,WAAS,GAC/BwC,EAAU4zB,MAQTnmB,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAEpCi+B,EAAmBY,IAAwB7+B,EAAAA,EAAAA,YAE5C8U,IADW9N,EAAAA,EAAAA,OACA+N,EAAAA,EAAAA,OACXwX,GAASqP,EAAAA,EAAAA,OAGRjnC,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCk+B,EAAWO,IAAgBz+B,EAAAA,EAAAA,UAAS,CAAC,IACrC89B,EAAaqC,IAAkBngC,EAAAA,EAAAA,UAAS,CAAC,IACzCg4B,EAAYC,IAAiBj4B,EAAAA,EAAAA,UAAS,KACtCogC,EAAeC,IAAoBrgC,EAAAA,EAAAA,UAAS,CAAC,GAE9C8+B,EAAuB,CAC3B,CACEp8B,MAAO,IACP+I,MAAO,OAET,CACE/I,MAAO,IACP+I,MAAO,QAIXhV,EAAAA,EAAAA,YAAU,KACR+/B,EAAanC,mBAAmBhnB,MAAMwI,IACpC0oB,EAAgB1oB,EAAO8b,MAAM,GAC7B,GACD,IAIH,MA6DMoN,EAAyBxpC,IAC7B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACf6F,EACH,CAAClgC,GAAO0E,GAEV+7B,EAAapG,EAAY,EAMrBpD,EAAoBA,KACxBsC,GAAU,GACVsH,EAAqB,GAAG,EAIpB9F,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAsEJ,OAtDAxJ,EAAAA,EAAAA,YAAU,KACE,OAAN81B,QAAM,IAANA,GAAAA,EAAQ+L,SACVlvB,GAAa,GACbotB,EAAa/B,aAAa,CAAEnzB,GAAU,OAANirB,QAAM,IAANA,OAAM,EAANA,EAAQ+L,UAAWjrB,MAAMotB,IAAU,IAADC,EAEhE,GADAtxB,GAAa,GACL,OAAJqxB,QAAI,IAAJA,GAAAA,EAAMvtB,MAAc,OAANgX,aAAM,IAANA,QAAwB,QAAlBwW,EAANxW,OAAQkN,KAAS,OAAJqJ,QAAI,IAAJA,OAAI,EAAJA,EAAMvtB,aAAK,IAAAwtB,GAAxBA,EAA0B58B,OAAQ,CAAC,IAADwiC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClD,MAAMC,EAAuB,OAAJzG,QAAI,IAAJA,OAAI,EAAJA,EAAMvtB,KAC/BmzB,EACEa,GAEFjJ,EACkB,OAAhBiJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBx2B,IAEpB+zB,EAAa,CACXn9B,GAAoB,OAAhB4/B,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB5/B,GACtBia,OAAwB,OAAhB2lB,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB3lB,OAC1BqW,UAA2B,OAAhBsP,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBtP,UAC7B8G,SAA0B,OAAhBwI,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBxI,SAC5BiG,WAA4B,OAAhBuC,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvC,WAC9BnT,QAAyB,OAAhB0V,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB1V,QAC3BvhB,SAA0B,OAAhBi3B,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBj3B,SAC5B2rB,gBAAiC,OAAhBsL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBtL,gBACnC+C,aAA8B,OAAhBuI,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBvI,aAChCC,SAA0B,OAAhBsI,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBtI,SAC5B/B,YAA6B,OAAhBqK,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBrK,YAE/BqI,oBAAqB,CACnB3G,IAAqB,OAAhB2I,QAAgB,IAAhBA,GAAqC,QAArBZ,EAAhBY,EAAkBrI,2BAAmB,IAAAyH,OAArB,EAAhBA,EAAuC/H,IAC5C/X,SAA0B,OAAhB0gB,QAAgB,IAAhBA,GAAqC,QAArBX,EAAhBW,EAAkBrI,2BAAmB,IAAA0H,OAArB,EAAhBA,EAAuC/f,SACjDsY,SAA0B,OAAhBoI,QAAgB,IAAhBA,GAAqC,QAArBV,EAAhBU,EAAkBrI,2BAAmB,IAAA2H,OAArB,EAAhBA,EAAuC1H,SACjDL,QAAyB,OAAhByI,QAAgB,IAAhBA,GAAqC,QAArBT,EAAhBS,EAAkBrI,2BAAmB,IAAA4H,OAArB,EAAhBA,EAAuChI,QAChDD,KAAsB,OAAhB0I,QAAgB,IAAhBA,GAAqC,QAArBR,EAAhBQ,EAAkBrI,2BAAmB,IAAA6H,OAArB,EAAhBA,EAAuClI,QAGjD2H,EAAe,CACb5H,IAAqB,OAAhB2I,QAAgB,IAAhBA,GAAqC,QAArBP,EAAhBO,EAAkBrI,2BAAmB,IAAA8H,OAArB,EAAhBA,EAAuCpI,IAC5C/X,SAA0B,OAAhB0gB,QAAgB,IAAhBA,GAAqC,QAArBN,EAAhBM,EAAkBrI,2BAAmB,IAAA+H,OAArB,EAAhBA,EAAuCpgB,SACjDsY,SAA0B,OAAhBoI,QAAgB,IAAhBA,GAAqC,QAArBL,EAAhBK,EAAkBrI,2BAAmB,IAAAgI,OAArB,EAAhBA,EAAuC/H,SACjDL,QAAyB,OAAhByI,QAAgB,IAAhBA,GAAqC,QAArBJ,EAAhBI,EAAkBrI,2BAAmB,IAAAiI,OAArB,EAAhBA,EAAuCrI,QAChDD,KAAsB,OAAhB0I,QAAgB,IAAhBA,GAAqC,QAArBH,EAAhBG,EAAkBrI,2BAAmB,IAAAkI,OAArB,EAAhBA,EAAuCvI,KAC7C2F,UAA2B,OAAhB+C,QAAgB,IAAhBA,GAAqC,QAArBF,EAAhBE,EAAkBrI,2BAAmB,IAAAmI,OAArB,EAAhBA,EAAuC7C,UAClDC,YAA6B,OAAhB8C,QAAgB,IAAhBA,GAAqC,QAArBD,EAAhBC,EAAkBrI,2BAAmB,IAAAoI,OAArB,EAAhBA,EAAuC7C,aAExD,MACEtpB,EAAS,UAAW,CAAEP,MAAO,CAAEtU,QAAS,mBAAoB5B,OAAQ,UACtE,KAGFsC,YAAW,KACTmU,EAAS,UAAW,CAAEP,MAAO,CAAEtU,QAAS,mBAAoB5B,OAAQ,UAAY,GAC/E,IACL,GACC,KAGD1I,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,oBAEtCjJ,EAAAA,EAAAA,KAACiqC,GAAAA,GAAM,CACLC,cAzMgB,CACpB39B,GAAI,GACJia,OAAQ,GACRiQ,QAAS,GACTvhB,SAAU,GACVi1B,oBAAqB,CAAC,GAqMlBC,SAAUA,OACRlqC,UAEFF,EAAAA,EAAAA,KAACqqC,GAAAA,GAAI,CAAAnqC,UACHF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAEJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,eACOF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIjDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRtJ,UAAQ,EACRsF,KAAK,YACL0E,MAAOw7B,EAAUtM,UACjBjvB,SAAUo8B,EACV38B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,UACHtD,KAAK,UACLyN,MAAM,UACNrJ,WAAS,EACT1J,UAAQ,EACR4wB,cAAY,EACZ5mB,MAAO,CAAU,OAATw7B,QAAS,IAATA,OAAS,EAATA,EAAW1S,SACnB7oB,SAAUo8B,EAAsB9pC,SAE/B4vB,EAAAA,GAAelnB,KAAKgO,IACnB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAOJ,QAAtBw7B,EAAU1S,SACY,WAAtB0S,EAAU1S,WACR71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLE,MAAM,WACNnK,GAAG,WACHtD,KAAK,WACLtF,UAAQ,EACR0J,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUj0B,SACjBtH,SAAUo8B,EAAsB9pC,SAE/B6vB,EAAAA,GAAgBnnB,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,iBAShB,QAAjB1F,EAAA,CAAC,SAAU,cAAM,IAAAA,OAAA,EAAjBA,EAAmB+Z,SAASmnB,EAAU1S,YACrC71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,cACHtD,KAAK,cACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUrH,YACjBl0B,SAAUo8B,EAAsB9pC,SAE/B8vB,EAAAA,GAAmBpnB,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,gBA0CT,QAAtBw7B,EAAU1S,UACT71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,yBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,WACNzN,KAAK,WACL0Q,aAAcwvB,EAAUxF,SACxB/1B,SAAUo8B,EACV38B,WAAS,EACTzF,OAAO,cAGX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBAMRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,kBACLyN,MAAM,kBACNrJ,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUtI,gBACjBjzB,SAAUo8B,EAAsB9pC,SAE/B6pC,EAAqBnhC,KAAKgO,IACzB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,aAOG,MAA9Bw7B,EAAUtI,kBACTjgC,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,aACNzN,KAAK,aACL0E,MAAOw7B,EAAUS,WACjBh8B,SAAUo8B,EACV38B,WAAS,EACTzF,OAAO,iBAMf5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,oBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,eACHtD,KAAK,eACLyN,MAAM,eACNrJ,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUvF,aACjBh2B,SAAUo8B,EAAsB9pC,SAE/B6pC,EAAqBnhC,KAAKgO,IACzB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTknB,cAAY,EACZ5mB,MAAOw7B,EAAUtF,SACjBj2B,SAAUo8B,EAAsB9pC,SAE/B2vB,EAAAA,GAAgBjnB,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,aA9T9C,SAAmBshB,GACjB,IAAK,IAAIjhB,KAAOihB,EACd,GAAIA,EAAImd,eAAep+B,IAAqB,KAAbihB,EAAIjhB,SAA4BgO,IAAbiT,EAAIjhB,GACpD,OAAO,EAGX,OAAO,CACT,CA6TmBq+B,CAAUtD,KAAiBnoC,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EAE1BF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,6BAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CACuC,IAApCivB,OAAOkN,KAAK0M,GAAahgC,QACgB,QAA1B,OAAbsiC,QAAa,IAAbA,OAAa,EAAbA,EAAevH,uBACd9jC,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAASA,KACPw8B,GAAU,EAAK,EACftiC,SACH,8BAIHivB,OAAOkN,KAAK0M,GAAahgC,OAAS,GACK,QAA1B,OAAbsiC,QAAa,IAAbA,OAAa,EAAbA,EAAevH,wBACb9jC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAG3F,UAC/BF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAC9BU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAE6oC,EAAYvF,OACvB,IAAI,QAET5iC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,eAAc,IAAE6oC,EAAYtd,YAC5B,IAAI,QAET7qB,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,WAAU,IAAE6oC,EAAYhF,YACxB,IAAI,QAETnjC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,cAAa,IAAE6oC,EAAYrF,WAC3B,IAAI,QAET9iC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,WAAU,IAAE6oC,EAAYtF,QACxB,IAAI,OAEc,QAAtB0F,EAAU1S,UACT71B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,gBAAe,IAAE6oC,EAAYK,aAC7B,IAAI,QAETxoC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,kBAAiB,IAAE6oC,EAAYM,eAC/B,QAGTzoC,EAAAA,EAAAA,MAAA,KAAAV,SAAA,CACG,KACDF,EAAAA,EAAAA,KAAC+kC,GAAAA,EAAQ,CACP/+B,QAASA,KACPw8B,GAAU,EAAK,0BAazCxiC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACL5E,KAAK,SACL6E,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QA3eG2F,UAAa,IAAD4+B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACjCx2B,GAAa,GACb,MAAMy2B,EAAW,CACfv+B,GAAI48B,EAAU58B,GACdia,OAAQ2iB,EAAU3iB,OAClBqW,UAAWsM,EAAUtM,UACrBpG,QAAS0S,EAAU1S,QACnBkN,SAAUwF,EAAUxF,SACpBiG,WAAYT,EAAUS,WACtB/I,gBAAiBsI,EAAUtI,gBAC3B+C,aAAcuF,EAAUvF,aACxBC,SAAUsF,EAAUtF,SACpBC,oBAAqBiF,EAGrBjH,YAAaqH,EAAUrH,aAGZ,OAATqH,QAAS,IAATA,GAAAA,EAAWj0B,WACb41B,EAAmB,SAAa,OAAT3B,QAAS,IAATA,OAAS,EAATA,EAAWj0B,UAGF,MAAb,QAAnBq1B,EAAApB,EAAUtM,iBAAS,IAAA0N,OAAA,EAAnBA,EAAqBp8B,SAAkBg7B,EAAUtM,WACnB,MAAb,QAAjB2N,EAAArB,EAAU1S,eAAO,IAAA+T,OAAA,EAAjBA,EAAmBr8B,SAAkBg7B,EAAU1S,SAChB,MAAb,QAAlBgU,EAAAtB,EAAUj0B,gBAAQ,IAAAu1B,OAAA,EAAlBA,EAAoBt8B,SAAkBg7B,EAAUj0B,UACd,MAAb,QAArBw1B,EAAAvB,EAAUrH,mBAAW,IAAA4I,OAAA,EAArBA,EAAuBv8B,SAAkBg7B,EAAUrH,cAC5B,QAAtBqH,EAAU1S,SAAsD,MAAb,QAAnBkU,EAAAxB,EAAUtM,iBAAS,IAAA8N,OAAA,EAAnBA,EAAqBx8B,SAAkBg7B,EAAUtM,aAC3D,QAAtBsM,EAAU1S,SAA4D,MAAb,QAAzBmU,EAAAzB,EAAUtI,uBAAe,IAAA+J,OAAA,EAAzBA,EAA2Bz8B,SAAkBg7B,EAAUtI,mBACjE,QAAtBsI,EAAU1S,SAAqD,MAAb,QAAlBoU,EAAA1B,EAAUtF,gBAAQ,IAAAgH,OAAA,EAAlBA,EAAoB18B,SAAkBg7B,EAAUtF,YAC1D,QAAtBsF,EAAU1S,SAAsB0S,EAAUj0B,WAK3Cb,GAAa,SACPotB,EAAa5B,YAAYiL,GAAUxyB,MAAMotB,IAAU,IAADqF,EAC9C,OAAJrF,QAAI,IAAJA,GAAU,QAANqF,EAAJrF,EAAMvtB,YAAI,IAAA4yB,GAAVA,EAAYx+B,IACdy3B,EAAoB,6BAA8B,WAClDp4B,YAAW,KACTyI,GAAa,GACb0L,EAAS,UAAU,GAClB,MACM2lB,EAAKltB,KACdnE,GAAa,EAEf,MAdF2vB,EAAoB,gCAAiC,SACrD3vB,GAAa,GAef,EA4b0CnU,SACzB,gBAKLF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAzZC+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EAsZiC7f,SACvB,2BAUbL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGF0e,GAAezD,GACdlb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAClCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,MAAM,OAEd3B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAIND,EAAAA,EAAAA,KAAC8oC,GAAyB,CACxBxoC,KAAMmpC,EACNlpC,QAAS2/B,EACT6I,YAAaA,EACb7I,kBAAmBA,EACnB8I,eAlekBn7B,IACtBu9B,EAAe,IACVrC,EACH,CAACl7B,EAAEC,OAAO7E,MAAO4E,EAAEC,OAAOH,OAC1B,EA+dEs7B,YA5dcA,KAClBzG,GAAU,EAAM,EA4dZ0G,kBAAmBA,EACnBC,UAAWA,EACX17B,QAASA,MAIjB,CCpmBA,MAgCA,GAhCoB,CAClB,CACEzE,KAAM,UACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACssC,GAAM,OAKb,CACEtjC,KAAM,eACNy+B,OAAO,EACP5R,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACspC,GAAW,OAKlB,CACEtgC,KAAM,sBACNy+B,OAAO,EACP5R,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACmrC,GAAS,QC9BX,MAAMoB,GAAkBlN,WAAAA,GAAA,KAC7BmN,iBAAmB,IACVjN,GAAAA,EACJC,IACC,GAAGlP,EAAAA,0BACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,mBAAoB0J,GAC3B,MAEX,KAEF4+B,aAAgBzM,GACPT,GAAAA,EAAYU,OACjB,GAAG3P,EAAAA,6BACH,CAAEnY,KAAM,CAAE6nB,QACVlP,EAAAA,IAECxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,yBAA0BA,GAClCA,CAAK,IAEf,KAEFuoC,aAAgBv0B,GACPonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,0BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,eAAgB0J,GACvB,MAEX,KAEF8+B,aAAgBx0B,GACPonB,GAAAA,EACJO,IACC,GAAGxP,EAAAA,6BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,cAAe0J,GACtB,MAEX,KAEF++B,cAAiBz0B,GACRonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,8BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,eAAgB0J,GACvB,KAEX,ECtFJ,MAAMosB,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAII,SAASgrC,KACtB,MAAOC,EAAYC,IAAiB9hC,EAAAA,EAAAA,UAAS,CAAC,IACvCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MACnCwC,EAAU4zB,KAChB,IAAIthB,GAAWC,EAAAA,EAAAA,MACf,MAAMgtB,EAAoB,IAAIT,GAqCxBU,EAA0BzsC,IAC9B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACfwJ,EACH,CAAC7jC,GAAO0E,GAEVo/B,EAAczJ,EAAY,EAGtBU,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAQJ,OACEtK,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,uBAGtCrI,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACpDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,WACGF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,SACL0E,MAAOm/B,EAAWvmB,OAClB3Y,SAAUq/B,EACV5/B,WAAS,EACTzF,OAAO,cAGX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,WACL0E,MAAOm/B,EAAW53B,SAClBtH,SAAUq/B,EACV5/B,WAAS,EACTzF,OAAO,cAGX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,gBACQF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIlDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,cACL0E,MAAOm/B,EAAWI,YAClBt/B,SAAUq/B,EACV5/B,WAAS,EACTzF,OAAO,cAGXhH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAAiB,KACvBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,gBACRlK,GAAG,iBACHtD,KAAK,UACLoE,WAAS,EACTM,MAAOm/B,EAAWrW,QAClB7oB,SAAUq/B,EAAuB/sC,SAEhC4vB,EAAAA,GAAelnB,KAAKgO,IACnB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,iBAO9B3N,EAAAA,EAAAA,KAAA,UACAY,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAhJMmnC,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC5B,GACgC,MAAb,QAAjBH,EAAAN,EAAWvmB,cAAM,IAAA6mB,OAAA,EAAjBA,EAAmBj/B,UAClB2+B,EAAWvmB,QACuB,MAAb,QAAtB8mB,EAAAP,EAAWI,mBAAW,IAAAG,OAAA,EAAtBA,EAAwBl/B,UACvB2+B,EAAWI,aACoB,MAAb,QAAnBI,EAAAR,EAAW53B,gBAAQ,IAAAo4B,OAAA,EAAnBA,EAAqBn/B,UACpB2+B,EAAW53B,UACmB,MAAb,QAAlBq4B,EAAAT,EAAWrW,eAAO,IAAA8W,OAAA,EAAlBA,EAAoBp/B,UACnB2+B,EAAWrW,QAGZ,YADAuN,EAAoB,kCAAmC,SAIzD,MAAMwJ,EAAY,CAChBjnB,OAAQumB,EAAWvmB,OACnB2mB,YAAaJ,EAAWI,YACxBh4B,SAAU43B,EAAW53B,SACrBuhB,QAASqW,EAAWrW,SAEtBuW,EAAkBN,aAAac,GAAWl1B,MAAMotB,IAAU,IAADqF,EAAAC,EAC/C,OAAJtF,QAAI,IAAJA,GAAU,QAANqF,EAAJrF,EAAMvtB,YAAI,IAAA4yB,GAAVA,EAAYx+B,IACdy3B,EAAoB,6BAA8B,WAElDp4B,YAAW,KACTmU,EAAS,cAAc,GACtB,MACU,OAAJ2lB,QAAI,IAAJA,GAAa,QAATsF,EAAJtF,EAAMvtB,KAAK,UAAE,IAAA6yB,GAAbA,EAAexyB,KAGxBwrB,EAAoB0B,EAAKvtB,KAAK,GAAGK,IAAK,QACxC,GACA,EA+GuCtY,SAC1B,gBAMLF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtC,UAAU,cAAarD,UACrDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAxGG+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EAqG+B7f,SACvB,uBAQTL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,SAIb,CC/LA,MAAMg6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAII,SAAS4rC,KACtB,MAAM,YAAE9uB,IAAgBrJ,EAAAA,EAAAA,MACjB4F,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAEnCwC,IADWwE,EAAAA,EAAAA,MACDovB,MAChB,IAAIthB,GAAWC,EAAAA,EAAAA,MACf,MAAMwX,GAASqP,EAAAA,EAAAA,MAETmG,EAAoB,IAAIT,IAEvBO,EAAYC,IAAiB9hC,EAAAA,EAAAA,UAAS,CAAC,GAiCxCgiC,EAA0BzsC,IAC9B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACfwJ,EACH,CAAC7jC,GAAO0E,GAEVo/B,EAAczJ,EAAY,EAGtBU,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAgCJ,OAxBAxJ,EAAAA,EAAAA,YAAU,KACE,OAAN81B,QAAM,IAANA,GAAAA,EAAQkW,UACVr5B,GAAa,GACb24B,EAAkBJ,cAAc,CAAErgC,GAAU,OAANirB,QAAM,IAANA,OAAM,EAANA,EAAQkW,WAAYp1B,MAAMotB,IAAU,IAADC,EAEvE,GADAtxB,GAAa,GACL,OAAJqxB,QAAI,IAAJA,GAAAA,EAAMvtB,MAAc,OAANgX,aAAM,IAANA,QAAwB,QAAlBwW,EAANxW,OAAQkN,KAAS,OAAJqJ,QAAI,IAAJA,OAAI,EAAJA,EAAMvtB,aAAK,IAAAwtB,GAAxBA,EAA0B58B,OAAQ,CAClD,MAAM4kC,EAAqB,OAAJjI,QAAI,IAAJA,OAAI,EAAJA,EAAMvtB,KAC7B40B,EAAc,CACZxmB,OAAQonB,EAAepnB,OACvB2mB,YAAaS,EAAeT,YAC5Bh4B,SAAUy4B,EAAez4B,SACzBuhB,QAASkX,EAAelX,SAE5B,MACE1W,EAAS,cAAe,CAAEP,MAAO,CAAEtU,QAAS,oBAAqB5B,OAAQ,UAC3E,KAGFsC,YAAW,KACTmU,EAAS,cAAe,CAAEP,MAAO,CAAEtU,QAAS,oBAAqB5B,OAAQ,UAAY,GACpF,IACL,GACC,KAGD1I,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,qBAGtCrI,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,WACGF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,SACLtF,UAAQ,EACRgK,MAAOm/B,EAAWvmB,OAClB3Y,SAAUq/B,EACV5/B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,WACLtF,UAAQ,EACRgK,MAAOm/B,EAAW53B,SAClBtH,SAAUq/B,EACV5/B,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,gBACQF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIlDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,cACL0E,MAAOm/B,EAAWI,YAClBt/B,SAAUq/B,EACV5/B,WAAS,EACTzF,OAAO,cAIXhH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAAiB,KACvBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACL7S,UAAQ,EACRsF,KAAK,UACLoE,WAAS,EACTM,MAAO,CAACm/B,EAAWrW,SACnB7oB,SAAUq/B,EAAuB/sC,SAEhC4vB,EAAAA,GAAelnB,KAAKgO,IACnB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,iBAO9B3N,EAAAA,EAAAA,KAAA,UACAY,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAvKM2F,UAAa,IAADyhC,EAAAC,EAAAC,EAAAC,EAElC,GADAl5B,GAAa,GAEmB,MAAb,QAAjB+4B,EAAAN,EAAWvmB,cAAM,IAAA6mB,OAAA,EAAjBA,EAAmBj/B,UAClB2+B,EAAWvmB,QACuB,MAAb,QAAtB8mB,EAAAP,EAAWI,mBAAW,IAAAG,OAAA,EAAtBA,EAAwBl/B,UACvB2+B,EAAWI,aACoB,MAAb,QAAnBI,EAAAR,EAAW53B,gBAAQ,IAAAo4B,OAAA,EAAnBA,EAAqBn/B,UACpB2+B,EAAW53B,UACmB,MAAb,QAAlBq4B,EAAAT,EAAWrW,eAAO,IAAA8W,OAAA,EAAlBA,EAAoBp/B,UACnB2+B,EAAWrW,QAIZ,OAFAuN,EAAoB,kCAAmC,cACvD3vB,GAAa,GAGf,MAAMm5B,EAAY,CAChBjnB,OAAQumB,EAAWvmB,OACnB2mB,YAAaJ,EAAWI,YACxBh4B,SAAU43B,EAAW53B,SACrBuhB,QAASqW,EAAWrW,SAEtBuW,EAAkBL,aAAaa,GAAWl1B,MAAMotB,IAC9C1B,EAAoB,8BAA+B,WACnDp4B,YAAW,KACTyI,GAAa,GACb0L,EAAS,cAAc,GACtB,IAAK,GACR,EA2IuC7f,SAC1B,gBAMLF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtC,UAAU,cAAarD,UACrDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QApIG+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EAiI+B7f,SACvB,uBASTL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGF0e,GAAezD,GACdlb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAClCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,MAAM,OAEd3B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,SAMd,CC9NA,MA4GA,GAzGwBsB,IACtB,MAAMy0B,EAAc,IAAIC,GAAAA,GACjBoC,EAAgBC,IAAqBrtB,EAAAA,EAAAA,WAAS,IAC9CqO,EAAcif,IAAmBttB,EAAAA,EAAAA,WAAc,OAAL1J,QAAK,IAALA,OAAK,EAALA,EAAOqsC,aAAc,KAC/DjgC,EAAO8qB,IAAYxtB,EAAAA,EAAAA,UAAS,YAE5BytB,EAAeC,IAAoB1tB,EAAAA,EAAAA,WAAS,IAC5C2tB,EAAgBC,IAAqB5tB,EAAAA,EAAAA,WAAS,IAC9CrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAWzCiM,QAAQC,IAAI,QAAS5V,GAiCrB,OACEX,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QA/C6B8yB,KACjCR,GAAkB,EAAK,EA8CiBp4B,SACrC,YAGDU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+3B,EAAen4B,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,UAChCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,UACjCU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAAApW,SAAA,EACVF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAS,CAACxsB,GAAG,sCAAqCrM,SAAC,2BACpDU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACT,kBAAgB,sCAChBxQ,KAAK,iCACL0E,MAAOA,EACPC,SAjCApN,IACpBi4B,EAASj4B,EAAMsN,OAAOH,OACK,YAAvBnN,EAAMsN,OAAOH,MACf4qB,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOqsC,YAEvBrV,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBACzB,EA2B2C94B,SAAA,EAEvBF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,UAAUkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,cAC5D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,eAAekM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,qCAUjF9V,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QA7EQizB,KAChCX,GAAkB,EAAM,EA4EmCp4B,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAzEakzB,KAC3BZ,GAAkB,GAClB,IAAIngB,GAAmB,YAAVxK,EAA4B,OAALpM,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAA0B,OAALz3B,QAAK,IAALA,OAAK,EAALA,EAAOqsC,aAAe,GAClFzU,EAAiB,OAAJhhB,QAAI,IAAJA,OAAI,EAAJA,EAAMvP,KAAIlD,IACf,CACRmoC,OAAQnoC,EAAK6gB,OACbnO,SAAU1S,EAAKwP,SACf44B,YAAapoC,EAAKwnC,YAClB,WAAYxnC,EAAK+wB,YAIrBT,EAAYqC,eAAe,CAAE,KAAQc,EAAY,WAAc,WAAY7gB,MAAMC,IAC/EsgB,EAAkBtgB,GAhBpBogB,GAAiB,GAkBf74B,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAChB,GACF,EAqD0CtY,SAAC,iBAIzCL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACJ,ECpGDg6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAEK2lC,GAAaA,KACjB,MAAOJ,EAAgBK,IAAqB/iC,EAAAA,EAAAA,aACrC2iC,EAAYK,IAAiBhjC,EAAAA,EAAAA,UAAS,KACtCsuB,EAAae,IAAkBrvB,EAAAA,EAAAA,UAAS,KACxCwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,GAC3C+hC,EAAoB,IAAIT,IACvB3sC,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCquB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,CAAC,IACnCijC,EAAkBC,IAAuBljC,EAAAA,EAAAA,UAAS,KAElDwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,IAC3CgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,KAE5FE,GAAoBlvB,EAAAA,EAAAA,cAAYjE,IAAmB,IAAlB,SAAEwsB,GAAUxsB,EACjD6yB,EAAYrG,EAAS,GACpB,KAEIvZ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAU3CvJ,EAAAA,EAAAA,YAAU,KACR2S,GAAa,GACb24B,EAAkBR,mBACfl0B,MAAMwI,IACLmtB,EAAcntB,GACdwZ,EAAexZ,GACfstB,EAAsBttB,EAAO,IAE9Bua,SAAQ,KACPhnB,GAAa,EAAM,GACnB,GACH,IAEH,MAAOg6B,EAAoBD,IAAyBnjC,EAAAA,EAAAA,UAAS,KAE7DvJ,EAAAA,EAAAA,YAAU,KACR0sC,EAAsBR,EAAW,GAChC,CAACA,IAEJ,IAAIU,GAAmB/hB,EAAAA,GAAAA,IAAc,IAAI8hB,GAAqB,UAE9D,MAMMtuB,GAAWC,EAAAA,EAAAA,MACXqoB,GAAev2B,EAAAA,EAAAA,QAAO,gBAUtBy8B,EAAoBC,IACxBnG,EAAa/1B,QAAU,OACvB,MAAMm8B,EAAqBD,EAC3B5iC,YAAW,KACTmU,EAAS,mBAAqC,OAAlB0uB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBliC,KAAM,CACpDiT,MAAO,CAAEmpB,UAAWN,EAAa/1B,QAASm8B,uBAC1C,GACD,IAAI,EAGHC,EAA4BC,IAChCtU,GAAgB,GAChB2T,EAAkBW,EAAa,GA4BjCjtC,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEdx5B,EAAAA,EAAAA,YAAU,KACR,MAAM46B,EAAmBsR,EAAWzjB,QAAQoS,GAClB,KAAhB9B,GACN8B,EAAWhW,OACRuG,cACA9K,SAASyY,EAAY3N,gBACxByP,EAAW2Q,YACRpgB,cACA9K,SAASyY,EAAY3N,gBACxByP,EAAWrnB,SACR4X,cACA9K,SAASyY,EAAY3N,gBACxByP,EAAW9F,QAAQ3J,cAAc9K,SAC/ByY,EAAY3N,iBAIlBshB,EAAsB9R,EAAiB,GACtC,CAAC7B,EAAamT,IAEjB,MAAM9Q,EAAwBxD,IAC5BuB,EAAYvB,GACZ,MACME,EADeuD,GAAoBgR,GACtBa,CAAa,CAAEz2B,KAAMy1B,EAAYtU,WAAUgV,mBAAkBrR,iBAAkBH,EAAsBvD,gBACxH0U,EAAczU,EAAWj4B,MAAM4W,MAC/Bi2B,EAAsB5U,EAAWj4B,MAAM4W,KAAK,EAG9C,OACEvX,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,gBAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAxGqBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAuGpBxvB,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,WAAW,SAAQ5C,SAAA,EAC5DF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QA1GjBo3B,OA0GuCl9B,SAAC,YAGnDF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEk8B,KAAM,MACpBr9B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QA7GmB6oC,KAC7BxG,EAAa/1B,QAAU,SACvB1G,YAAW,KACTmU,EAAS,oBAAqB,CAC5BP,MAAO,CAAEmpB,UAAWN,EAAa/1B,UACjC,GACD,IAAI,EAuGmCpS,SACjC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QArJoBw3B,KAC9B+Q,EAAiBxT,EAAa,GAAG,EAqJvB55B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAsB,OAAZo3B,QAAY,IAAZA,IAAAA,EAAchyB,OACxB/C,QAlKey3B,KACzBiR,EAAyB3T,EAAa,IACtCV,GAAgB,EAAK,EAiKXl5B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAGDF,EAAAA,EAAAA,KAAC29B,GAAe,CAACiQ,WAAYA,EAAY5U,mBAAoB+B,QAE/Dn6B,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACCkb,GAEClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZga,UAAW,KACX5c,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAInBlC,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAAO,CAAE2b,UAAW,KACpBihB,aAAc,IACdC,QAAS,CACP,CACE/0B,KAAM,SACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,OAAOzc,SAAC,WAChCi+B,YAAa,EACbC,aAAc,GACdC,OAAQh2B,IAAA,IAAC,KAAE8P,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMoO,QAAa,GAEjD,CACEtd,KAAM,WACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,WAAWzc,SAAC,aACpCi+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,cACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,cAAczc,SAAC,gBACvCi+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,UACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,WAAWzc,SAAC,aACpCi+B,YAAa,EACbC,aAAc,GACdC,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMse,SAAc,IAGpD6H,WAAsB,MAAVhF,EAAiB+U,EAAqBC,EAClD/P,gBAAc,EACd9J,SAAUA,EACV2G,kBAAmBA,EACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAa,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAqC,IAAZ,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAc,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACtH7B,iBAAkBH,YAM1Bj9B,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KACLW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,mBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,SAEe,IAAxB66B,EAAahyB,QAAiB/I,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAC7BU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CAAC,qCACgBF,EAAAA,EAAAA,KAAA,KAAAE,SAAkB,OAAdytC,QAAc,IAAdA,OAAc,EAAdA,EAAgBpnB,SAAY,IAAI,oBACrDvmB,EAAAA,EAAAA,KAAA,KAAAE,SAAkB,OAAdytC,QAAc,IAAdA,OAAc,EAAdA,EAAgBz4B,WAAa,eAAa,KAC9DlV,EAAAA,EAAAA,KAAA,KAAAE,SAAkB,OAAdytC,QAAc,IAAdA,OAAc,EAAdA,EAAgBlX,gBAEhBz2B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACNF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,SAAC,oDAMzBU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAjMA+4B,KACxB1E,GAAgB,EAAM,EAgM6Bn6B,SAAC,YAG9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAhMW2F,UACzB0uB,GAAgB,GAEhB,IACE,MAAM2E,EAAwB,OAAZjE,QAAY,IAAZA,OAAY,EAAZA,EAAcnyB,KAAIlD,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,WAC7CygC,EAAkBP,aAAazN,GAAW1mB,MAAKwI,IACnDga,EAAY,CAAC,GACbE,EAAgB,IAChBl7B,GAAa,GACbsU,EAAY,CACVtT,SAAgB,OAANggB,QAAM,IAANA,OAAM,EAANA,EAAQxX,OAClBjI,KAAY,OAANyf,QAAM,IAANA,OAAM,EAANA,EAAQtI,KACd,GAEN,CAAE,MAAOrU,GACP,OAAOA,CACT,CACA6oC,EAAkBR,mBAAmBl0B,MAAMwI,IACzCmtB,EAAcntB,EAAO,GACrB,EA6KwC5gB,SAAC,mBAG/B,EAIhB,MChSA,GA3ByB,CACvB,CACE8I,KAAM,cACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC+tC,GAAU,OAIjB,CACE/kC,KAAM,oBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC6sC,GAAgB,OAIvB,CACE7jC,KAAM,4BACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACytC,GAAc,QCpBhB,MAAMqB,GAAgBzP,WAAAA,GAAA,KAGzB0P,eAAiB,IACNxP,GAAAA,EAAYC,IAAI,GAAGlP,EAAAA,0BAAwCQ,EAAAA,IAA8BxY,MAAMmnB,IAClG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,mBAAoB0J,GAC3B,MAEb,KAEFmhC,cAAiBC,GACN1P,GAAAA,EAAYU,OAAO,GAAG3P,EAAAA,6BAA0C2e,IAAane,EAAAA,IAC/ExY,MAAMmnB,IACH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IAEjByJ,OAAOzd,IAEJ,MADA+S,QAAQ/S,MAAM,yBAA0BA,GAClCA,CAAK,IAErB,KAEF+qC,cAAiB/2B,GACNonB,GAAAA,EAAYI,KAAK,GAAGrP,EAAAA,yBAAuCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAExG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,eAAgB0J,GACvB,MAEb,KAEFshC,cAAiBh3B,GACNonB,GAAAA,EAAYO,IAAI,GAAGxP,EAAAA,4BAA0CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAE1G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,cAAe0J,GACtB,KAEb,ECpCN,MAAMhN,GAAQY,EAAAA,YAAiB,SAAeF,EAAOwR,GACnD,OAAO/S,EAAAA,EAAAA,KAACgT,GAAAA,EAAQ,CAAC1C,UAAW,EAAGyC,IAAKA,EAAKhN,QAAQ,YAAaxE,GAChE,IACM04B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAII,SAASutC,KACtB,MAAOtC,EAAYC,IAAiB9hC,EAAAA,EAAAA,UAAS,CAAC,IACvCokC,EAAaC,IAAkBrkC,EAAAA,EAAAA,UAAS,CAAC,IACzCg3B,EAAUC,IAAej3B,EAAAA,EAAAA,WAAS,IAClCk3B,EAAiBC,IAAsBn3B,EAAAA,EAAAA,aACvCo3B,EAAkBC,IAAuBr3B,EAAAA,EAAAA,aACzC01B,EAAiBkC,IAAsB53B,EAAAA,EAAAA,UAAS,KAChDw1B,EAAUuC,IAAe/3B,EAAAA,EAAAA,UAAS,KAClCq1B,EAAQwC,IAAa73B,EAAAA,EAAAA,UAAS,KAC9BqsB,EAAUyL,IAAe93B,EAAAA,EAAAA,UAAS,KAClCk1B,EAAYyC,IAAiB33B,EAAAA,EAAAA,UAAS,CAAC,GAExCwC,EAAU4zB,KAChB,IAAIthB,GAAWC,EAAAA,EAAAA,MACW,IAAIusB,GAA9B,MACMgD,EAAiB,IAAIT,GAiErBU,EAA4B3hC,IAChC,MAAM,KAAE5E,EAAI,MAAE0E,GAAUE,EAAEC,OACb,WAAT7E,EACF65B,EAAUn1B,GACQ,aAAT1E,EACT85B,EAAYp1B,GAEZi1B,GAAeqD,IAAU,IACpBA,EACH,CAACh9B,GAAO0E,KAEZ,EASI8hC,EAA2BjvC,IAC/B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACf+L,EACH,CAACpmC,GAAO0E,GAEV2hC,EAAehM,EAAY,EAGvBU,EAAsBA,CAAC94B,EAASpK,KACpCshC,EAAmBl3B,GACnBo3B,EAAoBxhC,GACpBohC,GAAY,EAAK,EAGb+B,EAAsBA,CAACzjC,EAAOC,KACnB,cAAXA,GAIJyhC,GAAY,EAAM,EAKpB,OACEthC,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,wBAGtCrI,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,SACCF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI3CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,OACNzN,KAAK,OACL0E,MAAO0hC,EAAYK,KACnB9hC,SAAU6hC,EACVpiC,WAAS,EACTzF,OAAO,cAGXhH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAAiB,KACvBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,gBACRlK,GAAG,iBACHtD,KAAK,UACLoE,WAAS,EACTM,MAAO0hC,EAAY5Y,QACnB7oB,SAAU6hC,EAAwBvvC,SAEjC4vB,EAAAA,GAAelnB,KAAKgO,IACnB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAM5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,mBACWF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIrDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,SAAA,EACjCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAG1E,MAAO,CAAE+G,WAAY,OAAQhI,UAC7CF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,SACLyN,MAAM,MACN/I,MAAO2yB,EACPv6B,QAAQ,WACRsH,WAAS,EACTzF,OAAO,SACPgG,SAAU4hC,MAEP,aAEPxvC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,WACLyN,MAAM,QACN/I,MAAO2pB,EACPvxB,QAAQ,WACRsH,WAAS,EACTzF,OAAO,SACPgG,SAAU4hC,MAEP,aAEPxvC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACL3E,MAAO,CAAE8F,SAAU,OAAQiD,UAAW,OACtClE,QA1JCu6B,KACnB,MAAMiG,EAAY7F,EAAgBhE,MAAMjjB,GAAQA,EAAI1L,MAAQsyB,IACtDmG,EAAc9F,EAAgBhE,MAAMjjB,GAAQA,EAAI/L,QAAU2pB,IAE5DkP,GAAaC,EACfzD,EAAY,oCAIdH,GAAoB6D,GAAa,IAC5BA,EACH,CAAE14B,IAAKsyB,EAAQ3yB,MAAO2pB,MAExBwL,EAAU,IACVC,EAAY,IACZC,EAAY,IAAG,EA2IyB9iC,UAEtBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,cAITF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAEugC,KAC7BzgC,EAAAA,EAAAA,KAAA,OACEmB,MAAO,CACLyB,OAAQ,QACRo+B,UAAW,OACXv3B,OAAQ,iBACRD,aAAc,MACdy3B,aAAc,SACdlgC,MAAO,OACPb,SAEDygC,EAAgB/3B,KAAI,CAAC8Q,EAAK5Q,KACzB9I,EAAAA,EAAAA,KAACkhC,GAAAA,EAAK,CAEJ//B,MAAO,CACL+N,YAAa,OACb9G,aAAc,MACdvF,QAAS,OACTE,eAAgB,gBAChBD,WAAY,UACZ5C,UAEFU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACHC,WAAS,EACT1C,WAAW,SACX3B,MAAO,CAAE+G,WAAY,OAAQhI,SAAA,EAE7BF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAIwZ,EAAI1L,MAAQ,KAAChO,EAAAA,EAAAA,KAAA,KAAAE,SAAIwZ,EAAI/L,cAG7B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAAC2M,GAAAA,EAAU,CAAC3G,QAASA,IA/KpB8C,KACvB+5B,GAAoB6D,IAClB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQxB,OAAOr8B,EAAO,GACf69B,CAAO,GACd,EA0K+CnG,CAAgB13B,GAAO5I,UAChDF,EAAAA,EAAAA,KAACmhC,GAAAA,EAAU,YArBZr4B,cA8Bf9I,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAvPS2pC,KAAO,IAADC,EAAAC,EAC7B,GAC+B,MAAb,QAAhBD,EAAAP,EAAYK,YAAI,IAAAE,OAAA,EAAhBA,EAAkBzhC,UACjBkhC,EAAYK,MACmB,MAAb,QAAnBG,EAAAR,EAAY5Y,eAAO,IAAAoZ,OAAA,EAAnBA,EAAqB1hC,UACpBkhC,EAAY5Y,SACc,IAA3BkK,EAAgB53B,OAGhB,YADAi7B,EAAoB,kCAAmC,SAIzD,MAAM8L,EAAY,CAChBJ,KAAML,EAAYK,KAClBjZ,QAAS4Y,EAAY5Y,QACrBsZ,KAAMpP,EAAgBwF,QAAO,CAACC,EAAKC,KACjCD,EAAIC,EAAKr4B,KAAOq4B,EAAK14B,MACdy4B,IACN,CAAC,IAENmJ,EAAeL,cAAcY,GAAWx3B,MAAMotB,IAAU,IAADqF,EACPC,EAAAC,EAA9C,GAAIvF,GAAY,OAAJA,QAAI,IAAJA,GAAAA,EAAMvtB,MAAY,OAAJutB,QAAI,IAAJA,GAAU,QAANqF,EAAJrF,EAAMvtB,YAAI,IAAA4yB,GAAVA,EAAYhiC,QACpC,GAAQ,OAAJ28B,QAAI,IAAJA,GAAa,QAATsF,EAAJtF,EAAMvtB,KAAK,UAAE,IAAA6yB,GAAbA,EAAez+B,GACjBy3B,EAAoB,8BAA+B,WAEnDp4B,YAAW,KACTmU,EAAS,YAAY,GACpB,UACE,GAAQ,OAAJ2lB,QAAI,IAAJA,GAAa,QAATuF,EAAJvF,EAAMvtB,KAAK,UAAE,IAAA8yB,GAAbA,EAAezyB,IAAK,CAAC,IAAD0yB,EAC7BlH,EAAwB,OAAJ0B,QAAI,IAAJA,GAAa,QAATwF,EAAJxF,EAAMvtB,KAAK,UAAE,IAAA+yB,OAAT,EAAJA,EAAe1yB,IAAK,QAC1C,OAEAtB,QAAQC,IAAI,mBACd,GACA,EAqNsCjX,SAC3B,qBAQTF,EAAAA,EAAAA,KAACG,GAAAA,EAAQ,CACPG,KAAM2hC,EACNtpB,iBAAkB,IAClBpY,QAAS0jC,EACT7jC,aAAc,CAAEC,SAAU,MAAON,WAAY,SAAUG,UAEvDF,EAAAA,EAAAA,KAACa,GAAK,CACJN,QAAS0jC,EACTnjC,SAAUuhC,EACV3hC,GAAI,CAAEK,MAAO,QAASb,SAErBiiC,WAMb,CCpTA,MAAMthC,GAAQY,EAAAA,YAAiB,SAAeF,EAAOwR,GACnD,OAAO/S,EAAAA,EAAAA,KAACgT,GAAAA,EAAQ,CAAC1C,UAAW,EAAGyC,IAAKA,EAAKhN,QAAQ,YAAaxE,GAChE,IACM04B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAII,SAASmuC,KAAe,IAAD1c,EACpC,MAAO2O,EAAUC,IAAej3B,EAAAA,EAAAA,WAAS,IAClCk3B,EAAiBC,IAAsBn3B,EAAAA,EAAAA,aACvCo3B,EAAkBC,IAAuBr3B,EAAAA,EAAAA,aACzCw1B,EAAUuC,IAAe/3B,EAAAA,EAAAA,UAAS,KAClCq1B,EAAQwC,IAAa73B,EAAAA,EAAAA,UAAS,KAC9BqsB,EAAUyL,IAAe93B,EAAAA,EAAAA,UAAS,KAClCk1B,EAAYyC,IAAiB33B,EAAAA,EAAAA,UAAS,CAAC,GACxCwC,EAAU4zB,KAChB,IAAIthB,GAAWC,EAAAA,EAAAA,MACf,MAAM9Z,GAAW+L,EAAAA,EAAAA,MACXs9B,EAAiB,IAAIT,GACrBmB,EAAgC,QAAjB3c,EAAGptB,EAASsZ,aAAK,IAAA8T,OAAA,EAAdA,EAAgB4c,qBAEjCb,EAAaC,IAAkBrkC,EAAAA,EAAAA,UAAS,CAC7CykC,KAAMO,EAAgBP,KACtBjZ,QAASwZ,EAAgBxZ,UAGrB0Z,EAAehhB,OAAOE,QAAQ4gB,EAAgBF,MAAMnnC,KAAIX,IAAA,IAAE+F,EAAKL,GAAM1F,EAAA,MAAM,CAAE+F,MAAKL,QAAO,KAExFgzB,EAAiBkC,IAAsB53B,EAAAA,EAAAA,UAASklC,GA2DjDX,EAA4B3hC,IAChC,MAAM,KAAE5E,EAAI,MAAE0E,GAAUE,EAAEC,OACb,WAAT7E,EACF65B,EAAUn1B,GACQ,aAAT1E,EACT85B,EAAYp1B,GAEZi1B,GAAeqD,IAAU,IACpBA,EACH,CAACh9B,GAAO0E,KAEZ,EAII8hC,EAA2BjvC,IAC/B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACf+L,EACH,CAACpmC,GAAO0E,GAEV2hC,EAAehM,EAAY,EAGvBU,EAAsBA,CAAC94B,EAASpK,KACpCshC,EAAmBl3B,GACnBo3B,EAAoBxhC,GACpBohC,GAAY,EAAK,EAGb+B,EAAsBA,CAACzjC,EAAOC,KACnB,cAAXA,GAIJyhC,GAAY,EAAM,EAKpB,OACEthC,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,sBAGtCrI,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,SACCF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI3CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRyJ,MAAM,OACNzN,KAAK,OACLtF,UAAQ,EACRgK,MAAO0hC,EAAYK,KACnB9hC,SAAU6hC,EACVpiC,WAAS,EACTzF,OAAO,cAGXhH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAAiB,KACvBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,gBACRlK,GAAG,iBACHtD,KAAK,UACLoE,WAAS,EACTM,MAAO0hC,EAAY5Y,QACnB7oB,SAAU6hC,EAAwBvvC,SAEjC4vB,EAAAA,GAAelnB,KAAKgO,IACnB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAM5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,mBACWF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIrDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,SAAA,EACjCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAG1E,MAAO,CAAE+G,WAAY,OAAQhI,UAC7CF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,SACLyN,MAAM,MACN/I,MAAO2yB,EACPv6B,QAAQ,WACRsH,WAAS,EACTzF,OAAO,SACPgG,SAAU4hC,MAEP,aAEPxvC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,WACLyN,MAAM,QACN/I,MAAO2pB,EACPvxB,QAAQ,WACRsH,WAAS,EACTzF,OAAO,SACPgG,SAAU4hC,MAEP,aAEPxvC,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACL3E,MAAO,CAAE8F,SAAU,OAAQiD,UAAW,OACtClE,QAtJCu6B,KACnB,MAAMiG,EAAY7F,EAAgBhE,MAAMjjB,GAAQA,EAAI1L,MAAQsyB,IACtDmG,EAAc9F,EAAgBhE,MAAMjjB,GAAQA,EAAI/L,QAAU2pB,IAE5DkP,GAAaC,EACfzD,EAAY,oCAIdH,GAAoB6D,GAAa,IAC5BA,EACH,CAAE14B,IAAKsyB,EAAQ3yB,MAAO2pB,MAExBwL,EAAU,IACVC,EAAY,IACZC,EAAY,IAAG,EAuIyB9iC,UAEtBF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,cAITF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAEugC,KAC7BzgC,EAAAA,EAAAA,KAAA,OACEmB,MAAO,CACLyB,OAAQ,QACRo+B,UAAW,OACXv3B,OAAQ,iBACRD,aAAc,MACdy3B,aAAc,SACdlgC,MAAO,OACPb,SAEDygC,EAAgB/3B,KAAI,CAAC8Q,EAAK5Q,KACzB9I,EAAAA,EAAAA,KAACkhC,GAAAA,EAAK,CAEJ//B,MAAO,CACL+N,YAAa,OACb9G,aAAc,MACdvF,QAAS,OACTE,eAAgB,gBAChBD,WAAY,UACZ5C,UAEFU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACHC,WAAS,EACT1C,WAAW,SACX3B,MAAO,CAAE+G,WAAY,OAAQhI,SAAA,EAE7BF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfU,EAAAA,EAAAA,MAAA,KAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAAE,SAAIwZ,EAAI1L,MAAQ,KAAChO,EAAAA,EAAAA,KAAA,KAAAE,SAAIwZ,EAAI/L,cAG7B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,EAAE3F,UACfF,EAAAA,EAAAA,KAAC2M,GAAAA,EAAU,CAAC3G,QAASA,IA3KpB8C,KACvB+5B,GAAoB6D,IAClB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQxB,OAAOr8B,EAAO,GACf69B,CAAO,GACd,EAsK+CnG,CAAgB13B,GAAO5I,UAChDF,EAAAA,EAAAA,KAACmhC,GAAAA,EAAU,YArBZr4B,cA8Bf9I,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QA3OS2pC,KAAO,IAADC,EAAAC,EAC7B,GAC+B,MAAb,QAAhBD,EAAAP,EAAYK,YAAI,IAAAE,OAAA,EAAhBA,EAAkBzhC,UACjBkhC,EAAYK,MACmB,MAAb,QAAnBG,EAAAR,EAAY5Y,eAAO,IAAAoZ,OAAA,EAAnBA,EAAqB1hC,UACpBkhC,EAAY5Y,SACc,IAA3BkK,EAAgB53B,OAGhB,YADAi7B,EAAoB,kCAAmC,SAIzD,MAAM8L,EAAY,CAChBJ,KAAML,EAAYK,KAClBjZ,QAAS4Y,EAAY5Y,QACrBsZ,KAAMpP,EAAgBwF,QAAO,CAACC,EAAKC,KACjCD,EAAIC,EAAKr4B,KAAOq4B,EAAK14B,MACdy4B,IACN,CAAC,IAENmJ,EAAeJ,cAAcW,GAAWx3B,MAAMotB,IAC5C95B,YAAW,KACTmU,EAAS,YAAY,GACpB,IAAI,IAGTikB,EAAoB,+BAAgC,UAAU,EAiNtB9jC,SAC3B,qBAQTF,EAAAA,EAAAA,KAACG,GAAAA,EAAQ,CACPG,KAAM2hC,EACNtpB,iBAAkB,IAClBpY,QAAS0jC,EACT7jC,aAAc,CAAEC,SAAU,MAAON,WAAY,SAAUG,UAEvDF,EAAAA,EAAAA,KAACa,GAAK,CACJN,QAAS0jC,EACTnjC,SAAUuhC,EACV3hC,GAAI,CAAEK,MAAO,QAASb,SAErBiiC,WAMb,C,gBCjSA,MAAMthC,GAAQY,EAAAA,YAAiB,SAAeF,EAAOwR,GACnD,OAAO/S,EAAAA,EAAAA,KAACgT,GAAAA,EAAQ,CAAC1C,UAAW,EAAGyC,IAAKA,EAAKhN,QAAQ,YAAaxE,GAChE,IACM04B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAEK6K,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAChC6D,WAAY,MACZ,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEpD,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBAkbvD,GA9aiB6pC,KACf,MAAOC,EAAMC,IAAWrlC,EAAAA,EAAAA,UAAS,IAC1BslC,EAAaC,IAAkBvlC,EAAAA,EAAAA,UAAS,KACxCglC,EAAiBQ,IAAsBxlC,EAAAA,EAAAA,aACvCylC,EAAaC,IAAkB1lC,EAAAA,EAAAA,aAC/BwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxC2lC,EAAcC,IAAmB5lC,EAAAA,EAAAA,UAAS,KAC1Cg3B,EAAUC,IAAej3B,EAAAA,EAAAA,WAAS,IAClCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,GAC3CskC,EAAiB,IAAIT,IAC3BptC,EAAAA,EAAAA,YAAU,KACR6tC,EAAeR,iBAAiBz2B,MAAMwI,IACpC6vB,EAAe7vB,EAAO,GACtB,GACD,IAGH,MAAOgwB,EAAqBC,IAA0B9lC,EAAAA,EAAAA,UAAS,KAE/DvJ,EAAAA,EAAAA,YAAU,KACRqvC,EAAuBL,EAAY,GAClC,CAACA,IAEJ,MAwCM3wB,GAAWC,EAAAA,EAAAA,MACXqoB,GAAev2B,EAAAA,EAAAA,QAAO,gBAgDtBkyB,EAAsBA,KAC1B9B,GAAY,EAAK,EAGb+B,EAAsBA,CAACzjC,EAAOC,KACnB,cAAXA,GAIJyhC,GAAY,EAAM,GAGb8O,EAAcC,IAAmBhmC,EAAAA,EAAAA,UAAS,CAC/CykC,KAAM,GAENjZ,QAAS,KAGLya,EAAqBA,CAACva,EAAQC,KAClCqa,GAAiBE,IAAgB,IAC5BA,EACH,CAACxa,GAASC,KACT,GAGLl1B,EAAAA,EAAAA,YAAU,KACR,IAAI0vC,EAAaV,EAEbM,EAAmB,KAAEjoC,OAAS,IAChCqoC,EAAaA,EAAWjnB,QAAQzQ,GAC9Bs3B,EAAmB,KAAEhvB,SAAStI,EAAU,SAIxCs3B,EAAsB,QAAEjoC,OAAS,IACnCqoC,EAAaA,EAAWjnB,QAAQzQ,GAC9Bs3B,EAAsB,QAAEhvB,SAAStI,EAAa,YAIlDm3B,EAAgBO,EAAW,GAC1B,CAACJ,IAEJ,MAAM5Z,EAAmBT,IACvB,MAAMhW,EAAS,IAAIsW,IAEnB,OADW,OAAXyZ,QAAW,IAAXA,GAAAA,EAAavsB,SAASoY,GAAe5b,EAAOuW,IAAIqF,EAAW5F,MACpDnK,MAAM2K,KAAKxW,EAAO,EAK3B,OACE/f,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,kBAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAzJqBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MAGpC,GAFA+sB,EAAeyC,GAEQ,KAAnBA,EACF4T,EAAuBL,OAClB,CACL,MAAMW,EAA0B,OAAXX,QAAW,IAAXA,OAAW,EAAXA,EAAavmB,QAC/BoS,IAAU,IAAA+U,EAAAC,EAAA,OACC,OAAVhV,QAAU,IAAVA,GAAgB,QAAN+U,EAAV/U,EAAYmT,YAAI,IAAA4B,OAAN,EAAVA,EAAkBxkB,cAAc9K,SAC9Bmb,EAAerQ,kBAEC,QADjBykB,EACDhV,EAAW9F,eAAO,IAAA8a,OAAA,EAAlBA,EAAoBzkB,cAAc9K,SAChCmb,EAAerQ,eAChB,IAELikB,EAAuBM,EACzB,GAyIU1jC,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,WAAW,SAAQ5C,SAAA,EAC5DF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAlIjBo3B,KACnB,GAAoB,KAAhB3C,EACFsW,EAAuBL,OAClB,CACL,MAAMW,EAAeX,EAAYvmB,QAAQoS,GAC7B,OAAVA,QAAU,IAAVA,OAAU,EAAVA,EAAYmT,KAAK5iB,cAAc9K,SAASyY,EAAY3N,iBAEtDikB,EAAuBM,EACzB,GA0H0DnxC,SAAC,YAGnDF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEk8B,KAAM,MACpBr9B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QA3HiBwrC,KAC3BnJ,EAAa/1B,QAAU,SACvB1G,YAAW,KACTmU,EAAS,kBAAmB,CAC1BP,MAAO,CAAEmpB,UAAWN,EAAa/1B,UACjC,GACD,IAAI,EAqHiCpS,SAC/B,eAIHU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,SAAA,EAC/BU,EAAAA,EAAAA,MAACqS,GAAW,CAAA/S,SAAA,EACVF,EAAAA,EAAAA,KAAC62B,GAAAA,EAAS,CAAA32B,UACRU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EAGPU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACrBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CACTpV,MAAO,CACLC,WAAY,OACZS,MAAO,uBACP3B,SACH,kBAIDF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACX31B,MAAO,CAAEJ,MAAO,OAChBg2B,UAAQ,EACRC,QAASI,EAAgB,QACzBzpB,MAAOqjC,EAAatB,KACpB9hC,SAAUA,CAACypB,EAAGC,IACZ4Z,EAAmB,OAAQ5Z,GAE7B9C,YAAaA,IAAM,KACnB+C,YAAcC,IACZx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IACJuqB,EACJzxB,QAAQ,WACR2Q,MAAM,cACNxJ,YAAY,cAGhB2I,WAAY,CACV1U,MAAO,CACLH,UAAW,UAGfy2B,sBAAoB,EACpBE,qBAAsBA,CAAC/gB,EAAQjJ,IAAUiJ,IAAWjJ,EACpD8jC,eAAiB76B,GAAWA,EAC5BghB,kBAAmBA,CAAChhB,EAAQjJ,IAC1BqjC,EAAatB,KAAK1tB,SAASrU,GAE7BkqB,UAAW,CACT12B,MAAO,CACL8F,SAAU,cAMlBrG,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACrBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CACTpV,MAAO,CACLC,WAAY,OACZS,MAAO,uBACP3B,SACH,cAIDF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACX31B,MAAO,CAAEJ,MAAO,OAChBg2B,UAAQ,EACRC,QAASI,EAAgB,WACzBzpB,MAAOqjC,EAAava,QACpB7oB,SAAUA,CAACypB,EAAGC,IACZ4Z,EAAmB,UAAW5Z,GAEhC9C,YAAaA,IAAM,KACnB+C,YAAcC,IACZx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IACJuqB,EACJzxB,QAAQ,WACR2Q,MAAM,kBACNxJ,YAAY,cAGhB2I,WAAY,CACV1U,MAAO,CACLH,UAAW,UAGfy2B,sBAAoB,EACpBE,qBAAsBA,CAAC/gB,EAAQjJ,IAAUiJ,IAAWjJ,EACpD8jC,eAAiB76B,GAAWA,EAC5BghB,kBAAmBA,CAAChhB,EAAQjJ,IAC1BqjC,EAAava,QAAQzU,SAASrU,GAEhCkqB,UAAW,CACT12B,MAAO,CACL8F,SAAU,cAKlBjH,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,UACrBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CACTpV,MAAO,CACL0G,cAAe,OACfzG,WAAY,OACZS,MAAO,uBACP3B,SACH,oBAQPF,EAAAA,EAAAA,KAACkW,GAAAA,EAAS,CAAAhW,UACY,OAAnB4wC,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqB/nC,QAAS,EAC7B+nC,EACG3mB,QACEoS,IACkB,KAAhB9B,GACC8B,EAAWmT,KAAK5iB,cAAc9K,SAC5ByY,EAAY3N,iBAEJ,OAAVyP,QAAU,IAAVA,OAAU,EAAVA,EAAY9F,QAAQ3J,cAAc9K,SAChCyY,EAAY3N,mBAEc,IAA7BkkB,EAAatB,KAAK3mC,QACjBioC,EAAatB,KAAK1tB,SAASua,EAAWmT,SACP,IAAhCsB,EAAava,QAAQ1tB,QACpBioC,EAAava,QAAQzU,SAASua,EAAW9F,YAE9C/I,MAAM2iB,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C3nC,KAAI,CAAC2zB,EAAYzzB,KAEdlI,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EAGPF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CACRC,MAAM,OACNlV,MAAO,CAAEoF,cAAe,QAASrG,SAEhCq8B,EAAWmT,QAGd1vC,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CACRC,MAAM,OACNlV,MAAO,CAAEoF,cAAe,QAASrG,SAEhCq8B,EAAW9F,WAEd71B,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CACRC,MAAM,OACNlV,MAAO,CAAEoF,cAAe,QAASrG,SAAA,EAEjCF,EAAAA,EAAAA,KAAC+kC,GAAAA,EAAQ,CACPx4B,GAAIgwB,EAAWhwB,GACfvG,QAASA,IAnRV0rC,KACzBrJ,EAAa/1B,QAAU,OAEvB,MAAM49B,EAAsBwB,EAC5B9lC,YAAW,KACTmU,EAAS,gBAAiB,CACxBP,MAAO,CAAEmpB,UAAWN,EAAa/1B,QAAS49B,wBAC1C,GACD,IAAI,EA2QkCyB,CAAkBpV,KAChC,KACHv8B,EAAAA,EAAAA,KAACmhC,GAAAA,EAAU,CACTn7B,QAASA,KACP4rC,OA5QKjD,EA4QqBpS,EA3QtDlC,GAAgB,QAEhBoW,EAAmB9B,GAHcA,KA6QN,SA3BQ7lC,MAkCrB9I,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CACRC,MAAM,OACNoB,QAAS,EACTtW,MAAO,CAAEc,UAAW,UAAW/B,SAE9B,4BAMC,OAAXwwC,QAAW,IAAXA,GAAAA,EAAa3nC,QACZ/I,EAAAA,EAAAA,KAAC6xC,GAAAA,EAAe,CACdnxC,GAAI,CAAEoxC,GAAI,GACVzB,KAAMA,EACNvpC,UAAU,MACVypC,YAAaA,EACbwB,MAAkB,OAAXrB,QAAW,IAAXA,OAAW,EAAXA,EAAa3nC,OACpBipC,aAlVWC,CAAC5a,EAAG6a,KAC3B5B,EAAQ4B,EAAQ,EAkVJC,mBAAoB,CAAC,GAAI,GAAI,IAC7BC,oBAhVmB5xC,IAC/BgwC,GAAgBhwC,EAAMsN,OAAOH,OAC7B2iC,EAAQ,EAAE,EA+UE+B,oBAAqB,CAAE,aAAc,aACrCC,oBAAqB,CAAE,aAAc,oBAGvCtyC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,aAMRD,EAAAA,EAAAA,KAACG,GAAAA,EAAQ,CACPG,KAAM2hC,EACNtpB,iBAAkB,IAClBpY,QAAS0jC,EACT7jC,aAAc,CAAEC,SAAU,MAAON,WAAY,SAAUG,UAEvDF,EAAAA,EAAAA,KAACa,GAAK,CACJN,QAAS0jC,EACTnjC,SAAS,UACTJ,GAAI,CAAEK,MAAO,QAASb,SACvB,qCAKHU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CAAC,qCACgBF,EAAAA,EAAAA,KAAA,KAAAE,SAAmB,OAAf+vC,QAAe,IAAfA,OAAe,EAAfA,EAAiBP,OAAU,IAAI,oBACpD1vC,EAAAA,EAAAA,KAAA,KAAAE,SAAmB,OAAf+vC,QAAe,IAAfA,OAAe,EAAfA,EAAiBxZ,gBAGzC71B,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAzUA+4B,KACxB1E,GAAgB,EAAM,EAwU6Bn6B,SAAC,YAG9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAxUY2F,UAC1B0uB,GAAgB,GAGhB,UACQkV,EAAeP,cAAciB,EAAgB1jC,GACrD,CAAE,MAAOpI,GACP+S,QAAQ/S,MAAM,0BAA2BA,EAC3C,CAEAorC,EAAeR,iBAAiBz2B,MAAMwI,IACpC6vB,EAAe7vB,EAAO,IAGxBkjB,GAAqB,EA0TsB9jC,SAAC,mBAGhC,EC7bhB,GA9BuB,CACrB,CACE8I,KAAM,YACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACowC,GAAQ,MAGbmC,KAAM7K,GAAUE,OAElB,CACE5+B,KAAM,kBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACovC,GAAa,MAGlBmD,KAAM7K,GAAUE,OAElB,CACE5+B,KAAM,gBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACgwC,GAAW,MAGhBuC,KAAM7K,GAAUE,Q,gBCZpB,MAoKA,GAjKwBrmC,IAEtB,MAAMy0B,EAAc,IAAIC,GAAAA,GACjBoC,EAAgBC,IAAqBrtB,EAAAA,EAAAA,WAAS,IAC9CqO,EAAcif,IAAmBttB,EAAAA,EAAAA,WAAc,OAAL1J,QAAK,IAALA,OAAK,EAALA,EAAOixC,SAAU,KAC3D7kC,EAAO8qB,IAAYxtB,EAAAA,EAAAA,UAAS,YAE5BytB,EAAeC,IAAoB1tB,EAAAA,EAAAA,WAAS,IAC5C2tB,EAAgBC,IAAqB5tB,EAAAA,EAAAA,WAAS,IAC9CrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAkFzC,OACErK,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QArF6B8yB,KACjCR,GAAkB,EAAK,EAoFiBp4B,SACrC,YAGDU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+3B,EAAen4B,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,UAChCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,UACjCU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAAApW,SAAA,EACVF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAS,CAACxsB,GAAG,sCAAqCrM,SAAC,2BACpDU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACT,kBAAgB,sCAChBxQ,KAAK,iCACL0E,MAAOA,EACPC,SAnCApN,IACpBi4B,EAASj4B,EAAMsN,OAAOH,OACK,YAAvBnN,EAAMsN,OAAOH,MACf4qB,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOixC,QAEvBja,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAEzB,EA4B2C94B,SAAA,EAEvBF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,UAAUkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,cAC5D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,eAAekM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,qCAUjF9V,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAnHQizB,KAChCX,GAAkB,EAAM,EAkHmCp4B,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA1GakzB,KAAO,IAADuZ,EACjCna,GAAkB,GAClB,IAAIngB,GAAmB,YAAVxK,EAA4B,OAALpM,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAA0B,OAALz3B,QAAK,IAALA,OAAK,EAALA,EAAOixC,SAAW,GAG7EjxC,EAAM+3B,UAAmD,IAAvCnK,OAAOkN,KAAK96B,EAAM+3B,UAAUvwB,SACjDoP,EAAOA,EAAKuU,MAAK,CAACpJ,EAAGqJ,KAAO,IAAD+lB,EAAAC,EACzB,MAAM7Y,GAAuB,QAAd4Y,EAAApvB,EAAEsR,oBAAY,IAAA8d,OAAA,EAAdA,EAAgB5lB,gBAAiB,GAC1CkN,GAAuB,QAAd2Y,EAAAhmB,EAAEiI,oBAAY,IAAA+d,OAAA,EAAdA,EAAgB7lB,gBAAiB,GAChD,OAAIgN,EAASE,GAAgB,EACzBF,EAASE,EAAe,EACrB,CAAC,KAIZ,IAAIb,EAAiB,QAAPsZ,EAAGt6B,SAAI,IAAAs6B,OAAA,EAAJA,EAAM7pC,KAAIlD,IAAS,IAADktC,EAAAC,EAuBjC,MAtBU,CACR,sBAAuBntC,EAAKkvB,aAC5B,yBAA0BlvB,EAAKotC,oBAC/B,yBAA0BptC,EAAKqtC,oBAC/B,sBAAuBrtC,EAAKstC,kBAC5B,cAAettC,EAAKutC,WACpB,mBAAoBvtC,EAAKwtC,oBACzB,oBAAqBxtC,EAAKytC,iBAC1B,cAAkB,OAAJztC,QAAI,IAAJA,GAAY,QAARktC,EAAJltC,EAAM8gB,cAAM,IAAAosB,OAAR,EAAJA,EAAc7pC,QAAS,EAAQ,OAAJrD,QAAI,IAAJA,GAAY,QAARmtC,EAAJntC,EAAM8gB,cAAM,IAAAqsB,OAAR,EAAJA,EAAcjqC,KAAIg0B,GAAc,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,YAAWlP,KAAK,MAAQ,KACnG,qBAAsBjoB,EAAK0tC,eAAezlB,KAAK,MAC/C,kBAAmBjoB,EAAK2tC,eAAe1lB,KAAK,MAC5C,wBAAyBjoB,EAAK4tC,mBAAmB3lB,KAAK,MACtD,2BAA4BjoB,EAAK6tC,sBAAsB5lB,KAAK,MAUpD,IAIZqI,EAAYqC,eAAe,CAAE,KAAQc,EAAY,WAAc,wBAAyB7gB,MAAMC,IAC5FsgB,EAAkBtgB,GAnDpBogB,GAAiB,GAsDf74B,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAChB,GACF,EAuD0CtY,SAAC,iBAqBzCL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACJ,EC5JDg6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAEKorC,GAASA,KACb,MAAM,mBAAEn+B,EAAkB,yBAAEwJ,IAA6BvJ,EAAAA,EAAAA,KAEzD,IAAI6kB,GADaloB,EAAAA,EAAAA,MACSuN,MAC1B,MAAOmuB,EAAgBK,IAAqB/iC,EAAAA,EAAAA,aACrCunC,EAAQiB,IAAaxoC,EAAAA,EAAAA,UAAS,KAC9BwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,GAC3CyoC,EAAY,IAAI3/B,GAAAA,GACfnU,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCquB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,CAAC,IAEnCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,IAC3CgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,MAC3FhgB,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCsuB,EAAae,IAAkBrvB,EAAAA,EAAAA,UAAS,IAezCmwB,GAAoBlvB,EAAAA,EAAAA,cAAY7D,IAAmB,IAAlB,SAAEosB,GAAUpsB,EACjDyyB,EAAYrG,EAAS,GACpB,KAWH/yB,EAAAA,EAAAA,YAAU,KACR2S,GAAa,GACRgB,EAYHzJ,YAAW,KACT6nC,EAAUp+B,GACVilB,EAAejlB,GACfhB,GAAa,EAAM,GAClB,KAfHq/B,EAAUC,eACPr7B,MAAMwI,IACL2yB,EAAU3yB,EAAO3I,MACjB0G,EAAyBiC,EAAO3I,MAChCmiB,EAAexZ,EAAO3I,MACtBy7B,EAAkB9yB,EAAO3I,KAAK,IAE/BkjB,SAAQ,KACPhnB,GAAa,EAAM,GASzB,GACC,CAACgB,IACJ,MAAOw+B,EAAgBD,IAAqB3oC,EAAAA,EAAAA,UAAS,KACrDvJ,EAAAA,EAAAA,YAAU,KACRkyC,EAAkBpB,EAAO,GACxB,CAACA,IAEJ,MAAMsB,GAAwBvnB,EAAAA,GAAAA,IAAc,IAAIsnB,GAAiB,UAU3D9zB,GAAWC,EAAAA,EAAAA,MACXqoB,GAAev2B,EAAAA,EAAAA,QAAO,gBAStBy8B,EAAoBC,IACxBnG,EAAa/1B,QAAU,OACvB,MAAMyhC,EAAiBvF,EACvB5iC,YAAW,KACTmU,EAAS,WAAyB,OAAdg0B,QAAc,IAAdA,OAAc,EAAdA,EAAgBxnC,KAAM,CACxCiT,MAAO,CAAEmpB,UAAWN,EAAa/1B,QAASyhC,mBAC1C,GACD,IAAI,EAGHrF,EAA4BC,IAChCtU,GAAgB,GAChB2T,EAAkBW,EAAa,GA+BjCjtC,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEdx5B,EAAAA,EAAAA,YAAU,KACR,GAAI8wC,EAAQ,CACV,MAAMlW,EAAmBkW,EAAOroB,QAAQoS,GACd,KAAhB9B,GACN8B,EAAWzlB,OACRgW,cACA9K,SAASyY,EAAY3N,iBAG5B8mB,EAAkBtX,EACpB,IACC,CAAC7B,EAAa+X,KACjB9wC,EAAAA,EAAAA,YAAU,KAAO,IAAD45B,EACUC,EAAAC,EAAV,QAAdF,EAAInB,SAAU,IAAAmB,GAAVA,EAAYhyB,SACdxJ,GAAa,GACbsU,EAAY,CACVtT,SAAoB,QAAZy6B,EAAEpB,SAAU,IAAAoB,OAAA,EAAVA,EAAYjyB,OACtBjI,KAAgB,QAAZm6B,EAAErB,SAAU,IAAAqB,OAAA,EAAVA,EAAYtwB,UAEpBwoC,EAAUC,eAAer7B,MAAMwI,IAC7B2yB,EAAU3yB,EAAO3I,MACjB0G,EAAyBiC,EAAO3I,MAChCmiB,EAAexZ,EAAO3I,KAAK,KAG/BgiB,EAAa,CAAC,EAGdl0B,OAAOw1B,eAAiB,KACtBx1B,OAAOy1B,QAAQC,aAAa,CAAC,EAAGnwB,SAASmR,MAAM,CAChD,GACA,CAACwd,IAEJ,MAAM2C,EAAwBxD,IAC5BuB,EAAYvB,GACZ,MACME,EADeuD,GAAoByW,GACtBQ,CAAa,CAAE77B,KAAMq6B,EAAQlZ,WAAUwa,uBAAsB7W,iBAAkBH,EAAsBvD,gBACxHka,EAAUja,EAAWj4B,MAAM4W,MAC3By7B,EAAkBpa,EAAWj4B,MAAM4W,KAAK,EAG1C,OACEvX,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,6BAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAzHqBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAwHpBxvB,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,WAAW,SAAQ5C,SAAA,EAC5DF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QA1HjBo3B,OA0HuCl9B,SAAC,YAGnDF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEk8B,KAAM,MACpBr9B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QA5HeiuC,KACzB5L,EAAa/1B,QAAU,SACvB1G,YAAW,KACTmU,EAAS,YAAa,CACpBP,MAAO,CAAEmpB,UAAWN,EAAa/1B,UACjC,GACD,IAAI,EAsH+BpS,SAC7B,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QA/KoBw3B,KAC9B+Q,EAAiBxT,EAAa,GAAG,EA+KvB55B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAsB,OAAZo3B,QAAY,IAAZA,IAAAA,EAAchyB,OACxB/C,QA5Ley3B,KACzBiR,EAAyB3T,EAAa,IACtCV,GAAgB,EAAK,EA2LXl5B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAGDF,EAAAA,EAAAA,KAAC29B,GAAe,CAACrE,SAAUA,EAAUkZ,OAAQA,EAAQxZ,mBAAoB+B,QAE3En6B,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACCkb,GACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZga,UAAW,KACX5c,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBlC,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACfC,aAAc,IACdmW,SArOGjsC,IAAe,IAAd,KAAEkQ,GAAMlQ,EACxB,MAAMksC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IASvD,MAPA,CACM6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC5D7xB,OAAQ,kBACR4D,WAAY,SAEL,EA6NDw3B,QAAS,CACP,CACE/0B,KAAM,SACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,sBAAsBzc,SAAC,wBAC/Ci+B,YAAa,EACbC,aAAc,GACdC,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMrB,QAAa,GAEjD,CACE7N,KAAM,sBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,yBAAyBzc,SAAC,2BAClDi+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,sBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,yBAAyBzc,SAAC,2BAClDi+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,oBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,sBAAsBzc,SAAC,wBAC/Ci+B,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,aACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,cAAczc,SAAC,gBACvCi+B,YAAa,EACbC,aAAc,GACdC,OAAQ5zB,IAAA,IAAC,KAAE0N,GAAM1N,EAAA,OAAKzK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM86B,YAAiB,GAErD,CACEhqC,KAAM,sBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,yBAAyBzc,SAAC,qBAClDi+B,YAAa,EACbC,aAAc,GACdC,OAAQz3B,IAAA,IAAC,KAAEuR,GAAMvR,EAAA,OAAK5G,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM+6B,qBAA0B,GAE9D,CACEjqC,KAAM,mBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,oBAAoBzc,SAAC,sBAC7Ci+B,YAAa,EACbC,aAAc,GACdC,OAAQj3B,IAAA,IAAC,KAAE+Q,GAAM/Q,EAAA,OAAKpH,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMg7B,kBAAuB,GAE3D,CACElqC,KAAM,SACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,aAAazc,SAAC,eACtCi+B,YAAa,EACbC,aAAc,GACdC,OAAQ/2B,IAAA,IAAC,KAAE6Q,GAAM7Q,EAAA,OACftH,EAAAA,EAAAA,KAAA,OAAAE,SACO,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMqO,OACJkG,MAAK,CAACpJ,EAAGqJ,IAAMrJ,EAAEuZ,UAAUzP,cAAcT,EAAEkQ,aAC3Cj0B,KAAI,CAAClD,EAAMoD,KACV9I,EAAAA,EAAAA,KAAA,OAAAE,SAAsB,OAAJwF,QAAI,IAAJA,OAAI,EAAJA,EAAMm3B,WAAd/zB,MAEV,GAGV,CACEG,KAAM,iBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,iBAAiBzc,SAAC,uBAC1Ci+B,YAAa,EACbC,aAAc,GACdC,OAAQhiB,IAAA,IAAC,KAAElE,GAAMkE,EAAA,OACfrc,EAAAA,EAAAA,KAAA,OAAAE,SACO,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMi7B,eACJ1mB,MAAK,CAACpJ,EAAGqJ,IAAMrJ,EAAE8J,cAAcT,KAC/B/jB,KAAI,CAAClD,EAAMoD,KACV9I,EAAAA,EAAAA,KAAA,OAAAE,SAAkBwF,GAARoD,MAEV,GAGV,CACEG,KAAM,iBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,iBAAiBzc,SAAC,oBAC1Ci+B,YAAa,EACbC,aAAc,GACdC,OAAQ72B,IAAA,IAAC,KAAE2Q,GAAM3Q,EAAA,OACfxH,EAAAA,EAAAA,KAAA,OAAAE,SACO,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMk7B,eAAe3mB,MAAK,CAACpJ,EAAGqJ,IAAIrJ,EAAE8J,cAAcT,KAClD/jB,KAAI,CAAClD,EAAMoD,KACV9I,EAAAA,EAAAA,KAAA,OAAAE,SAAkBwF,GAARoD,MAER,GAGV,CACEG,KAAM,qBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,uBAAuBzc,SAAC,0BAChDi+B,YAAa,EACbC,aAAc,IACdC,OAAQgW,IAAA,IAAC,KAAEl8B,GAAMk8B,EAAA,OACfr0C,EAAAA,EAAAA,KAAA,OAAAE,SACO,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMm7B,mBAAmB5mB,MAAK,CAACpJ,EAAGqJ,IAAIrJ,EAAE8J,cAAcT,KACtD/jB,KAAI,CAAClD,EAAMoD,KACV9I,EAAAA,EAAAA,KAAA,OAAAE,SAAkBwF,GAARoD,MAER,GAGV,CACEG,KAAM,wBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO,0BAA0Bzc,SAAC,6BACnDi+B,YAAa,EACbC,aAAc,IACdC,OAAQiW,IAAA,IAAC,KAAEn8B,GAAMm8B,EAAA,OACft0C,EAAAA,EAAAA,KAAA,OAAAE,SACO,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMo7B,sBAAsB7mB,MAAK,CAACpJ,EAAGqJ,IAAIrJ,EAAE8J,cAAcT,KACzD/jB,KAAI,CAAClD,EAAMoD,KACV9I,EAAAA,EAAAA,KAAA,OAAAE,SAAkBwF,GAARoD,MAER,IAIZw1B,WAAYwV,EAEZvV,gBAAc,EACd9J,SAAUA,EACV2G,kBAAmBA,EACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAa,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAqC,IAAZ,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAc,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACtH7B,iBAAkBH,YAM1Bj9B,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KACLW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,gCAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,SAEe,IAAxB66B,EAAahyB,QAAiB/I,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAC7BU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CAAC,kCACaF,EAAAA,EAAAA,KAAA,KAAAE,SAAkB,OAAdytC,QAAc,IAAdA,OAAc,EAAdA,EAAgB72B,SAAW,iBACtD,KACPlW,EAAAA,EAAAA,MAAA,KAAAV,SAAA,CACG,IACc,OAAdytC,QAAc,IAAdA,OAAc,EAAdA,EAAgBnnB,OACd5d,KAAKg0B,GACGA,EAAMC,YAEdlP,KAAK,KAAM,aAGZ3tB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACNF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,SAAC,gEAMzBU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QApTA+4B,KACxB1E,GAAgB,EAAM,EAmT6Bn6B,SAAC,YAG9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAnTW2F,UACzB0uB,GAAgB,GAChB,IACE,MAAM2E,EAAwB,OAAZjE,QAAY,IAAZA,OAAY,EAAZA,EAAcnyB,KAAIlD,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,WAC7CmnC,EAAUa,SAASvV,GAAW1mB,MAAKC,IACvCrB,QAAQC,IAAIoB,EAAU,mBACtBzY,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAElBsiB,EAAY,CAAC,GACbE,EAAgB,GAAG,GAEvB,CAAE,MAAO72B,GACP+S,QAAQ/S,MAAM,uBAAwBA,EACxC,CACAuvC,EAAUC,eAAer7B,MAAMwI,IAC7B2yB,EAAU3yB,EAAO3I,MACjB0G,EAAyBiC,EAAO3I,MAChCmiB,EAAexZ,EAAO3I,KAAK,GAC3B,EA8RwCjY,SAAC,mBAG/B,EAIhB,MC/bM+5B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAEc,SAASosC,KACtB,MAAM,YACJ71B,EAAW,cACXH,IACElJ,EAAAA,EAAAA,MAEGm/B,EAAQC,IAAazpC,EAAAA,EAAAA,UAAS,CACnC6nC,oBAAqB,IACrBC,oBAAqB,IACrBC,kBAAmB,OAEdtR,EAAWC,IAAgB12B,EAAAA,EAAAA,UAAS,KACpCk4B,EAAgBC,IAAqBn4B,EAAAA,EAAAA,UAAS,KAC9C0pC,EAAgBC,IAAqB3pC,EAAAA,EAAAA,UAAS,KAC9C4pC,EAAgBC,IAAqB7pC,EAAAA,EAAAA,UAAS,KAC9C8pC,EAAoBC,IAAyB/pC,EAAAA,EAAAA,UAAS,KACtDgqC,EAAuBC,IAA4BjqC,EAAAA,EAAAA,UAAS,KAC5DrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,GAC3C,IAAI8U,GAAWC,EAAAA,EAAAA,MACf,MAAM0zB,EAAY,IAAI3/B,GAAAA,EAEhB0tB,EAAe,IAAIrC,IACzB19B,EAAAA,EAAAA,YAAU,KACR2S,GAAa,GACbotB,EAAanC,mBAAmBhnB,MAAMwI,IACpC6gB,EAAa7gB,GACbzM,GAAa,EAAM,GACnB,GACD,IACH,MAkDM8gC,EAAsB30C,IAC1B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACfmR,EACH,CAACxrC,GAAO0E,GAEV+mC,EAAUpR,EAAY,EASlB8R,EAAuBA,CAACnsC,EAAMosC,KAClCn+B,QAAQC,IAAI,cAAclO,OAAWosC,GACrC,MAAMC,GAA4B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAalrB,QACjCzkB,GAAS8Y,EAAcme,MAAM4Y,GAAaA,EAASnc,eAAiB1zB,EAAK0zB,mBACvE,GACQ,mBAATnwB,EACF2rC,EAAkBU,GAEF,mBAATrsC,EACP6rC,EAAkBQ,GAEF,uBAATrsC,EACP+rC,EAAsBM,GAEN,0BAATrsC,GACPisC,EAAyBI,EAC3B,EAGItR,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAWJ,OAHAqhB,EAAAA,GAAAA,IAAcmV,EAAW,cACzBnV,EAAAA,GAAAA,IAAc/N,EAAe,iBAG3B5d,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,oCAGtCrI,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gCACJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACcF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,WAAY3B,SAAC,YAIzDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,SACL0E,MAAO8mC,EAAO39B,OACdlJ,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAGX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,sBACRlK,GAAG,sBACHtD,KAAK,sBACLoE,WAAS,EACTM,MAAO8mC,EAAO3B,oBACdllC,SAAUunC,EAAmBj1C,SAE5B8vB,EAAAA,GAAmBpnB,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,sBACRlK,GAAG,sBACHtD,KAAK,sBACLoE,WAAS,EACTM,MAAO8mC,EAAO1B,oBACdnlC,SAAUunC,EAAmBj1C,SAE5B8vB,EAAAA,GAAmBpnB,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,oBACRlK,GAAG,oBACHtD,KAAK,oBACLoE,WAAS,EACTM,MAAO,IACPC,SAAUunC,EAAmBj1C,SAE5BkwB,EAAAA,GAAyBxnB,KAAKgO,IAC7B5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,aACL0E,MAAO8mC,EAAOxB,WACdrlC,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAGX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,wBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,sBACL0E,MAAO8mC,EAAOvB,oBACdtlC,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,yBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,mBACL0E,MAAO8mC,EAAOtB,iBACdvlC,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAGX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,eACOF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,WAAY3B,SAAC,YAIlDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOw1B,EACPsO,eAAiB76B,GAAWA,EAAOimB,UACnC2Y,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KA/LF+d,KAC1B,MAAMC,GAA4B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAalrB,QACjCzkB,GAASg8B,EAAU/E,MAAM4Y,GAAaA,EAAS1Y,YAAcn3B,EAAKm3B,gBAChE,GACLuG,EAAkBkS,EAAe,EA4LjBG,CAAmBne,EAAS,EAE9BN,QAAS0K,EACTnK,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOimB,iBASlB78B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,0BAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOgnC,EACPlD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,iBAAkB9d,EAAS,EAElDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAQlBp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOknC,EACPpD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,iBAAkB9d,EAAS,EAElDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAQlBp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,6BAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOonC,EACPtD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,qBAAsB9d,EAAS,EAEtDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAQlBp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,gCAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOsnC,EACPxD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,wBAAyB9d,EAAS,EAEzDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAQlBx4B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,SAAA,EACvFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAjSK+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EA+RO5e,MAAO,CAAE6N,YAAa,QAAS9O,SAChC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QArYQ6vC,KAAO,IAADC,EAC5B,GAC4B,MAAb,QAAbA,EAAArB,EAAO39B,cAAM,IAAAg/B,OAAA,EAAbA,EAAe3nC,UACdsmC,EAAO39B,QACkB,IAA1BqsB,EAAep6B,OAGf,YADAi7B,EAAoB,kCAAmC,SAGzD,MAAM+R,EAAY,CAChBxpC,GAAIkoC,EAAO39B,OACXA,OAAQ29B,EAAO39B,OACfg8B,oBAAqB2B,EAAO3B,oBAC5BG,WAAYwB,EAAOxB,WACnBC,oBAAqBuB,EAAOvB,oBAC5BC,iBAAkBsB,EAAOtB,iBACzBJ,oBAAqB0B,EAAO1B,oBAC5BC,kBAAmByB,EAAOzB,kBAC1BxsB,QAAsB,OAAd2c,QAAc,IAAdA,OAAc,EAAdA,EAAgBv6B,KAAKgO,IACpB,CACLrK,GAAU,OAANqK,QAAM,IAANA,OAAM,EAANA,EAAQrK,GACZswB,UAAiB,OAANjmB,QAAM,IAANA,OAAM,EAANA,EAAQimB,gBAEjB,GACNuW,gBAA8B,OAAduB,QAAc,IAAdA,OAAc,EAAdA,EAAgB/rC,KAAKgO,GACnCA,EAAOwiB,iBACH,GACNia,gBAA8B,OAAdwB,QAAc,IAAdA,OAAc,EAAdA,EAAgBjsC,KAAKgO,GACnCA,EAAOwiB,iBACH,GACNka,oBAAsC,OAAlByB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBnsC,KAAKgO,GAC3CA,EAAOwiB,iBACH,GACNma,uBAA4C,OAArB0B,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBrsC,KAAKgO,GACjDA,EAAOwiB,iBACH,IAER/kB,GAAa,GACbq/B,EAAUsC,SAASD,GAAWz9B,MAAMotB,IAClCrxB,GAAa,GACO,YAAhBqxB,EAAKp8B,OACPsC,YAAW,KACTmU,EAAS,UAAW,CAAEP,MAAO,CAAEtU,QAASw6B,EAAKltB,IAAKlP,OAAQo8B,EAAKp8B,SAAW,GACzE,KACsB,UAAhBo8B,EAAKp8B,QACd06B,EAAoB0B,EAAKltB,IAAK,QAChC,GACA,EAsVqCtY,SAC1B,sBAOPL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGF0e,GAAezD,GACdlb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAClCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,KAAMgd,OAEd3e,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,SAKd,C,2BChcA,MAAMg6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,IAAYzkB,EAAAA,EAAAA,IAAW,CAC3B0kB,QAAS,CACPz/B,MAAO,aAII,SAASo0C,KACtB,MAAM,YACJt3B,EAAW,cACXH,EAAa,2BACbQ,IACE1J,EAAAA,EAAAA,MACGosB,EAAWC,IAAgB12B,EAAAA,EAAAA,UAAS,KAGpCirC,EAAUC,KAFAlkC,EAAAA,EAAAA,OAEehH,EAAAA,EAAAA,UAAS,CAAC,KACnCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCwpC,EAAQC,IAAazpC,EAAAA,EAAAA,UAAS,CAAC,IAC/BiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,GACrCwC,EAAU4zB,KAChB,IAAIthB,GAAWC,EAAAA,EAAAA,MACf,MAAMwX,GAASqP,EAAAA,EAAAA,MAET6M,EAAY,IAAI3/B,GAAAA,EAChB6L,EAAiB,IAAIzG,GAAAA,EACrBsoB,EAAe,IAAIrC,IACzB19B,EAAAA,EAAAA,YAAU,KACR2S,GAAa,GACbotB,EAAanC,mBAAmBhnB,MAAMwI,IACpC6gB,EAAa7gB,GACbzM,GAAa,EAAM,GACnB,GACD,IAEH,MAwDM8gC,EAAsB30C,IAC1B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACfmR,EACH,CAACxrC,GAAO0E,GAEVuJ,QAAQC,IAAImsB,EAAa,kCACzBoR,EAAUpR,EAAY,GAGjBH,EAAgBC,IAAqBn4B,EAAAA,EAAAA,UAAS,KAC9C0pC,EAAgBC,IAAqB3pC,EAAAA,EAAAA,UAAS,KAC9C4pC,EAAgBC,IAAqB7pC,EAAAA,EAAAA,UAAS,KAC9C8pC,EAAoBC,IAAyB/pC,EAAAA,EAAAA,UAAS,KACtDgqC,EAAuBC,IAA4BjqC,EAAAA,EAAAA,UAAS,IAO7DmqC,EAAuBA,CAACnsC,EAAMosC,KAClCn+B,QAAQC,IAAI,aAAck+B,GAC1B,MAAMC,GAA4B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAalrB,QACjCzkB,GAAS8Y,EAAcme,MAAM4Y,GAAaA,EAASnc,eAAiB1zB,EAAK0zB,mBACvE,GACQ,mBAATnwB,EACF2rC,EAAkBU,GAEF,mBAATrsC,EACP6rC,EAAkBQ,GAEF,uBAATrsC,EACP+rC,EAAsBM,GAEN,0BAATrsC,GACPisC,EAAyBI,EAC3B,EAGItR,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAQEkrC,EAAkBC,IACc,OAAb73B,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QACnCzkB,GAAS2wC,EAAW1Z,MAAMvD,GAAiBA,IAAiB1zB,EAAK0zB,mBAC/D,GA4DP,OAxDA13B,EAAAA,EAAAA,YAAU,KACR,GAAY,OAARw0C,QAAQ,IAARA,GAAAA,EAAU1vB,OAAQ,CACpB,MAAM8uB,GAA0B,OAAT5T,QAAS,IAATA,OAAS,EAATA,EAAWvX,QAC/BzkB,GAAiB,OAARwwC,QAAQ,IAARA,OAAQ,EAARA,EAAU1vB,OAAOmW,MAAM5jB,IAAe,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO8jB,cAAkB,OAAJn3B,QAAI,IAAJA,OAAI,EAAJA,EAAMm3B,iBACnE,GACLuG,EAAkBkS,EACpB,CACA,GAAY,OAARY,QAAQ,IAARA,GAAAA,EAAU9C,eAAgB,CAC5B,MAAMkC,EAAiBc,EAAuB,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAU9C,gBAChDwB,EAAkBU,EACpB,CACA,GAAY,OAARY,QAAQ,IAARA,GAAAA,EAAU7C,eAAgB,CAC5B,MAAMiC,EAAiBc,EAAuB,OAARF,QAAQ,IAARA,OAAQ,EAARA,EAAU7C,gBAChDyB,EAAkBQ,EACpB,CACA,GAAY,OAARY,QAAQ,IAARA,GAAAA,EAAU5C,mBAAoB,CAChC,MAAMgC,EAAiBc,EAAeF,EAAS5C,oBAC/C0B,EAAsBM,EACxB,CACA,GAAY,OAARY,QAAQ,IAARA,GAAAA,EAAU3C,sBAAuB,CACnC,MAAM+B,EAAiBc,EAAeF,EAAS3C,uBAC/C2B,EAAyBI,EAC3B,IACC,CAACY,EAAUxU,EAAWljB,KAEzB9c,EAAAA,EAAAA,YAAU,KACE,OAAN81B,QAAM,IAANA,GAAAA,EAAQ8e,MACVjiC,GAAa,GACbq/B,EAAU6C,oBAAoB,CAAC,CAAEhqC,GAAU,OAANirB,QAAM,IAANA,OAAM,EAANA,EAAQ8e,QAASh+B,MAAMotB,IAAU,IAADqF,EAAAyL,EAAA7Q,EAAA8Q,EAEnE,GADApiC,GAAa,GACL,OAAJqxB,QAAI,IAAJA,GAAU,QAANqF,EAAJrF,EAAMvtB,YAAI,IAAA4yB,GAAVA,EAAYhiC,QAAe,OAAJ28B,QAAI,IAAJA,GAAU,QAAN8Q,EAAJ9Q,EAAMvtB,YAAI,IAAAq+B,GAAVA,EAAa,IAAY,OAANrnB,aAAM,IAANA,QAA6B,QAAvBwW,EAANxW,OAAQkN,KAAS,OAAJqJ,QAAI,IAAJA,GAAU,QAAN+Q,EAAJ/Q,EAAMvtB,YAAI,IAAAs+B,OAAN,EAAJA,EAAa,WAAG,IAAA9Q,GAA7BA,EAA+B58B,OAAS,CACpFotC,EAAgB,OAAJzQ,QAAI,IAAJA,OAAI,EAAJA,EAAMvtB,KAAK,IACvB,MAAMu+B,EAAoB,OAAJhR,QAAI,IAAJA,OAAI,EAAJA,EAAMvtB,KAAK,GACjCu8B,EAAU,CACRnoC,GAAImqC,EAAcnqC,GAClBuK,OAAQ4/B,EAAc5/B,OACtBg8B,oBAAqB4D,EAAc5D,oBACnCC,oBAAqB2D,EAAc3D,oBACnCC,kBAAmB0D,EAAc1D,kBACjCC,WAAYyD,EAAczD,WAC1BC,oBAAqBwD,EAAcxD,oBACnCC,iBAAkBuD,EAAcvD,kBAEpC,MACEpzB,EAAS,UAAW,CAAEP,MAAO,CAAEtU,QAAS,iCAAkC5B,OAAQ,UACpF,KAGFsC,YAAW,KACTmU,EAAS,UAAW,CAAEP,MAAO,CAAEtU,QAAS,iCAAkC5B,OAAQ,UAAY,GAC7F,IACL,GACC,KAEHijB,EAAAA,GAAAA,IAAcmV,EAAW,cAGvB9gC,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,kCAGtCrI,EAAAA,EAAAA,MAAA,QAAAV,SAAA,EACEF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8BACJU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI1DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,SACLtF,UAAQ,EACRgK,MAAO8mC,EAAO39B,OACdlJ,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,+BAERF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,sBACHtD,KAAK,sBACLoE,WAAS,EACTM,MAAa,OAAN8mC,QAAM,IAANA,GAAAA,EAAQ3B,oBAA4B,OAAN2B,QAAM,IAANA,OAAM,EAANA,EAAQ3B,oBAAsB,IACnEllC,SAAUunC,EAAmBj1C,SAE5B8vB,EAAAA,GAAmBpnB,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8BAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,sBACHtD,KAAK,sBACLoE,WAAS,EACTM,MAAa,OAAN8mC,QAAM,IAANA,GAAAA,EAAQ1B,oBAA4B,OAAN0B,QAAM,IAANA,OAAM,EAANA,EAAQ1B,oBAAsB,IACnEnlC,SAAUunC,EAAmBj1C,SAE5B8vB,EAAAA,GAAmBpnB,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAGRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLC,QAAQ,oBACRlK,GAAG,oBACHtD,KAAK,oBACLoE,WAAS,EACTM,MAAa,OAAN8mC,QAAM,IAANA,GAAAA,EAAQzB,kBAA0B,OAANyB,QAAM,IAANA,OAAM,EAANA,EAAQzB,kBAAoB,IAC/DplC,SAAUunC,EAAmBj1C,SAE5BkwB,EAAAA,GAAyBxnB,KAAKgO,IAC7B5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,mBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,aACL0E,MAAO8mC,EAAOxB,WACdrlC,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,wBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,sBACL0E,MAAO8mC,EAAOvB,oBACdtlC,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,yBAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,mBACL0E,MAAO8mC,EAAOtB,iBACdvlC,SAAUunC,EACV9nC,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,eACOF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIjDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOw1B,EACPsO,eAAiB76B,GAAWA,EAAOimB,UACnC2Y,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KA3PF+d,KAC1B,MAAMC,GAA4B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAalrB,QACjCzkB,GAASg8B,EAAU/E,MAAM4Y,GAAaA,EAAS1Y,YAAcn3B,EAAKm3B,gBAChE,GACLuG,EAAkBkS,EAAe,EAwPjBG,CAAmBne,EAAS,EAE9BN,QAAS0K,EACTnK,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOimB,eAKhBj8B,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE+I,UAAW,OAAQhK,SAAA,EAC/BF,EAAAA,EAAAA,KAAC22C,GAAAA,EAAQ,CAACx1C,MAAO,CAAE+I,UAAW,OAASrI,MAAM,YAAYoF,SAAS,WAAUjH,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEiH,aAAc,QAASlI,SAAC,+DAIvHF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,0BAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOgnC,EACPlD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,iBAAkB9d,EAAS,EAElDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAOlBp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOknC,EACPpD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,iBAAkB9d,EAAS,EAElDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAOlBp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,6BAIRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOonC,EACPtD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,qBAAsB9d,EAAS,EAEtDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAOlBp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,gCAKRF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACXC,UAAQ,EACRppB,MAAOsnC,EACPxD,eAAiB76B,GAAWA,EAAOwiB,aACnCoc,eAAa,EACb5nC,SAAUA,CAACC,EAAGypB,KACZ8d,EAAqB,wBAAyB9d,EAAS,EAEzDN,QAASxY,EACT+Y,YAAcC,IAAWx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IAAKuqB,EAAQj0B,UAAW,eAC3DmyC,aAAcA,CAACn0C,EAAOqV,KAElB5W,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAC0D,UAAU,KAAKpG,GAAI,CAAE,UAAW,CAAEi1C,GAAI,EAAGC,WAAY,OAAWr0C,EAAKrB,SACvE0W,EAAOwiB,oBAOlBx4B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,SAAA,EACvFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QA3VK+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EAyVO5e,MAAO,CAAE6N,YAAa,QAAS9O,SAChC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QA3cQ6vC,KAAO,IAADC,EAC5B,GAC4B,MAAb,QAAbA,EAAArB,EAAO39B,cAAM,IAAAg/B,OAAA,EAAbA,EAAe3nC,UACdsmC,EAAO39B,QACkB,IAA1BqsB,EAAep6B,OAGf,YADAi7B,EAAoB,kCAAmC,SAIzD,MAAM+R,EAAY,CAChBxpC,GAAIkoC,EAAOloC,GACXuK,OAAQ29B,EAAO39B,OACfg8B,oBAAqB2B,EAAO3B,oBAC5BG,WAAYwB,EAAOxB,WACnBC,oBAAqBuB,EAAOvB,oBAC5BC,iBAAkBsB,EAAOtB,iBACzBJ,oBAAqB0B,EAAO1B,oBAC5BC,kBAAmByB,EAAOzB,kBAC1BxsB,QAAsB,OAAd2c,QAAc,IAAdA,OAAc,EAAdA,EAAgBv6B,KAAKgO,IACpB,CACLrK,GAAU,OAANqK,QAAM,IAANA,OAAM,EAANA,EAAQrK,GACZswB,UAAiB,OAANjmB,QAAM,IAANA,OAAM,EAANA,EAAQimB,gBAEjB,GACNuW,gBAA8B,OAAduB,QAAc,IAAdA,OAAc,EAAdA,EAAgB/rC,KAAKgO,GACnCA,EAAOwiB,iBACH,GACNia,gBAA8B,OAAdwB,QAAc,IAAdA,OAAc,EAAdA,EAAgBjsC,KAAKgO,GACnCA,EAAOwiB,iBACH,GACNka,oBAAsC,OAAlByB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBnsC,KAAKgO,GAC3CA,EAAOwiB,iBACH,GACNma,uBAA4C,OAArB0B,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBrsC,KAAKgO,GACjDA,EAAOwiB,iBACH,IAER/kB,GAAa,GACbq/B,EAAUkD,SAASb,GAAWz9B,MAAMotB,IAClCrxB,GAAa,GACO,YAAhBqxB,EAAKp8B,QACP+K,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAK,IAEpBzI,YAAW,KACTmU,EAAS,UAAW,CAAEP,MAAO,CAAEtU,QAASw6B,EAAKltB,IAAKlP,OAAQo8B,EAAKp8B,SAAW,GACzE,MACsB,UAAhBo8B,EAAKp8B,QACd06B,EAAoB0B,EAAKltB,IAAKktB,EAAKp8B,OACrC,GACA,EAsZqCpJ,SAC1B,sBAOPL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGF0e,GAAezD,GACdlb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAClCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,MAAM,OAEd3B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,SAKd,CCthBA,MA0BA,GA1BqB,CACnB,CACE+I,KAAM,UACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACwzC,GAAM,OAIb,CACExqC,KAAM,YACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACw0C,GAAQ,OAIf,CACExrC,KAAM,gBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACi2C,GAAM,Q,eCFf,MAIMhjC,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAChC6D,WAAY,MACZ,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEpD,UAAW,CACT,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBAIjD4M,IAAsBxQ,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CAC1CyQ,KAAM,gBACNC,SAAU,aACVzQ,OAAQ,EACR6D,SAAU,SACVzD,SAAU,WACVuG,OAAQ,EACRtG,KAAM,EACNuD,WAAY,SACZzF,MAAO,IAyQT,GAtQwBpB,IAIjB,IAJkB,iBACvBk3C,EAAgB,oBAChBC,EAAmB,YACnBC,GACDp3C,EACC,MAAMq3C,EAAa,IAAIvtB,GAAAA,EAEjB5J,EAAc,IAAIC,EAAAA,GACjBxL,EAAaC,IAAkBtJ,EAAAA,EAAAA,WAAS,IACxCuJ,EAAgBC,IAAqBxJ,EAAAA,EAAAA,WAAS,IAC9CyJ,EAAeC,IAAoB1J,EAAAA,EAAAA,WAAS,IAC5C2J,EAAkBC,IAAuB5J,EAAAA,EAAAA,UAAS,OAClD6J,EAAkBC,IAAuB9J,EAAAA,EAAAA,UAAS,MACnDiK,EAAWC,aAAaC,QAAQ,aAC/BxV,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAwInCgsC,EAA0BA,KAC9BH,GAAoB,GACpBjiC,EAAoB,MACpBE,EAAoB,KAAK,EAE3B,OACEnU,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CACLhT,KAAMu2C,EACNt2C,QAAS02C,EACTphC,WAAY,CACV1U,MAAO,CACLiO,gBAAiB,OACjBT,UAAW,SAEbzO,SAAA,EAEFF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,gCAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACiT,GAAW,CAAA/S,UACVU,EAAAA,EAAAA,MAACsV,GAAAA,EAAS,CAAAhW,SAAA,EACRU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACPF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAC,8BACxBU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACrBU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EACjCU,EAAAA,EAAAA,MAACkF,EAAAA,EAAM,CACLgB,UAAU,QACVf,QAAQ,YACRgR,WAAW/W,EAAAA,EAAAA,KAACgX,GAAAA,EAAe,IAAI9W,SAAA,CAChC,eAECF,EAAAA,EAAAA,KAACmT,GAAmB,CAClBjS,KAAK,OACL+H,KAAK,OACLgO,OAAO,cACPrJ,SA9KFC,IACtBqJ,QAAQC,IAAI,iBACZ,MAAMC,EAAOvJ,EAAEC,OAAOuJ,MAAM,GAC5B,GAAID,EAAM,CACR,MAAME,EAAWF,EAAKnO,KAAKsO,MAAM,KAAKC,MACrB,SAAbF,GAAoC,QAAbA,GAKzBzC,EAAoBhH,EAAEC,OAAOuJ,MAAM,IACnCtC,EAAoBlH,EAAEC,OAAOuJ,MAAM,GAAGpO,MACtCsL,GAAe,KAEfA,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,MAExB,MACEN,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,KACtB,OA2JqBP,IACCtU,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0CAGN4U,IAAoB9U,EAAAA,EAAAA,KAAA,KAAAE,SAAI4U,WAG7B9U,EAAAA,EAAAA,KAACmW,GAAAA,EAAQ,CAAAjW,UACPU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACqB,QAAS,EAAEvX,SAAA,EACpBU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EACjCF,EAAAA,EAAAA,KAAA,KAEEgG,QA1DD0R,KAErBs/B,EAAWr/B,mBADQ,6BACwB,EAyDrBC,SAAS,wBACTC,IAAI,aAGJ1W,MAAO,CAAEU,MAAO,OAAQkU,OAAQ,WAAY7V,SAC7C,eAEI,IAAI,kEAQXU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EACjCF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,mFAGdU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,CAAC,gBAElCF,EAAAA,EAAAA,KAAA,SAAM,WAENA,EAAAA,EAAAA,KAAA,SAAM,YAENA,EAAAA,EAAAA,KAAA,SAAM,oBAENA,EAAAA,EAAAA,KAAA,SAAM,iBAENA,EAAAA,EAAAA,KAAA,6BAShBY,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAzJS2F,UACvB,IAAKiJ,GAAoBA,EAAiB7L,OAAS,EACjDwL,GAAe,QAIjB,IACE,MAAM2D,EAAW,CACfd,KAAMxC,EACNuD,KAAM,CACJC,SAAUlD,IAIdgC,QAAQC,IAAIe,EAAU,YAEtB,MAAMK,QAAiBsH,EAAYq3B,WAAWh/B,GAC9ChB,QAAQC,IAAIoB,EAAU,kBAGtB,MAAMjP,EAASiP,EAASjP,QAAU,QAelC,GAZAmL,EAAkB8D,GAClB5D,GAAiB,GACjBE,EAAoB,MACpBE,EAAoB,MACpBkiC,IAEAn3C,GAAa,GACbsU,EAAY,CACVtT,SAAUwI,EACVjI,KAAiB,YAAXiI,EAA+B,OAARiP,QAAQ,IAARA,OAAQ,EAARA,EAAUC,IAAMD,EAAS4+B,OAAOxpB,KAAK,QAGrD,YAAXrkB,EAAsB,CACxB4N,QAAQC,IACNoB,EACA,4DAEF,MAAMuI,QAAejB,EAAYu3B,kBACjCL,EAAYj2B,EAAO3I,KACrB,MACEjB,QAAQC,IAAI7N,EAAQ,kBAExB,CAAE,MAAOnF,GACP+S,QAAQ/S,MAAM,wBAAyBA,GACvCrE,GAAa,GACbsU,EAAY,CACVtT,SAAU,QACVO,KAAM,+CAEV,GAqGwCnB,SAAC,YACnCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASixC,EAAwB/2C,SAAC,iBAG7CL,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CACbra,UAAWA,EACXC,SAAUA,EACVC,aAAcA,KAGhBE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MAED,ECnIP,GA1JwBN,IAKjB,IALkB,iBACvB03C,EAAgB,oBAChBC,EAAmB,SACnBpjB,EAAQ,aACR6G,GACDp7B,EAEqB,IAAIs2B,GAAAA,EAAxB,MACO3c,EAAcif,IAAmBttB,EAAAA,EAAAA,UAASipB,GAAY,KACtDvmB,EAAO8qB,IAAYxtB,EAAAA,EAAAA,UAAS,WAC7B4U,EAAc,IAAIC,EAAAA,GACjB4Y,EAAeC,IAAoB1tB,EAAAA,EAAAA,WAAS,IAC5C2tB,EAAgBC,IAAqB5tB,EAAAA,EAAAA,WAAS,IAC9CrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAGnCssC,EAAwBA,KAC5BD,GAAoB,EAAM,EA2D5B,OACE12C,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+2C,EAAiBn3C,SAAA,EAC7BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,kBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,UAChCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,UACjCU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAAApW,SAAA,EACVF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAS,CAACxsB,GAAG,sCAAqCrM,SAAC,2BAGpDU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACT,kBAAgB,sCAChBxQ,KAAK,iCACL0E,MAAOA,EACPC,SAjCApN,IACpB,MAAM82B,EAAW92B,EAAMsN,OAAOH,MAC9B8qB,EAASnB,GAGPiB,EADe,YAAbjB,EACcpD,EAEA6G,EAClB,EAyB2C76B,SAAA,EAEvBF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CACfjM,MAAM,UACNkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IACfpD,MAAM,cAER1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CACfjM,MAAM,eACNhK,SAAkC,IAAxBo3B,EAAahyB,OACvB8Q,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IACfpD,MAAM,qCAUxB9V,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASuxC,EAAsBr3C,SAAC,YACxCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAzFakzB,KAC3BhiB,QAAQC,IAAI+c,EAAU,mDAEtB,IAAI/b,GAAkB,YAAVxK,EAAsBotB,EAAe7G,IAAa,GAC1DiF,EAAiB,OAAJhhB,QAAI,IAAJA,OAAI,EAAJA,EAAMvP,KAAKlD,IAChB,CAER,KAAQA,EAAKuD,KACb,YAAavD,EAAK8xC,SAClBC,MAAO/xC,EAAKgmB,MACZ,gBAAiBhmB,EAAKgyC,cACtB,aAAchyC,EAAKwlB,SAASyC,KAAK,UAKrCzW,QAAQC,IAAIgB,EAAM,QAClB0H,EACG83B,WAAW,CAAEx/B,KAAMghB,EAAYye,WAAY,UAC3Ct/B,MAAMC,IACLsgB,EAAkBtgB,GA9BtBogB,GAAiB,GAkCb74B,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAChB,IAEN++B,GAAuB,EA2DqBr3C,SAAC,iBAqB1CL,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CACbra,UAAWA,EACXC,SAAUA,EACVC,aAAcA,KAGhBE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MAED,ECzJDg6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKyvC,GAAWA,KAEf,IAAI1d,GADaloB,EAAAA,EAAAA,MACSuN,MAC1B,MAAO0U,EAAU6iB,IAAe9rC,EAAAA,EAAAA,UAAS,KAClCwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,GAC3C4U,EAAc,IAAIC,EAAAA,GACjBlgB,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClC4rC,EAAkBC,IAAuB7rC,EAAAA,EAAAA,WAAS,IAClDosC,EAAkBC,IAAuBrsC,EAAAA,EAAAA,WAAS,IAClDsuB,EAAae,IAAkBrvB,EAAAA,EAAAA,UAAS,KACxCquB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,CAAC,IAGnCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,IAC3CgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EACJD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAC1CD,EAAQ3oB,QAAQ4oB,QAChB,KACAE,GAAoBlvB,EAAAA,EAAAA,cAAYjE,IAAmB,IAAlB,SAAEwsB,GAAUxsB,EACjD6yB,EAAYrG,EAAS,GACpB,IAEGuJ,EAAU,CACd,CACE/0B,KAAM,OACNg1B,OAAQ,OACRE,YAAa,EACbC,aAAc,GACdC,OAAQh2B,IAAA,IAAC,KAAE8P,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMlP,MAAW,GAE/C,CACEA,KAAM,WACNg1B,OAAQ,YACRE,YAAa,EACbC,aAAc,GACdC,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMq/B,UAAe,GAEnD,CACEvuC,KAAM,QACNg1B,OAAQ,QACRE,YAAa,EACbC,aAAc,GACdC,OAAQ5zB,IAAA,IAAC,KAAE0N,GAAM1N,EAAA,OAAKzK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMuT,OAAY,GAEhD,CACEziB,KAAM,gBACNg1B,OAAQ,gBACRE,YAAa,EACbC,aAAc,GACdC,OAAQz3B,IAAA,IAAC,KAAEuR,GAAMvR,EAAA,OACf5G,EAAAA,EAAAA,KAAA,OAAAE,SAA8B,OAApB,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMu/B,eAAwB,MAAQ,MAAW,GAG3D,CACEzuC,KAAM,WACNg1B,OAAQ,aACRE,YAAa,EACbC,aAAc,GACdC,OAAQj3B,IAAA,IAAC,KAAE+Q,GAAM/Q,EAAA,OACfpH,EAAAA,EAAAA,KAAA,OAAAE,SACO,OAAJiY,QAAI,IAAJA,GAAAA,EAAM+S,SAAW/S,EAAK+S,SAAStiB,KAAKlD,GAASA,IAAMioB,KAAK,MAAQ,IAC7D,KAgCZjsB,EAAAA,EAAAA,YAAU,KACRwV,QAAQC,IAAI+c,EAAU,6BACE,IAApBA,EAASnrB,QACXsL,GAAa,GACbwL,EAAYu3B,kBAAkB9+B,MAAMwI,IAClCi2B,EAAYj2B,EAAO3I,MACnBmiB,EAAexZ,EAAO3I,MACtB9D,GAAa,EAAM,KAGrB0iC,EAAY7iB,EACd,GACC,IACH,MAAO2f,EAAgBD,IAAqB3oC,EAAAA,EAAAA,UAAS,IAGjD6sC,EAAsBtrB,MAAMC,QAAQonB,GAAkBA,EAAiB,GAC7E,IAAIkE,GAAkBxrB,EAAAA,GAAAA,IAAc,IAAIurB,GAAsB,SAE5Dp2C,EAAAA,EAAAA,YAAU,KACRkyC,EAAkB1f,GAClBoG,EAAeyd,EAAgB,GAC9B,CAAC7jB,IAEJ,MAOMnU,GAAWC,EAAAA,EAAAA,MAUXg4B,EAAkBC,IACtB,MAAMC,EAAmBD,EACzBrsC,YAAW,KACTmU,EAAS,eAAgB,CACvBP,MAAO,CAAE24B,QAAQ,EAAMD,qBACvB,GACD,IAAI,EAGHE,EAA0BzJ,IAC9BtU,GAAgB,EAAK,GA+BvB34B,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EACJD,GAAehN,OAAOkN,KAAKF,GAAavzB,KAAKoF,GAAQmuB,EAAYnuB,KACnEgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEdx5B,EAAAA,EAAAA,YAAU,KACR,GAAIwyB,EAAU,CACZ,MAAMoI,EAAmBpI,EAAS/J,QAAQoS,GAEtB,KAAhB9B,GACA8B,EAAWtzB,KAAK6jB,cAAc9K,SAASyY,EAAY3N,gBACnDyP,EAAW7Q,MAAMoB,cAAc9K,SAASyY,EAAY3N,gBACpDyP,EAAWib,SAAS1qB,cAAc9K,SAASyY,EAAY3N,iBAG3D8mB,EAAkBtX,EACpB,IACC,CAAC7B,EAAavG,KACjBxyB,EAAAA,EAAAA,YAAU,KAAO,IAAD45B,EACUC,EAAAC,EAAV,QAAdF,EAAInB,SAAU,IAAAmB,GAAVA,EAAYhyB,SACdxJ,GAAa,GACbsU,EAAY,CACVtT,SAAoB,QAAZy6B,EAAEpB,SAAU,IAAAoB,OAAA,EAAVA,EAAYjyB,OACtBjI,KAAgB,QAAZm6B,EAAErB,SAAU,IAAAqB,OAAA,EAAVA,EAAYtwB,UAEpB2U,EAAYu3B,kBAAkB9+B,MAAMwI,IAClCi2B,EAAYj2B,EAAO3I,MACnBmiB,EAAexZ,EAAO3I,KAAK,KAG/BgiB,EAAa,CAAC,EAGdl0B,OAAOw1B,eAAiB,KACtBx1B,OAAOy1B,QAAQC,aAAa,CAAC,EAAGnwB,SAASmR,MAAM,CAChD,GACA,CAACwd,IAEJ,MAAM2C,EAAwBxD,IAC5BuB,EAAYvB,GACZ,MACME,EADiBuD,GAAoB8a,GACxBQ,CAAe,CAAElgC,KAAM+b,EAAU6jB,kBAAiBze,WAAU2D,iBAAkBH,EAAsBvD,gBACvHwd,EAAYvd,EAAWj4B,MAAM4W,MAC7By7B,EAAkBpa,EAAWj4B,MAAM4W,KAAK,EAG1C,OACEvX,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,eAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAvHqBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAsHpBxvB,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,WAAW,SAAQ5C,SAAA,EAC5DF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAxHjBo3B,OAwHuCl9B,SAAC,YAGnDF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEk8B,KAAM,MACpBr9B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QA3HasyC,KACvB1sC,YAAW,KACTmU,EAAS,eAAgB,CACvBP,MAAO,CAAE24B,QAAQ,IACjB,GACD,IAAI,EAsH6Bj4C,SAC3B,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QAzLoBw3B,KAC9Bwa,EAAejd,EAAa,GAAG,EAyLrB55B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAsB,OAAZo3B,QAAY,IAAZA,IAAAA,EAAchyB,OACxB/C,QAtMey3B,KACzB2a,EAAuBrd,EAAa,IACpCV,GAAgB,EAAK,EAqMXl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAnMeuyC,KACzBzB,GAAoB,EAAK,EAmMf31C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAIDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAxMewyC,KACzBlB,GAAoB,EAAK,EAwMfn2C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,eAIHU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,SACCkb,GACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,MAGnB2xC,IACE7zC,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAAO,CAAE2b,UAAW,KACpBihB,aAAc,IACdC,QAASA,EACPM,WAAyB,OAAbhF,EAAoBua,EAAiBkE,EAEnDxZ,gBAAc,EACd9J,SAAUA,EACV2G,kBAAmBA,EACnBoD,OAASzrB,GAASkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACxDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACnH7B,iBAAkBH,YAO7Bj9B,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CACbra,UAAWA,EACXC,SAAUA,EACVC,aAAcA,KAGhBE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAEFW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,gCAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,SAAC,kDAIrBU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAlMA+4B,KACxB1E,GAAgB,EAAM,EAiM6Bn6B,SAAC,YAG9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAjMS2F,UACvB0uB,GAAgB,GAChB,IACEhmB,GAAa,GACb6C,QAAQC,IAAI4jB,EAAc,gBAC1B,MAAMiE,EAAwB,OAAZjE,QAAY,IAAZA,OAAY,EAAZA,EAAcnyB,KAAKlD,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,WAC9CsT,EAAY44B,WAAWzZ,GAAW1mB,MAAMC,IAC5CrB,QAAQC,IAAIoB,EAAU,mBACtBlE,GAAa,GACbvU,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAElBsiB,EAAY,CAAC,GACbE,EAAgB,GAAG,GAEvB,CAAE,MAAO72B,GACP+S,QAAQ/S,MAAM,yBAA0BA,EAC1C,CACA0b,EAAYu3B,kBAAkB9+B,MAAMwI,IAClCi2B,EAAYj2B,EAAO3I,KAAK,GACxB,EA2KsCjY,SAAC,kBAGvCF,EAAAA,EAAAA,KAAC04C,GAAe,CACdrB,iBAAkBA,EAClBsB,wBAtQ0BA,KAC9BrB,GAAoB,EAAM,EAsQtBR,oBAAqBA,EACrBQ,oBAAqBA,EACrBvc,aAAcA,EACd7G,SAAUoF,GAA6C,IAAjCnK,OAAOkN,KAAK/C,GAAUvwB,OAAegvC,EAAkB7jB,KAC7El0B,EAAAA,EAAAA,KAAC44C,GAAe,CAChB/B,iBAAkBA,EAClBC,oBAAqBA,EACrBC,YAAaA,MAGL,EAIhB,MCpYM9c,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IACKi5B,GAAY,CAChBC,QAAS,CACPz/B,MAAO,YAII,SAASg3C,KAAe,IAADvlB,EAAAC,EAAAC,EACpC,MAAO5zB,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MACnC/E,GAAW+L,EAAAA,EAAAA,MACXkmC,EAAuB,QAAjB7kB,EAAGptB,EAASsZ,aAAK,IAAA8T,OAAA,EAAdA,EAAgB6kB,OACzBW,OAAoD98B,KAAvB,QAAduX,EAAArtB,EAASsZ,aAAK,IAAA+T,OAAA,EAAdA,EAAgB2kB,kBAA+C,QAAjB1kB,EAAGttB,EAASsZ,aAAK,IAAAgU,OAAA,EAAdA,EAAgB0kB,iBAAmB,CAAC,GACnGa,EAAUC,IAAe/tC,EAAAA,EAAAA,UAAS,CACvCsB,QAA4ByP,IAAxB88B,EAAaG,OAAuBH,EAAaG,OAAS1tB,KAAKC,MAAMqB,WACzE2qB,SAAUsB,EAAatB,SACvBvuC,KAAM6vC,EAAa7vC,KACnByiB,MAAOotB,EAAaptB,MACpBgsB,mBAA8C17B,IAA/B88B,EAAapB,cAA8BoB,EAAapB,cAAgB,IACvFxsB,cAAoClP,IAA1B88B,EAAa5tB,SAAyB4tB,EAAa5tB,SAAW,KAEpEzd,EAAU4zB,GAChB,IAAIthB,GAAWC,EAAAA,EAAAA,MACf,MAAMH,EAAc,IAAIC,EAAAA,EAiDlBo5B,EAAwB14C,IAC5B,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACfyV,EACH,CAAC9vC,GAAO0E,GAEVqrC,EAAY1V,EAAY,GAEnB6V,EAAWC,IAAgBnuC,EAAAA,EAAAA,UAAS6tC,EAAa5tB,UAAY,IAS9D8Y,EAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAOJ,OACEtK,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAMkvC,EAAS,YAAc,qBAE7Dn4C,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3F,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAAE,SAAKi4C,EAAS,YAAc,iBAC5Bv3C,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACpDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,SACCF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI3CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,OACL0E,MAAOorC,EAAS9vC,KAChB2E,SAAUsrC,EACV7rC,WAAS,EACTzF,OAAO,cAGX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,cACMF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIhDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,WAEL0E,MAAOorC,EAASvB,SAChB5pC,SAAUsrC,EACV7rC,WAAS,EACTzF,OAAO,cAIX5H,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,UACEF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAI5CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,QACLtF,SAAUw0C,EACVxqC,MAAOorC,EAASrtB,MAChB9d,SAAUsrC,EACV7rC,WAAS,EACTzF,OAAO,cAIXhH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,kBAAqB,KAC3BF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,UAGpCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,gBACHtD,KAAK,gBACLoE,WAAS,EACTM,MAAOorC,EAASrB,cAAgBqB,EAASrB,cAAgB,GACzD9pC,SAAUsrC,EAAqBh5C,SAE9BiwB,EAAAA,GAAqBvnB,KAAKgO,IACzB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAQ5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,eACOF,EAAAA,EAAAA,KAAA,QAAMuD,UAAWkK,EAAQ6zB,QAAQphC,SAAC,YAIjDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChBg2B,UAAQ,EACRppB,MAAOwrC,EAAUvwC,KAAKlD,GAASA,IAC/BkI,SAhHepN,IAC7B,MAAMo2B,EAAiBp2B,EAAMsN,OAAOH,MAC9B0rC,EAAgBnpB,EAAAA,GAAiB/F,QAAQvT,GAC7CggB,EAAe5U,SAASpL,KAE1BwiC,EAAaC,EAAc,EA4Gb7kB,YAAcC,GAAaA,EAAS9G,KAAK,MACzC4W,UAAW,CACT7jC,GAAI,CACF,mBAAoB,CAClB0O,gBAAiB,2BAGrBlP,SAEe,OAAhBgwB,EAAAA,SAAgB,IAAhBA,EAAAA,QAAgB,EAAhBA,EAAAA,GAAkBtnB,KAAKgO,IACtB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAclJ,MAAOiJ,EAAO1W,SAClC0W,GADYA,aAQvB5W,EAAAA,EAAAA,KAAA,UACAY,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtC,UAAU,cAAarD,UACrDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAnMM6vC,KAAO,IAADyD,EAAAC,EAAAC,EAAAC,EAC5B,GACgC,MAAb,QAAjBH,EAAAP,EAASvB,gBAAQ,IAAA8B,OAAA,EAAjBA,EAAmBnrC,UAClB4qC,EAASvB,UACgB,MAAb,QAAb+B,EAAAR,EAAS9vC,YAAI,IAAAswC,OAAA,EAAbA,EAAeprC,UACd4qC,EAAS9vC,MACiB,MAAb,QAAduwC,EAAAT,EAASrtB,aAAK,IAAA8tB,OAAA,EAAdA,EAAgBrrC,UACf4qC,EAASrtB,OACW,IAArBytB,EAAUpwC,QACyB,MAAb,QAAtB0wC,EAAAV,EAASrB,qBAAa,IAAA+B,OAAA,EAAtBA,EAAwBtrC,UACvB4qC,EAASrB,cAGV,YADA1T,EAAoB,kCAAmC,SAIzD,MAAM+R,EAAY,CAChBxpC,GAAIwsC,EAASxsC,GACbirC,SAAUuB,EAASvB,SACnBvuC,KAAM8vC,EAAS9vC,KACfyiB,MAAOqtB,EAASrtB,MAChBgsB,cAAeqB,EAASrB,cACxBxsB,SAAUiuB,GAERhB,EACFt4B,EAAY65B,WAAW,CAAExlB,SAAU6hB,IAAaz9B,MAAMotB,IAChC,YAAhBA,EAAKp8B,OACPsC,YAAW,KACTmU,EAAS,YAAa,CAAEP,MAAO,CAAEtU,QAASw6B,EAAKltB,IAAKlP,OAAQo8B,EAAKp8B,SAAW,GAC3E,KACsB,UAAhBo8B,EAAKp8B,QACd06B,EAAoB0B,EAAKltB,IAAKktB,EAAKp8B,OACrC,IAGFuW,EAAY85B,WAAW,CAAEzlB,SAAU6hB,IAAaz9B,MAAMotB,IAChC,YAAhBA,EAAKp8B,OACPsC,YAAW,KACTmU,EAAS,YAAa,CAAEP,MAAO,CAAEtU,QAASw6B,EAAKltB,IAAKlP,OAAQo8B,EAAKp8B,SAAW,GAC3E,KACsB,UAAhBo8B,EAAKp8B,QACd06B,EAAoB0B,EAAKltB,IAAKktB,EAAKp8B,OACrC,GAEJ,EAuJyCpJ,SAExBi4C,EAAS,SAAW,gBAI3Bn4C,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGtC,UAAU,cAAarD,UACrDF,EAAAA,EAAAA,KAAA,QAAAE,UACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRlE,MAAM,UACN+F,OAAO,MACP5B,QAxIG+/B,KACnBn6B,YAAW,KACTmU,GAAU,EAAE,GACX,IAAI,EAqI+B7f,SACvB,yBASXL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MAGX,CClQA,MAmBA,GAnBuB,CACrB,CACE+I,KAAM,YACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC45C,GAAQ,OAIf,CACE5wC,KAAM,eACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC64C,GAAW,QCkDpB,GApEgB,CACZ,cAAgB,CACZ,OAAS,CACL,WAAa,+FAEjB,YAAc,CACV,QAAU,CACN,IAAO,sBACP,MAAS,QACT,UAAa,aACb,MAAS,SACT,YAAe,mBAGvB,eAAiB,CACb,QAAU,CACN,iBAAoB,WACpB,IAAO,sBACP,UAAY,eAGpB,sBAAwB,CACpB,QAAU,CACN,IAAO,sBACP,iBAAoB,sBACpB,eAAkB,sBAG1B,gBAAkB,CACd,QAAU,CACN,IAAO,sBACP,kBAAqB,eACrB,QAAU,WACV,OAAS,UACT,SAAW,WACX,QAAU,WACV,YAAc,eACd,qBAAwB,mCAGhC,eAAiB,CACb,QAAU,CACN,IAAO,sBACP,qBAAwB,gBACxB,QAAU,WACV,KAAO,eACP,SAAW,WACX,QAAU,eACV,OAAS,UACT,OAAS,WAGjB,qBAAuB,CACnB,QAAU,CACN,IAAO,sBACP,mBAAsB,mBACtB,+BAAiC,0CAGzC,gBAAkB,CACd,QAAU,CACN,IAAO,sBACP,oBAAuB,+BACvB,qBAAuB,iCCmLvC,GArOyBl5C,IASlB,IAADk6C,EAAA,IAToB,KACxBv5C,EAAI,4BACJw5C,EAA2B,eAC3BC,EAAc,eACdC,EAAc,2BACdC,EAA0B,0BAC1BC,EAAyB,OACzB/B,EAAM,WACNlV,GACDtjC,EAEC,MAAM,cACJ6e,EAAa,mBACbnJ,IACEC,EAAAA,EAAAA,MAIG6kC,EAAgBC,IAAqBnvC,EAAAA,EAAAA,UAAS,KAC9CovC,EAAmBC,IAAwBrvC,EAAAA,EAAAA,UAAS,IAS3D,OARAvJ,EAAAA,EAAAA,YAAU,KACR,GAAIuhC,EAAY,CACd,IAAIsX,EAAW/7B,EAAc2L,QAAOqwB,IAAI,IAAAC,EAAA,OAAQ,OAAJD,QAAI,IAAJA,GAAQ,QAAJC,EAAJD,EAAM7kC,UAAE,IAAA8kC,OAAJ,EAAJA,EAAUz4B,SAASihB,EAAW,IAC1E/rB,QAAQC,IAAIojC,EAAU,8BACtBH,EAAkBG,EACpB,CACAD,EAAqB,CAACrX,GAAY,GACjC,CAACA,EAAYzkB,KAEd5d,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EAAKJ,SAAA,EACjBU,EAAAA,EAAAA,MAACkV,GAAAA,EAAW,CAAA5V,SAAA,CACT,IACAi4C,EAAS,8BAAgC,+BAE5Cn4C,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGvDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,OACLoE,WAAS,EACTM,MAAOs1B,EACPr1B,SAAUqsC,EACVt2C,UAAQ,EAAAzD,SAEU,OAAjBm6C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBzxC,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAclJ,MAAOiJ,EAAO1W,SAClC0W,GADYA,UAOrB5W,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,kBACUF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGjDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLvN,KAAK,0BACLoE,WAAS,EACTM,MAAOqsC,EAAeU,wBACtB9sC,SAAUqsC,EACVt2C,SAAUw0C,EAAOj4C,SAEF,OAAdi6C,QAAc,IAAdA,OAAc,EAAdA,EAAgBvxC,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOwiB,aAAal5B,SAC5D0W,EAAOwiB,cADKxiB,EAAOwiB,qBAO5Bp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAG5CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTknB,cAAY,EACZ5mB,WAAmCqO,IAA5Bg+B,EAAeW,SAAyBX,EAAeW,SAAW,IACzE/sC,SAAUqsC,EAA2B/5C,SAEpC+vB,EAAAA,GAAyBrnB,KAAKgO,IAC7B5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,YACIF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAG3CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,UACHtD,KAAK,UACLoE,WAAS,EACTknB,cAAY,EACZ5mB,WAAkCqO,IAA3Bg+B,EAAeY,QAAwBZ,EAAeY,QAAU,IACvEhtC,SAAUqsC,EAA2B/5C,SAEpC+vB,EAAAA,GAAyBrnB,KAAKgO,IAC7B5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,iBACSF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGhDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,eACHtD,KAAK,eACLoE,WAAS,EACTknB,cAAY,EACZ5mB,WAAuCqO,IAAhCg+B,EAAea,aAA6Bb,EAAea,aAAe,IACjFjtC,SAAUqsC,EAA2B/5C,SAEpC+vB,EAAAA,GAAyBrnB,KAAKgO,IAC7B5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAG5CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,WACHtD,KAAK,WACLoE,WAAS,EACTknB,cAAY,EACZ5mB,WAAmCqO,IAA5Bg+B,EAAec,SAAyBd,EAAec,SAAW,IACzEltC,SAAUqsC,EAA2B/5C,SAEpC+vB,EAAAA,GAAyBrnB,KAAKgO,IAC7B5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,kBACUF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGjDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,qBACHtD,KAAK,qBACLoE,WAAS,EACTknB,cAAY,EACZ5mB,WAA6CqO,IAAtCg+B,EAAee,mBAAmCf,EAAee,mBAAqB,IAC7FntC,SAAUqsC,EAA2B/5C,SAEpC+vB,EAAAA,GAAyBrnB,KAAKgO,IAC7B5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAoBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC9C0W,EAAOF,OADKE,EAAOjJ,cAO5B3N,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,WACGF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAG1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChBg2B,UAAQ,EACR9tB,KAAK,SACL0E,MAAOosC,EACPnsC,SAAUqsC,EACVzlB,YAAcC,GAAqB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU9G,KAAK,MAC1C4W,UAAW,CACT7jC,GAAI,CACF,mBAAoB,CAClB0O,gBAAiB,2BAGrBlP,SAEe,QAFf25C,EAjMSmB,MAAO,IAADC,EAC3B,OAAyB,OAAlB5lC,QAAkB,IAAlBA,GAAgE,QAA9C4lC,EAAlB5lC,EAAoBka,MAAMqN,GAAUA,EAAM9lB,SAAWmsB,WAAW,IAAAgY,OAA9C,EAAlBA,EAAkEz0B,SAAU,EAAE,EAkM1Ew0B,UAAgB,IAAAnB,OAAA,EAAhBA,EAAkBjxC,KAAKgO,IACtB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAwBlJ,MAAOiJ,EAAOimB,UAAU38B,SACtD0W,EAAOimB,WADKjmB,EAAOimB,uBAQhCj8B,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS8zC,EAA4B55C,SAAC,YAC9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASk0C,EAA0Bh6C,SACxCi4C,EAAS,SAAW,aAGlB,EC3ON,MAAM+C,GAAyB7b,WAAAA,GAEpC,KACA8b,mBAAqB,IACZ5b,GAAAA,EACJC,IACC,GAAGlP,EAAAA,kCACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,uBAAwB0J,GAC/B,MAEX,KAEFutC,sBAAyBC,GAChB9b,GAAAA,EACJU,OACC,GAAG3P,EAAAA,sCAAmD+qB,IACtDvqB,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,qCAAsCA,GAC9CA,CAAK,IAEf,KAEFm3C,sBAAyBnjC,GAChBonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,kCACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,kBAAmB0J,GAC1B,MAEX,KAEF0tC,sBAAyBpjC,GAChBonB,GAAAA,EACJO,IACC,GAAGxP,EAAAA,qCACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,qBAAsB0J,GAC7B,MAEX,KAEF2tC,kBAAqBrjC,GACZonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,gCACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,oBAAqB0J,GAC5B,MAEX,KAEF4tC,oBAAuBC,GACdnc,GAAAA,EACJU,OACC,GAAG3P,EAAAA,sCAAmDorB,IACtD5qB,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,sCAAuCA,GAC/CA,CAAK,IAIjB,KACAw3C,qBAAuB,IACdpc,GAAAA,EACJC,IACC,GAAGlP,EAAAA,sCACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,uBAAwB0J,GAC/B,KAEX,ECpIG,MAAM+tC,GAAmBvc,WAAAA,GAAA,KAC9Bwc,uBAAyB,IAChBtc,GAAAA,EACJC,IACC,GAAGlP,EAAAA,6CACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,uBAAwB0J,GAC/B,MAEX,KAEFiuC,sBAAyBT,GAChB9b,GAAAA,EACJU,OACC,GAAG3P,EAAAA,iDAA8D+qB,IACjEvqB,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,yCAA0CA,GAClDA,CAAK,IAEf,KAEF43C,sBAAyB5jC,GAChBonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,6CACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,sBAAuB0J,GAC9B,MAEX,KAEFmuC,sBAAyB7jC,GAChBonB,GAAAA,EACJO,IACC,GAAGxP,EAAAA,gDACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,yBAA0B0J,GACjC,MAEX,KAEFouC,0BAA6B9jC,GACpBonB,GAAAA,EACJI,KACC,GAAGrP,EAAAA,oDACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,6BAA8B0J,GACrC,KAEX,ECxDJ,MAIMoF,IAActQ,EAAAA,EAAAA,IAAOuQ,GAAAA,EAAPvQ,EAAc,MAC9B6D,WAAY,MACZ,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAE0I,YAAa,EAAGC,aAAc,KAEtD,UAAW,CACP,OAAQ,CAAE,OAAQ,CAAED,YAAa,EAAG3I,cAAe,oBAIrD4M,IAAsBxQ,EAAAA,EAAAA,IAAO,QAAPA,CAAgB,CACxCyQ,KAAM,gBACNC,SAAU,aACVzQ,OAAQ,EACR6D,SAAU,SACVzD,SAAU,WACVuG,OAAQ,EACRtG,KAAM,EACNuD,WAAY,SACZzF,MAAO,IA0aX,GAva8BQ,IAC1B,MAAM,iBACFkd,EAAgB,kBAEhBQ,EAAiB,mBACjB5J,IACAC,EAAAA,EAAAA,KAEE4D,EAAyB,IAAIC,GAAAA,GAC7B,eAAE+c,EAAc,kBAAEC,EAAiB,UAAE+lB,GAAc36C,GAElD2Z,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAEpCqJ,EAAaC,IAAkBtJ,EAAAA,EAAAA,WAAS,IACxCuJ,EAAgBC,IAAqBxJ,EAAAA,EAAAA,WAAS,IAE9CyJ,EAAeC,IAAoB1J,EAAAA,EAAAA,WAAS,IAC5C2J,EAAkBC,IAAuB5J,EAAAA,EAAAA,UAAS,OAClD6J,EAAkBC,IAAuB9J,EAAAA,EAAAA,UAAS,OAElD+J,EAAeC,IAAoBhK,EAAAA,EAAAA,UAAS,OAE5CorB,EAAcC,IAAmBrrB,EAAAA,EAAAA,WAAS,IAC1CsrB,EAAeC,IAAoBvrB,EAAAA,EAAAA,WAAS,IAC5CsK,EAASC,IAAcvK,EAAAA,EAAAA,WAAS,IAChCwK,EAAuBC,IAA4BzK,EAAAA,EAAAA,UAAS,CAC/DwrB,QAAS,GACTvhB,SAAU,GACVS,GAAI,MAED/V,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OA2KzCvJ,EAAAA,EAAAA,YAAU,KACN,IAAIy6C,EAAmB,KACvB,OAAa,OAAL56C,QAAK,IAALA,OAAK,EAALA,EAAO66C,aACX,IAAK,mBACDD,EAAmB,iCACnB,MACJ,IAAK,2BACDA,EAAmB,uCACnB,MACJ,IAAK,qBACDA,EAAmB,iCACnB,MACJ,IAAK,oBACDA,EAAmB,gCACnB,MACJ,IAAK,yBACDA,EAAmB,qCACnB,MACJ,IAAK,iBACDA,EAAmB,8BACnB,MACJ,IAAK,iBACDA,EAAmB,6BAK3BlnC,EAAiBknC,EAAiB,GACnC,CAAC56C,EAAM66C,cAUV,OACIx7C,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACIU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM41B,EACV/0B,MAAO,CACHW,OAAQ,KACV5B,SAAA,EACFF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAC9DqB,EAAMob,SAEX3c,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACVF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UACdF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC7BF,EAAAA,EAAAA,KAACiT,GAAW,CAAA/S,UACRU,EAAAA,EAAAA,MAACsV,GAAAA,EAAS,CAAAhW,SAAA,EACNU,EAAAA,EAAAA,MAACuV,GAAAA,EAAQ,CAAAjW,SAAA,EACLF,EAAAA,EAAAA,KAACoW,GAAAA,EAAS,CAACC,MAAM,OAAMnW,UACnBF,EAAAA,EAAAA,KAACuW,GAAAA,EAAU,CACPpV,MAAO,CACHC,WAAY,OACZS,MAAO,uBACT3B,SACL,2BAILU,EAAAA,EAAAA,MAACwV,GAAAA,EAAS,CAACC,MAAM,OAAMnW,SAAA,EACnBF,EAAAA,EAAAA,KAAC82B,GAAAA,EAAY,CACT31B,MAAO,CAAEJ,MAAO,OAChBg2B,UAAU,EACVC,QA3FnBL,KACrB,MAAMhW,EAAS,IAAIsW,IAoBnB,OAHkB,OAAlB5hB,QAAkB,IAAlBA,GAAAA,EAAoB8O,SAAQze,IACxBib,EAAOuW,IAAIxxB,EAAKixB,GAAQ,IAErBnK,MAAM2K,KAAKxW,EAAO,EAsEwByW,CAAgB,UAEzBzpB,MAAO8H,EAAsBE,GAC7B/H,SAAUA,CAACypB,EAAGC,KACVZ,OA5GTC,EA4GuC,KA5G/BC,EA4GqCU,EA3GhF5hB,GAA0BiB,IACf,IACAA,EACH,CAACggB,GAASC,MAGH,YAAXD,GAAwBL,GAAgB,GAC7B,aAAXK,GAAyBH,GAAiB,GAC/B,OAAXG,GAAmBnhB,GAAW,QAClC0B,QAAQsC,KAAK/D,EAAuB,yBAVFihB,IAACC,EAAQC,CA6GF,EACDpC,YAAaA,IAAM,KACnB+C,YAAcC,IACVx3B,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,IACFuqB,EACJzxB,QAAQ,WACR2Q,MAAM,aACNxJ,YAAY,cAGpB2I,WAAY,CACR1U,MAAO,CACHH,UAAW,UAGnBy2B,sBAAsB,EACtBC,kBAAgB,EAChBC,qBAAsBA,CAAC/gB,EAAQjJ,IAAUiJ,IAAWjJ,EACpDiqB,kBAAmBA,CAAChhB,EAAQjJ,IACxB8H,EAAsBE,GAAGqM,SAASrU,GAEtCkqB,UAAW,CACP12B,MAAO,CACH8F,SAAU,UAIrBsO,IAAYvV,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,6CAIjDU,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8N,WAAY,QAAS/O,SAAA,EAC/BU,EAAAA,EAAAA,MAACkF,EAAAA,EAAM,CAACgB,UAAU,QAAQf,QAAQ,YAAYgR,WAAW/W,EAAAA,EAAAA,KAACgX,GAAAA,EAAe,IAAI9W,SAAA,CAAC,eAE1EF,EAAAA,EAAAA,KAACmT,GAAmB,CAACjS,KAAK,OAAO+H,KAAK,OAAOgO,OAAO,cAAcrJ,SAnRlFC,IACpB,MAAMuJ,EAAOvJ,EAAEC,OAAOuJ,MAAM,GAC5B,GAAID,EAAM,CACN,MAAME,EAAWF,EAAKnO,KAAKsO,MAAM,KAAKC,MACrB,SAAbF,GAAoC,QAAbA,GAEvBzC,EAAoBhH,EAAEC,OAAOuJ,MAAM,IACnCtC,EAAoBlH,EAAEC,OAAOuJ,MAAM,GAAGpO,MACtCsL,GAAe,KAEfA,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,MAE5B,MACIN,GAAe,GACfQ,EAAoB,MACpBF,EAAoB,KACxB,OAmQiCP,IAAgBtU,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0CAEvB4U,IAAqB9U,EAAAA,EAAAA,KAAA,KAAAE,SAAI4U,KAC1B9U,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAE8N,WAAY,QAAS/O,UAO/BF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACgB,UAAU,QAAQf,QAAQ,YAAYgR,WAAW/W,EAAAA,EAAAA,KAAC83B,GAAAA,EAAiB,IAAK9xB,QAnF7F0R,KACnBwB,EAAuBvB,mBAAmB3C,EAAc,EAkFgF9U,SAAC,uCAWjIU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAtRA+xB,KAC9BljB,EAAoB,MACpBshB,GAAkB,EAAM,EAoRyCj2B,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QApRKiyB,KACzB,GAAiC,OAA7BxiB,EAAsBE,IAAeF,EAAsBE,GAAG5M,OAAS,EACvEyM,GAAW,QAIf,GAAyB,OAArBZ,GAA6BA,EAAiB7L,OAAS,EACvDwL,GAAe,QAGnB,GAAyB,OAArBK,EAA2B,CAC3B,IAAIsD,EAAW,CACX,KAAQtD,EACRuD,KAAM,CACFxC,GAAIF,EAAsBE,GAC1BymC,YAAkB,OAAL76C,QAAK,IAALA,OAAK,EAALA,EAAO66C,cAO5B/nC,GAAa,GACb6E,EAAuBgd,eAAehe,GAAUI,MAAMC,IAElD9D,EAAkB8D,GAClB5D,GAAiB,GACjBE,EAAoB,MACpBE,EAAoB,MACpBohB,GAAkB,GAClB,IAAI90B,EAAO,CAAC,EACRP,EAAS,GACTyX,GAAgC,UAApBA,EAASjP,QACrBjI,GACIT,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAEU,MAAO,OAAQ3B,SAAA,CAChB,OAARqY,QAAQ,IAARA,OAAQ,EAARA,EAAUC,IAAI,KAACxY,EAAAA,EAAAA,KAAA,UACP,OAARuY,QAAQ,IAARA,OAAQ,EAARA,EAAUO,wBACPlY,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,CAAE,yBACyBqY,EAASO,qBAAqB,KAAC9Y,EAAAA,EAAAA,KAAA,SAAM,mBAC7CA,EAAAA,EAAAA,KAAA,UACfA,EAAAA,EAAAA,KAAA,MAAAE,SACKqY,EAASK,gBAAgBhQ,KAAKmQ,IAC3B/Y,EAAAA,EAAAA,KAAA,MAAAE,SAA8B6Y,GAArB7P,KAAAA,oBAMhB,OAARqP,QAAQ,IAARA,OAAQ,EAARA,EAAUS,qBACPpY,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,CAAE,sBACsBqY,EAASS,kBAAkB,KAAChZ,EAAAA,EAAAA,KAAA,SAAM,gBAC1CA,EAAAA,EAAAA,KAAA,UACZA,EAAAA,EAAAA,KAAA,MAAAE,SACKqY,EAASM,cAAcjQ,KAAKmQ,IACzB/Y,EAAAA,EAAAA,KAAA,MAAAE,SAA8B6Y,GAArB7P,KAAAA,sBAOjCpI,EAAW,SAEPyX,EAAS2f,WAAa,IAAO3f,EAAS4f,mBAAqB5f,EAASU,iBACpE5X,GACIT,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAEU,MAAO,OAAQ3B,SAAA,CAAC,YAClBF,EAAAA,EAAAA,KAAA,SAAM,uBACOuY,EAAS4f,iBAAiB,KAACn4B,EAAAA,EAAAA,KAAA,SAAM,qBACnCuY,EAASU,gBAAgB,KAACjZ,EAAAA,EAAAA,KAAA,SAC5CuY,EAAS2f,WAAa,IAAKt3B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,CAAE,sBAAoBqY,EAAS2f,WAAW,KAACl4B,EAAAA,EAAAA,KAAA,eAG/Ec,EAAW,UAEXO,GACIT,EAAAA,EAAAA,MAAA,OAAAV,SAAA,CACKqY,EAASC,IAAI,KAACxY,EAAAA,EAAAA,KAAA,SAAM,uBACAuY,EAAS4f,iBAAiB,KAACn4B,EAAAA,EAAAA,KAAA,SAAM,qBACnCuY,EAASU,gBAAgB,KAACjZ,EAAAA,EAAAA,KAAA,YAGrDc,EAAW,WAInBhB,GAAa,GACbsU,EAAY,CACRtT,SAAUA,EACVO,KAAMA,IAEVgT,GAAa,GACI,UAAbvT,IACS,OAARyX,QAAQ,IAARA,GAAAA,EAAUO,sBAAiC,OAARP,QAAQ,IAARA,GAAAA,EAAUS,oBAC9CiG,GAAkB,GAClBi9B,KACJ,GAER,GAmLkDh8C,SAAC,iBAyE7CL,GACEG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EAAcY,GAAI,CAAE,wBAAyB,CAAE0O,gBAAiB,WACvIpP,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGDib,GACIlb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAChCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,KAAMuZ,OAElBlb,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MAET,ECpeLo8C,IAAyBh+B,EAAAA,EAAAA,eAAc,CACzCi+B,oBAAqB,GACrBC,uBAAwBA,IAAM,KA2BlC,MC1BA,GAFuBC,KAAMl3B,EAAAA,EAAAA,YAAW+2B,ICDlCI,IAA0Bp+B,EAAAA,EAAAA,eAAc,CAC5Cq+B,qBAAsB,GACtBC,uBAAwBA,IAAM,KA2BhC,MC1BA,GAF4BC,KAAMt3B,EAAAA,EAAAA,YAAWm3B,ICDvCI,IAA2Bx+B,EAAAA,EAAAA,eAAc,CAC3Cy+B,sBAAuB,GACvBC,wBAAyBA,IAAM,KA2BnC,MCzBA,GAF6BC,KAAM13B,EAAAA,EAAAA,YAAWu3B,ICFxCI,IAAqB5+B,EAAAA,EAAAA,eAAc,CACvC6+B,aAAc,GACdC,mBAAoBA,IAAM,KA2B5B,MCxBA,GAFoBC,KAAM93B,EAAAA,EAAAA,YAAW+3B,ICH/BC,IAAiBj/B,EAAAA,EAAAA,eAAc,CACjCk/B,aAAc,GACdC,mBAAoBA,IAAM,KA2B9B,MCzBA,GAFmBC,KAAMn4B,EAAAA,EAAAA,YAAWg4B,ICF9BI,IAAwBr/B,EAAAA,EAAAA,eAAc,CACxCs/B,eAAgB,GAChBC,iBAAkBA,IAAM,KA2B5B,MCzBA,GAFsBC,KAAMv4B,EAAAA,EAAAA,YAAWo4B,ICwYvC,GA3W+Bn8C,IAE7B,MAAMy0B,EAAc,IAAIC,GAAAA,GACjBoC,EAAgBC,IAAqBrtB,EAAAA,EAAAA,WAAS,IAC9CytB,EAAeC,IAAoB1tB,EAAAA,EAAAA,WAAS,IAC5C2tB,EAAgBC,IAAqB5tB,EAAAA,EAAAA,WAAS,IAC9CqO,EAAcif,IAAmBttB,EAAAA,EAAAA,UAAS,KAC3C,cAAEuT,EAAa,cAAED,EAAa,qBAAEG,IAAyBpJ,EAAAA,EAAAA,MACzD,oBAAEgnC,GAAwBE,MAC1B,qBAAEE,GAAyBE,MAC3B,sBAAEE,GAA0BE,MAC5B,aAAEE,GAAiBE,MACnB,aAAEG,GAAiBE,MACnB,eAAEE,GAAmBE,MACpBlwC,EAAO8qB,IAAYxtB,EAAAA,EAAAA,UAAS,YAG5BrL,EAAWE,IADOyB,EAAMy3B,oBACG/tB,EAAAA,EAAAA,WAAS,KACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MACzC,IAAIyU,EAAKvK,aAAaC,QAAQ,iBAmB9B,SAAS0oC,EAAc7uB,GACrB,OAAOA,GAAmC,IAA5BE,OAAOkN,KAAKpN,GAAKlmB,QAAgBkmB,EAAIoQ,cAAgBlQ,MACrE,EAEAztB,EAAAA,EAAAA,YAAU,KAAO,IAAD+wC,EAEV/zB,GACFA,EAAqByF,SAAQ8H,IAC3B,MAAMkB,EAAUlB,EAASkB,QACrBA,IACFA,EAAQ4wB,uBAAyB5wB,EAAQ4wB,sBAAsBrxB,MAAK,CAACpJ,EAAGqJ,KACtE,MAAM3e,EAAMsV,EAAE06B,uBAAyB,yBAA2B,uBAClE,OAAO16B,EAAEtV,GAAO2e,EAAE3e,IAAQ,EAAIsV,EAAEtV,GAAO2e,EAAE3e,GAAO,EAAI,CAAC,IAGvDmf,EAAQ8wB,kBAAoB9wB,EAAQ8wB,iBAAiBvxB,MAAK,CAACpJ,EAAGqJ,IACrDrJ,EAAEsL,gBAAkBjC,EAAEiC,iBAAmB,EAAItL,EAAEsL,gBAAkBjC,EAAEiC,gBAAkB,EAAI,IAGlGzB,EAAQ+wB,wBAA0B/wB,EAAQ+wB,uBAAuBxxB,MAAK,CAACpJ,EAAGqJ,IACjErJ,EAAE46B,uBAAyBvxB,EAAEuxB,wBAA0B,EAAI56B,EAAE46B,uBAAyBvxB,EAAEuxB,uBAAyB,EAAI,IAEhI,IAIJ,IAAIC,EAAc58C,EAAM66C,YAEJ,sBAAhB+B,GAAuCL,EAAmB,OAALv8C,QAAK,IAALA,OAAK,EAALA,EAAO+3B,YAC9D/3B,EAAM+3B,SAASO,IAAM,EACrBt4B,EAAM+3B,SAASrwB,KAAO,oBACtB1H,EAAM+3B,SAASK,WAAa,qBAEV,6BAAhBwkB,GAA8CL,EAAmB,OAALv8C,QAAK,IAALA,OAAK,EAALA,EAAO+3B,YACrE/3B,EAAM+3B,SAASO,IAAM,EACrBt4B,EAAM+3B,SAASrwB,KAAO,sBACtB1H,EAAM+3B,SAASK,WAAa,uBAEV,uBAAhBwkB,GAAwCL,EAAmB,OAALv8C,QAAK,IAALA,OAAK,EAALA,EAAO+3B,YAC/D/3B,EAAM+3B,SAASO,IAAM,EACrBt4B,EAAM+3B,SAASrwB,KAAO,iBACtB1H,EAAM+3B,SAASK,WAAa,kBAOV,2BAAhBwkB,GAA4CL,EAAmB,OAALv8C,QAAK,IAALA,OAAK,EAALA,EAAO+3B,YACnE/3B,EAAM+3B,SAASO,IAAM,EACrBt4B,EAAM+3B,SAASrwB,KAAO,wBACtB1H,EAAM+3B,SAASK,WAAa,yBAEV,mBAAhBwkB,GAAoCL,EAAmB,OAALv8C,QAAK,IAALA,OAAK,EAALA,EAAO+3B,YAC3D/3B,EAAM+3B,SAASO,IAAM,EACrBt4B,EAAM+3B,SAASrwB,KAAO,mBACtB1H,EAAM+3B,SAASK,WAAa,oBAE9B,IAAIykB,EAAcD,GAAez/B,EAAuBA,EAAqByL,QAC1EzkB,GAASA,EAAK02C,cAAgB+B,IAAe,GA0BlC,YAAVxwC,GAAuBpM,EAAM+3B,UAC/B8kB,EAAY1xB,MAAK,CAACpJ,EAAGqJ,KAAO,IAAD0xB,EAAAC,EACzB,MAAM5kB,EAAQn4B,EAAM+3B,SAAS/sB,IAAMhL,EAAM+3B,SAASrwB,MAAQ1H,EAAM+3B,SAASK,WACnEG,GAAiB,QAARukB,EAAA/6B,EAAEoW,UAAM,IAAA2kB,OAAA,EAARA,EAAUvxB,gBAAiB,GACpCkN,GAAiB,QAARskB,EAAA3xB,EAAE+M,UAAM,IAAA4kB,OAAA,EAARA,EAAUxxB,gBAAiB,GAC1C,OAAIgN,EAASE,EACmB,IAAvBz4B,EAAM+3B,SAASO,KAAa,EAAI,EAErCC,EAASE,EACmB,IAAvBz4B,EAAM+3B,SAASO,IAAY,GAAK,EAElC,CAAC,IAIZ,IAAI1hB,EAAiB,YAAVxK,EAAsBywC,EAAmB,OAAL78C,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBACtD7gB,EAAW,QAAPs6B,EAAGt6B,SAAI,IAAAs6B,OAAA,EAAJA,EAAMtoB,QAAOzkB,GAAQA,EAAK64C,OAAShgC,IAE1C,IAmFAwQ,EAnFiB5W,EAAKvP,KAAIlD,IACxB,GAAoB,qBAAhBy4C,GAA0D,WAApBz4C,EAAK0uC,WAAyB,CAAC,IAADoK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAiBtE,MAhBU,CACR,gBAAqB,OAAJp5C,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,OAAT,EAAJA,EAAe9D,wBAChC,sBAAuBh1C,EAAK64C,KAC5B,WAAgB,OAAJ74C,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,OAAT,EAAJA,EAAe9D,SAC3B,UAAe,OAAJj1C,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,OAAT,EAAJA,EAAe9D,QAC1B,eAAoB,OAAJl1C,QAAI,IAAJA,GAAa,QAATi5C,EAAJj5C,EAAMynB,eAAO,IAAAwxB,OAAT,EAAJA,EAAe9D,aAC/B,SAAgB,OAAJn1C,QAAI,IAAJA,GAAa,QAATk5C,EAAJl5C,EAAMynB,eAAO,IAAAyxB,OAAT,EAAJA,EAAe9D,SAC3B,eAAoB,OAAJp1C,QAAI,IAAJA,GAAa,QAATm5C,EAAJn5C,EAAMynB,eAAO,IAAA0xB,OAAT,EAAJA,EAAe9D,sBACxB,OAAJr1C,QAAI,IAAJA,GAAa,QAATo5C,EAAJp5C,EAAMynB,eAAO,IAAA2xB,OAAT,EAAJA,EAAexS,OAStB,CAAwF,IAADyS,EAAAC,EAWNC,EAAAC,EAUDC,EAAAC,EASKC,EAAAC,EA9B9E,GAAoB,6BAAhBnB,GAAkE,WAApBz4C,EAAK0uC,WAC5D,OAAmB,QAAnB2K,EAAOr5C,EAAKynB,eAAO,IAAA4xB,GAAuB,QAAvBC,EAAZD,EAAchB,6BAAqB,IAAAiB,OAAvB,EAAZA,EAAqCp2C,KAAI,CAAC22C,EAAOz2C,KAC5C,CACR,eAA0B,IAAVA,EAAcpD,EAAKynB,QAAQqyB,oBAAsB,KACjE,wBAAyBD,EAAMvB,uBAC/B,UAAWuB,EAAMj2C,OACjB,sBAA+B,IAARR,EAAUpD,EAAK64C,KAAK,SAK1C,GAAoB,uBAAhBJ,GAA4D,WAApBz4C,EAAK0uC,WACtD,OAAmB,QAAnB6K,EAAOv5C,EAAKynB,eAAO,IAAA8xB,GAAuB,QAAvBC,EAAZD,EAAclB,6BAAqB,IAAAmB,OAAvB,EAAZA,EAAqCt2C,KAAI,CAAC22C,EAAOz2C,KAC5C,CACR,mBAA8B,IAAVA,EAAcpD,EAAKynB,QAAQsyB,eAAiB,KAChE,wBAAyBF,EAAMG,qBAC/B,gBAAiBH,EAAMI,cACvB,sBAA+B,IAAR72C,EAAUpD,EAAK64C,KAAK,SAI1C,GAAoB,sBAAhBJ,GAA2D,WAApBz4C,EAAK0uC,WACrD,OAAmB,QAAnB+K,EAAOz5C,EAAKynB,eAAO,IAAAgyB,GAAkB,QAAlBC,EAAZD,EAAclB,wBAAgB,IAAAmB,OAAlB,EAAZA,EAAgCx2C,KAAI,CAAC22C,EAAOz2C,KACvC,CACR,sBAAiC,IAAVA,EAAcpD,EAAKynB,QAAQyyB,kBAAoB,KACtE,oBAAqBL,EAAM3wB,gBAC3B,sBAA+B,IAAR9lB,EAAUpD,EAAK64C,KAAK,SAI1C,GAAoB,2BAAhBJ,GAAgE,WAApBz4C,EAAK0uC,WAC1D,OAAmB,QAAnBiL,EAAO35C,EAAKynB,eAAO,IAAAkyB,GAAwB,QAAxBC,EAAZD,EAAcnB,8BAAsB,IAAAoB,OAAxB,EAAZA,EAAsC12C,KAAI,CAAC22C,EAAOz2C,KAC7C,CACR,+BAA0C,IAAVA,EAAcpD,EAAKynB,QAAQ0yB,sBAAwB,KACnF,6BAA8BN,EAAMrB,uBACpC,sBAA+B,IAARp1C,EAAUpD,EAAK64C,KAAK,SAI1C,GAAoB,mBAAhBJ,GAAwD,WAApBz4C,EAAK0uC,WAAyB,CAc3E,MAZU,CAMRllB,OAAQxpB,EAAKynB,QAAQ+B,UAClBC,OAAOkN,KAAK32B,EAAKynB,QAAQ2yB,OAAOpzB,OAAOyZ,QAAO,CAACC,EAAKp4B,KACrDo4B,EAAIp4B,GAAOtI,EAAKynB,QAAQ2yB,MAAM9xC,GACvBo4B,IACN,CAAC,GAGR,CAAO,GAAoB,mBAAhB+X,GAAwD,WAApBz4C,EAAK0uC,WAAyB,CAM3E,MALU,CACR,SAAY1uC,EAAKynB,QAAQ4yB,iBACzB,sBAAuBxhC,KACpB7Y,EAAKynB,QAAQ6yB,eAGpB,KAGsBC,OAAO91B,QAAOzkB,GAAiB,OAATA,QAA0BsW,IAATtW,IAEnE6yB,EAAgBxJ,EAAW,GACtB,CAACxQ,EACFC,EACA89B,EACAI,EACAI,EACAI,EACAK,EACAI,EACAhwC,EACA+Q,EACAnd,EAAMy3B,mBACNz3B,EAAM+3B,WAuDR,OACE14B,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QApR6B8yB,KACjCR,GAAkB,EAAK,EAmRiBp4B,SACrC,YAGDU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+3B,EAAen4B,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,UAChCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,UACjCU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAAApW,SAAA,EACVF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAS,CAACxsB,GAAG,sCAAqCrM,SAAC,2BACpDU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACT,kBAAgB,sCAChBxQ,KAAK,iCACL0E,MAAOA,EACPC,SA7BApN,IACpBi4B,EAASj4B,EAAMsN,OAAOH,MAAM,EA4BezN,SAAA,EAEvBF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,UAAUkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,cAC5D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,eAAekM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,qCAUjF9V,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAlTQizB,KAChCX,GAAkB,EAAM,EAiTmCp4B,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA5FakzB,KAE3B,GAAI5f,EAAc,CAChB,IAAI4mC,EAAa5mC,EACG,sBAAhB/X,EAAMob,QACRujC,GAAapxB,EAAAA,GAAAA,IAAmBxV,IAEd,0BAAhB/X,EAAMob,QACkB,qBAAtBpb,EAAM66C,aAAsC0B,EAAmB,OAALv8C,QAAK,IAALA,OAAK,EAALA,EAAO+3B,YACnE/3B,EAAM+3B,SAASO,IAAM,EACrBt4B,EAAM+3B,SAASrwB,KAAO,0BACtB1H,EAAM+3B,SAASK,WAAa,2BAE1Bp4B,EAAM+3B,UACR4mB,EAAWxzB,MAAK,CAACpJ,EAAGqJ,KAAO,IAADwzB,EAAAC,EACxB,IAAI1mB,EAAQn4B,EAAM+3B,SAAS/sB,IAAMhL,EAAM+3B,SAASrwB,MAAQ1H,EAAM+3B,SAASK,WAEzD,4BAAVD,IACFA,EAAQ,iBAEV,MAAMI,GAAiB,QAARqmB,EAAA78B,EAAEoW,UAAM,IAAAymB,OAAA,EAARA,EAAUrzB,gBAAiB,GACpCkN,GAAiB,QAARomB,EAAAzzB,EAAE+M,UAAM,IAAA0mB,OAAA,EAARA,EAAUtzB,gBAAiB,GAC1C,OAAIgN,EAASE,EACmB,IAAvBz4B,EAAM+3B,SAASO,KAAa,EAAI,EAErCC,EAASE,EACmB,IAAvBz4B,EAAM+3B,SAASO,IAAY,GAAK,EAElC,CAAC,KAId7D,EAAYqC,eAAe,CAAE,KAAQ6nB,EAAY,WAAc3+C,EAAMob,MAAMmR,UAAU,EAAG,IAAK,eAAkBpO,IAAMpH,MAAMC,IACzHsgB,EAAkBtgB,GAtPtBogB,GAAiB,GAyPb74B,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAChB,GAEN,CACA8f,GAAkB,EAAM,EAiDoBp4B,SAAC,iBAsBzCL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACJ,EC9WDg6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAsnBD,GArnB6Bi4C,KAC3B,MAAM,YAAE1hC,IAAgBrJ,EAAAA,EAAAA,MAClB,cACJkJ,EAAa,cACbD,EAAa,mBACblJ,EAAkB,qBAClBqJ,EAAoB,oBACpBE,EAAmB,2BACnBI,IACE1J,EAAAA,EAAAA,MAEGmlB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1Cq1C,EAAqBC,IAA0Bt1C,EAAAA,EAAAA,WAAS,IACxD+uC,EAAgBwG,IAAqBv1C,EAAAA,EAAAA,UAAS,CAAC,IAC/CirB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9C8uC,EAAgB3W,IAAqBn4B,EAAAA,EAAAA,UAAS,IAC/Cw1C,EAAqB,IAAI7E,GACzBh8B,EAAiB,IAAIzG,GAAAA,EACrBunC,EAAkB,IAAIxF,IACrByF,EAAuBC,IAA4B31C,EAAAA,EAAAA,aACnDktC,EAAQ0I,IAAa51C,EAAAA,EAAAA,WAAS,IAC9B61C,EAAgBC,IAAqB91C,EAAAA,EAAAA,UAAS,KAC9C8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,KAC1CiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAEpCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnC+1C,EAAwBC,IAA6Bh2C,EAAAA,EAAAA,UAAS,IAC/DgwB,GAAUnpB,EAAAA,EAAAA,QAAO,OAChBwnB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,CAAC,GACpCiwB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,KAC5FgmB,EAA2B1gD,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAM1B4B,GAAoBA,KACxB1E,GAAgB,EAAM,EAmBlB2J,GAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAyHE4uC,GAA8BA,KAClCyG,GAAuB,GACvBC,EAAkB,IAClBpd,EAAkB,IAClBpI,EAAgB,IAChBF,EAAY,CAAC,GACb+lB,GAAU,EAAM,EAgHZ3E,GAAYA,KAChB7nC,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAM,GACnB,EAEE+mB,IAAoBlvB,EAAAA,EAAAA,cAAYjE,IAAmB,IAAlB,SAAEwsB,GAAUxsB,EACjD6yB,EAAYrG,EAAS,GACpB,KAEH/yB,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEdx5B,EAAAA,EAAAA,YAAU,KACR2S,EAAasK,EAAY,GACxB,CAACA,IACJ,MAAOwiC,GAAeC,KAAoBn2C,EAAAA,EAAAA,UAAS,KAC5Co2C,GAAqBC,KAA0Br2C,EAAAA,EAAAA,UAAS,IAEzDs2C,IAA6Bh1B,EAAAA,GAAAA,IAAc40B,GAAe,4BAEhEz/C,EAAAA,EAAAA,YAAU,KACR8/C,IAAgB,GACf,KAEH9/C,EAAAA,EAAAA,YAAU,KAER,GADA2S,GAAa,GACTqK,EAAsB,CACxB,IAAI+iC,EAAmB/iC,EAKH,IAADgjC,EAKoBC,EALvC,GAJAF,EAAmBA,EAAiBt3B,QACjCzkB,GAA8B,qBAArBA,EAAK02C,aAA0D,WAApB12C,EAAK0uC,aAGxD71B,EACFkjC,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBv3B,QAAQC,GACpCA,EAAMm0B,OAAShgC,IAG1B,GAAIkc,GAA+B,KAAhBA,EACjBgnB,EAAmC,QAAnBE,EAAGF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBx3B,QAAQC,IAAW,IAADw3B,EAAAC,EAAAC,EACrD,OACuB,QAArBF,EAAA/2B,KAAKk3B,UAAU33B,UAAM,IAAAw3B,OAAA,EAArBA,EAAuB5/B,SAASyY,MACX,QADuBonB,EAC5Ch3B,KAAKk3B,UAAU33B,UAAM,IAAAy3B,GAAqB,QAArBC,EAArBD,EAAuBG,2BAAmB,IAAAF,OAArB,EAArBA,EAA4C9/B,SAASyY,GAAY,IAIvE,GAAIumB,EAAuBj4C,OAAS,EAAG,CACrC,MAAMk5C,EAA8BjB,EAAuB72B,QAAQ7M,GAAgC,oBAAjBA,EAAE8+B,cAChF6F,EAA4Bl5C,OAAS,GAAoD,qBAA/Ck5C,EAA4B,GAAG7F,aAC3EqF,EAAiBt9B,SAAQ+9B,IACvBD,EAA4B,GAAGE,QAAQh+B,SAAQi+B,IAC7C,GAAIF,EAAuB,mBAAME,EAAS,GAAG,CAC3CF,EAAK/0B,QAAQk1B,mCAAqCD,EAAKj1B,QAAQutB,0BAA4BwH,EAAK/0B,QAAQutB,wBAA0B0H,EAAKj1B,QAAQutB,wBAA0B,KACzKwH,EAAK/0B,QAAQm1B,oBAAsBF,EAAKj1B,QAAQwtB,WAAauH,EAAK/0B,QAAQwtB,SAAWyH,EAAKj1B,QAAQwtB,SAAW,KAC7GuH,EAAK/0B,QAAQo1B,mBAAqBH,EAAKj1B,QAAQytB,UAAYsH,EAAK/0B,QAAQytB,QAAUwH,EAAKj1B,QAAQytB,QAAU,KACzGsH,EAAK/0B,QAAQq1B,wBAA0BJ,EAAKj1B,QAAQ0tB,eAAiBqH,EAAK/0B,QAAQ0tB,aAAeuH,EAAKj1B,QAAQ0tB,aAAe,KAC7HqH,EAAK/0B,QAAQs1B,oBAAsBL,EAAKj1B,QAAQ2tB,WAAaoH,EAAK/0B,QAAQ2tB,SAAWsH,EAAKj1B,QAAQ2tB,SAAW,KAC7GoH,EAAK/0B,QAAQu1B,8BAAgCN,EAAKj1B,QAAQ4tB,qBAAuBmH,EAAK/0B,QAAQ4tB,mBAAqBqH,EAAKj1B,QAAQ4tB,mBAAqB,KACrJmH,EAAK/0B,QAAQw1B,aAAe,CAAC,EAC7B,IAAK,IAAI30C,KAAOk0C,EAAK/0B,QAAQmf,OAC3B4V,EAAK/0B,QAAQw1B,aAAa30C,GAAOo0C,EAAKj1B,QAAQmf,OAAOt+B,KAASk0C,EAAK/0B,QAAQmf,OAAOt+B,GAAOo0C,EAAKj1B,QAAQmf,OAAOt+B,GAAO,IAExH,IACA,GAGR,CAEApC,YAAW,KACTm1C,EAAkBU,GAClB,IAAItpC,EAAOspC,EAAiB74C,KAAIlD,IAAS,IAAD84C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAE,EAAAE,EAAAE,EAAAuD,EAAAC,EAAAC,EAmBtC,OAlBAp9C,EAA8B,wBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,GAAbA,EAAe6D,mCAAyC,OAAJ38C,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,OAAT,EAAJA,EAAe4D,mCAAyC,OAAJ38C,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,OAAT,EAAJA,EAAehE,wBACzJh1C,EAAe,SAAQ,OAAJA,QAAI,IAAJA,GAAa,QAATi5C,EAAJj5C,EAAMynB,eAAO,IAAAwxB,GAAbA,EAAe2D,oBAC9B,GAAO,OAAJ58C,QAAI,IAAJA,GAAa,QAATk5C,EAAJl5C,EAAMynB,eAAO,IAAAyxB,OAAT,EAAJA,EAAe0D,sJAA0J,OAAJ58C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQwtB,kBAClL,OAAJj1C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQwtB,SAClBj1C,EAAc,QAAQ,OAAJA,QAAI,IAAJA,GAAa,QAATm5C,EAAJn5C,EAAMynB,eAAO,IAAA0xB,GAAbA,EAAe0D,mBAAqB,GAAO,OAAJ78C,QAAI,IAAJA,GAAa,QAATo5C,EAAJp5C,EAAMynB,eAAO,IAAA2xB,OAAT,EAAJA,EAAeyD,qJAAyJ,OAAJ78C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQytB,iBACnO,OAAJl1C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQytB,QAClBl1C,EAAmB,aAAQ,OAAJA,QAAI,IAAJA,GAAa,QAATq5C,EAAJr5C,EAAMynB,eAAO,IAAA4xB,GAAbA,EAAeyD,wBAA0B,GAAO,OAAJ98C,QAAI,IAAJA,GAAa,QAATu5C,EAAJv5C,EAAMynB,eAAO,IAAA8xB,OAAT,EAAJA,EAAeuD,0JAA8J,OAAJ98C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQ0tB,sBAClP,OAAJn1C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQ0tB,aAClBn1C,EAAe,SAAQ,OAAJA,QAAI,IAAJA,GAAa,QAATy5C,EAAJz5C,EAAMynB,eAAO,IAAAgyB,GAAbA,EAAesD,oBAAsB,GAAO,OAAJ/8C,QAAI,IAAJA,GAAa,QAAT25C,EAAJ35C,EAAMynB,eAAO,IAAAkyB,OAAT,EAAJA,EAAeoD,sJAA0J,OAAJ/8C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQ2tB,kBACtO,OAAJp1C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQ2tB,SAClBp1C,EAAyB,mBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAATk9C,EAAJl9C,EAAMynB,eAAO,IAAAy1B,GAAbA,EAAeF,8BAAgC,GAAO,OAAJh9C,QAAI,IAAJA,GAAa,QAATm9C,EAAJn9C,EAAMynB,eAAO,IAAA01B,OAAT,EAAJA,EAAeH,gKAAoK,OAAJh9C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQ4tB,4BACpQ,OAAJr1C,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,QAAQ4tB,mBAElB5rB,OAAOkN,KAAS,OAAJ32B,QAAI,IAAJA,GAAa,QAATo9C,EAAJp9C,EAAMynB,eAAO,IAAA21B,OAAT,EAAJA,EAAexW,QAAQ1jC,KAAIg0B,IAAU,IAADmmB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC1C,OAAJ19C,QAAI,IAAJA,GAAa,QAATq9C,EAAJr9C,EAAMynB,eAAO,IAAA41B,GAAbA,EAAeJ,aAAej9C,EAAKk3B,GAAa,OAAJl3B,QAAI,IAAJA,GAAa,QAATs9C,EAAJt9C,EAAMynB,eAAO,IAAA61B,GAAbA,EAAeL,aAAa/lB,GAAS,GAAO,OAAJl3B,QAAI,IAAJA,GAAa,QAATu9C,EAAJv9C,EAAMynB,eAAO,IAAA81B,OAAT,EAAJA,EAAeN,aAAa/lB,sIAA8I,OAAJl3B,QAAI,IAAJA,GAAa,QAATw9C,EAAJx9C,EAAMynB,eAAO,IAAA+1B,OAAT,EAAJA,EAAe5W,OAAO1P,YAAsB,OAAJl3B,QAAI,IAAJA,GAAa,QAATy9C,EAAJz9C,EAAMynB,eAAO,IAAAg2B,OAAT,EAAJA,EAAe7W,OAAO1P,GACpTl3B,EAAKk3B,GAAa,OAAJl3B,QAAI,IAAJA,GAAa,QAAT09C,EAAJ19C,EAAMynB,eAAO,IAAAi2B,OAAT,EAAJA,EAAe9W,OAAO1P,EAAM,IAGzCl3B,CAAI,IAEb47C,GAAuBG,GACvBL,GAAiBjpC,GACjB9D,GAAa,EAAM,GAClB,IACL,KACK,CACkB,IAADgvC,EAApB,IAAK9kC,EACHK,EAAoBgR,EAAAA,GAAwB,QAAfyzB,EAAGzzB,EAAAA,GAAU,UAAE,IAAAyzB,OAAA,EAAZA,EAAc11C,MAAQ,GAE1D,IACC,CAAC+Q,EAAsBH,EAAekc,EAAaumB,IAEtD,MAAMQ,GAAiBA,KACrBntC,GAAa,GACbqsC,EAAgBvF,qBAAqB7iC,MAAMwI,IACzC,IAAIy9B,EAAOhgC,GAAgC,eAC3C,GAAIuC,EAAO3I,KAAM,CACf,IAAI4W,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,GAAyB,iBAAjB1oB,EAAQ0oB,OAChF0C,EAA0BlyB,EAC5B,MACEkyB,EAA0B,IAE5B5sC,GAAa,EAAM,GACnB,EAeJ,OACEzT,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,+BAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,MAAK5C,SAAA,EAE1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAUszC,EACVvzC,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAtarBo3B,OAsa2Cl9B,SAAC,mBAQzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAASwgD,QAAQ,WAAWniD,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAChFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,UACrFF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEqF,WAAY,SAAUyI,WAAY,QAAS/O,SAAC,4BAE9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,QAAS/B,UACpFF,EAAAA,EAAAA,KAACm0B,EAAY,CACXvmB,SAAUszC,EACV7sB,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,QAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACb6F,EAAY,CAAC,GACbE,EAAgB,IAEhBpc,EAAoBqW,GACpByF,EAAe,GAAG,UAS1B95B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE+I,UAAW,MAAOjI,UAAW,SAAU/B,SAAA,EACzGF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QA9TqBw9C,KACjChD,EAAkB,CAAEjC,KAAMhgC,IAC1B6kB,EAAkB,IAClBmd,GAAuB,EAAK,EA4ThBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,SAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACX35B,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QAlTqBy9C,KAAO,IAADC,EAAAC,EACvC,MAAMC,EAAiC,QAAlBF,EAAG3oB,EAAa,UAAE,IAAA2oB,OAAA,EAAfA,EAAiBv2B,QACnCoxB,EAAsB,QAAlBoF,EAAG5oB,EAAa,UAAE,IAAA4oB,OAAA,EAAfA,EAAiBpF,KAC9B,IAAK,MAAMvwC,KAAsB,QAAnB61C,EAAI9oB,EAAa,UAAE,IAAA8oB,GAAS,QAATC,EAAfD,EAAiB12B,eAAO,IAAA22B,OAAT,EAAfA,EAA0BxX,OAAQ,CAAC,IAADuX,EAAAC,EAAAC,EAAAC,EACJ,OAA3B,QAAfD,EAAAhpB,EAAa,UAAE,IAAAgpB,GAAS,QAATC,EAAfD,EAAiB52B,eAAO,IAAA62B,OAAT,EAAfA,EAA0B1X,OAAOt+B,KACnC+rC,EAAe/tC,KAAKgC,EAExB,CACAwyC,EAAkB,IACboD,EACHrF,SAGFsC,GAAU,GACVN,GAAuB,EAAK,EAqShBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACX35B,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAExB/C,QAhUay3B,KACzBmjB,EAAyB7lB,EAAa,IACtCV,GAAgB,EAAK,EA+TTl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPmwB,GAAkB,EAAK,EAEzBh1B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAIDF,EAAAA,EAAAA,KAACikD,GAAmB,CAClBtnC,MAAO,wBACPy/B,YAAa,mBACbpjB,mBAAoB+B,EACpBzB,SAAUA,WAMhBt5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAI1E,MAAO,CAAE+I,UAAW,QAAShK,UAC9CU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAzhBE,CAAE2b,UAAW,KA0hBfkhB,QAvVY8iB,KAC1B,IAAIoD,EAAkB,IAAIjtB,IACtB6pB,GAAkBA,EAAe/3C,OAAS,GAC5C+3C,EAAe38B,SAASggC,IAAc,IAADC,EACnC,MAAM59B,EAAyB,QAAnB49B,EAAGD,EAASh3B,eAAO,IAAAi3B,OAAA,EAAhBA,EAAkB9X,OACjC,GAAI9lB,EAAQ,CACQ2I,OAAOkN,KAAK7V,GACpBrC,SAASyY,IACjBsnB,EAAgBhtB,IAAI0F,EAAM,GAE9B,KAIJ,MAAMynB,EAAe73B,MAAM2K,KAAK+sB,GAAiBt7C,KAAKg0B,IAC7C,CACL3zB,KAAM2zB,EACNqB,OAAQrB,EACRwB,aAAc,IACdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,aA8DrD,MA1DgB,CACd,CACE1E,KAAM,0BACNm1B,aAAc,IACdH,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQihC,qBAAqBzkD,SAAC,kBAC5Fm+B,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAInD,CACE1E,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQkhC,IAAI1kD,SAAC,wBAC3Ek+B,aAAc,KAEhB,CACEn1B,KAAM,WACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQmhC,QAAQ3kD,SAAC,aAC/Ek+B,aAAc,IACdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,UACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQohC,OAAO5kD,SAAC,YAC9Ek+B,aAAc,IACdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,eACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQqhC,KAAK7kD,SAAC,iBAC5Ek+B,aAAc,IACdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,WACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQo3B,SAAS56C,SAAC,aAChFk+B,aAAc,IACdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,qBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQshC,QAAQ9kD,SAAC,iBAC/Ek+B,aAAc,IACdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,aAGhD02C,EAGS,EAqQSY,CAAmBnE,IAAmB,GAE/CxiB,WAAyB,OAAbhF,EAAoB+nB,GAAsBE,GACtD2D,UAAW,KACX3mB,gBAAc,EACdR,aAAc,IACdtJ,SAAUA,EACV2G,kBAAmBA,GACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrD4hC,SAjJC7rC,IAAe,IAAd,KAAE8P,GAAM9P,EACxB,MAAM8rC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IACvD,MAAO,CACL6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC7D,EA4IagK,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACjH7B,iBA5IY3D,IAC5BuB,EAAYvB,EAAS,cAmJhBz5B,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAEPW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CACf,mFAAmF,KAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAyB,OAArBygD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBpC,QAChHv+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEskD,GAASC,cAAcvzC,OAAOi0C,iBAGhDvkD,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+4B,GAAkB7+B,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA5iBgB2F,UAC9B,UACQ80C,EAAmBxE,0BAA0B,CAAE9jC,KAAM4iB,IAAgBziB,MAAKwI,IAC9Eie,KACA/D,EAAgB,IAChB4lB,EAAyB,IACzB9lB,EAAY,CAAC,EAAE,GAEnB,CAAE,MAAO32B,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CACA6/B,GAAoB,wCAAyC,WAC7DkY,KACA7hB,GAAgB,EAAM,EA+hByBn6B,SAAC,kBAI9CF,EAAAA,EAAAA,KAAColD,GAAgB,CACf9kD,KAAMggD,EACN+E,0BA3Z4BA,KAChC9E,GAAuB,EAAM,EA2ZzBzG,4BAA6BA,GAC7BE,eAAgBA,EAChBC,2BA1hB8Bz5C,IAClC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OAiB9B,GAfa,SAAT7E,GAEFm6B,EAAkB,IAGP,4BAATn6B,IAEFu3C,EAAkB,IACbxG,EACH,KAAQz7B,IAEV6kB,EAAkB,KAIP,WAATn6B,EACFm6B,EAAkBz1B,OAEb,CAEL,MAAM21B,EAAc,IACf0W,EACH,CAAC/wC,GAAO0E,GAEV6yC,EAAkBld,EACpB,GA+fI4W,0BA5f4BA,KAAO,IAADe,EACtC,MAAMqK,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GACCA,EAASmN,eAAiB4gB,EAAeU,0BAEvCM,GACc,OAAlB3lC,QAAkB,IAAlBA,GAAyE,QAAvD4lC,EAAlB5lC,EAAoBka,MAAMqN,GAAUA,EAAM9lB,SAAWkjC,EAAeuE,cAAK,IAAAtD,OAAvD,EAAlBA,EAA2Ez0B,SAC3E,GAEI++B,EAAgB,CAAC,EAOvB,GAJAvK,EAAe72B,SAASyY,IACtB,MAAMC,EAAYD,EAAMC,UACxB0oB,EAAc1oB,GAA2B,OAAdkd,QAAc,IAAdA,GAAAA,EAAgB/3B,SAAS6a,GAAa,IAAM,GAAG,KAGzEmd,EAAeU,0BACfV,EAAeuE,OACF,OAAdxE,QAAc,IAAdA,OAAc,EAAdA,EAAgBhxC,QAAS,EAEzBi7B,GAAoB,mCAAoC,aAL1D,CASA,GAAIgW,EAAgB,CAClB,MAAMwL,EAAqB,CACzBjH,KAAMvE,EAAeuE,KACrBnC,YAAa,mBACb7vC,GAAI+4C,EAAW,GAAG/4C,GAAK,IAAMytC,EAAeuE,KAAKpwC,OACjDgf,QAAS,CACPutB,wBAAyBV,EAAeU,wBACxCC,cAAsC3+B,IAA5Bg+B,EAAeW,SAAyBX,EAAeW,SAAW,IAC5EE,kBAA8C7+B,IAAhCg+B,EAAea,aAA6Bb,EAAea,aAAe,IACxFC,cAAsC9+B,IAA5Bg+B,EAAec,SAAyBd,EAAec,SAAW,IAC5EC,wBAA0D/+B,IAAtCg+B,EAAee,mBAAmCf,EAAee,mBAAqB,IAC1GH,aAAoC5+B,IAA3Bg+B,EAAeY,QAAwBZ,EAAeY,QAAU,IACzE6K,2BAA4BH,EAAW,GAAG/4C,GAC1C+/B,OAAQiZ,KAGG,IAAXpN,EACFsI,EACG1E,sBAAsByJ,GACtBltC,MAAMotB,IACgB,aAAb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACR4yC,KACAtwC,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KACHvc,GAAoB,wCAAyC,YACnC,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,IAGJioC,EACGzE,sBAAsBwJ,GACtBltC,MAAMotB,IACe,YAAhBA,EAAKp8B,QACPsC,YAAW,KACT20C,GAAuB,GACvBiB,KACAtF,IAAW,GACV,KACH2E,GAAU,GACV7c,GACE,0CACA,YAEwB,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,GAGR,CACAshC,IArDA,CAqD6B,EAibzBC,eAAgBA,EAChB5B,OAAQA,EACRlV,WAAY1kB,KAGdve,EAAAA,EAAAA,KAAC0lD,GAAoB,CACnB/oC,MAAO,uCACPy/B,YAAa,mBACbnZ,WAAY1kB,EACZ2X,eAAgBA,EAChBgmB,UAAWA,GACX/lB,kBAAmBA,MAEV,EC5oBjB,GALgCwvB,KAExB3lD,EAAAA,EAAAA,KAACqgD,GAAoB,ICU7B,GAXyB,CACvB,CACEr3C,KAAM,kBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC2lD,GAAuB,Q,gBCahC,MAAMC,GAAY,CAAE9oC,UAAW,KAmQ/B,GAlQ2Bnd,IAgBpB,IAhBqB,KAC1BW,EAAI,4BACJw5C,EAA2B,eAC3BE,EAAc,2BACdC,EAA0B,qBAC1B4L,EAAoB,OACpB1N,EAAM,mBACN2N,EAAkB,kBAClB1qB,EAAiB,SACjB3G,EAAQ,kBACR4lB,EAAiB,qBACjBC,EAAoB,UACpByL,EAAS,IACTnB,EAAG,YACHoB,EAAW,mBACXC,GACDtmD,EACC,MAAO46C,EAAU2L,IAAej7C,EAAAA,EAAAA,UAAS,KAClCk7C,EAAwBC,IAA6Bn7C,EAAAA,EAAAA,UAAS,CAAC,IACtEiiB,EAAAA,GAAAA,IAAmCqtB,EAAU,4BAE7C74C,EAAAA,EAAAA,YAAU,KACR,GAAkB,OAAds4C,QAAc,IAAdA,GAAAA,EAAgBuE,KAAM,CACM,OAAdvE,QAAc,IAAdA,GAAAA,EAAgBuE,KAChCjE,EAAqB,CAACsK,GACxB,MACEtK,EAAqB,CAACsK,IAGxB,GAAIkB,EAAoB,CACtB,MAAMO,EAAgC,OAAlBP,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB37B,QAAQC,IAClC,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOm0B,QAASqG,IAErBoB,GACFK,EAAYz9C,KAAIlD,IAAS,IAAD4gD,EAMtB,OALW,OAAXN,QAAW,IAAXA,GAAoB,QAATM,EAAXN,EAAa74B,eAAO,IAAAm5B,GAApBA,EAAsBvI,sBAAsBn1C,KAAI22C,IAC1C75C,EAAKynB,QAAQutB,0BAA4B6E,EAAMvB,yBACjDt4C,EAAK4D,OAASi2C,EAAMj2C,OACtB,IAEK5D,CAAI,IAIf,IAAI6gD,EAAUF,EAAYz9C,KAAIlD,IACZ,IAAKA,KAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMynB,aAEhC,GAENjW,QAAQC,IAAIovC,EAAS,8BAErBL,EAAYK,EACd,IACC,CAACT,EAAoB9L,KAExBt4C,EAAAA,EAAAA,YAAU,KACRwV,QAAQC,IAAI4uC,EAAW,YAAY,GAClC,IAEH,MAAM9qB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBksB,EAAU,CACd,CAAE/0B,KAAM,KAAMg1B,OAAQ,KAAMuoB,gBAAgB,EAAOpoB,aAAc,GAAIl9B,KAAM,UAC3E,CACE+H,KAAM,0BACNm1B,aAAc,IACdH,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQihC,qBAAqBzkD,SAAC,4BAC5Fm+B,OAAQp2B,IAAA,IAAAw+C,EAAA,IAAC,KAAEtuC,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,GAAa,QAATsuC,EAAJtuC,EAAMgV,eAAO,IAAAs5B,OAAT,EAAJA,EAAe/L,yBAA8B,GAE3E,CACEzxC,KAAM,WACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQmhC,QAAQ3kD,SAAC,aAC/Ek+B,aAAc,IACdC,OAAQh2B,IAAA,IAAAq+C,EAAA,IAAC,KAAEvuC,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,GAAa,QAATuuC,EAAJvuC,EAAMgV,eAAO,IAAAu5B,OAAT,EAAJA,EAAe/L,UAAe,GAE5D,CACE1xC,KAAM,eACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQqhC,KAAK7kD,SAAC,SAC5Ek+B,aAAc,IAEdC,OAAQ9zB,IAAA,IAAAo8C,EAAA,IAAC,KAAExuC,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,GAAa,QAATwuC,EAAJxuC,EAAMgV,eAAO,IAAAw5B,OAAT,EAAJA,EAAe9L,cAAmB,GAEhE,CACE5xC,KAAM,WACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQo3B,SAAS56C,SAAC,aAChFk+B,aAAc,IAEdC,OAAQ5zB,IAAA,IAAAm8C,EAAA,IAAC,KAAEzuC,GAAM1N,EAAA,OAAKzK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,GAAa,QAATyuC,EAAJzuC,EAAMgV,eAAO,IAAAy5B,OAAT,EAAJA,EAAe9L,UAAe,GAE5D,CACE7xC,KAAM,qBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQshC,QAAQ9kD,SAAC,aAC/Ek+B,aAAc,IAEdC,OAAQz3B,IAAA,IAAAigD,EAAA,IAAC,KAAE1uC,GAAMvR,EAAA,OAAK5G,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,GAAa,QAAT0uC,EAAJ1uC,EAAMgV,eAAO,IAAA05B,OAAT,EAAJA,EAAe9L,oBAAyB,GAEtE,CACE9xC,KAAM,UACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQohC,OAAO5kD,SAAC,YAC9Ek+B,aAAc,IAEdC,OAAQj3B,IAAA,IAAA0/C,EAAA,IAAC,KAAE3uC,GAAM/Q,EAAA,OAAKpH,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,GAAa,QAAT2uC,EAAJ3uC,EAAMgV,eAAO,IAAA25B,OAAT,EAAJA,EAAelM,SAAc,GAE3D,CACE3xC,KAAM,SACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQpa,OAAOpJ,SAAC,WAC9Ek+B,aAAc,IACdC,OAAQ/2B,IAAe,IAADy/C,EAAAC,EAAAC,EAAAC,EAAA,IAAb,KAAE/uC,GAAM7Q,EACf,OACEtH,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACsW,GAAAA,EAAW,CAAApW,UACVU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACTC,KAAG,EACH,kBAAgB,qCAChBzQ,KAAU,OAAJkP,QAAI,IAAJA,GAAa,QAAT4uC,EAAJ5uC,EAAMgV,eAAO,IAAA45B,OAAT,EAAJA,EAAerM,wBAErB/sC,MAASw4C,EAA2B,OAAJhuC,QAAI,IAAJA,GAAa,QAAT6uC,EAAJ7uC,EAAMgV,eAAO,IAAA65B,OAAT,EAAJA,EAAetM,yBAA2F,QAAnEuM,EAAKd,EAA2B,OAAJhuC,QAAI,IAAJA,GAAa,QAAT+uC,EAAJ/uC,EAAMgV,eAAO,IAAA+5B,OAAT,EAAJA,EAAexM,gCAAwB,IAAAuM,OAAA,EAA/DA,EAAkE94C,OAAS,SACtJP,SAAWC,IACT,MAAMs5C,EAAgB,IACjBhB,EACH,CAACt4C,EAAEC,OAAO7E,MAAO4E,EAAEC,OAAOH,OAE5By4C,EAA0Be,GAC1BlB,EAAmBp4C,EAAE,EACrB3N,SAAA,EAEFF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,SAASkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,YAC3D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,WAAWkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,kBAG7D,IAiBd,OANAhV,EAAAA,EAAAA,YAAU,KACR,GAAIskD,EAAa,CAAC,IAADoB,EACf,MAAMC,EATcn5B,KACtB,IAAIo5B,EAAS,CAAC,EAId,OAHAp5B,EAAM/J,SAAQze,IAAS,IAAD6hD,EACpBD,EAAW,OAAJ5hD,QAAI,IAAJA,OAAI,EAAJA,EAAMs4C,wBAA8B,OAAJt4C,QAAI,IAAJA,GAAY,QAAR6hD,EAAJ7hD,EAAM4D,cAAM,IAAAi+C,OAAR,EAAJA,EAAcz6B,aAAa,IAE7Dw6B,CAAM,EAIWE,CAA0B,OAAXxB,QAAW,IAAXA,GAAoB,QAAToB,EAAXpB,EAAa74B,eAAO,IAAAi6B,OAAT,EAAXA,EAAsBrJ,uBAC3DqI,EAA0BiB,EAC5B,IACC,CAACrB,KAEFplD,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EACZ+M,WAAW,EACXjD,SAAS,KAAIlK,SAAA,EAEbU,EAAAA,EAAAA,MAACkV,GAAAA,EAAW,CAAA5V,SAAA,CACT,IACAi4C,EACG,kCACA,qCAENn4C,EAAAA,EAAAA,KAACynD,GAAAA,GAAU,CACTC,YAAU,EACVC,cAAe,IACfC,cAAe,IACfC,UAAQ,EACRC,gBAAiB,IACjBnvC,iBAAkB,IAAIzY,UAEtBF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC5BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,4BAIRU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,OACLoE,WAAS,EACTM,MAAOi3C,EACPh3C,SAAUqsC,EACVt2C,UAAU,EAAKzD,SAEG,OAAjBm6C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBzxC,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAclJ,MAAOiJ,EAAO1W,SAClC0W,GADYA,OAMP,OAATmvC,QAAS,IAATA,GAAAA,EAAWgC,UAAa/nD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACvBF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAW,OAAT6lD,QAAS,IAATA,OAAS,EAATA,EAAWgC,cAClC/nD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,QAGZD,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAIRU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLvN,KAAK,sBACLoE,WAAS,EACTM,MAAOqsC,EAAewF,oBACtB5xC,SAAUqsC,EACVt2C,SAAUw0C,EAAOj4C,SAER,OAARq6C,QAAQ,IAARA,OAAQ,EAARA,EAAU3xC,KAAI,CAACgO,EAAQ9N,KACtB9I,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAalJ,MAAOiJ,EAAOuW,QAAQutB,wBAAwBx6C,SACjE0W,EAAOuW,QAAQutB,yBADH5xC,OAMP,OAATi9C,QAAS,IAATA,GAAAA,EAAWiC,eAAkBhoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAC5BF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAW,OAAT6lD,QAAS,IAATA,OAAS,EAATA,EAAWiC,mBAClChoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,QAIZD,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,yBACiB,UAGzBU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,CAElB,OAAT6lD,QAAS,IAATA,GAAAA,EAAWkC,uBAA0BjoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACpCF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAW,OAAT6lD,QAAS,IAATA,OAAS,EAATA,EAAWkC,2BAClCjoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAEVD,EAAAA,EAAAA,KAACkoD,GAAAA,GAAa,CACZrqB,WAAW,KACXC,eAAe,EACfU,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmiB,SAAUA,EACV8J,gBAAgB,EAChBnD,kBAAmBA,EACnB+sB,uBAAuB,EACvBhnD,MAAO,IAAKykD,GAAWhjD,OAAQ,SAC/Bo7B,QAASA,EACTM,WAAYic,EACZ9b,YAAU,eAMpB79B,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS8zC,EAA4B55C,SAAC,YAC9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS6/C,EAAqB3lD,SACnCi4C,EAAS,SAAW,aAIlB,EC1PPle,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAwnBD,GAtnBqCggD,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzC,MAAM,YACJlqC,EAAW,cACXH,EAAa,cACbD,EAAa,qBACbG,EAAoB,oBACpBE,EAAmB,2BACnBI,IACE1J,EAAAA,EAAAA,MAEG4gB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1Cq1C,EAAqBC,IAA0Bt1C,EAAAA,EAAAA,WAAS,GACzD2U,EAAiB,IAAIzG,GAAAA,EACrBsnC,EAAqB,IAAI7E,GACzB8E,EAAkB,IAAIxF,IACrB4N,EAAiBC,IAAsB99C,EAAAA,EAAAA,UAAS,KAChD01C,EAAuBC,IAA4B31C,EAAAA,EAAAA,aACnDktC,EAAQ0I,IAAa51C,EAAAA,EAAAA,WAAS,IAC9B+uC,EAAgBwG,IAAqBv1C,EAAAA,EAAAA,UAAS,CAAC,IAE/C8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,KAC1C+9C,EAAgBC,IAAqBh+C,EAAAA,EAAAA,UAAS,KAC9CiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnCi+C,EAAuBC,IAA4Bl+C,EAAAA,EAAAA,UAAS,CAAC,IAC7DovC,EAAmBC,KAAwBrvC,EAAAA,EAAAA,UAAS,KACpD86C,GAAWqD,KAAgBn+C,EAAAA,EAAAA,UAAS,CAAC,IACrC25C,GAAKyE,KAAUp+C,EAAAA,EAAAA,UAAS,KACxBq+C,GAAcC,KAAmBt+C,EAAAA,EAAAA,UAAS,CAAC,IAC3C+1C,GAAwBC,KAA6Bh2C,EAAAA,EAAAA,UAAS,KAC9DrL,GAAWE,KAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,GAAUuU,KAAenJ,EAAAA,EAAAA,UAAS,OAClCquB,GAAUuB,KAAe5vB,EAAAA,EAAAA,UAAS,CAAC,GACpCgwB,IAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,GAAUD,IAAWA,GAAQ3oB,SAAW2oB,GAAQ3oB,QAAQ4oB,QAAUD,GAAQ3oB,QAAQ4oB,QAAU,KAS5F6D,GAAoBA,KACxB1E,GAAgB,EAAM,EAGlB2J,GAAsBA,CAAC94B,EAASpK,KACpChB,IAAa,GACbsU,GAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAGE8yB,GAAU,CACd,CACE/0B,KAAM,sBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAe,OAAR6nC,SAAQ,IAARA,IAAuB,QAAf6D,EAAR7D,GAAUC,qBAAa,IAAA4D,GAAiB,QAAjBC,EAAvBD,EAAyBmB,uBAAe,IAAAlB,GAAS,QAATC,EAAxCD,EAA0C5kC,eAAO,IAAA6kC,OAAzC,EAARA,EAAmDkB,kBAAkBvpD,SAAC,iBAC9Fk+B,aAAc,IACdC,OAAQp2B,IAAA,IAAC,KAAEkQ,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMqnC,qBAA0B,GAE9D,CACEv2C,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAe,OAAR6nC,SAAQ,IAARA,IAAuB,QAAfgE,EAARhE,GAAUC,qBAAa,IAAA+D,GAAiB,QAAjBC,EAAvBD,EAAyBgB,uBAAe,IAAAf,GAAS,QAATC,EAAxCD,EAA0C/kC,eAAO,IAAAglC,OAAzC,EAARA,EAAmD/D,qBAAqBzkD,SAAC,mCACjGi+B,YAAa,EACburB,UAAU,EACVrrB,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAe,OAAR6nC,SAAQ,IAARA,IAAuB,QAAfmE,EAARnE,GAAUC,qBAAa,IAAAkE,GAAiB,QAAjBC,EAAvBD,EAAyBa,uBAAe,IAAAZ,GAAS,QAATC,EAAxCD,EAA0CllC,eAAO,IAAAmlC,OAAzC,EAARA,EAAmDjE,IAAI1kD,SAAC,wBAChFi+B,YAAa,EACbC,aAAc,KA+HZ0b,GAA8BA,KAClCyG,GAAuB,GACvBC,EAAkB,IAClBxlB,EAAgB,IAChBF,EAAY,CAAC,GACbquB,EAAyB,CAAC,GAC1BC,GAAa,CAAC,GACdvI,GAAU,EAAM,EA4CZ3E,GAAYA,KAChB7nC,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAM,GACnB,GAGJ3S,EAAAA,EAAAA,YAAU,KACR2S,EAAasK,EAAY,GACxB,CAACA,IACJ,MAAOwiC,GAAeC,KAAoBn2C,EAAAA,EAAAA,UAAS,KAC5Co2C,GAAqBC,KAA0Br2C,EAAAA,EAAAA,UAAS,KAE/DvJ,EAAAA,EAAAA,YAAU,KACR8/C,IAAgB,GACf,IAEH,MAAMA,GAAiBA,KACrBntC,GAAa,GACbqsC,EAAgBvF,qBAAqB7iC,MAAMwI,IACzC,IAAIy9B,EAAOhgC,GAAgC,eACvCwQ,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,IAChE0C,GAA0BlyB,GAC1B1a,GAAa,EAAM,GACnB,GAGJ3S,EAAAA,EAAAA,YAAU,KAER,GADA2S,GAAa,GACTqK,EAAsB,CACxB,IAAI+iC,EAAmB/iC,EAMH,IAADgjC,EAKoBC,EALvC,GAJAF,EAAmBA,EAAiBt3B,QACjCzkB,GAA8B,6BAArBA,EAAK02C,aAAkE,WAApB12C,EAAK0uC,aAGhE71B,EACFkjC,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBv3B,QAAQC,GACpCA,EAAMm0B,OAAShgC,IAG1B,GAAIkc,GAA+B,KAAhBA,EACjBgnB,EAAmC,QAAnBE,EAAGF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBx3B,QAAQC,IAAW,IAADw3B,EAAAC,EAAAC,EACrD,OACuB,QAArBF,EAAA/2B,KAAKk3B,UAAU33B,UAAM,IAAAw3B,OAAA,EAArBA,EAAuB5/B,SAASyY,MACX,QADuBonB,EAC5Ch3B,KAAKk3B,UAAU33B,UAAM,IAAAy3B,GAAqB,QAArBC,EAArBD,EAAuBG,2BAAmB,IAAAF,OAArB,EAArBA,EAA4C9/B,SAASyY,GAAY,IAKvE,GADAsuB,EAAmBtH,GACfT,GAAuBj4C,OAAS,EAAG,CACrC,MAAM4gD,EAA2B3I,GAAuB72B,QAAQ7M,GAAgC,4BAAjBA,EAAE8+B,cAC7EuN,EAAyB5gD,OAAS,GAAiD,6BAA5C4gD,EAAyB,GAAGvN,aACrEqF,EAAiBt9B,SAAQ+9B,IACvByH,EAAyB,GAAGxH,QAAQh+B,SAAQi+B,IAC1C,GAAIF,EAAS,KAAME,EAAS,GAAG,CAC7BF,EAAK/0B,QAAQy8B,4BAA8BxH,EAAKj1B,QAAQ4wB,sBACxD,MAAM8L,EAAc,IAAI5yB,IAAImrB,EAAKj1B,QAAQ4wB,sBAAsBn1C,KAAI0U,GAAKA,EAAE0gC,0BACpE8L,EAAqB5H,EAAK/0B,QAAQ4wB,sBAAsB5zB,QAAO4/B,IAAMF,EAAYG,IAAID,EAAE/L,0BAC7FkE,EAAK/0B,QAAQ88B,qBAAuBH,EACpC,IAAII,EAAchI,EAAK/0B,QAAQy8B,4BAA4Bz/B,QAAOo1B,IAC7D2C,EAAK/0B,QAAQ4wB,sBAAsBphB,MAAKwtB,GACrC5K,EAAMvB,yBAA2BmM,EAAMnM,wBACvCuB,EAAMI,gBAAkBwK,EAAMxK,kBAGtCuC,EAAK/0B,QAAQi9B,iBAAmBF,EAChC,IAAIG,EAAuB,IAAInI,EAAK/0B,QAAQ4wB,yBAA2BmE,EAAK/0B,QAAQi9B,kBACpFlI,EAAK/0B,QAAQ4wB,sBAAwBsM,CACvC,IACA,GAGR,CACAnzC,QAAQC,IAAI,mBAAoBsqC,GAChC,IAAItpC,EAAOspC,EAAiB74C,KAAIlD,IAAS,IAAD84C,EAAAC,EAuBtC,OAtBA/4C,EAA0B,oBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,OAAT,EAAJA,EAAegB,oBAC7C95C,EAAW,KAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,OAAT,EAAJA,EAAeV,sBACzB5zB,QAAO,CAACyS,EAAO9zB,EAAOwhD,IACnBxhD,IAAUwhD,EAAKC,WAAU19C,GAAKA,EAAEmxC,yBAA2BphB,EAAMohB,2BAEpEp1C,KAAIg0B,IAAU,IAAD8hB,EACV,MAEM8L,IAFmB,OAAJ9kD,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,OAAT,EAAJA,EAAeuL,uBAAwB,IAGvDrhD,KAAI6hD,GACD7tB,EAAMohB,yBAA2ByM,EAAYzM,uBACvC,4EAA4EyM,EAAYzM,gCACxF,KAETrwB,KAAK,KAEJ+8B,EAAa9tB,EAAMtzB,OAASszB,EAAMtzB,OAAOqhD,OAAO,GAAGj8B,cAAgBkO,EAAMtzB,OAAOokB,MAAM,GAAK,GAEjG,MAAO,QAAQkP,EAAMohB,4BAA4B0M,kBAA2BF,SAAmB,IAElG78B,KAAK,IAEHjoB,CAAI,IAEb47C,GAAuBG,GACvBL,GAAiBjpC,GACjB,IAAIyyC,EAAelsC,EAAqByL,QAAQzkB,GAClB,qBAArBA,EAAK02C,aAA0D,WAApB12C,EAAK0uC,aAGrC,IAADyW,EAAnB,GAAItsC,EACFqsC,EAA2B,QAAfC,EAAGD,SAAY,IAAAC,OAAA,EAAZA,EAAc1gC,QAAQC,GAC5BA,EAAMm0B,OAAShgC,IAG1B3S,YAAW,KACTq9C,EAAkB2B,GAClBv2C,GAAa,EAAM,GAClB,IACL,KAAO,CACgB,IAADgvC,EAApB,IAAK9kC,EACHK,EAAoBgR,EAAAA,GAAwB,QAAfyzB,EAAGzzB,EAAAA,GAAU,UAAE,IAAAyzB,OAAA,EAAZA,EAAc11C,MAAQ,GAE1D,IACC,CAAC+Q,EAAsBH,EAAekc,EAAaumB,KAItD,MAAM5lB,IAAoBlvB,EAAAA,EAAAA,cAAY7D,IAAmB,IAAlB,SAAEosB,GAAUpsB,EACjDyyB,EAAYrG,EAAS,GACpB,IACGq2B,IAAwB5+C,EAAAA,EAAAA,cAAY3B,IAAmB,IAAlB,SAAEkqB,GAAUlqB,EACrD4+C,EAAyB10B,GACzB20B,IAAa2B,IACX,MAAM,sBAAE9C,KAA0B+C,GAASD,EAC3C,OAAOC,CAAI,GACX,GACD,KAEHtpD,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,GAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEd,MAkBO+vB,GAA0BC,KAA+BjgD,EAAAA,EAAAA,UAASsT,IACzE7c,EAAAA,EAAAA,YAAU,KACRo5B,EAAY,CAAC,GACbE,EAAgB,IAChBpc,EAAoBL,GACpB8qC,GAAO9qC,GACPmc,EAAe,IACfM,EAAgB,GAAG,GAClB,CAACzc,IAEJ,MAIM4sC,IAAyC5+B,EAAAA,GAAAA,IAAc40B,GAAe,uBACtEiK,IAA4B/8B,EAAAA,GAAAA,IAAkB88B,IAC9CE,IAA6Bh9B,EAAAA,GAAAA,IAAkBgzB,IAErD,OACEzgD,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,oCAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,MAAK5C,SAAA,EAE1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SA5ZiBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EA2ZhBxvB,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QA7ZrBo3B,OA6Z2Cl9B,SAAC,mBAQzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAASwgD,QAAQ,WAAWniD,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAChFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,UACrFF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEqF,WAAY,SAAUyI,WAAY,QAAS/O,SAAC,4BAE9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,QAAS/B,UACpFF,EAAAA,EAAAA,KAACm0B,EACC,CACAE,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,QAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACb6F,EAAY,CAAC,GACbE,EAAgB,IAEhBpc,EAAoBqW,GACpBo0B,GAAOp0B,GACPyF,EAAe,IACfM,EAAgB,GAAG,UAO3Bp6B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE+I,UAAW,MAAOjI,UAAW,SAAU/B,SAAA,EACzFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QAxSqBw9C,KACjChD,EAAkB,IAClBD,GAAuB,GACvB8I,GAAO9qC,EAAc,EAqS2Bre,SACrC,SAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QAjSkBw3B,KAAO,IAADkmB,EAAAC,EAAAE,EAAAC,EACpC,MAAMF,EAAiC,QAAlBF,EAAG3oB,EAAa,UAAE,IAAA2oB,OAAA,EAAfA,EAAiBv2B,QACnCoxB,EAAsB,QAAlBoF,EAAG5oB,EAAa,UAAE,IAAA4oB,OAAA,EAAfA,EAAiBpF,KACxB+M,EAAU,IACX1H,EACHrF,QAEFiC,EAAkB8K,GAClBjC,GAAO9K,GAQP,IAAIgN,GAPgC,QAAlB1H,EAAG9oB,EAAa,UAAE,IAAA8oB,GAAS,QAATC,EAAfD,EAAiB12B,eAAO,IAAA22B,OAAT,EAAfA,EAA0B/F,sBAAsBn1C,KAAKwhB,GAClC,OAAd4+B,QAAc,IAAdA,OAAc,EAAdA,EAAgB7+B,QACrCzkB,GAAUA,EAAKynB,QAAQutB,0BAA4BtwB,EAAM4zB,wBACxDt4C,EAAK64C,OAASxjB,EAAa,GAAGwjB,SAGjC0B,QACuB9Z,QACxB,CAAClX,EAAKvpB,IAASypB,OAAOq8B,OAAOv8B,EAAK,CAAE,CAACvpB,EAAK6G,IAAK7G,KAAS,CAAC,GAC3DyjD,EAAyBoC,GACzB1K,GAAU,GACVN,GAAuB,EAAK,EA8QhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QAnRay3B,KACzBmjB,EAAyB7lB,EAAa,IACtCV,GAAgB,EAAK,EAmRTl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAIDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPmwB,GAAkB,EAAK,EAEzBh1B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAIDF,EAAAA,EAAAA,KAACikD,GAAmB,CAClBtnC,MAAO,6BACPy/B,YAAa,2BACbpjB,mBAAoB+B,EACpBzB,SAAUA,YAOhBt5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAI1E,MAAO,CAAE+I,UAAW,QAAShK,UAC9CU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAvhBE,CAAE2b,UAAW,KAwhBfkhB,QAASA,GACTM,WAAyB,OAAbhF,GAAoB+xB,GAA6BD,GAC7DlG,UAAW,OACX3mB,gBAAc,EACd9J,SAAUA,EACVsJ,aAAc,IACd3C,kBAAmBA,GACnBoD,OAAQzrB,GAAOkoB,GAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrD4hC,SAjKCzpC,IAAe,IAAd,KAAE0N,GAAM1N,EACxB,MAAM0pC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IACvD,MAAO,CACL6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC5D7xB,OAAQ,kBACR4D,WAAY,SACb,EA0Jai4B,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAc,OAAP3D,SAAO,IAAPA,IAAgB,QAAT0D,EAAP1D,GAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAY,EAAW,OAAPkyB,SAAO,IAAPA,IAAgB,QAAT2D,EAAP3D,GAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACrH7B,iBA/Ic3D,IAC5BuB,GAAYvB,EAAS,eAqJnB14B,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CACf,wFAAwF,KAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAyB,OAArBygD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBpC,QACrHv+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEskD,GAASC,cAAcvzC,OAAOi0C,iBAGhDvkD,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+4B,GAAkB7+B,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA9VgB2F,UAC9B,UACQ80C,EAAmBxE,0BAA0B,CAAE9jC,KAAM4iB,IAAgBziB,MAAKwI,IAC9Eie,KACAiF,GAA0B,OAANljB,QAAM,IAANA,OAAM,EAANA,EAAQtI,IAAW,OAANsI,QAAM,IAANA,OAAM,EAANA,EAAQxX,QACzC0xB,EAAgB,IAChB4lB,EAAyB,IACzB9lB,EAAY,CAAC,EAAE,GAEnB,CAAE,MAAO32B,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CACA+3C,KACAlhB,EAAgB,GAAG,EAiV4B96B,SAAC,kBAI9CF,EAAAA,EAAAA,KAACyrD,GAAkB,CACjBnrD,KAAMggD,EACNxG,4BAA6BA,GAC7BE,eAAgBA,EAChBC,2BArgB8Bz5C,IAClC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACf0W,EACH,CAAC/wC,GAAO0E,GAEV6yC,EAAkBld,GACL,SAATr6B,IAEFogD,GAAO17C,GACPy7C,IAAa2B,IACX,MAAM,SAAEhD,KAAaiD,GAASD,EAC9B,OAAOC,CAAI,KAIF,wBAAT/hD,GACFmgD,IAAa2B,IACX,MAAM,cAAE/C,KAAkBgD,GAASD,EACnC,OAAOC,CAAI,GAEf,EAifInF,qBA/euBA,KAC3B,MAAMP,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAAQ8B,GAAaA,EAASmN,eAAiB4gB,EAAewF,sBAChG,GAAIxF,EAAgB,MACNh+B,IAAR4oC,IAA6B,KAARA,IACvBwE,IAAa2B,IAAS,IACjBA,EACH,SAAY,2CAG2B/uC,IAAvCg+B,EAAewF,qBAA4E,KAAvCxF,EAAewF,qBACrE4J,IAAa2B,IAAS,IACjBA,EACH,cAAiB,gCAGrB,IAAIW,EAAe,GACfC,EAAgB,IAAK5F,IAiBzB,UAhBO4F,EAAqC,sBAExCx8B,OAAOkN,KAAK6sB,GAAuBngD,QACrC2iD,EAAev8B,OAAOxO,OAAOuoC,GAAuBtgD,KAAK+E,GAAUA,IACnE+9C,EAAeA,EAAa9iD,KAAIlD,IACvB,CACLs4C,uBAAwBt4C,EAAKynB,QAAQutB,wBACrCpxC,YAA+D0S,IAAvDstC,GAAa5jD,EAAKynB,QAAQutB,yBAAyC,SAAW4O,GAAa5jD,EAAKynB,QAAQutB,yBAChHnuC,GAAI7G,EAAKynB,QAAQs4B,gCAIrBkG,EAAqC,sBAAI,sCAG3CvC,GAAauC,GACTx8B,OAAOkN,KAAKsvB,GAAe5iD,OAC7B,OACK,CACL,MAAMy8C,EAAqB,CACzBpJ,YAAa,2BACbmC,KAAMqG,GACNz3B,QAAS,CACPqyB,oBAAqBxF,EAAewF,oBACpCoM,uBAAwBtG,EAAW,GAAG/4C,GACtCwxC,sBAAuB2N,GAEzBn/C,GACE+4C,EAAW,GAAG/4C,GACd,IACAq4C,GAAIz2C,OAFJm3C,8BAMW,IAAXnN,EACFsI,EACG1E,sBAAsByJ,GACtBltC,MAAMotB,IACgB,aAAb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACR4yC,KACAtwC,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KACHvc,GAAoB,gDAAiD,YAC3C,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,IAGJioC,EACGzE,sBAAsBwJ,GACtBltC,MAAMotB,IACe,YAAhBA,EAAKp8B,QACPsC,YAAW,KACT20C,GAAuB,GACvBiB,KACAtF,IAAW,GACV,KACH2E,GAAU,GACV7c,GAAoB,kDAAmD,YAC7C,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,IAGNshC,IACF,CACF,KAAO,CACL,IAAI+R,EAAe,CAAC,EAC8B,IAA9C18B,OAAOkN,KAAK6sB,GAAuBngD,SACrC8iD,EAAe,CAAE,sBAAyB,wCAE5CzC,GAAa,IACRyC,EACH,cAAiB,6BAErB,GAmZI1T,OAAQA,EACR/c,kBAAmB0vB,GACnBr2B,SAAUy0B,EACVpD,mBAAoBkD,EACpB3O,kBAAmBA,EACnBC,qBAAsBA,GACtByL,UAAWA,GACXnB,IAAKA,GACLoB,YAAajrB,EAAa,GAC1BkrB,mBAnNsBzlD,IAC1B,MAAM2mD,EAAgB,IACjBmC,GACH,CAAC9oD,EAAMsN,OAAO7E,MAAOzI,EAAMsN,OAAOH,OAEpC47C,GAAgBpC,EAAc,KAiN5BnnD,EAAAA,EAAAA,KAAC0lD,GAAoB,CACnB/oC,MAAO,yCACPy/B,YAAa,2BACbnZ,WAAY1kB,EACZ2X,eAAgBA,EAChBgmB,UAAWA,GACX/lB,kBAAmBA,IAIlBt2B,IACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,GAAWC,SAAUA,GAAUC,aAAcA,MACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MAGI,EC7oBjB,GANwC6rD,KAEhC9rD,EAAAA,EAAAA,KAACooD,GAA4B,ICUrC,GAX+B,CAC7B,CACEp/C,KAAM,mBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC8rD,GAA+B,QCclClG,GAAY,CAAE9oC,UAAW,KAmN/B,GAlN+Bnd,IAgBxB,IAhByB,KAC9BW,EAAI,4BACJw5C,EAA2B,eAC3BE,EAAc,2BACdC,EAA0B,qBAC1B4L,EAAoB,OACpB1N,EAAM,mBACN2N,EAAkB,kBAClB1qB,EAAiB,SACjB3G,EAAQ,kBACR4lB,EAAiB,qBACjBC,EAAoB,UACpByL,EAAS,IACTnB,EAAG,YACHoB,EAAW,mBACXC,GACDtmD,EACC,MAAO46C,EAAU2L,IAAej7C,EAAAA,EAAAA,UAAS,KAClCk7C,EAAwBC,IAA6Bn7C,EAAAA,EAAAA,UAAS,CAAC,IACtEiiB,EAAAA,GAAAA,IAAmCqtB,EAAU,4BAE7C74C,EAAAA,EAAAA,YAAU,KACR,GAAkB,OAAds4C,QAAc,IAAdA,GAAAA,EAAgBuE,KAAM,CACxB,IAAIwN,EAAW,CAAe,OAAd/R,QAAc,IAAdA,OAAc,EAAdA,EAAgBuE,OAAS,EACzCjE,EAAqByR,EACvB,MACEzR,EAAqB,CAACsK,IAGxB,GAAIkB,EAAoB,CACtB,MAAMO,EAAgC,OAAlBP,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB37B,QAAQC,IAClC,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOm0B,QAASqG,IAErBoB,GACFK,EAAYz9C,KAAIlD,IAAS,IAAD4gD,EAMtB,OALW,OAAXN,QAAW,IAAXA,GAAoB,QAATM,EAAXN,EAAa74B,eAAO,IAAAm5B,GAApBA,EAAsBvI,sBAAsB55B,SAAQo7B,IAC9C75C,EAAKynB,QAAQutB,0BAA4B6E,EAAMG,uBACjDh6C,EAAKi6C,cAAgBJ,EAAMI,cAC7B,IAEKj6C,CAAI,IAGfwgD,EAAYG,EACd,IACC,CAACP,EAAoB9L,IAExB,MAAM/e,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBksB,EAAU,CACd,CAAE/0B,KAAM,KAAMg1B,OAAQ,KAAMuoB,gBAAgB,EAAOpoB,aAAc,GAAIl9B,KAAM,UAC3E,CACE+H,KAAM,0BACNm1B,aAAc,IACdH,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQihC,qBAAqBzkD,SAAC,4BAC5Fm+B,OAAQp2B,IAAA,IAAAw+C,EAAA,IAAC,KAAEtuC,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,GAAa,QAATsuC,EAAJtuC,EAAMgV,eAAO,IAAAs5B,OAAT,EAAJA,EAAe/L,yBAA8B,GAE3E,CACEzxC,KAAM,YACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcC,eAAehhC,QAAQpa,OAAOpJ,SAAC,kBAC9Ek+B,aAAc,IACdC,OAAQh2B,IAAe,IAADq+C,EAAAC,EAAAC,EAAA,IAAb,KAAEzuC,GAAM9P,EACf,OACErI,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACsW,GAAAA,EAAW,CAAApW,UACVU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACTC,KAAG,EACH,kBAAgB,qCAChBzQ,KAAU,OAAJkP,QAAI,IAAJA,GAAa,QAATuuC,EAAJvuC,EAAMgV,eAAO,IAAAu5B,OAAT,EAAJA,EAAehM,wBAErB/sC,MAASw4C,EAA2B,OAAJhuC,QAAI,IAAJA,GAAa,QAATwuC,EAAJxuC,EAAMgV,eAAO,IAAAw5B,OAAT,EAAJA,EAAejM,yBAA4ByL,EAA2B,OAAJhuC,QAAI,IAAJA,GAAa,QAATyuC,EAAJzuC,EAAMgV,eAAO,IAAAy5B,OAAT,EAAJA,EAAelM,yBAA2B,MAC5I9sC,SAAWC,IACT,MAAMs5C,EAAgB,IACjBhB,EACH,CAACt4C,EAAEC,OAAO7E,MAAO4E,EAAEC,OAAOH,OAE5By4C,EAA0Be,GAC1BlB,EAAmBp4C,EAAE,EACrB3N,SAAA,EAEFF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,MAAMkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,SACxD1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,KAAKkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,aAGvD,IAmBd,OANAhV,EAAAA,EAAAA,YAAU,KACR,GAAIskD,EAAa,CAAC,IAADoB,EACf,MAAMC,EATcn5B,KACtB,IAAIo5B,EAAS,CAAC,EAId,OAHAp5B,EAAM/J,SAAQze,IACZ4hD,EAAO5hD,EAAKg6C,sBAAwBh6C,EAAKi6C,aAAa,IAEjD2H,CAAM,EAIWE,CAA0B,OAAXxB,QAAW,IAAXA,GAAoB,QAAToB,EAAXpB,EAAa74B,eAAO,IAAAi6B,OAAT,EAAXA,EAAsBrJ,uBAC3DqI,EAA0BiB,EAC5B,IACC,CAACrB,KAEFplD,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EACZ+M,WAAW,EACXjD,SAAS,KAAIlK,SAAA,EACbU,EAAAA,EAAAA,MAACkV,GAAAA,EAAW,CAAA5V,SAAA,CACT,IACAi4C,EAAS,8BAAgC,gCAE5Cn4C,EAAAA,EAAAA,KAACynD,GAAAA,GAAU,CACTC,YAAU,EACVC,cAAe,IACfC,cAAe,IACfC,UAAQ,EACRC,gBAAiB,IACjBnvC,iBAAkB,IAAIzY,UAEtBF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC5BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,6BAIRU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,OACLoE,WAAS,EACTM,MAAOi3C,EACPh3C,SAAUqsC,EACVt2C,UAAU,EAAKzD,SAEG,OAAjBm6C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBzxC,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAclJ,MAAOiJ,EAAO1W,SAClC0W,GADYA,OAMP,OAATmvC,QAAS,IAATA,GAAAA,EAAWgC,UAAa/nD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACvBF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAW,OAAT6lD,QAAS,IAATA,OAAS,EAATA,EAAWgC,cAClC/nD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,QAGZD,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,yBAIRU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,EAC9BF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACRhE,KAAK,iBACL0E,MAAOqsC,EAAeyF,eACtB7xC,SAAUqsC,EACV5sC,WAAS,EACT1J,SAAUw0C,EACVvwC,OAAO,WAGG,OAATm+C,QAAS,IAATA,GAAAA,EAAWiC,eAAkBhoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAC5BF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAW,OAAT6lD,QAAS,IAATA,OAAS,EAATA,EAAWiC,mBAClChoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,QAIZD,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,yBACmB,UAI3BU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,CAElB,OAAT6lD,QAAS,IAATA,GAAAA,EAAWkC,uBAA0BjoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACpCF,EAAAA,EAAAA,KAAA,KAAGmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAW,OAAT6lD,QAAS,IAATA,OAAS,EAATA,EAAWkC,2BAClCjoD,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,IAGC,OAARs6C,QAAQ,IAARA,GAAAA,EAAUxxC,QACT/I,EAAAA,EAAAA,KAACkoD,GAAAA,GAAa,CACZrqB,WAAW,KACXC,eAAe,EACfU,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmiB,SAAUA,EACV8J,gBAAgB,EAChBnD,kBAAmBA,EACnB+sB,uBAAuB,EACvBhnD,MAAOykD,GACP5nB,QAASA,EACTM,WAAYic,IAEX,gBAOf35C,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS8zC,EAA4B55C,SAAC,YAC9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS6/C,EAAqB3lD,SACnCi4C,EAAS,SAAW,aAGlB,EC5MPle,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IA8rBD,GA5rB+B4jD,KAC7B,MAAM,YAAErtC,IAAgBrJ,EAAAA,EAAAA,MAClB,cACJkJ,EAAa,cACbD,EAAa,qBACbG,EAAoB,oBACpBE,EAAmB,2BACnBI,IACE1J,EAAAA,EAAAA,MAEG4gB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1Cq1C,EAAqBC,IAA0Bt1C,EAAAA,EAAAA,WAAS,IACxD+uC,EAAgBwG,IAAqBv1C,EAAAA,EAAAA,UAAS,CAAC,IAC/C+9C,EAAgBiD,IAAqBhhD,EAAAA,EAAAA,UAAS,KAC9C8uC,EAAgB3W,IAAqBn4B,EAAAA,EAAAA,UAAS,IAC/C2U,EAAiB,IAAIzG,GAAAA,EACrBunC,EAAkB,IAAIxF,IACrByF,EAAuBC,IAA4B31C,EAAAA,EAAAA,YACpDw1C,EAAqB,IAAI7E,IACxB1gC,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCktC,EAAQ0I,IAAa51C,EAAAA,EAAAA,WAAS,IAC9B01B,EAAiBkC,IAAsB53B,EAAAA,EAAAA,UAAS,KAChDq1B,EAAQwC,IAAa73B,EAAAA,EAAAA,UAAS,KAC9BqsB,EAAUyL,IAAe93B,EAAAA,EAAAA,UAAS,KAClCw1B,EAAUuC,IAAe/3B,EAAAA,EAAAA,UAAS,KAClCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnCi+C,EAAuBC,IAA4Bl+C,EAAAA,EAAAA,UAAS,CAAC,IAC7DovC,EAAmBC,IAAwBrvC,EAAAA,EAAAA,UAAS,KACpD+1C,EAAwBC,IAA6Bh2C,EAAAA,EAAAA,UAAS,KAC9D86C,GAAWqD,KAAgBn+C,EAAAA,EAAAA,UAAS,CAAC,IACrC25C,GAAKyE,KAAUp+C,EAAAA,EAAAA,UAAS,KACxBq+C,GAAcC,KAAmBt+C,EAAAA,EAAAA,UAAS,CAAC,IAC3CrL,GAAWE,KAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,GAAUuU,KAAenJ,EAAAA,EAAAA,UAAS,MACnCgwB,IAAUnpB,EAAAA,EAAAA,QAAO,OAChBwnB,GAAUuB,KAAe5vB,EAAAA,EAAAA,UAAS,CAAC,GACpCiwB,GAAUD,IAAWA,GAAQ3oB,SAAW2oB,GAAQ3oB,QAAQ4oB,QAAUD,GAAQ3oB,QAAQ4oB,QAAU,KAE5FgmB,GAA2B1gD,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAQ1B4B,GAAoBA,KACxB1E,GAAgB,EAAM,EAGlB2J,GAAsBA,CAAC94B,EAASpK,KACpChB,IAAa,GACbsU,GAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EA+LE4uC,GAA8BA,KAClCyG,GAAuB,GACvBC,EAAkB,IAClBpd,EAAkB,IAClBpI,GAAgB,IAChBF,EAAY,CAAC,GACbquB,EAAyB,CAAC,GAC1BC,GAAa,CAAC,GACdvI,GAAU,EAAM,EAiDZ3E,GAAYA,KAChB7nC,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAM,GACnB,GAEJ3S,EAAAA,EAAAA,YAAU,KACR2S,EAAasK,EAAY,GACxB,CAACA,IACJ,MAAOwiC,GAAeC,KAAoBn2C,EAAAA,EAAAA,UAAS,KAC5Co2C,GAAqBC,KAA0Br2C,EAAAA,EAAAA,UAAS,IACzDkwB,IAAuB5O,EAAAA,GAAAA,IAAc40B,GAAe,mBAE1Dz/C,EAAAA,EAAAA,YAAU,KACR8/C,IAAgB,GACf,IAEH,MAAMA,GAAiBA,KACrBntC,GAAa,GACbqsC,EAAgBvF,qBAAqB7iC,MAAMwI,IACzC,IAAIy9B,EAAOhgC,GAAgC,eACvCwQ,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,IAChE0C,EAA0BlyB,GAC1B1a,GAAa,EAAM,GACnB,GAGJ3S,EAAAA,EAAAA,YAAU,KAER,GADA2S,GAAa,GACTqK,EAAsB,CACxB,IAAI+iC,EAAmB/iC,EAKH,IAADgjC,EAKoBC,EALvC,GAJAF,EAAmBA,EAAiBt3B,QACjCzkB,GAA8B,uBAArBA,EAAK02C,aAA4D,WAApB12C,EAAK0uC,aAG1D71B,EACFkjC,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBv3B,QAAQC,GACpCA,EAAMm0B,OAAShgC,IAG1B,GAAIkc,GAA+B,KAAhBA,EACjBgnB,EAAmC,QAAnBE,EAAGF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBx3B,QAAQC,IAAW,IAADw3B,EAAAC,EAAAC,EACrD,OACuB,QAArBF,EAAA/2B,KAAKk3B,UAAU33B,UAAM,IAAAw3B,OAAA,EAArBA,EAAuB5/B,SAASyY,MACX,QADuBonB,EAC5Ch3B,KAAKk3B,UAAU33B,UAAM,IAAAy3B,GAAqB,QAArBC,EAArBD,EAAuBG,2BAAmB,IAAAF,OAArB,EAArBA,EAA4C9/B,SAASyY,GAAY,IAKvE,GAAIumB,EAAuBj4C,OAAS,EAAG,CACrC,MAAM4gD,EAA2B3I,EAAuB72B,QAAQ7M,GAAgC,sBAAjBA,EAAE8+B,cAC7EuN,EAAyB5gD,OAAS,GAAiD,uBAA5C4gD,EAAyB,GAAGvN,aACrEqF,EAAiBt9B,SAAQ+9B,IACvByH,EAAyB,GAAGxH,QAAQh+B,SAAQi+B,IAC1C,GAAIF,EAAS,KAAME,EAAS,GAAG,CAC7BF,EAAK/0B,QAAQy8B,4BAA8BxH,EAAKj1B,QAAQ4wB,sBACxD,MAAM8L,EAAc,IAAI5yB,IAAImrB,EAAKj1B,QAAQ4wB,sBAAsBn1C,KAAI0U,GAAKA,EAAEoiC,wBACpEoK,EAAqB5H,EAAK/0B,QAAQ4wB,sBAAsB5zB,QAAO4/B,IAAMF,EAAYG,IAAID,EAAErK,wBAC7FwC,EAAK/0B,QAAQ88B,qBAAuBH,EACpC,IAAII,EAAchI,EAAK/0B,QAAQy8B,4BAA4Bz/B,QAAOo1B,IAC7D2C,EAAK/0B,QAAQ4wB,sBAAsBphB,MAAKwtB,GACrC5K,EAAMG,uBAAyByK,EAAMzK,sBACrCH,EAAMI,gBAAkBwK,EAAMxK,kBAGtCuC,EAAK/0B,QAAQi9B,iBAAmBF,EAChC,IAAIG,EAAuB,IAAInI,EAAK/0B,QAAQ4wB,yBAA2BmE,EAAK/0B,QAAQi9B,kBACpFlI,EAAK/0B,QAAQ4wB,sBAAwBsM,CACvC,IACA,GAGR,CACA,IAAIlyC,EAAOspC,EAAiB74C,KAAIlD,IAAS,IAAD84C,EAAAC,EAoBtC,OAnBA/4C,EAAqB,eAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,OAAT,EAAJA,EAAeiB,eACxC/5C,EAA2B,qBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,OAAT,EAAJA,EAAeV,sBAC3C5zB,QAAO,CAACyS,EAAO9zB,EAAOwhD,IACrBxhD,IAAUwhD,EAAKC,WAAU19C,GAAKA,EAAE6yC,uBAAyB9iB,EAAM8iB,yBAEhE92C,KAAIg0B,IAAU,IAAD8hB,EACZ,MAEM8L,IAFmB,OAAJ9kD,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,OAAT,EAAJA,EAAeuL,uBAAwB,IAGzDrhD,KAAI6hD,GACH7tB,EAAM8iB,uBAAyB+K,EAAY/K,qBACvC,4EAA4E+K,EAAY/K,8BACxF,KAEL/xB,KAAK,KAER,MAAO,QAAQiP,EAAM8iB,0BAA0B9iB,EAAM+iB,cAAcgL,OAAO,GAAGj8B,cAAgBkO,EAAM+iB,cAAcjyB,MAAM,mBAAmB88B,SAAmB,IAE9J78B,KAAK,IACDjoB,CAAI,IAEb07C,GAAiBjpC,GACjBmpC,GAAuBG,GACvB,IAAImJ,EAAelsC,EAAqByL,QAAQzkB,GAClB,qBAArBA,EAAK02C,aAA0D,WAApB12C,EAAK0uC,aAErC,IAADyW,EAAnB,GAAItsC,EACFqsC,EAA2B,QAAfC,EAAGD,SAAY,IAAAC,OAAA,EAAZA,EAAc1gC,QAAQC,GAC5BA,EAAMm0B,OAAShgC,IAG1B3S,YAAW,KACTqgD,EAAkBrB,GAClBv2C,GAAa,EAAM,GAClB,IACL,KAAO,CACgB,IAADgvC,EAApB,IAAK9kC,EACHK,EAAoBgR,EAAAA,GAAwB,QAAfyzB,EAAGzzB,EAAAA,GAAU,UAAE,IAAAyzB,OAAA,EAAZA,EAAc11C,MAAQ,GAE1D,IACC,CAAC+Q,EAAsBH,EAAekc,EAAaumB,IAKtD,MACOjmB,GAAcC,KAAmB/vB,EAAAA,EAAAA,UAAS,IAC3C+yB,GAAU,CAEd,CACE/0B,KAAM,iBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcyH,qBAAqBxoC,QAAQyoC,mBAAmBjsD,SAAC,qBAChGi+B,YAAa,EACbE,OAAQp2B,IAAA,IAAC,KAAEkQ,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SACf,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMsnC,gBACH,GAER,CACEx2C,KAAM,uBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcyH,qBAAqBxoC,QAAQ0oC,+BAA+BlsD,SAAC,0CAC5Gi+B,YAAa,EACburB,UAAU,EAOVrrB,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcyH,qBAAqBxoC,QAAQkhC,IAAI1kD,SAAC,wBACjFi+B,YAAa,EAEbC,aAAc,KAGZhD,IAAoBlvB,EAAAA,EAAAA,cAAY7D,IAAmB,IAAlB,SAAEosB,GAAUpsB,EACjDyyB,EAAYrG,EAAS,GACpB,KAEH/yB,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,GAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,GAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAEd,MAAM4vB,IAAwB5+C,EAAAA,EAAAA,cAAY3B,IAAmB,IAAlB,SAAEkqB,GAAUlqB,EACrD4+C,EAAyB10B,GACzB20B,IAAa2B,IACX,MAAM,sBAAE9C,KAA0B+C,GAASD,EAC3C,OAAOC,CAAI,GACX,GACD,IAsBH,OACEpqD,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,+BAEtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,MAAK5C,SAAA,EAE1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAUszC,GACVvzC,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QA1drBo3B,OA0d2Cl9B,SAAC,mBAQzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAASwgD,QAAQ,WAAWniD,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAChFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,UACrFF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEqF,WAAY,SAAUyI,WAAY,QAAS/O,SAAC,4BAE9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,QAAS/B,UACpFF,EAAAA,EAAAA,KAACm0B,EAAY,CACXvmB,SAAUszC,GACV7sB,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,QAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACb6F,EAAY,CAAC,GACbE,GAAgB,IAEhBpc,EAAoBqW,GACpByF,EAAe,IACfM,GAAgB,GAAG,UAO3Bp6B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE+I,UAAW,MAAOjI,UAAW,SAAU/B,SAAA,EACzFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QAhUqBw9C,KACjChD,EAAkB,IAClBpd,EAAkB,IAClBN,EAAU,IACVC,EAAY,IACZC,EAAY,IACZH,EAAmB,IACnB0d,GAAuB,GACvB8I,GAAO9qC,EAAc,EAyTTpd,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,SAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACX35B,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QACxB/C,QAjTuBqmD,KAAO,IAAD3I,EAAAC,EAAAE,EAAAC,EAAAC,EAAAC,EACzC,MAAMJ,EAAiC,QAAlBF,EAAG3oB,GAAa,UAAE,IAAA2oB,OAAA,EAAfA,EAAiBv2B,QACnCoxB,EAAsB,QAAlBoF,EAAG5oB,GAAa,UAAE,IAAA4oB,OAAA,EAAfA,EAAiBpF,KAC9BiC,EAAkB,IACboD,EACHrF,SAEF8K,GAAO9K,GAOP,IAAIgN,GANgC,QAAlB1H,EAAG9oB,GAAa,UAAE,IAAA8oB,GAAS,QAATC,EAAfD,EAAiB12B,eAAO,IAAA22B,OAAT,EAAfA,EAA0B/F,sBAAsBn1C,KAAKwhB,GAClC,OAAd4+B,QAAc,IAAdA,OAAc,EAAdA,EAAgB7+B,QACrCzkB,GAASA,EAAKynB,QAAQutB,0BAA4BtwB,EAAMs1B,yBAG1DO,QACuB9Z,QACxB,CAAClX,EAAKvpB,IAASypB,OAAOq8B,OAAOv8B,EAAK,CAAE,CAACvpB,EAAK6G,IAAK7G,KAAS,CAAC,GAC3DyjD,EAAyBoC,GACzB1oB,EAAkC,QAAhBkhB,EAAChpB,GAAa,UAAE,IAAAgpB,GAAS,QAATC,EAAfD,EAAiB52B,eAAO,IAAA62B,OAAT,EAAfA,EAA0BjG,uBAC7C8C,GAAU,GACVN,GAAuB,EAAK,EA+RhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACX35B,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QACxB/C,QApSay3B,KACzBmjB,EAAyB7lB,GAAa,IACtCV,GAAgB,EAAK,EAoSTl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPmwB,GAAkB,EAAK,EAEzBh1B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAIDF,EAAAA,EAAAA,KAACikD,GAAmB,CAClBtnC,MAAO,wBACPy/B,YAAa,qBACbpjB,mBAAoB+B,GACpBzB,SAAUA,YAMhBt5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAI1E,MAAO,CAAE+I,UAAW,QAAShK,UAC9CU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAnME,CAAE2b,UAAW,KAoMfo3B,SAzICzpC,IAAe,IAAd,KAAE0N,GAAM1N,EACxB,MAAM0pC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IACvD,MAAO,CACL6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC5D7xB,OAAQ,kBACR4D,WAAY,SACb,EAkIaw3B,QAASA,GACTM,WAAyB,OAAbhF,GAAoB+nB,GAAsBlmB,GACtD+pB,UAAW,OACXnnB,aAAc,IACdQ,gBAAc,EACd9J,SAAUA,EACV2G,kBAAmBA,GACnBoD,OAAQzrB,GAAOkoB,GAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,SAAO,IAAPA,IAAgB,QAAT0D,EAAP1D,GAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QAAY,EAAW,OAAPkyB,SAAO,IAAPA,IAAgB,QAAT2D,EAAP3D,GAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACjH7B,iBA1IY3D,IAC5BuB,GAAYvB,EAAS,cAiJhBz5B,IACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,GAAWC,SAAUA,GAAUC,aAAcA,MACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAEPW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CACf,kFAAkF,KAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAyB,OAArBygD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBpC,QAC/Gv+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEskD,GAASC,cAAcvzC,OAAOi0C,iBAGhDvkD,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+4B,GAAkB7+B,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAlXuB2F,UACrC,UACQ80C,EAAmBxE,0BAA0B,CAAE9jC,KAAM4iB,KAAgBziB,MAAKwI,IAC9Eie,KACA/D,GAAgB,IAChB4lB,EAAyB,IACzB9lB,EAAY,CAAC,EAAE,GAEnB,CAAE,MAAO32B,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CAEA6/B,GAAoB,4CAA6C,WACjEkY,KACAlhB,GAAgB,GAAG,EAoWmC96B,SAAC,kBAGrDF,EAAAA,EAAAA,KAACssD,GAAsB,CACrBhsD,KAAMggD,EACN+E,0BApZ4BA,KAChC9E,GAAuB,EAAM,EAoZzBzG,4BAA6BA,GAC7BE,eAAgBA,EAChBC,2BA7lB8Bz5C,IAClC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OAyB9B,GAvBa,WAAT7E,GACF65B,EAAUn1B,GAEC,aAAT1E,GACF85B,EAAYp1B,GAED,SAAT1E,GAEFm6B,EAAkB,IAGP,mBAATn6B,IAEFu3C,EAAkB,IACbxG,EACHuE,KAAM,KAER6K,IAAa2B,IACX,MAAM,cAAE/C,KAAkBgD,GAASD,EACnC,OAAOC,CAAI,IAEb5nB,EAAkB,KAEP,WAATn6B,EACFm6B,EAAkBz1B,OAEb,CAEL,MAAM21B,EAAc,IACf0W,EACH,CAAC/wC,GAAO0E,GAEV6yC,EAAkBld,EACpB,GA0jBIuiB,qBAphBuBA,KAC3B,MAAMP,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GAAaA,EAASmN,eAAiB4gB,EAAeyF,iBAEzD,GAAIzF,EAAgB,MACNh+B,IAAR4oC,IAA6B,KAARA,IACvBwE,IAAa2B,IAAS,IACjBA,EACH,SAAY,2CAGsB/uC,IAAlCg+B,EAAeyF,gBAAkE,KAAlCzF,EAAeyF,gBAChE2J,IAAa2B,IAAS,IACjBA,EACH,cAAiB,gCAGrB,IAAIW,EAAe,GACfC,EAAgB,IAAK5F,IAezB,UAdO4F,EAAqC,sBACxCx8B,OAAOkN,KAAK6sB,GAAuBngD,QACrC2iD,EAAev8B,OAAOxO,OAAOuoC,GAAuBtgD,KAAK+E,GAAUA,IACnE+9C,EAAeA,EAAa9iD,KAAIlD,IACvB,CACLg6C,qBAAsBh6C,EAAKynB,QAAQutB,wBACnCiF,mBAAsE3jC,IAAvDstC,GAAa5jD,EAAKynB,QAAQutB,yBAAyC,MAAQ4O,GAAa5jD,EAAKynB,QAAQutB,yBACpHnuC,GAAI7G,EAAKynB,QAAQs4B,gCAIrBkG,EAAqC,sBAAI,sCAE3CvC,GAAauC,GACTx8B,OAAOkN,KAAKsvB,GAAe5iD,QAAUomB,OAAOkN,KAAK0pB,IAAWh9C,OAE9D,YADAmO,QAAQC,IAAI,qBAAsB6iC,GAE7B,CAAC,IAADuS,EACL,MAAM/G,EAAqB,CACzBpJ,YAAa,qBACbmC,KAAMqG,GACNz3B,QAAS,CACPsyB,eAAgBzF,EAAeyF,eAC/B+M,oBAAkC,QAAfD,EAAEjH,EAAW,UAAE,IAAAiH,OAAA,EAAbA,EAAehgD,GACpCwxC,sBAAuB2N,GAGzBn/C,GACEytC,EAAeyF,eACf,IACAmF,GAAIz2C,OAFJ6rC,wBAMW,IAAX7B,EACFsI,EACG1E,sBAAsByJ,GACtBltC,MAAMotB,IACgB,aAAb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACR4yC,KACAphB,EAAY,CAAC,GACblvB,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KACHvc,GAAoB,0CAA2C,YACrC,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,IAGJioC,EACGzE,sBAAsBwJ,GACtBltC,MAAMotB,IACe,YAAhBA,EAAKp8B,QACPk4C,KACAtF,KACAphB,EAAY,CAAC,GACblvB,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KACHM,GAAU,GACV7c,GACE,kDACA,YAEwB,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,IAGNshC,IACF,CACF,KAAO,CACL,IAAI+R,EAAe,CAAC,EAC8B,IAA9C18B,OAAOkN,KAAK6sB,GAAuBngD,SACrC8iD,EAAe,CAAE,sBAAyB,wCAE5CzC,GAAa,IACRyC,EACH,cAAiB,6BAErB,GAibI9R,eAAgBA,EAChB5B,OAAQA,EACR7X,OAAQA,EACRhJ,SAAUA,EACViJ,aA5jBeA,KACnB,MAAMiG,EAAY7F,EAAgBhE,MAAMjjB,GAAQA,EAAI1L,MAAQsyB,IACtDmG,EAAc9F,EAAgBhE,MAAMjjB,GAAQA,EAAI/L,QAAU2pB,IAC1DguB,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GAAaA,EAASmN,eAAiBkH,IAEtCkG,GAAaC,EACfzD,EAAY,mCAGT1C,GAAWhJ,GAKhBuL,GAAoB6D,GAAa,IAC5BA,EACH,CACEgZ,qBAAsBpf,EACtBqf,cAAeroB,EACf/qB,GAAI+4C,EAAW,GAAG/4C,OAGtBu2B,EAAU,IACVC,EAAY,IACZC,EAAY,KAdVA,EAAY,mCAcC,EAoiBXxC,gBAliBmB13B,IACvB+5B,GAAoB6D,IAClB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQxB,OAAOr8B,EAAO,GACf69B,CAAO,GACd,EA8hBElG,SAAUA,EACVE,gBAAiBA,EACjBvF,kBAAmB0vB,GACnBr2B,SAAUy0B,EACVpD,mBAAoBkD,EACpB3O,kBAAmBA,EACnBC,qBAAsBA,EACtByL,UAAWA,GACXnB,IAAKA,GACLoB,YAAajrB,GAAa,GAC1BkrB,mBA/MsBzlD,IAC1B,MAAM2mD,EAAgB,IACjBmC,GACH,CAAC9oD,EAAMsN,OAAO7E,MAAOzI,EAAMsN,OAAOH,OAEpC47C,GAAgBpC,EAAc,KA6M5BnnD,EAAAA,EAAAA,KAAC0lD,GAAoB,CACnB/oC,MAAO,uCACPy/B,YAAa,qBACbnZ,WAAY1kB,EACZ2X,eAAgBA,EAChBgmB,UAAWA,GACX/lB,kBAAmBA,MACV,ECntBjB,GALkCs2B,KAE1BzsD,EAAAA,EAAAA,KAACgsD,GAAsB,ICS/B,GAViC,CAC/B,CACEhjD,KAAM,0BACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACysD,GAAyB,QCmHlC,GAhHgC9sD,IAUzB,IAV0B,KAC/BW,EAAI,4BACJw5C,EAA2B,eAC3B4S,EAAc,eACd1S,EAAc,2BACdC,EAA0B,qBAC1B4L,EAAoB,OACpB1N,EAAM,cACN35B,EAAa,WACbykB,GACDtjC,EACC,MAAOw6C,EAAgBC,IAAqBnvC,EAAAA,EAAAA,UAAS,KAC9CovC,EAAmBC,IAAwBrvC,EAAAA,EAAAA,UAAS,IAS3D,OARAvJ,EAAAA,EAAAA,YAAU,KACR,GAAIuhC,EAAY,CACd,IAAIsX,EAAW/7B,EAAc2L,QAAOqwB,IAAI,IAAAC,EAAA,OAAQ,OAAJD,QAAI,IAAJA,GAAQ,QAAJC,EAAJD,EAAM7kC,UAAE,IAAA8kC,OAAJ,EAAJA,EAAUz4B,SAASihB,EAAW,IAC1E/rB,QAAQC,IAAIojC,EAAU,8BACtBH,EAAkBG,EACpB,CACAD,EAAqB,CAACrX,GAAY,GACjC,CAACA,EAAYzkB,EAAew7B,EAAeuE,QAE5C39C,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EAAKJ,SAAA,EACjBU,EAAAA,EAAAA,MAACkV,GAAAA,EAAW,CAAA5V,SAAA,CACT,IACAi4C,EAAS,4BAA8B,8BAE1Cn4C,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC5BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGvDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,OACLoE,WAAS,EACTM,MAAOs1B,EACPr1B,SAAUqsC,EACVt2C,UAAQ,EAAAzD,SAEU,OAAjBm6C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBzxC,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAclJ,MAAOiJ,EAAO1W,SAClC0W,GADYA,UAMrB5W,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGvDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLvN,KAAK,oBACLoE,WAAS,EACTM,MAAOqsC,EAAe4F,kBACtBhyC,SAAUqsC,EACVt2C,SAAUw0C,EAAOj4C,SAEF,OAAdi6C,QAAc,IAAdA,OAAc,EAAdA,EAAgBvxC,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOwiB,aAAal5B,SAC5D0W,EAAOwiB,cADKxiB,EAAOwiB,qBAO5Bp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,sBACcF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAIrDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChBg2B,UAAQ,EACR9tB,KAAK,kBACL0E,MAAO++C,EACP9+C,SAAUqsC,EACVzlB,YAAcC,GAAqB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU9G,KAAK,MAC1C4W,UAAW,CACT7jC,GAAI,CACF,mBAAoB,CAClB0O,gBAAiB,2BAGrBlP,SAEa,OAAdi6C,QAAc,IAAdA,OAAc,EAAdA,EAAgBvxC,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOwiB,aAAal5B,SAC5D0W,EAAOwiB,cADKxiB,EAAOwiB,0BAQhCx4B,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS8zC,EAA4B55C,SAAC,YAC9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS6/C,EAAqB3lD,SACnCi4C,EAAS,SAAW,aAGlB,ECtFPle,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAyoBD,GAvoB8BukD,KAC5B,MAAM,YAAEhuC,IAAgBrJ,EAAAA,EAAAA,MAClB,cACJkJ,EAAa,cACbD,EAAa,qBACbG,EAAoB,oBACpBE,EAAmB,2BACnBI,IACE1J,EAAAA,EAAAA,MAEG4gB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1Cq1C,EAAqBC,IAA0Bt1C,EAAAA,EAAAA,WAAS,IACxD+uC,EAAgBwG,IAAqBv1C,EAAAA,EAAAA,UAAS,CAAC,IAE/CyhD,EAAgBE,IAAqB3hD,EAAAA,EAAAA,UAAS,IAC/C2U,EAAiB,IAAIzG,GAAAA,EACrBsnC,EAAqB,IAAI7E,GACzB8E,EAAkB,IAAIxF,IACrByF,EAAuBC,IAA4B31C,EAAAA,EAAAA,aACnDktC,EAAQ0I,IAAa51C,EAAAA,EAAAA,WAAS,IAC9B01B,EAAiBkC,IAAsB53B,EAAAA,EAAAA,UAAS,KAChDq1B,EAAQwC,IAAa73B,EAAAA,EAAAA,UAAS,KAC9BqsB,EAAUyL,IAAe93B,EAAAA,EAAAA,UAAS,KAClCw1B,EAAUuC,IAAe/3B,EAAAA,EAAAA,UAAS,KAClCiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAEpCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClC+1C,EAAwBC,IAA6Bh2C,EAAAA,EAAAA,UAAS,IAC/DgwB,GAAUnpB,EAAAA,EAAAA,QAAO,OAChBwnB,EAAUuB,KAAe5vB,EAAAA,EAAAA,UAAS,CAAC,GACpCiwB,GAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,KAE5FgmB,GAA2B1gD,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAM1B4B,GAAoBA,KACxB1E,GAAgB,EAAM,EAGlB2J,GAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAqKE4uC,GAA8BA,KAClCyG,GAAuB,GACvBC,EAAkB,IAClBoM,EAAkB,IAClB5xB,GAAgB,IAChBF,EAAY,CAAC,GACb+lB,GAAU,EAAM,EA4CZ3E,GAAYA,KAChB7nC,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAM,GACnB,GAEJ3S,EAAAA,EAAAA,YAAU,KACR2S,EAAasK,EAAY,GACxB,CAACA,IACJ,MAAOwiC,GAAeC,KAAoBn2C,EAAAA,EAAAA,UAAS,KAC5Co2C,GAAqBC,KAA0Br2C,EAAAA,EAAAA,UAAS,IACzDkwB,IAAuB5O,EAAAA,GAAAA,IAAc40B,GAAe,qBACpDkK,IAA6Bh9B,EAAAA,GAAAA,IAAkBgzB,IAC/CwL,IAAuBx+B,EAAAA,GAAAA,IAAkB8M,KAC/Cz5B,EAAAA,EAAAA,YAAU,KACR8/C,IAAgB,GACf,IAEH,MAAMA,GAAiBA,KACrBntC,GAAa,GACbqsC,EAAgBvF,qBAAqB7iC,MAAMwI,IACzC,IAAIy9B,EAAOhgC,GAAgC,eACvCwQ,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,IAChE0C,EAA0BlyB,GAC1B1a,GAAa,EAAM,GACnB,GAGJ3S,EAAAA,EAAAA,YAAU,KAER,GADA2S,GAAa,GACTqK,EAAsB,CACxB,IAAI+iC,EAAmB/iC,EAMH,IAADgjC,EAKoBC,EALvC,GAJAF,EAAmBA,EAAiBt3B,QACjCzkB,GAA8B,sBAArBA,EAAK02C,aAA2D,WAApB12C,EAAK0uC,aAGzD71B,EACFkjC,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBv3B,QAAQC,GACpCA,EAAMm0B,OAAShgC,IAG1B,GAAIkc,GAA+B,KAAhBA,EACjBgnB,EAAmC,QAAnBE,EAAGF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBx3B,QAAQC,IAAW,IAADw3B,EAAAC,EAAAC,EACrD,OACuB,QAArBF,EAAA/2B,KAAKk3B,UAAU33B,UAAM,IAAAw3B,OAAA,EAArBA,EAAuB5/B,SAASyY,MACX,QADuBonB,EAC5Ch3B,KAAKk3B,UAAU33B,UAAM,IAAAy3B,GAAqB,QAArBC,EAArBD,EAAuBG,2BAAmB,IAAAF,OAArB,EAArBA,EAA4C9/B,SAASyY,GAAY,IAKvE,GAAIumB,EAAuBj4C,OAAS,EAAG,CACrC,MAAM4gD,EAA2B3I,EAAuB72B,QAAQ7M,GAAgC,qBAAjBA,EAAE8+B,cAC7EuN,EAAyB5gD,OAAS,GAAiD,sBAA5C4gD,EAAyB,GAAGvN,aACrEqF,EAAiBt9B,SAAQ+9B,IACvByH,EAAyB,GAAGxH,QAAQh+B,SAAQi+B,IAC1C,GAAIF,EAAS,KAAME,EAAS,GAAG,CAC7BF,EAAK/0B,QAAQ2/B,uBAAyB1K,EAAKj1B,QAAQ8wB,iBACnD,MAAM4L,EAAc,IAAI5yB,IAAImrB,EAAKj1B,QAAQ8wB,iBAAiBr1C,KAAI0U,GAAKA,EAAEsR,mBAC/Dk7B,EAAqB5H,EAAK/0B,QAAQ8wB,iBAAiB9zB,QAAO4/B,IAAMF,EAAYG,IAAID,EAAEn7B,mBACxFszB,EAAK/0B,QAAQ88B,qBAAuBH,EACpC,IAAII,EAAchI,EAAK/0B,QAAQ2/B,uBAAuB3iC,QAAOo1B,IACxD2C,EAAK/0B,QAAQ8wB,iBAAiBthB,MAAKwtB,GAChC5K,EAAM3wB,kBAAoBu7B,EAAMv7B,iBAChC2wB,EAAMI,gBAAkBwK,EAAMxK,kBAGtCuC,EAAK/0B,QAAQi9B,iBAAmBF,EAChC,IAAIG,EAAuB,IAAInI,EAAK/0B,QAAQ8wB,oBAAsBiE,EAAK/0B,QAAQi9B,kBAC/ElI,EAAK/0B,QAAQ8wB,iBAAmBoM,CAClC,IACA,GAGR,CAEA,IAAI0C,EAAe,IAAItL,GAAkB74C,KAAIlD,IAAS,IAAD84C,EAAAC,EAoBnD,OAnBA/4C,EAAwB,kBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,OAAT,EAAJA,EAAeoB,kBAC3Cl6C,EAAsB,gBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,OAAT,EAAJA,EAAeR,iBACtC9zB,QAAO,CAACyS,EAAO9zB,EAAOwhD,IACrBxhD,IAAUwhD,EAAKC,WAAU19C,GAAKA,EAAE+hB,kBAAoBgO,EAAMhO,oBAE3DhmB,KAAIg0B,IAAU,IAAD8hB,EACZ,MAEM8L,IAFmB,OAAJ9kD,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,OAAT,EAAJA,EAAeuL,uBAAwB,IAGzDrhD,KAAI6hD,GACH7tB,EAAMhO,kBAAoB67B,EAAY77B,gBAClC,8BAA8B67B,EAAY77B,yBAC1C,KAELjB,KAAK,KAER,MAAO,QAAQiP,EAAMhO,gCAAgC47B,SAAmB,IAEzE78B,KAAK,IACDjoB,CAAI,IAGTyS,EAAOspC,EACV/0B,MAAK,CAACpJ,EAAGqJ,IAAMrJ,EAAE6J,QAAQyyB,kBAAkBxyB,cAAcT,EAAEQ,QAAQyyB,qBACnEh3C,KAAIlD,IAAS,IAADi5C,EAAAC,EAoBX,OAnBAl5C,EAAwB,kBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAATi5C,EAAJj5C,EAAMynB,eAAO,IAAAwxB,OAAT,EAAJA,EAAeiB,kBAC3Cl6C,EAAsB,gBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAATk5C,EAAJl5C,EAAMynB,eAAO,IAAAyxB,OAAT,EAAJA,EAAeX,iBACtC9zB,QAAO,CAACyS,EAAO9zB,EAAOwhD,IACrBxhD,IAAUwhD,EAAKC,WAAU19C,GAAKA,EAAE+hB,kBAAoBgO,EAAMhO,oBAE3DhmB,KAAIg0B,IAAU,IAADiiB,EACZ,MAEM2L,IAFmB,OAAJ9kD,QAAI,IAAJA,GAAa,QAATm5C,EAAJn5C,EAAMynB,eAAO,IAAA0xB,OAAT,EAAJA,EAAeoL,uBAAwB,IAGzDrhD,KAAI6hD,GACH7tB,EAAMhO,kBAAoB67B,EAAY77B,gBAClC,4EAA4E67B,EAAY77B,yBACxF,KAELjB,KAAK,KAER,MAAO,QAAQiP,EAAMhO,gCAAgC47B,SAAmB,IAEzE78B,KAAK,IACDjoB,CAAI,IAEbkG,YAAW,KACT01C,GAAuByL,GACvB3L,GAAiBjpC,GACjB9D,GAAa,EAAM,GAClB,IACL,KAAO,CACgB,IAADgvC,EAApB,IAAK9kC,EACHK,EAAoBgR,EAAAA,GAAwB,QAAfyzB,EAAGzzB,EAAAA,GAAU,UAAE,IAAAyzB,OAAA,EAAZA,EAAc11C,MAAQ,GAE1D,IACC,CAAC+Q,EAAsBH,EAAekc,EAAaumB,IAItD,MACOjmB,GAAcC,KAAmB/vB,EAAAA,EAAAA,UAAS,IAC3C+yB,GAAU,CACd,CACE/0B,KAAM,oBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcuI,sBAAsBtpC,QAAQupC,iBAAiB/sD,SAAC,wBAC/Fi+B,YAAa,EACbE,OAAQp2B,IAAA,IAAC,KAAEkQ,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMynC,mBAAwB,GAE5D,CACE32C,KAAM,kBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcuI,sBAAsBtpC,QAAQwpC,eAAehtD,SAAC,sBAC7Fi+B,YAAa,EACburB,UAAU,EACVrrB,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcuI,sBAAsBtpC,QAAQkhC,IAAI1kD,SAAC,wBAClFi+B,YAAa,EAEbC,aAAc,KAGZhD,IAAoBlvB,EAAAA,EAAAA,cAAY7D,IAAmB,IAAlB,SAAEosB,GAAUpsB,EACjDyyB,EAAYrG,EAAS,GACpB,KAEH/yB,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,GAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,GAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAcd,OACEt6B,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,8BAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,MAAK5C,SAAA,EAE1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAUszC,GACVvzC,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAnbrBo3B,OAmb2Cl9B,SAAC,mBAQzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAASwgD,QAAQ,WAAWniD,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAChFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,UACrFF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEqF,WAAY,SAAUyI,WAAY,QAAS/O,SAAC,4BAE9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,QAAS/B,UACpFF,EAAAA,EAAAA,KAACm0B,EAAY,CACXvmB,SAAUszC,GACV7sB,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,QAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACb6F,EAAY,CAAC,GACbE,GAAgB,IAEhBpc,EAAoBqW,GACpByF,EAAe,IACfM,GAAgB,GAAG,UAO3Bp6B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE+I,UAAW,MAAOjI,UAAW,SAAU/B,SAAA,EACzFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QAlTqBw9C,KACjChD,EAAkB,CAAEjC,KAAMhgC,IAC1BquC,EAAkB,IAClB9pB,EAAU,IACVC,EAAY,IACZC,EAAY,IACZH,EAAmB,IACnB0d,GAAuB,EAAK,EA4ShBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,SAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QACxB/C,QAhSkBw3B,KAAO,IAADkmB,EAAAC,EACpC,MAAMC,EAAiC,QAAlBF,EAAG3oB,GAAa,UAAE,IAAA2oB,OAAA,EAAfA,EAAiBv2B,QACnCoxB,EAAsB,QAAlBoF,EAAG5oB,GAAa,UAAE,IAAA4oB,OAAA,EAAfA,EAAiBpF,KAE9BiC,EAAkB,IACboD,EACHrF,SAEF,IAAK,MAAMvwC,KAAsB,QAAnB61C,EAAI9oB,GAAa,UAAE,IAAA8oB,GAAS,QAATC,EAAfD,EAAiB12B,eAAO,IAAA22B,OAAT,EAAfA,EAA0B7F,iBAAkB,CAAC,IAAD4F,EAAAC,EAAAC,EAAAC,EAC5D,MAAM/3B,EAA0B,QAAlB83B,EAAGhpB,GAAa,UAAE,IAAAgpB,GAAS,QAATC,EAAfD,EAAiB52B,eAAO,IAAA62B,OAAT,EAAfA,EAA0B/F,iBAAiBjwC,GAC5D0+C,EAAe1gD,KAAa,OAARigB,QAAQ,IAARA,OAAQ,EAARA,EAAU2C,gBAChC,CAEAiyB,GAAU,GACVN,GAAuB,EAAK,EAmRhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QACxB/C,QA5Say3B,KACzBmjB,EAAyB7lB,GAAa,IACtCV,GAAgB,EAAK,EA2STl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPmwB,GAAkB,EAAK,EAEzBh1B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAIDF,EAAAA,EAAAA,KAACikD,GAAmB,CAClBtnC,MAAO,sBACPy/B,YAAa,oBACbpjB,mBAAoB+B,GACpBzB,SAAUA,WAMhBt5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAI1E,MAAO,CAAE+I,UAAW,QAAShK,UAC9CU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAxKE,CAAE2b,UAAW,KAyKfkhB,QAASA,GACTM,WAAyB,OAAbhF,EAAoB+xB,GAA6BwB,GAC7D3H,UAAW,OACX3mB,gBAAc,EACdR,aAAc,IACdtJ,SAAUA,EACV2G,kBAAmBA,GACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrD4hC,SA9IC3pC,IAAe,IAAd,KAAE4N,GAAM5N,EACxB,MAAM4pC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IACvD,MAAO,CACL6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC5D7xB,OAAQ,kBACR4D,WAAY,SACb,EAuIai4B,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACnH7B,iBAvIc3D,IAC5BuB,GAAYvB,EAAS,cA8IhBz5B,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAEPW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CACf,iFAAiF,KAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAyB,OAArBygD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBpC,QAE9Gv+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEskD,GAASC,cAAcvzC,OAAOi0C,iBAGhDvkD,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+4B,GAAkB7+B,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA1WgB2F,UAC9B,UACQ80C,EAAmBxE,0BAA0B,CAAE9jC,KAAM4iB,KAAgBziB,MAAKwI,IAC9Eie,KACA/D,GAAgB,IAChB4lB,EAAyB,IACzB9lB,EAAY,CAAC,EAAE,GAEnB,CAAE,MAAO32B,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CAEA6/B,GAAoB,4CAA6C,WACjEkY,KACAlhB,GAAgB,GAAG,EA4V4B96B,SAAC,kBAI9CF,EAAAA,EAAAA,KAACmtD,GAAuB,CACtB7sD,KAAMggD,EACN+E,0BAxY4BA,KAChC9E,GAAuB,EAAM,EAwYzBzG,4BAA6BA,GAC7BE,eAAgBA,EAChBC,2BArjB8Bz5C,IAClC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OAuB9B,GArBa,WAAT7E,GACF65B,EAAUn1B,GAEC,aAAT1E,GACF85B,EAAYp1B,GAGD,SAAT1E,GACF2jD,EAAkB,IAGP,sBAAT3jD,IAEFu3C,EAAkB,IACbxG,EACHuE,KAAM,KAERqO,EAAkB,KAIP,oBAAT3jD,EACF2jD,EAAkBj/C,OAEb,CAEL,MAAM21B,EAAc,IACf0W,EACH,CAAC/wC,GAAO0E,GAEV6yC,EAAkBld,EACpB,GAohBIuiB,qBA9euBA,KAC3B,MAAMP,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GAAaA,EAASmN,eAAiB4gB,EAAe4F,oBAEzD,IAAIwN,EAA4B,GAUhC,GARAA,EAA0C,OAAdV,QAAc,IAAdA,OAAc,EAAdA,EAAgB9jD,KAAKlD,IAC/C,MAAMumB,EAAWzN,EAAc+Q,MAAM89B,GAAMA,EAAEj0B,eAAiB1zB,IAC9D,MAAO,CACL6G,GAAI0f,EAAWA,EAAS1f,GAAK,KAC7BqiB,gBAAiBlpB,EAClB,KAIAs0C,EAAe4F,oBACf5F,EAAeuE,OACF,OAAdmO,QAAc,IAAdA,OAAc,EAAdA,EAAgB3jD,QAAS,EAEzBi7B,GAAoB,mCAAoC,aAL1D,CASA,GAAIgW,EAAgB,CAAC,IAADsT,EAAAC,EAClB,MAAM/H,EAAqB,CACzBpJ,YAAa,oBACbmC,KAAMvE,EAAeuE,KACrBpxB,QAAS,CACPyyB,kBAAmB5F,EAAe4F,kBAClCgM,uBAAqC,QAAf0B,EAAEhI,EAAW,UAAE,IAAAgI,OAAA,EAAbA,EAAe/gD,GACvC0xC,iBAAkBmP,GAIpB7gD,IACe,QAAbghD,EAAAjI,EAAW,UAAE,IAAAiI,OAAA,EAAbA,EAAehhD,IACf,IACAytC,EAAeuE,KAAKpwC,OAFpB,uBAMW,IAAXgqC,EACFsI,EACG1E,sBAAsByJ,GACtBltC,MAAMotB,IACgB,aAAb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACR4yC,KACAtwC,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KACHvc,GAAoB,yCAA0C,YACpC,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,IAGJioC,EACGzE,sBAAsBwJ,GACtBltC,MAAMotB,IACe,YAAhBA,EAAKp8B,QACPsC,YAAW,KACT20C,GAAuB,GACvBiB,KACAtF,IAAW,GACV,KACH2E,GAAU,GACV7c,GACE,2CACA,YAEwB,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAKktB,EAAKp8B,OACtC,GAGR,CAEAwwC,IAxDA,CAwD6B,EAkazB4S,eAAgBA,EAChBvU,OAAQA,EACR7X,OAAQA,EACRhJ,SAAUA,EACViJ,aAthBeA,KACnB,MAAMiG,EAAY7F,EAAgBhE,MAAMjjB,GAAQA,EAAI1L,MAAQsyB,IACtDmG,EAAc9F,EAAgBhE,MAAMjjB,GAAQA,EAAI/L,QAAU2pB,IAC1DguB,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GAAaA,EAASmN,eAAiBkH,IAEtCkG,GAAaC,EACfzD,EAAY,mCAGT1C,GAAWhJ,GAKhBuL,GAAoB6D,IAAQ,IAAA6lB,EAAA,MAAK,IAC5B7lB,EACH,CACEsX,uBAAwB1d,EACxBh3B,OAAQguB,EACR/qB,GAAiB,QAAfggD,EAAEjH,EAAW,UAAE,IAAAiH,OAAA,EAAbA,EAAehgD,IAEtB,IACDu2B,EAAU,IACVC,EAAY,IACZC,EAAY,KAdVA,EAAY,mCAcC,EA8fXxC,gBA5fmB13B,IACvB+5B,GAAoB6D,IAClB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQxB,OAAOr8B,EAAO,GACf69B,CAAO,GACd,EAwfElG,SAAUA,EACVE,gBAAiBA,EACjBniB,cAAeA,EACfykB,WAAY1kB,KAGdve,EAAAA,EAAAA,KAAC0lD,GAAoB,CACnB/oC,MAAO,sCACPy/B,YAAa,oBACbnZ,WAAY1kB,EACZ2X,eAAgBA,EAChBgmB,UAAWA,GACX/lB,kBAAmBA,MACV,ECtqBjB,GALiCq3B,KAEzBxtD,EAAAA,EAAAA,KAAC2sD,GAAqB,ICW9B,GAXgC,CAC9B,CACE3jD,KAAM,yBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACwtD,GAAwB,QCmHjC,GAhH0B7tD,IAUnB,IAVoB,KACzBW,EAAI,4BACJw5C,EAA2B,eAC3B2T,EAAc,eACdzT,EAAc,2BACdC,EAA0B,qBAC1B4L,EAAoB,OACpB1N,EAAM,cACN35B,EAAa,WACbykB,GACDtjC,EACC,MAAOw6C,EAAgBC,IAAqBnvC,EAAAA,EAAAA,UAAS,KAC9CovC,EAAmBC,IAAwBrvC,EAAAA,EAAAA,UAAS,IAQ3D,OAPAvJ,EAAAA,EAAAA,YAAU,KACR,GAAIuhC,EAAY,CACd,IAAIsX,EAAW/7B,EAAc2L,QAAOqwB,IAAI,IAAAC,EAAA,OAAQ,OAAJD,QAAI,IAAJA,GAAQ,QAAJC,EAAJD,EAAM7kC,UAAE,IAAA8kC,OAAJ,EAAJA,EAAUz4B,SAASihB,EAAW,IAC1EmX,EAAkBG,EACpB,CACAD,EAAqB,CAACrX,GAAY,GACjC,CAACA,EAAYzkB,EAAew7B,EAAeuE,QAE5C39C,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EAAKJ,SAAA,EACjBU,EAAAA,EAAAA,MAACkV,GAAAA,EAAW,CAAA5V,SAAA,CACT,IACAi4C,EAAS,gCAAkC,mCAE9Cn4C,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,8BACsBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAG7DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLvN,KAAK,wBACLoE,WAAS,EACTM,MAAOqsC,EAAe6F,sBACtBjyC,SAAUqsC,EACVt2C,SAAUw0C,EAAOj4C,SAEF,OAAdi6C,QAAc,IAAdA,OAAc,EAAdA,EAAgBvxC,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOwiB,aAAal5B,SAC5D0W,EAAOwiB,cADKxiB,EAAOwiB,qBAO5Bp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGvDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,OACLoE,WAAS,EACTM,MAAOs1B,EACPr1B,SAAUqsC,EACVt2C,UAAQ,EAAAzD,SAEU,OAAjBm6C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBzxC,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAclJ,MAAOiJ,EAAO1W,SAClC0W,GADYA,UAOrB5W,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,+BACuBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAI9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChBg2B,UAAQ,EACR9tB,KAAK,yBACL0E,MAAO8/C,EACP7/C,SAAUqsC,EACVzlB,YAAcC,GAAqB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU9G,KAAK,MAC1C4W,UAAW,CACT7jC,GAAI,CACF,mBAAoB,CAClB0O,gBAAiB,2BAGrBlP,SAEa,OAAdi6C,QAAc,IAAdA,OAAc,EAAdA,EAAgBvxC,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOwiB,aAAal5B,SAC5D0W,EAAOwiB,cADKxiB,EAAOwiB,0BAQhCx4B,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS8zC,EAA4B55C,SAAC,YAC9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS6/C,EAAqB3lD,SACnCi4C,EAAS,SAAW,aAGlB,ECxFPle,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IA+nBD,GA7nBwBslD,KACtB,MAAM,YAAE/uC,IAAgBrJ,EAAAA,EAAAA,MAClB,cACJkJ,EAAa,cACbD,EAAa,qBACbG,EAAoB,oBACpBE,EAAmB,2BACnBI,IACE1J,EAAAA,EAAAA,MAEG4gB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1Cq1C,EAAqBC,IAA0Bt1C,EAAAA,EAAAA,WAAS,IACxD+uC,EAAgBwG,IAAqBv1C,EAAAA,EAAAA,UAAS,CAAC,IAC/C0iD,EAAcC,IAAmB3iD,EAAAA,EAAAA,UAAS,KAC1CwiD,EAAgBI,IAAqB5iD,EAAAA,EAAAA,UAAS,IAC/C2U,EAAiB,IAAIzG,GAAAA,EACrBsnC,EAAqB,IAAI7E,GACzB8E,EAAkB,IAAIxF,IACrByF,EAAuBC,IAA4B31C,EAAAA,EAAAA,aACnDktC,EAAQ0I,IAAa51C,EAAAA,EAAAA,WAAS,IAC9B01B,EAAiBkC,IAAsB53B,EAAAA,EAAAA,UAAS,KAChD+1C,EAAwBC,IAA6Bh2C,EAAAA,EAAAA,UAAS,KAC9Dq1B,EAAQwC,IAAa73B,EAAAA,EAAAA,UAAS,KAC9BqsB,EAAUyL,IAAe93B,EAAAA,EAAAA,UAAS,KAClCw1B,EAAUuC,IAAe/3B,EAAAA,EAAAA,UAAS,KAClCiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MACnCgwB,IAAUnpB,EAAAA,EAAAA,QAAO,OAChBwnB,GAAUuB,KAAe5vB,EAAAA,EAAAA,UAAS,CAAC,GACpCiwB,GAAUD,IAAWA,GAAQ3oB,SAAW2oB,GAAQ3oB,QAAQ4oB,QAAUD,GAAQ3oB,QAAQ4oB,QAAU,KAC5FgmB,GAA2B1gD,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAI1B4B,GAAoBA,KACxB1E,GAAgB,EAAM,EAGlB2J,GAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EA8KE4uC,GAA8BA,KAClCyG,GAAuB,GACvBC,EAAkB,IAClBoN,EAAgB,IAChBC,EAAkB,IAClB7yB,GAAgB,IAChBF,EAAY,CAAC,GACb+lB,GAAU,EAAM,EAgDZ3E,GAAYA,KAChB7nC,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAM,GACnB,GAEJ3S,EAAAA,EAAAA,YAAU,KACR2S,EAAasK,EAAY,GACxB,CAACA,IACJ,MAAOwiC,GAAeC,KAAoBn2C,EAAAA,EAAAA,UAAS,KAC5Co2C,GAAqBC,KAA0Br2C,EAAAA,EAAAA,UAAS,IAEzD6iD,IAA8BvhC,EAAAA,GAAAA,IAAc40B,GAAe,0BAEjEz/C,EAAAA,EAAAA,YAAU,KACR8/C,IAAgB,GACf,IAEH,MAAMA,GAAiBA,KACrBntC,GAAa,GACbqsC,EAAgBvF,qBAAqB7iC,MAAMwI,IACzC,IAAIy9B,EAAOhgC,GAAgC,eACvCwQ,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,IAChE0C,EAA0BlyB,GAC1B1a,GAAa,EAAM,GACnB,GAGJ3S,EAAAA,EAAAA,YAAU,KAER,GADA2S,GAAa,GACTqK,EAAsB,CACxB,IAAI+iC,EAAmB/iC,EAKH,IAADgjC,EAKoBC,EALvC,GAJAF,EAAmBA,EAAiBt3B,QACjCzkB,GAA8B,2BAArBA,EAAK02C,aAAgE,WAApB12C,EAAK0uC,aAG9D71B,EACFkjC,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBv3B,QAAQC,GACpCA,EAAMm0B,OAAShgC,IAG1B,GAAIkc,GAA+B,KAAhBA,EACjBgnB,EAAmC,QAAnBE,EAAGF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBx3B,QAAQC,IAAW,IAADw3B,EAAAC,EAAAC,EACrD,OACuB,QAArBF,EAAA/2B,KAAKk3B,UAAU33B,UAAM,IAAAw3B,OAAA,EAArBA,EAAuB5/B,SAASyY,MACX,QADuBonB,EAC5Ch3B,KAAKk3B,UAAU33B,UAAM,IAAAy3B,GAAqB,QAArBC,EAArBD,EAAuBG,2BAAmB,IAAAF,OAArB,EAArBA,EAA4C9/B,SAASyY,GAAY,IAKvE,GAAIumB,EAAuBj4C,OAAS,EAAG,CACrC,MAAM4gD,EAA2B3I,EAAuB72B,QAAQ7M,GAAgC,0BAAjBA,EAAE8+B,cAC7EuN,EAAyB5gD,OAAS,GAAiD,2BAA5C4gD,EAAyB,GAAGvN,aACrEqF,EAAiBt9B,SAAQ+9B,IACvByH,EAAyB,GAAGxH,QAAQh+B,SAAQi+B,IAC1C,GAAIF,EAAS,KAAME,EAAS,GAAG,CAC7BF,EAAK/0B,QAAQ4gC,6BAA+B3L,EAAKj1B,QAAQ+wB,uBACzD,MAAM2L,EAAc,IAAI5yB,IAAImrB,EAAKj1B,QAAQ+wB,uBAAuBt1C,KAAI0U,GAAKA,EAAE4gC,0BACrE4L,EAAqB5H,EAAK/0B,QAAQ+wB,uBAAuB/zB,QAAO4/B,IAAMF,EAAYG,IAAID,EAAE7L,0BAC9FgE,EAAK/0B,QAAQ88B,qBAAuBH,EACpC,IAAII,EAAchI,EAAK/0B,QAAQ4gC,6BAA6B5jC,QAAOo1B,IAC9D2C,EAAK/0B,QAAQ+wB,uBAAuBvhB,MAAKwtB,GACtC5K,EAAMrB,yBAA2BiM,EAAMjM,wBACvCqB,EAAMI,gBAAkBwK,EAAMxK,kBAGtCuC,EAAK/0B,QAAQi9B,iBAAmBF,EAChC,IAAIG,EAAuB,IAAInI,EAAK/0B,QAAQ+wB,0BAA4BgE,EAAK/0B,QAAQi9B,kBACrFlI,EAAK/0B,QAAQ+wB,uBAAyBmM,CACxC,IACA,GAGR,CAEA,IAAIlyC,EAAOspC,EAAiB74C,KAAIlD,IAAS,IAAD84C,EAAAC,EAoBtC,OAnBA/4C,EAA4B,sBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,OAAT,EAAJA,EAAeqB,sBAC/Cn6C,EAA6B,uBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,OAAT,EAAJA,EAAeP,uBAC7C/zB,QAAO,CAACyS,EAAO9zB,EAAOwhD,IACrBxhD,IAAUwhD,EAAKC,WAAU19C,GAAKA,EAAEqxC,yBAA2BthB,EAAMshB,2BAElEt1C,KAAIg0B,IAAU,IAAD8hB,EACZ,MAEM8L,IAFmB,OAAJ9kD,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,OAAT,EAAJA,EAAeuL,uBAAwB,IAGzDrhD,KAAI6hD,GACH7tB,EAAMshB,yBAA2BuM,EAAYvM,uBACzC,4EAA4EuM,EAAYvM,gCACxF,KAELvwB,KAAK,KAER,MAAO,QAAQiP,EAAMshB,uCAAuCsM,SAAmB,IAEhF78B,KAAK,IACDjoB,CAAI,IAEbkG,YAAW,KACT01C,GAAuBG,GACvBL,GAAiBjpC,GACjB9D,GAAa,EAAM,GAClB,IAEL,KAAO,CACgB,IAADgvC,EAApB,IAAK9kC,EACHK,EAAoBgR,EAAAA,GAAwB,QAAfyzB,EAAGzzB,EAAAA,GAAU,UAAE,IAAAyzB,OAAA,EAAZA,EAAc11C,MAAQ,GAE1D,IACC,CAAC+Q,EAAsBH,EAAekc,EAAaumB,IAKtD,MACOjmB,GAAcC,KAAmB/vB,EAAAA,EAAAA,UAAS,IAC3C+yB,GAAU,CAEd,CACE/0B,KAAM,wBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcuJ,gBAAgBtqC,QAAQuqC,oBAAoB/tD,SAAC,iCAC5Fi+B,YAAa,EACbE,OAAQp2B,IAAA,IAAC,KAAEkQ,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM0nC,uBAA4B,GAEhE,CACE52C,KAAM,yBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcuJ,gBAAgBtqC,QAAQwqC,qBAAqBhuD,SAAC,+BAC7Fi+B,YAAa,EACburB,UAAU,EACVrrB,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,UAGnD,CACE1E,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAcuJ,gBAAgBtqC,QAAQkhC,IAAI1kD,SAAC,wBAC5Ei+B,YAAa,EACbC,aAAc,KAGZhD,IAAoBlvB,EAAAA,EAAAA,cAAY7D,IAAmB,IAAlB,SAAEosB,GAAUpsB,EACjDyyB,EAAYrG,EAAS,GACpB,KAEH/yB,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,GAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,GAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,KAgBd,OACEt6B,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,kCAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,MAAK5C,SAAA,EAE1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAUszC,GACVvzC,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QA1arBo3B,OA0a2Cl9B,SAAC,mBAQzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAASwgD,QAAQ,WAAWniD,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAChFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,UACrFF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEqF,WAAY,SAAUyI,WAAY,QAAS/O,SAAC,4BAE9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,QAAS/B,UACpFF,EAAAA,EAAAA,KAACm0B,EAAY,CACXvmB,SAAUszC,GACV7sB,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,QAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACb6F,EAAY,CAAC,GACbE,GAAgB,IAEhBpc,EAAoBqW,GACpByF,EAAe,IACfM,GAAgB,GAAG,UAO3Bp6B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE+I,UAAW,MAAOjI,UAAW,SAAU/B,SAAA,EACzFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QAjSqBw9C,KACjChD,EAAkB,CAAEjC,KAAMhgC,IAC1BqvC,EAAgB,IAChB9qB,EAAU,IACVC,EAAY,IACZC,EAAY,IACZH,EAAmB,IACnB0d,GAAuB,EAAK,EA2RhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,SAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QACxB/C,QA7QkBw3B,KAAO,IAADkmB,EAAAC,EACpC,MAAMC,EAAiC,QAAlBF,EAAG3oB,GAAa,UAAE,IAAA2oB,OAAA,EAAfA,EAAiBv2B,QACnCoxB,EAAsB,QAAlBoF,EAAG5oB,GAAa,UAAE,IAAA4oB,OAAA,EAAfA,EAAiBpF,KAE9BiC,EAAkB,IACboD,EACHrF,SAEF,IAAK,MAAMvwC,KAAsB,QAAnB61C,EAAI9oB,GAAa,UAAE,IAAA8oB,GAAS,QAATC,EAAfD,EAAiB12B,eAAO,IAAA22B,OAAT,EAAfA,EAA0B5F,uBAAwB,CAAC,IAAD2F,EAAAC,EAAAC,EAAAC,EAClE,MAAM/3B,EAA0B,QAAlB83B,EAAGhpB,GAAa,UAAE,IAAAgpB,GAAS,QAATC,EAAfD,EAAiB52B,eAAO,IAAA62B,OAAT,EAAfA,EAA0B9F,uBAAuBlwC,GAClEy/C,EAAezhD,KAAa,OAARigB,QAAQ,IAARA,OAAQ,EAARA,EAAUiyB,uBAChC,CAEA2C,GAAU,GACVN,GAAuB,EAAK,EAgQhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QAExB/C,QA3Ray3B,KACzBmjB,EAAyB7lB,GAAa,IACtCV,GAAgB,EAAK,EA0RTl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPmwB,GAAkB,EAAK,EAEzBh1B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAIDF,EAAAA,EAAAA,KAACikD,GAAmB,CAClBtnC,MAAO,2BACPy/B,YAAa,yBACbpjB,mBAAoB+B,GACpBzB,SAAUA,YAMhBt5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAI1E,MAAO,CAAE+I,UAAW,QAAShK,UAC9CU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MA3KE,CAAE2b,UAAW,KA4KfkhB,QAASA,GACTM,WAAyB,OAAbhF,GAAoB+nB,GAAsByM,GACtD5I,UAAW,OACX3mB,gBAAc,EACdR,aAAc,IACdtJ,SAAUA,EACV2G,kBAAmBA,GACnBoD,OAAQzrB,GAAOkoB,GAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrD4hC,SAhJC3pC,IAAe,IAAd,KAAE4N,GAAM5N,EACxB,MAAM4pC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IACvD,MAAO,CACL6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC1D7xB,OAAQ,kBACR4D,WAAY,SAEf,EAwIai4B,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,SAAO,IAAPA,IAAgB,QAAT0D,EAAP1D,GAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QAAY,EAAW,OAAPkyB,SAAO,IAAPA,IAAgB,QAAT2D,EAAP3D,GAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACjH7B,iBAxIY3D,IAC5BuB,GAAYvB,EAAS,cAgJhBz5B,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAEPW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CACf,qFAAqF,KAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAyB,OAArBygD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBpC,QAClHv+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEskD,GAASC,cAAcvzC,OAAOi0C,iBAGhDvkD,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+4B,GAAkB7+B,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAxVgB2F,UAC9B,UACQ80C,EAAmBxE,0BAA0B,CAAE9jC,KAAM4iB,KAAgBziB,MAAKwI,IAC9Eie,KACA/D,GAAgB,IAChB4lB,EAAyB,IACzB9lB,EAAY,CAAC,EAAE,GAEnB,CAAE,MAAO32B,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CAEA6/B,GACE,wDACA,WAEFkY,KACAlhB,GAAgB,GAAG,EAuU4B96B,SAAC,kBAI9CF,EAAAA,EAAAA,KAACmuD,GAAiB,CAChB7tD,KAAMggD,EACN+E,0BAvX4BA,KAChC9E,GAAuB,EAAM,EAuXzBzG,4BAA6BA,GAC7BE,eAAgBA,EAChBC,2BA7iB8Bz5C,IAClC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OAwB9B,GAtBa,WAAT7E,GACF65B,EAAUn1B,GAEC,aAAT1E,GACF85B,EAAYp1B,GAGD,SAAT1E,GAEF2kD,EAAgB,IAGL,0BAAT3kD,IAEFu3C,EAAkB,IACbxG,EACHuE,KAAM,KAERqP,EAAgB,KAIL,2BAAT3kD,EACF4kD,EAAkBlgD,OAEb,CAEL,MAAM21B,EAAc,IACf0W,EACH,CAAC/wC,GAAO0E,GAEV6yC,EAAkBld,EACpB,GA2gBIuiB,qBAreuBA,KAC3B,MAAMP,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GACCA,EAASmN,eAAiB4gB,EAAe6F,wBAE7C,IAAIuO,EAAkC,GAUtC,GARAA,EAAgD,OAAdX,QAAc,IAAdA,OAAc,EAAdA,EAAgB7kD,KAAKlD,IACrD,MAAMumB,EAAWzN,EAAc+Q,MAAM89B,GAAMA,EAAEj0B,eAAiB1zB,IAC9D,MAAO,CACL6G,GAAI0f,EAAWA,EAAS1f,GAAK,KAC7B2xC,uBAAwBx4C,EACzB,KAIAs0C,EAAe6F,wBACf7F,EAAeuE,OACF,OAAdkP,QAAc,IAAdA,OAAc,EAAdA,EAAgB1kD,QAAS,EAEzBi7B,GAAoB,mCAAoC,aAL1D,CASA,GAAIgW,EAAgB,CAAC,IAADsT,EAAAC,EAClB,MAAM/H,EAAqB,CACzBpJ,YAAa,yBACbmC,KAAMvE,EAAeuE,KACrBpxB,QAAS,CACP0yB,sBAAuB7F,EAAe6F,sBACtC+L,uBAAqC,QAAf0B,EAAEhI,EAAW,UAAE,IAAAgI,OAAA,EAAbA,EAAe/gD,GACvC2xC,uBAAwBkQ,GAG1B7hD,IACe,QAAbghD,EAAAjI,EAAW,UAAE,IAAAiI,OAAA,EAAbA,EAAehhD,IACf,IACAytC,EAAeuE,KAAKpwC,OAFpB,4BAQW,IAAXgqC,EACFsI,EACG1E,sBAAsByJ,GACtBltC,MAAMotB,IACgB,aAAb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACR4yC,KACAphB,EAAY,CAAC,GACblvB,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KAEHvc,GAAoB,qDAAsD,YAEhD,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,IAGJioC,EACGzE,sBAAsBwJ,GACtBltC,MAAMotB,IACe,YAAhBA,EAAKp8B,QACPk4C,KACAtF,KACAphB,EAAY,CAAC,GACblvB,YAAW,KACT20C,GAAuB,EAAM,GAE5B,KACHM,GAAU,GACV7c,GACE,uDACA,YAEwB,WAAb,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACf06B,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAK,QACjC,GAGR,CAEAshC,IA9DA,CA8D6B,EAkZzB6T,aAAcA,EACdF,eAAgBA,EAChBtV,OAAQA,EACR7X,OAAQA,EACRhJ,SAAUA,EACViJ,aA9gBeA,KACnB,MAAMiG,EAAY7F,EAAgBhE,MAAMjjB,GAAQA,EAAI1L,MAAQsyB,IACtDmG,EAAc9F,EAAgBhE,MAAMjjB,GAAQA,EAAI/L,QAAU2pB,IAC1DguB,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GAAaA,EAASmN,eAAiBkH,IAEtCkG,GAAaC,EACfzD,EAAY,mCAGT1C,GAAWhJ,GAKhBuL,GAAoB6D,IAAQ,IAAA6lB,EAAA,MAAK,IAC5B7lB,EACH,CACEsX,uBAAwB1d,EACxBh3B,OAAQguB,EACR/qB,GAAiB,QAAfggD,EAAEjH,EAAW,UAAE,IAAAiH,OAAA,EAAbA,EAAehgD,IAEtB,IACDu2B,EAAU,IACVC,EAAY,IACZC,EAAY,KAdVA,EAAY,mCAcC,EAsfXxC,gBApfmB13B,IACvB+5B,GAAoB6D,IAClB,MAAMC,EAAU,IAAID,GAEpB,OADAC,EAAQxB,OAAOr8B,EAAO,GACf69B,CAAO,GACd,EAgfElG,SAAUA,EACVE,gBAAiBA,EACjBniB,cAAeA,EACfykB,WAAY1kB,KAGdve,EAAAA,EAAAA,KAAC0lD,GAAoB,CACnB/oC,MAAO,2CACPy/B,YAAa,yBACbnZ,WAAY1kB,EACZ2X,eAAgBA,EAChBgmB,UAAWA,GACX/lB,kBAAmBA,MACV,EC3pBjB,GAL2Bk4B,KAEnBruD,EAAAA,EAAAA,KAAC0tD,GAAe,ICSxB,GAV0B,CACxB,CACE1kD,KAAM,mBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACquD,GAAkB,Q,cCU3B,MAAMzI,GAAY,CAAE9oC,UAAW,KAEzBwxC,GAAoB,CACxB,CAAErlD,KAAM,aAAc0E,MAAO,cAC7B,CAAE1E,KAAM,aAAc0E,MAAO,cAC7B,CAAE1E,KAAM,aAAc0E,MAAO,cAC7B,CAAE1E,KAAM,SAAU0E,MAAO,UACzB,CAAE1E,KAAM,UAAW0E,MAAO,WAC1B,CAAE1E,KAAM,SAAU0E,MAAO,WAErB4gD,GAAmB,CACvB,CAAEtlD,KAAM,MAAO0E,MAAO,OACtB,CAAE1E,KAAM,SAAU0E,MAAO,WAErB6gD,GAAa,CACjB,CAAEvlD,KAAM,MAAO0E,MAAO,OACtB,CAAE1E,KAAM,KAAM0E,MAAO,OAEjB8gD,GAAiB,CAAC,CAAExlD,KAAM,aAAc0E,MAAO,cACrD,CAAE1E,KAAM,gBAAiB0E,MAAO,iBAChC,CAAE1E,KAAM,iBAAkB0E,MAAO,kBACjC,CAAE1E,KAAM,iBAAkB0E,MAAO,mBA4OjC,GA3OsBhO,IAYf,IAZgB,KACrBW,EAAI,4BACJw5C,EAA2B,eAC3BE,EAAc,2BACdC,EAA0B,iBAC1ByU,EAAgB,OAChBvW,EAAM,mBACN9iC,EAAkB,cAClBkJ,EAAa,kBACbowC,EAAiB,eACjBC,EAAc,gBACdC,GACDlvD,EACC,MAAOq7C,EAAgB8T,IAAqB7jD,EAAAA,EAAAA,UAAS,KAC9C8jD,EAAiBC,IAAsB/jD,EAAAA,EAAAA,UAAS,KAChDgkD,EAAcC,IAAmBjkD,EAAAA,EAAAA,UAAS,KAC1CqzB,EAAY6wB,IAAiBlkD,EAAAA,EAAAA,UAAS,KAC7CvJ,EAAAA,EAAAA,YAAU,KAAO,IAADu5C,EAAAmU,EAId,IAAIC,IAFgB,OAAlBh6C,QAAkB,IAAlBA,GAAmE,QAAjD4lC,EAAlB5lC,EAAoBka,MAAMqN,GAAUA,EAAM9lB,SAAWyH,WAAc,IAAA08B,OAAjD,EAAlBA,EAAqEz0B,SAAU,IAC/E8oC,OAAO,CAAEzyB,UAAW,OAAQtwB,GAAI,SACf3D,KAAKlD,IACZ,CACR,KAAQA,EAAKm3B,UACb,MAASn3B,EAAKm3B,cAIlBiyB,EAAkBO,GAClB,IAAIE,GAA2C,OAAlBl6C,QAAkB,IAAlBA,GAAmE,QAAjD+5C,EAAlB/5C,EAAoBka,MAAMqN,GAAUA,EAAM9lB,SAAWyH,WAAc,IAAA6wC,OAAjD,EAAlBA,EAAqE5oC,SAAU,GAY5G,GAXA+oC,EAAuB3mD,KAAI,CAACg0B,EAAO9zB,KACjC8zB,EAAMjvB,MAAQ,GACdivB,EAAMrwB,GAAKzD,EACJqmB,OAAOq8B,OAAO,CAAC,EAAG5uB,MAE3B2yB,GAAyBC,EAAAA,GAAAA,SAAQZ,EAAgBW,EAAwB,aACzEJ,EAAcI,GACdZ,EAAkBY,GAElBr4C,QAAQC,IAAIy3C,EAAgB,iCAC5BM,EAAgBT,IACZtW,EAEF,OADAjhC,QAAQC,IAAI6iC,EAAe9qB,OAAQ,yBAC3B8qB,EAAe9qB,QACrB,IAAK,aACH8/B,EAAmBV,IACnBO,EAAgB,GAChB,MACF,IAAK,gBACHG,EAAmBT,IACnBM,EAAgB,GAChB,MACF,IAAK,iBACHG,EAAmBhU,GACnB6T,EAAgB,GAChB,MACF,IAAK,iBACHG,EAAmBR,IACnBK,EAAgB,GAChB,MACF,QACEG,EAAmB,IAGzB,GAEC,CAACzwC,EAAelJ,EAAoB2kC,EAAe9qB,OAAQipB,IAC9D,MAAMsX,EAAc,CAClBxmD,KAAM,QACNg1B,OAAQ,QACRE,YAAa,EAAGthB,SAAU,IAC1B6yC,qBAAqB,EACrBC,UAAU,EACVjG,UAAU,EACVrrB,OAAQA,CAAAp2B,EAAAI,KAA+B,IAA9B,MAAEsF,GAAO1F,GAAE,UAAE2nD,GAAWvnD,EAC3BwnD,EAAID,EAAUE,UAAUC,OACxBH,EAAUE,UAAUniD,MACpBA,EACJ,OACE3N,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChByM,KAAK,QACLiL,UAAWm3C,EAAUG,OACrB9mD,KAAM2mD,EAAUz3C,KAAK0kB,UACrBlvB,MAAOkiD,EACP3rB,OAAQr2B,IACN+hD,EAAUE,UAAUE,WAAWniD,EAAE,EAEnCD,SAAUqiD,EACVC,QAASA,IAAMN,EAAUE,UAAUK,YAAYjwD,SAE/B,OAAf6uD,QAAe,IAAfA,OAAe,EAAfA,EAAiBnmD,KAAKgO,IACrB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAmBlJ,MAAOiJ,EAAO3N,KAAK/I,SAC5C0W,EAAO3N,MADK2N,EAAO3N,SAIjB,GAKTgyB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBksB,EAAU,CACd,CAAE/0B,KAAM,KAAMg1B,OAAQ,KAAMuoB,gBAAgB,EAAOpoB,aAAc,GAAIl9B,KAAM,UAC3E,CACE+H,KAAM,YACNm1B,aAAc,IACdH,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAc2L,eAAe1sC,QAAQ2sC,UAAUnwD,SAAC,eACjFm+B,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM0kB,WAAgB,GAEpD4yB,GAGIQ,EAAiBzvD,IAErB,IAAI8vD,EADS,IAAIhyB,GACE11B,KAAIlD,IACjBA,EAAKm3B,YAAcr8B,EAAMsN,OAAO7E,OAClCvD,EAAKiI,MAAQnN,EAAMsN,OAAOH,OAErBwhB,OAAOq8B,OAAO,CAAC,EAAG9lD,MAE3BypD,EAAcmB,GACd3B,EAAkB2B,EAAQ,EA2B5B,OACE1vD,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EAAKJ,SAAA,EACjBU,EAAAA,EAAAA,MAACkV,GAAAA,EAAW,CAAA5V,SAAA,CACT,IACAi4C,EAAS,0BAA4B,4BAExCn4C,EAAAA,EAAAA,KAACynD,GAAAA,GAAU,CACTC,YAAU,EACVC,cAAe,IACfC,cAAe,IACfC,UAAQ,EACRC,gBAAiB,IACjBnvC,iBAAkB,IAAIzY,UAEtBF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGvDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,OACLoE,WAAS,EACTM,MAAO4Q,EACP3Q,SAAUqsC,EACVt2C,UAAQ,EAAAzD,SAEW,OAAlBmV,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBzM,KAAKgO,IACxB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOge,aAAa10B,SAC5D0W,EAAOge,cADKhe,EAAOge,qBAO5B50B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,WACGF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAG1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLrV,MAAO,CAAEJ,MAAO,QAChBkI,KAAK,SACL0E,MAAOqsC,EAAe9qB,OACtBthB,SAzEcpN,IAG1B,OAFAy5C,EAA2Bz5C,GACNA,EAAMsN,OAAOH,OAEhC,IAAK,aACHqhD,EAAmBV,IACnBO,EAAgB,GAChB,MACF,IAAK,gBACHG,EAAmBT,IACnBM,EAAgB,GAChB,MACF,IAAK,iBACHG,EAAmBhU,GACnB6T,EAAgB,GAChB,MACF,IAAK,iBACHG,EAAmBR,IACnBK,EAAgB,GAChB,MACF,QACEG,EAAmB,IAEvB,EAmDYrrD,SAAUw0C,EAAOj4C,SAEJ,OAAZ+uD,QAAY,IAAZA,OAAY,EAAZA,EAAcrmD,KAAKgO,IAClB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAmBlJ,MAAOiJ,EAAOjJ,MAAMzN,SAC7C0W,EAAO3N,MADK2N,EAAO3N,aAO5BjJ,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,iBACSF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAIhDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACkoD,GAAAA,GAAa,CACZrqB,WAAW,KACXC,eAAe,EACfU,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDnR,MAAOykD,GACP5nB,QAASA,EACTM,WAAYA,cAMtB19B,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS8zC,EAA4B55C,SAAC,YAC9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS0oD,EAAiBxuD,SAAEi4C,EAAS,SAAW,aAEnD,EChPPt3C,GAAQY,EAAAA,YAAiB,SAAeF,EAAOwR,GACnD,OAAO/S,EAAAA,EAAAA,KAACgT,GAAAA,EAAQ,CAAC1C,UAAW,EAAGyC,IAAKA,EAAKhN,QAAQ,YAAaxE,GAChE,IAEM04B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IA6lBD,GA3lBoBmoD,KAClB,MAAM,YACJ5xC,EAAW,cACXJ,EAAa,mBACblJ,EAAkB,qBAClBqJ,EAAoB,oBACpBE,EAAmB,2BACnBI,IACE1J,EAAAA,EAAAA,MAEG4gB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCg3B,EAAUC,IAAej3B,EAAAA,EAAAA,WAAS,IAClCk3B,EAAiBC,IAAsBn3B,EAAAA,EAAAA,aACvCo3B,EAAkBC,IAAuBr3B,EAAAA,EAAAA,aACzCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1Cq1C,EAAqBC,IAA0Bt1C,EAAAA,EAAAA,WAAS,IACxDiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpC+uC,EAAgBwG,IAAqBv1C,EAAAA,EAAAA,UAAS,CAAC,GAChD2U,EAAiB,IAAIzG,GAAAA,EACrBsnC,EAAqB,IAAI7E,GACzB8E,EAAkB,IAAIxF,IACrByF,EAAuBC,IAA4B31C,EAAAA,EAAAA,aACnDktC,EAAQ0I,IAAa51C,EAAAA,EAAAA,WAAS,IAC9BwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClC2jD,EAAgBD,IAAqB1jD,EAAAA,EAAAA,UAAS,KAC9C+1C,EAAwBC,IAA6Bh2C,EAAAA,EAAAA,UAAS,KAC9DulD,EAAc3B,IAAmB5jD,EAAAA,EAAAA,UAAS,GAC3CgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,KAE5FgmB,GAA2B1gD,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAM1B4B,GAAoBA,KACxB1E,GAAgB,EAAM,EAGlB2J,GAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAGE+4B,GAAsBA,CAACzjC,EAAOC,KACnB,cAAXA,GACJyhC,GAAY,EAAM,EA2Ed4X,GAA8BA,KAClCyG,GAAuB,GACvBC,EAAkB,IAClBmO,EAAkB,IAClB9N,GAAU,GACV7lB,GAAgB,IAChBF,EAAY,CAAC,EAAE,EAiDXohB,GAAYA,KAChB7nC,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAM,GACnB,GAGJ3S,EAAAA,EAAAA,YAAU,KACR2S,EAAasK,EAAY,GACxB,CAACA,IAEJ,MAAO0lC,GAAcoM,KAAmBxlD,EAAAA,EAAAA,UAAS,KAC1CylD,GAAkBC,KAAuB1lD,EAAAA,EAAAA,UAAS,IAEzDiM,QAAQC,IAAI,sBAAsBu5C,KAElChvD,EAAAA,EAAAA,YAAU,KACR8/C,IAAgB,GACf,KAEH9/C,EAAAA,EAAAA,YAAU,KAER,GADA2S,GAAa,GACTqK,EAAsB,CACxB,IAAI+iC,EAAmB/iC,EAMH,IAADgjC,EAKoBC,EALvC,GAJAF,EAAmBA,EAAiBt3B,QACjCzkB,GAA8B,mBAArBA,EAAK02C,aAAwD,WAApB12C,EAAK0uC,aAGtD71B,EACFkjC,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBv3B,QAAQC,GACpCA,EAAMm0B,OAAShgC,IAG1B,GAAIkc,GAA+B,KAAhBA,EACjBgnB,EAAmC,QAAnBE,EAAGF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBx3B,QAAQC,IAAW,IAADw3B,EAAAC,EAAAC,EACrD,OACuB,QAArBF,EAAA/2B,KAAKk3B,UAAU33B,UAAM,IAAAw3B,OAAA,EAArBA,EAAuB5/B,SAASyY,MACX,QADuBonB,EAC5Ch3B,KAAKk3B,UAAU33B,UAAM,IAAAy3B,GAAqB,QAArBC,EAArBD,EAAuBG,2BAAmB,IAAAF,OAArB,EAArBA,EAA4C9/B,SAASyY,GAAY,IAKvE,GADAgnB,EAAmBA,EAAiB/0B,MAAK,CAACpJ,EAAGqJ,IAAMrJ,EAAE6J,QAAQqjC,aAAe7jC,EAAEQ,QAAQqjC,eAClFn7C,EAAoB,CAAC,IAADu7C,EAAAC,EAAA5V,EActB,IAAI6V,KAZwB7hC,EAY2B,QAApB2hC,EAACnP,EAAiB,UAAE,IAAAmP,GAAS,QAATC,EAAnBD,EAAqBzjC,eAAO,IAAA0jC,OAAT,EAAnBA,EAA8B/Q,QAVvD3wB,OAAOE,QAAQJ,GAAKvC,MAAK,CAACpJ,EAAGqJ,IAAMrJ,EAAE,GAAG8J,cAAcT,EAAE,MAAKwZ,QAAO,CAACC,EAAG/9B,KAAoB,IAAjB2F,EAAKL,GAAMtF,EAE3F,OADA+9B,EAAIp4B,GAAOL,EACJy4B,CAAG,GACT,CAAC,GAQJipB,GAAkE,QAA1DpU,EAAA5lC,EAAmBka,MAAK7P,GAAMA,EAAG5I,SAAWyH,WAAc,IAAA08B,OAAA,EAA1DA,EAA4Dz0B,SAAU,GAClF,MAAMmgB,EAAUxX,OAAOkN,KAAKy0B,GAAYloD,KAAIi0B,IAC1C,MAAMk0B,EAAe1B,EAAM9/B,MAAK7pB,IAAY,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMm3B,aAAcA,IAC5D,MAAO,CAAEA,YAAWtwB,GAAgB,OAAZwkD,QAAY,IAAZA,OAAY,EAAZA,EAAcxkD,GAAIoB,MAAOmjD,EAAWj0B,GAAY,IAGpEm0B,EAAc,CAAC,EAGrBrqB,EAAQxiB,SAASze,IACf+7C,EAAiBt9B,SAAS8sC,IAAW,IAADC,EAClC,GAA+B,gBAAtB,OAALD,QAAK,IAALA,GAAc,QAATC,EAALD,EAAO9jC,eAAO,IAAA+jC,OAAT,EAALA,EAAgBhiC,SAA2B+hC,EAAM1S,OAAShgC,EAAe,CAAC,IAAD4yC,EAC3E,MAAMC,EAAkB,OAALH,QAAK,IAALA,GAAc,QAATE,EAALF,EAAO9jC,eAAO,IAAAgkC,OAAT,EAALA,EAAgBrR,MAAMp6C,EAAKm3B,WAC9C3lB,QAAQC,IAAI,gBAAgBi6C,GAC5BJ,EAAYI,IAAeJ,EAAYI,IAAe,GAAK,CAC7D,IACA,IAGJ,MAAMC,EAAgB1qB,EAAQ/9B,KAAKlD,IAC1B,CACLuD,KAAMvD,EAAKm3B,UACXoB,OAAQv4B,EAAKm3B,UACbuB,aAAc,IAcdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,aAKrD8iD,GAAgBY,EAGlB,CAEA,GAAIrQ,EAAuBj4C,OAAS,EAAG,CACrC,MAAMuoD,EAAuBtQ,EAAuB72B,QAAQ7M,GAAgC,kBAAjBA,EAAE8+B,cACzEkV,EAAqBvoD,OAAS,GAA6C,mBAAxCuoD,EAAqB,GAAGlV,aAC7DqF,EAAiBt9B,SAAQ+9B,IACvBoP,EAAqB,GAAGnP,QAAQh+B,SAAQi+B,IACtC,GAAIF,EAAS,IAAKE,EAAS,GAAG,CAc5BF,EAAK/0B,QAAQw1B,aAAe,CAAC,EAC7B,IAAK,IAAI30C,KAAOk0C,EAAK/0B,QAAQ2yB,MAC3B5oC,QAAQC,IAAI,0BAA2BirC,EAAKj1B,QAAQ2yB,MAAM9xC,IAC1DkJ,QAAQC,IAAI,0BAA2B+qC,EAAK/0B,QAAQ2yB,MAAM9xC,IAC1Dk0C,EAAK/0B,QAAQw1B,aAAa30C,GAAOo0C,EAAKj1B,QAAQ2yB,MAAM9xC,GAAKg0C,sBAAwBE,EAAK/0B,QAAQ2yB,MAAM9xC,GAAKg0C,oBAAsBI,EAAKj1B,QAAQ2yB,MAAM9xC,GAAO,IAE7J,IACA,GAGR,CAEApC,YAAW,KACT,IAAIuM,EAAOspC,EAAiB74C,KAAIlD,IAAS,IAAD84C,EAuBtC,OALArvB,OAAOkN,KAAS,OAAJ32B,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,OAAT,EAAJA,EAAesB,OAAOl3C,KAAIg0B,IAAU,IAAD6hB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzC,OAAJp5C,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,GAAbA,EAAekE,aAAej9C,EAAKk3B,GAAa,OAAJl3B,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,GAAbA,EAAeiE,aAAa/lB,GAAS,GAAO,OAAJl3B,QAAI,IAAJA,GAAa,QAATi5C,EAAJj5C,EAAMynB,eAAO,IAAAwxB,OAAT,EAAJA,EAAegE,aAAa/lB,sIAA8I,OAAJl3B,QAAI,IAAJA,GAAa,QAATk5C,EAAJl5C,EAAMynB,eAAO,IAAAyxB,OAAT,EAAJA,EAAekB,MAAMljB,YAAsB,OAAJl3B,QAAI,IAAJA,GAAa,QAATm5C,EAAJn5C,EAAMynB,eAAO,IAAA0xB,OAAT,EAAJA,EAAeiB,MAAMljB,GAClTl3B,EAAKk3B,GAAa,OAAJl3B,QAAI,IAAJA,GAAa,QAATo5C,EAAJp5C,EAAMynB,eAAO,IAAA2xB,OAAT,EAAJA,EAAegB,MAAMljB,EAAM,IAGxCl3B,CAAI,IAGbirD,GAAoBx4C,GACpB9D,GAAa,EAAM,GAElB,IACL,KAAO,CACgB,IAADgvC,EAApB,IAAK9kC,EACHK,EAAoBgR,EAAAA,GAAwB,QAAfyzB,EAAGzzB,EAAAA,GAAU,UAAE,IAAAyzB,OAAA,EAAZA,EAAc11C,MAAQ,GAE1D,CA/HI,IAA4BshB,CA+HhC,GACC,CAACvQ,EAAsBH,EAAekc,EAAa7b,EAAqBvJ,EAAoB2rC,IAE/F,MAAMQ,GAAiBA,KACrBntC,GAAa,GACbqsC,EAAgBvF,qBAAqB7iC,MAAMwI,IACzC,IAAIy9B,EAAOhgC,GAAgC,eACvCwQ,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,IAChE0C,EAA0BlyB,GAC1B1a,GAAa,EAAM,GACnB,GAKG0mB,GAAcC,KAAmB/vB,EAAAA,EAAAA,UAAS,IAC3C+yB,GAAU,CACd,CACE/0B,KAAM,SACNg1B,OAAQ,SACRI,OAAQ9zB,IAAA,IAAAk8C,EAAA,IAAC,KAAEtuC,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,UAAKF,EAAAA,EAAAA,KAAA,KAAAE,SAAQ,OAAJiY,QAAI,IAAJA,GAAa,QAATsuC,EAAJtuC,EAAMgV,eAAO,IAAAs5B,OAAT,EAAJA,EAAev3B,UAAiB,EAC/DkP,aAAc,QAEbimB,IAGCjpB,IAAoBlvB,EAAAA,EAAAA,cAAYzB,IAAmB,IAAlB,SAAEgqB,GAAUhqB,EACjDqwB,EAAYrG,EAAS,GACpB,KAEH/yB,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,GAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,IAUd,OACEt6B,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,4BAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,MAAK5C,SAAA,EAE1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAUszC,GACVvzC,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAlYrBo3B,OAkY2Cl9B,SAAC,mBAQzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAASwgD,QAAQ,WAAWniD,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAChFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,UACrFF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEqF,WAAY,SAAUyI,WAAY,QAAS/O,SAAC,4BAE9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,QAAS/B,UACpFF,EAAAA,EAAAA,KAACm0B,EAAY,CACXvmB,SAAUszC,GACV7sB,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,QAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACb6F,EAAY,CAAC,GACbE,GAAgB,IAChBpc,EAAoBqW,GACpByF,EAAe,IACfM,GAAgB,IAChB2zB,EAAkB,GAAG,UAO7B/tD,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE+I,UAAW,MAAOjI,UAAW,SAAU/B,SAAA,EACzFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QAjVqBw9C,KACjChD,EAAkB,CAAEjC,KAAMhgC,IAC1BgiC,GAAuB,EAAK,EAgVhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,SAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QACxB/C,QApUkBw3B,KAAO,IAADkmB,EAAA6N,EAAA5N,EAAA6N,EAAA3N,EAAAC,EACpC,MAAM50B,EAAS,CAAEA,OAAuB,QAAjBw0B,EAAE3oB,GAAa,UAAE,IAAA2oB,GAAS,QAAT6N,EAAf7N,EAAiBv2B,eAAO,IAAAokC,OAAT,EAAfA,EAA0BriC,QAEnDsxB,EAAkB,IADL,CAAEjC,KAAMhgC,MAGhB2Q,IAEL,MAAMuiC,EAAiBtiC,OAAOE,QACb,QADoBs0B,EACnC5oB,GAAa,UAAE,IAAA4oB,GAAS,QAAT6N,EAAf7N,EAAiBx2B,eAAO,IAAAqkC,OAAT,EAAfA,EAA0B1R,OAC1Bl3C,KAAI,CAAAX,EAAea,KAAW,IAAxBkF,EAAKL,GAAM1F,EACjB,MAAO,CAAE,UAAa+F,EAAK,MAASL,EAAO,GAAM7E,EAAO,IAE1D+lD,EAA+B,QAAhBhL,EAAC9oB,GAAa,UAAE,IAAA8oB,GAAS,QAATC,EAAfD,EAAiB12B,eAAO,IAAA22B,OAAT,EAAfA,EAA0B0M,cAC1C7B,EAAkB8C,GAClB5Q,GAAU,GACVN,GAAuB,EAAK,EAsThBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QACxB/C,QAhVay3B,KACzBmjB,EAAyB7lB,GAAa,IACtCV,GAAgB,EAAK,EA+UTl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPmwB,GAAkB,EAAK,EAEzBh1B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAIDF,EAAAA,EAAAA,KAACikD,GAAmB,CAClBtnC,MAAO,oBACPy/B,YAAa,iBACbpjB,mBAAoB+B,YAM1B/6B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAI1E,MAAO,CAAE+I,UAAW,QAAShK,UAC9CU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MArJE,CAAE2b,UAAW,KAsJfo3B,SAjICttC,IAAe,IAAd,KAAEuR,GAAMvR,EACxB,MAAMutC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IACvD,MAAO,CACL6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC5D1zB,MAAO,OACR,EA2Hai9B,QAASA,GACTM,WAAYoyB,GACZ3yB,aAAc,IAEdQ,gBAAc,EACd9J,SAAUA,EACVi1B,UAAU,EACVtuB,kBAAmBA,GACnBs2B,sBAAsB,EACtBlzB,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,SAAY,IAAZA,QAAY,EAAZA,GAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,eAQ/H9+B,EAAAA,EAAAA,KAACG,GAAAA,EAAQ,CACPG,KAAM2hC,EACNtpB,iBAAkB,IAClBpY,QAAS0jC,GACT7jC,aAAc,CAAEC,SAAU,MAAON,WAAY,SAAUG,UAEvDF,EAAAA,EAAAA,KAACa,GAAK,CACJN,QAAS0jC,GACTnjC,SAAUuhC,EACV3hC,GAAI,CAAEK,MAAO,QAASb,SAErBiiC,MAGHtiC,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KACLW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CACf,2EAA0EF,EAAAA,EAAAA,KAAA,KAAAE,SAAyB,OAArBygD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBpC,QACtGv+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEskD,GAASC,cAAcvzC,OAAOi0C,iBAGhDvkD,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+4B,GAAkB7+B,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAzZgB2F,UAC9B,UACQ80C,EAAmBxE,0BAA0B,CAAE9jC,KAAM4iB,KAAgBziB,MAAKwI,IAC9Eie,KACA/D,GAAgB,IAChB4lB,EAAyB,IACzB9lB,EAAY,CAAC,GACbh7B,GAAa,GACbsU,EAAY,CACVtT,SAAgB,OAANggB,QAAM,IAANA,OAAM,EAANA,EAAQxX,OAClBjI,KAAY,OAANyf,QAAM,IAANA,OAAM,EAANA,EAAQtI,KACd,GAEN,CAAE,MAAOrU,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CACAq9C,KACAtF,KACAlhB,GAAgB,GAAG,EAuY4B96B,SAAC,kBAI9CF,EAAAA,EAAAA,KAAC2xD,GAAa,CACZrxD,KAAMggD,EACN+E,0BAxb4BA,KAChC9E,GAAuB,EAAM,EAwbzBzG,4BAA6BA,GAC7BE,eAAgBA,EAChBC,2BA3gB8Bz5C,IAClC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OACxBw1B,EAAc,IACf0W,EACH,CAAC/wC,GAAO0E,GAEV6yC,EAAkBld,EAAY,EAsgB1BorB,iBAngBmBA,KACvB,IAAK1U,EAAe9qB,SAAW8qB,EAAeuE,MAAQqQ,EAAe7lD,OAAS,EAE5E,YADAi7B,GAAoB,mCAAoC,SAG1D,MAAM4tB,EAAqBhD,EAAezoB,QAAO,CAACC,EAAKC,KACrDD,EAAIC,EAAKxJ,WAAawJ,EAAK14B,MACpBy4B,IACN,CAAC,GACJ,GAAI4T,EAAgB,CAClB,MAAMwL,EAAqB,CACzBpJ,YAAa,iBACbmC,KAAMvE,EAAeuE,KACrBpxB,QAAS,CACP+B,OAAQ8qB,EAAe9qB,OACvBshC,aAAcA,EACd1Q,MAAO8R,GAETrlD,GAAI,GAAGytC,EAAe9qB,UAAU8qB,EAAeuE,wBAElC,IAAXpG,EACFsI,EACG1E,sBAAsByJ,GACtBltC,MAAMotB,IACgB,aAAb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACR4yC,KACAtwC,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KACHzlB,EAAY,CAAC,GACbkJ,GAAoB,uCAAwC,YAE5DA,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAS,OAAJktB,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,OACvC,IAGJm3C,EACGzE,sBAAsBwJ,GACtBltC,MAAMotB,IACe,YAAhBA,EAAKp8B,QACPsC,YAAW,KACT20C,GAAuB,GACvBiB,KACAtF,IAAW,GACV,KACH2E,GAAU,GACV/lB,EAAY,CAAC,GACbkJ,GAAoB,yCAA0C,YAE9DA,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAS,OAAJktB,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,OACvC,GAIR,CACAwwC,IAA6B,EA6czB3B,OAAQA,EACR9iC,mBAAoBA,EACpBkJ,cAAeA,EACfowC,kBAAmBA,EACnBC,eAAgBA,EAChBC,gBAAiBA,KAGnB7uD,EAAAA,EAAAA,KAAC0lD,GAAoB,CACnB/oC,MAAO,4BACPy/B,YAAa,iBACbnZ,WAAY1kB,EACZ2X,eAAgBA,EAChBgmB,UAAWA,GACX/lB,kBAAmBA,MACX,EC1nBhB,GANuB07B,KAEf7xD,EAAAA,EAAAA,KAACuwD,GAAW,ICUpB,GAXsB,CACpB,CACEvnD,KAAM,eACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC6xD,GAAc,QCQjBjM,GAAY,CAAE9oC,UAAW,KA+L/B,GA9L6Bnd,IAYtB,IAZuB,KAC5BW,EAAI,4BACJw5C,EAA2B,eAC3BE,EAAc,2BACdC,EAA0B,0BAC1BC,EAAyB,OACzB/B,EAAM,cACN35B,EAAa,mBACbnJ,EAAkB,WAClB4tB,EAAU,kBACV0rB,EAAiB,eACjBC,GACDjvD,EACC,MAAO06C,EAAmBC,IAAwBrvC,EAAAA,EAAAA,UAAS,KACpDqzB,EAAY6wB,IAAiBlkD,EAAAA,EAAAA,UAAS,KAC7CvJ,EAAAA,EAAAA,YAAU,KACR44C,EAAqB,CAACrX,GAAY,GACjC,CAAC+W,EAAe+F,iBAAkB9c,KACrCvhC,EAAAA,EAAAA,YAAU,KAAO,IAADu5C,EACd,IAAID,GAAmC,OAAlB3lC,QAAkB,IAAlBA,GAAyE,QAAvD4lC,EAAlB5lC,EAAoBka,MAAMqN,GAAUA,EAAM9lB,SAAWkjC,EAAeuE,cAAK,IAAAtD,OAAvD,EAAlBA,EAA2Ez0B,SAAU,GAC1Gw0B,EAAepyC,KAAI,CAACg0B,EAAO9zB,KACzB8zB,EAAMk1B,QAAU,GAChBl1B,EAAMrwB,GAAKzD,EACJqmB,OAAOq8B,OAAO,CAAC,EAAG5uB,MAE3Boe,GAAiBwU,EAAAA,GAAAA,SAAQZ,EAAgB5T,EAAgB,aACzDmU,EAAcnU,GACd2T,EAAkB3T,EAAe,GAEhC,CAAChB,EAAeuE,KAAMtb,EAAY5tB,EAAoBs5C,IAEzD,MAAOxU,EAAgBC,IAAqBnvC,EAAAA,EAAAA,UAAS,KACrDvJ,EAAAA,EAAAA,YAAU,KACR,GAAIuhC,EAAY,CACd,IAAIsX,EAAW/7B,EAAc2L,QAAOqwB,IAAI,IAAAC,EAAA,OAAQ,OAAJD,QAAI,IAAJA,GAAQ,QAAJC,EAAJD,EAAM7kC,UAAE,IAAA8kC,OAAJ,EAAJA,EAAUz4B,SAASihB,EAAW,IAC1EmX,EAAkBG,EACpB,CACAD,EAAqB,CAACrX,GAAY,GACjC,CAACA,EAAYzkB,IAEhB,MAAMuzC,EAASxwD,IACb,MAAMywD,GAAWlgD,EAAAA,EAAAA,QAAO,MASxB,OARApQ,EAAAA,EAAAA,YAAU,KACJswD,GAAYA,EAAS1/C,SACnB/Q,EAAMkX,WACRu5C,EAAS1/C,QAAQ2/C,OAErB,GACC,CAAC1wD,EAAMkX,aAEHzY,EAAAA,EAAAA,KAAA,YAAWuB,EAAOywD,SAAUA,GAAY,EAE3CE,EAAgB,CACpBjpD,KAAM,UACNg1B,OAAQ,UACRE,YAAa,EAAGthB,SAAU,IAC1B6yC,qBAAqB,EACrBC,UAAU,EACVtxB,OAAQA,CAAAp2B,EAAAI,KAA+B,IAA9B,MAAEsF,GAAO1F,GAAE,UAAE2nD,GAAWvnD,EAC3BwnD,EAAID,EAAUE,UAAUC,OACxBH,EAAUE,UAAUniD,MACpBA,EACJ,OACE3N,EAAAA,EAAAA,KAAC+xD,EAAK,CACJ7wD,KAAK,SACLuX,UAAWm3C,EAAUG,OACrBpiD,MAAOkiD,EACP3rB,OAAQr2B,IACN+hD,EAAUE,UAAUE,WAAWniD,EAAE,EAEnCD,SAAUgiD,EAAUE,UAAUliD,SAC9BsiD,QAASA,IAAMN,EAAUE,UAAUK,YACnCgC,UAAWtkD,IACK,WAAVA,EAAEG,KACJ4hD,EAAUE,UAAUsC,SAASvkD,GAEjB,UAAVA,EAAEG,KACJ4hD,EAAUE,UAAUE,WAAWniD,EACjC,GAEF,GAIFotB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBksB,EAAU,CACd,CAAE/0B,KAAM,KAAMg1B,OAAQ,KAAMuoB,gBAAgB,EAAOpoB,aAAc,GAAIl9B,KAAM,UAC3E,CACE+H,KAAM,YACNm1B,aAAc,IACdH,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAc2L,eAAe1sC,QAAQ2sC,UAAUnwD,SAAC,eACjFm+B,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM0kB,WAAgB,GAEpDq1B,GAGIG,GAAiBnmD,EAAAA,EAAAA,cAAYzB,IAAiC,IAAhC,MAAEkD,EAAK,SAAE2kD,EAAQ,MAAEC,GAAO9nD,EAC5D,MAAM0N,EAAO,IAAImmB,GACjBnmB,EAAKo6C,GAASpjC,OAAOq8B,OAAO,CAAC,EAAGrzC,EAAKo6C,GAAQ,CAAE,CAACD,GAAW3kD,IAC3DwhD,EAAch3C,GACdw2C,EAAkBx2C,EAAK,GACtB,CAACmmB,EAAYqwB,IAChB,OACE/tD,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAMA,EAAKJ,SAAA,EACjBU,EAAAA,EAAAA,MAACkV,GAAAA,EAAW,CAAA5V,SAAA,CACT,IACAi4C,EAAS,wBAA0B,0BAEtCn4C,EAAAA,EAAAA,KAACynD,GAAAA,GAAU,CACTC,YAAU,EACVC,cAAe,IACfC,cAAe,IACfC,UAAQ,EACRC,gBAAiB,IACjBnvC,iBAAkB,IAAIzY,UAEtBF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC/CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC5BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,wBACgBF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAGvDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjK,GAAG,kBACHtD,KAAK,OACLoE,WAAS,EACTM,MAAOs1B,EACPr1B,SAAUqsC,EACVt2C,UAAQ,EAAAzD,SAEU,OAAjBm6C,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBzxC,KAAKgO,IACvB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAclJ,MAAOiJ,EAAO1W,SAClC0W,GADYA,UAMrB5W,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,aACKF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAG5CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLvN,KAAK,mBACLoE,WAAS,EACTM,MAAOqsC,EAAe+F,iBACtBnyC,SAAUqsC,EACVt2C,SAAUw0C,EAAOj4C,SAEF,OAAdi6C,QAAc,IAAdA,OAAc,EAAdA,EAAgBvxC,KAAKgO,IACpB5W,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAA2BlJ,MAAOiJ,EAAOwiB,aAAal5B,SAC5D0W,EAAOwiB,cADKxiB,EAAOwiB,qBAO5Bp5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CAAM,mBACWF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,YAIlDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,UAC9BF,EAAAA,EAAAA,KAACkoD,GAAAA,GAAa,CACZrqB,WAAW,KACXC,eAAe,EACfU,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDnR,MAAOykD,GACPyM,eAAgBA,EAChBr0B,QAASA,EACTM,WAAYA,cAMtB19B,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS8zC,EAA4B55C,SAAC,YAC9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASk0C,EAA0Bh6C,SACxCi4C,EAAS,SAAW,aAGlB,EClLPle,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAijBD,GA/iB2BoqD,KACzB,MAAM,YACJ7zC,EAAW,cACXH,EAAa,cACbD,EAAa,mBACblJ,EAAkB,qBAClBqJ,EAAoB,oBACpBE,EAAmB,2BACnBI,IACE1J,EAAAA,EAAAA,MAEG4gB,EAAgBC,IAAqBlrB,EAAAA,EAAAA,WAAS,IAC9CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,IAC1Cq1C,EAAqBC,IAA0Bt1C,EAAAA,EAAAA,WAAS,IACxD+uC,EAAgBwG,IAAqBv1C,EAAAA,EAAAA,UAAS,CAAC,GAEhDw1C,EAAqB,IAAI7E,GACzBh8B,EAAiB,IAAIzG,GAAAA,EACrBunC,EAAkB,IAAIxF,IACrByF,EAAuBC,IAA4B31C,EAAAA,EAAAA,aACnDktC,EAAQ0I,IAAa51C,EAAAA,EAAAA,WAAS,IAC9BwnD,EAAgBC,IAAqBznD,EAAAA,EAAAA,UAAS,KAC9C8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,KAC1CiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnCrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClC2jD,EAAgBD,IAAqB1jD,EAAAA,EAAAA,UAAS,KAC9C+1C,EAAwBC,IAA6Bh2C,EAAAA,EAAAA,UAAS,KAC9DquB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,CAAC,GACpCgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,KAC5FgmB,EAA2B1gD,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAK1B4B,GAAoBA,KACxB1E,GAAgB,EAAM,EAGlB2J,GAAsBA,CAAC94B,EAASpK,KACpChB,GAAa,GACbsU,EAAY,CACVtT,SAAUA,EACVO,KAAM6J,GACN,EAEJ,IAAIg5C,GAAkB,IAAIjtB,IACtBw7B,GAAkBA,EAAe1pD,OAAS,GAC5C0pD,EAAetuC,SAASggC,IAAc,IAADC,EACnC,MAAM59B,EAAyB,QAAnB49B,EAAGD,EAASh3B,eAAO,IAAAi3B,OAAA,EAAhBA,EAAkBpE,eACjC,GAAIx5B,EAAQ,CACQ2I,OAAOkN,KAAK7V,GAEpBrC,SAASyY,IACjBsnB,GAAgBhtB,IAAI0F,EAAM,GAE9B,KAIJ,MAAMynB,GAAe73B,MAAM2K,KAAK+sB,IAAiBt7C,KAAKg0B,IAC7C,CACL3zB,KAAM2zB,EACNqB,OAAQrB,EACR8sB,UAAU,EACVtrB,aAAc,GAEdC,OAAS7G,IACPx3B,EAAAA,EAAAA,KAAA,OAAKskD,wBAAyB,CAAEC,OAAQ/sB,EAAO7pB,aAoF/CmsC,GAA8BA,KAClCyG,GAAuB,GACvBC,EAAkB,IAClBmO,EAAkB,IAClB9N,GAAU,GACV7lB,EAAgB,IAChBF,EAAY,CAAC,EAAE,EA4CXkD,GAAU,CACd,CACE/0B,KAAM,mBACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAc2L,eAAe1sC,QAAQq8B,iBAAiB7/C,SAAC,aACxFk+B,aAAc,IAIdC,OAAQh2B,IAAA,IAAC,KAAE8P,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM4nC,kBAAuB,GAG3D,CACE92C,KAAM,OACNg1B,QAAQj+B,EAAAA,EAAAA,KAACk+B,GAAAA,EAAO,CAACvhB,MAAO6nC,GAASC,cAAc2L,eAAe1sC,QAAQkhC,IAAI1kD,SAAC,wBAC3Ek+B,aAAc,QAGbimB,IAKCnI,GAAYA,KAChB7nC,GAAa,GACbuL,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,qBACzC9M,GAAa,EAAM,GACnB,GAGJ3S,EAAAA,EAAAA,YAAU,KACR2S,EAAasK,EAAY,GACxB,CAACA,IACJ,MAAOwiC,GAAeC,KAAoBn2C,EAAAA,EAAAA,UAAS,IAE7C0nD,IAAiCpmC,EAAAA,GAAAA,IAAc40B,GAAe,qBAEpEz/C,EAAAA,EAAAA,YAAU,KACR8/C,IAAgB,GACf,KAEH9/C,EAAAA,EAAAA,YAAU,KAER,GADA2S,GAAa,GACTqK,EAAsB,CACxB,IAAI+iC,EAAmB/iC,EAKH,IAADgjC,EAKoBC,EALvC,GAJAF,EAAmBA,EAAiBt3B,QACjCzkB,GAA8B,mBAArBA,EAAK02C,aAAwD,WAApB12C,EAAK0uC,aAGtD71B,EACFkjC,EAAmC,QAAnBC,EAAGD,SAAgB,IAAAC,OAAA,EAAhBA,EAAkBv3B,QAAQC,GACpCA,EAAMm0B,OAAShgC,IAG1B,GAAIkc,GAA+B,KAAhBA,EACjBgnB,EAAmC,QAAnBE,EAAGF,SAAgB,IAAAE,OAAA,EAAhBA,EAAkBx3B,QAAQC,IAAW,IAADw3B,EAAAC,EAAAC,EACrD,OACuB,QAArBF,EAAA/2B,KAAKk3B,UAAU33B,UAAM,IAAAw3B,OAAA,EAArBA,EAAuB5/B,SAASyY,MACX,QADuBonB,EAC5Ch3B,KAAKk3B,UAAU33B,UAAM,IAAAy3B,GAAqB,QAArBC,EAArBD,EAAuBG,2BAAmB,IAAAF,OAArB,EAArBA,EAA4C9/B,SAASyY,GAAY,IAIvE,GAAIumB,EAAuBj4C,OAAS,EAAG,CACrC,MAAM6pD,EAA2B5R,EAAuB72B,QAAQ7M,GAAgC,kBAAjBA,EAAE8+B,cAC7EwW,EAAyB7pD,OAAS,GAAiD,mBAA5C6pD,EAAyB,GAAGxW,aACrEqF,EAAiBt9B,SAAQ+9B,IACvB0Q,EAAyB,GAAGzQ,QAAQh+B,SAAQi+B,IAC1C,GAAIF,EAAS,KAAME,EAAS,GAAG,CAC7BF,EAAK/0B,QAAQ0lC,4BAA8BzQ,EAAKj1B,QAAQ4yB,mBAAqBmC,EAAK/0B,QAAQ4yB,iBAAmBqC,EAAKj1B,QAAQ4yB,iBAAmB,KAC7ImC,EAAK/0B,QAAQw1B,aAAe,CAAC,EAC7B,IAAK,IAAI30C,KAAOk0C,EAAK/0B,QAAQ6yB,eAC3BkC,EAAK/0B,QAAQw1B,aAAa30C,GAAOo0C,EAAKj1B,QAAQ6yB,eAAehyC,KAASk0C,EAAK/0B,QAAQ6yB,eAAehyC,GAAOo0C,EAAKj1B,QAAQ6yB,eAAehyC,GAAO,IAehJ,IACA,GAGR,CACA0kD,EAAkBjR,GAClB,IAAItpC,EAAOspC,EAAiB74C,KAAIlD,IAAS,IAAD84C,EAAAC,EAuBtC,OAtBA/4C,EAAuB,iBAAQ,OAAJA,QAAI,IAAJA,GAAa,QAAT84C,EAAJ94C,EAAMynB,eAAO,IAAAqxB,OAAT,EAAJA,EAAeuB,iBAiB1C5wB,OAAOkN,KAAS,OAAJ32B,QAAI,IAAJA,GAAa,QAAT+4C,EAAJ/4C,EAAMynB,eAAO,IAAAsxB,OAAT,EAAJA,EAAeuB,gBAAgBp3C,KAAIg0B,IAAU,IAAD8hB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAClD,OAAJr5C,QAAI,IAAJA,GAAa,QAATg5C,EAAJh5C,EAAMynB,eAAO,IAAAuxB,GAAbA,EAAeiE,aAAej9C,EAAKk3B,GAAa,OAAJl3B,QAAI,IAAJA,GAAa,QAATi5C,EAAJj5C,EAAMynB,eAAO,IAAAwxB,GAAbA,EAAegE,aAAa/lB,GAAS,GAAO,OAAJl3B,QAAI,IAAJA,GAAa,QAATk5C,EAAJl5C,EAAMynB,eAAO,IAAAyxB,OAAT,EAAJA,EAAe+D,aAAa/lB,sIAA8I,OAAJl3B,QAAI,IAAJA,GAAa,QAATm5C,EAAJn5C,EAAMynB,eAAO,IAAA0xB,OAAT,EAAJA,EAAemB,eAAepjB,YAAsB,OAAJl3B,QAAI,IAAJA,GAAa,QAATo5C,EAAJp5C,EAAMynB,eAAO,IAAA2xB,OAAT,EAAJA,EAAekB,eAAepjB,GACpUl3B,EAAKk3B,GAAa,OAAJl3B,QAAI,IAAJA,GAAa,QAATq5C,EAAJr5C,EAAMynB,eAAO,IAAA4xB,OAAT,EAAJA,EAAeiB,eAAepjB,EAAM,IAGjDl3B,CAAI,IAEbkG,YAAW,KACTw1C,GAAiBjpC,GACjB9D,GAAa,EAAM,GAClB,IACL,KAAO,CACgB,IAADgvC,EAApB,IAAK9kC,EACHK,EAAoBgR,EAAAA,GAAwB,QAAfyzB,EAAGzzB,EAAAA,GAAU,UAAE,IAAAyzB,OAAA,EAAZA,EAAc11C,MAAQ,GAE1D,IACC,CAAC+Q,EAAsBH,EAAekc,EAAa7b,EAAqBoiC,IAE3E,MAAMQ,GAAiBA,KACrBntC,GAAa,GACbqsC,EAAgBvF,qBAAqB7iC,MAAMwI,IACzC,IAAIy9B,EAAOhgC,GAAgC,eACvCwQ,EAAa,GACbjO,EAAO3I,OACT4W,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,KAE9D0C,EAA0BlyB,GAC1B1a,GAAa,EAAM,GACnB,EAGE+mB,IAAoBlvB,EAAAA,EAAAA,cAAY3B,IAAmB,IAAlB,SAAEkqB,GAAUlqB,EACjDuwB,EAAYrG,EAAS,GACpB,KAEH/yB,EAAAA,EAAAA,YAAU,KACR,MAAMy6B,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,GAAgBhN,OAAOkN,KAAKF,GAAavzB,KAAIoF,GAAQmuB,EAAYnuB,KACzFgtB,EAAgBoB,EAAe,GAC9B,CAAC3H,EAAUyG,IAcd,OACEt6B,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,yBAEtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,MAAK5C,SAAA,EAE1CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAUszC,EACVvzC,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAjWrBo3B,OAiW2Cl9B,SAAC,mBAQzDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAASwgD,QAAQ,WAAWniD,MAAO,CAAE0B,QAAS,QAAS3C,SAAA,EAChFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,SAAU/B,UACrFF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEqF,WAAY,SAAUyI,WAAY,QAAS/O,SAAC,4BAE9DF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAID,GAAI,EAAGD,GAAI,EAAGpC,UAAU,cAAcpC,MAAO,CAAEc,UAAW,QAAS/B,UACpFF,EAAAA,EAAAA,KAACm0B,EAAY,CACXvmB,SAAUszC,EACV7sB,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,QAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACb6F,EAAY,CAAC,GACbE,EAAgB,IAChBpc,EAAoBqW,GACpByF,EAAe,IACfM,EAAgB,GAAG,UAO3Bp6B,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE+I,UAAW,MAAOjI,UAAW,SAAU/B,SAAA,EACzFF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QApRqBw9C,KACjChD,EAAkB,CAAEjC,KAAMhgC,IAC1BgiC,GAAuB,EAAK,EAmRhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,SAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACX35B,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QAzQmB8sD,KAAO,IAADpP,EAAAC,EAAAE,EAAAC,EACrC,MAAMF,EAAiC,QAAlBF,EAAG3oB,EAAa,UAAE,IAAA2oB,OAAA,EAAfA,EAAiBv2B,QACnCoxB,EAAO,CAAEA,KAAqB,QAAjBoF,EAAE5oB,EAAa,UAAE,IAAA4oB,OAAA,EAAfA,EAAiBpF,MACtCiC,EAAkB,IACboD,KACArF,IAEL,MAAMkT,EAAiBtiC,OAAOE,QACb,QADoBw0B,EACnC9oB,EAAa,UAAE,IAAA8oB,GAAS,QAATC,EAAfD,EAAiB12B,eAAO,IAAA22B,OAAT,EAAfA,EAA0B9D,gBAC1Bp3C,KAAI,CAAAX,EAAea,KAAW,IAAxBkF,EAAKL,GAAM1F,EACjB,MAAO,CAAE,UAAa+F,EAAK,QAAWL,EAAO,GAAM7E,EAAO,KAE5DyjB,EAAAA,GAAAA,IAAcklC,EAAgB,aAC9B9C,EAAkB8C,GAClB5Q,GAAU,GACVN,GAAuB,EAAK,EA2PhBp/C,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACX35B,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QAtRay3B,KACzBmjB,EAAyB7lB,EAAa,IACtCV,GAAgB,EAAK,EAqRTl5B,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QAASA,KACPmwB,GAAkB,EAAK,EAEzBh1B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAIDF,EAAAA,EAAAA,KAACikD,GAAmB,CAClBtnC,MAAO,kBACPy/B,YAAa,iBACbpjB,mBAAoB+B,EACpBzB,SAAUA,WAMhBt5B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACG,GAAI,GAAI1E,MAAO,CAAE+I,UAAW,QAAShK,UAC9CU,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MA1dE,CAAE2b,UAAW,KA2dfkhB,QAASA,GACTM,WAAyB,OAAbhF,EAAoBm5B,EAAiBE,GACjDzN,UAAW,KACX3mB,gBAAc,EACdR,aAAc,IACdtJ,SAAUA,EACV2G,kBAAmBA,GACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrD4hC,SA9ICzpC,IAAe,IAAd,KAAE0N,GAAM1N,EACxB,MAAM0pC,EAAahlB,OAAOkN,KAAK5H,GAAUzS,SAAS7J,EAAK5L,IACvD,MAAO,CACL6C,qBAAqC4M,IAApB7D,EAAKi8B,WAA2B,wBAA0B,GAC3EtyC,OAAQ,GACRyC,WAAa4vC,IAA2B,IAAb1f,EAAqB,UAAY,UAC7D,EAyIagK,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACjH7B,iBAxIY3D,IAC5BuB,EAAYvB,EAAS,cA+IhBz5B,GACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAEPW,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZU,EAAAA,EAAAA,MAACqV,GAAAA,EAAiB,CAAA/V,SAAA,CACf,6FAA6F,KAACF,EAAAA,EAAAA,KAAA,KAAAE,SAAyB,OAArBygD,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBpC,QAE1Hv+C,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,UAAS,IAAEskD,GAASC,cAAcvzC,OAAOi0C,iBAGhDvkD,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+4B,GAAkB7+B,SAAC,YACpCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAlVqB2F,UACnC,UACQ80C,EAAmBxE,0BAA0B,CAAE9jC,KAAM4iB,IAAgBziB,MAAKwI,IAC9Eie,KACA/D,EAAgB,IAChB4lB,EAAyB,IACzB9lB,EAAY,CAAC,EAAE,GAEnB,CAAE,MAAO32B,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CACA6/B,GAAoB,uCAAwC,WAC5DkY,KACAlhB,EAAgB,GAAG,EAqUiC96B,SAAC,kBAInDF,EAAAA,EAAAA,KAAC+yD,GAAoB,CACnBzyD,KAAMggD,EACN+E,0BAjX4BA,KAChC9E,GAAuB,EAAM,EAiXzBzG,4BAA6BA,GAC7BE,eAAgBA,EAChBC,2BA7c8Bz5C,IAClC,MAAM,KAAEyI,EAAI,MAAE0E,GAAUnN,EAAMsN,OAExBw1B,EAAc,IACf0W,EACH,CAAC/wC,GAAO0E,GAEV6yC,EAAkBld,EAAY,EAuc1B4W,0BArc4BA,KAChC,MAAMoL,EAA0B,OAAb9mC,QAAa,IAAbA,OAAa,EAAbA,EAAe2L,QAC/B8B,GAAaA,EAASmN,eAAiB4gB,EAAe+F,mBAEnD6R,EAAqBhD,EAAezoB,QAAO,CAACC,EAAKC,KACrDD,EAAIC,EAAKxJ,WAAsC,IAAzBm2B,OAAO3sB,EAAKyrB,UAAmB9kC,MAAMgmC,OAAO3sB,EAAKyrB,UAAmC,GAAvBkB,OAAO3sB,EAAKyrB,SACxF1rB,IACN,CAAC,GACJ,IACG4T,EAAe+F,mBACf/F,EAAeuE,MAChBqQ,EAAe7lD,OAAS,EAExBi7B,GAAoB,mCAAoC,aAL1D,CAQA,GAAIgW,EAAgB,CAClB,MAAMwL,EAAqB,CACzBjH,KAAMvE,EAAeuE,KACrBnC,YAAa,iBACb7vC,GACE+4C,EAAW,GAAG/4C,GACd,IACAytC,EAAeuE,KAAKpwC,OAFpBm3C,kBAKFn4B,QAAS,CACP4yB,iBAAkB/F,EAAe+F,iBACjCkT,oBAAqB3N,EAAW,GAAG/4C,GACnCyzC,eAAgB4R,KAGL,IAAXzZ,EACFsI,EACG1E,sBAAsByJ,GACtBltC,MAAMotB,IACgB,aAAb,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,SACR4yC,KACAtwC,YAAW,KACT20C,GAAuB,EAAM,GAC5B,KACHzlB,EAAY,CAAC,GACbkJ,GAAoB,qCAAsC,YAE1DA,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAS,OAAJktB,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,OACvC,IAGJm3C,EACGzE,sBAAsBwJ,GACtBltC,MAAMotB,IACe,YAAhBA,EAAKp8B,QACPsC,YAAW,KACT20C,GAAuB,GACvBrE,IAAW,GACV,KACH2E,GAAU,GACV/lB,EAAY,CAAC,GACbkJ,GAAoB,uCAAwC,YAE5DA,GAAwB,OAAJ0B,QAAI,IAAJA,OAAI,EAAJA,EAAMltB,IAAS,OAAJktB,QAAI,IAAJA,OAAI,EAAJA,EAAMp8B,OACvC,GAGR,CACAwwC,IAlDA,CAkD6B,EAqYzB3B,OAAQA,EACR35B,cAAeA,EACfnJ,mBAAoBA,EACpB4tB,WAAY1kB,EACZowC,kBAAmBA,EACnBC,eAAgBA,KAElB5uD,EAAAA,EAAAA,KAAC0lD,GAAoB,CACnB/oC,MAAO,0BACPy/B,YAAa,iBACbnZ,WAAY1kB,EACZ2X,eAAgBA,EAChBgmB,UAAWA,GACX/lB,kBAAmBA,MAEV,ECrkBjB,GAN0B+8B,KAEtBlzD,EAAAA,EAAAA,KAACwyD,GAAkB,ICUvB,GAXyB,CACvB,CACExpD,KAAM,kBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACkzD,GAAiB,Q,2BCM1B,MAAMC,GAAmBC,GAAAA,KAAaC,MAAM,CACxCC,YAAaF,GAAAA,KAERG,SAAS,0BACTC,IAAI,IAAK,4CAmElB,GA/D2BjyD,IAEnBvB,EAAAA,EAAAA,KAACiqC,GAAAA,GAAM,CACHC,cAAe,CAAEopB,YAAa,MAC9BH,iBAAkBA,GAClBM,oBAAkB,EAClBC,kBAAkB,EAClBC,gBAAgB,EAChBvpB,SAAUA,CAACzpB,EAAMhhB,KAAqB,IAAnB,UAAEi0D,GAAWj0D,EAE5B4B,EAAMsyD,iBAAiBlzC,GACvBizC,GAAW,EACb1zD,SAED+H,IAOM,IAPL,OACEkvC,EAAM,QACN2c,EAAO,WACPC,EAAU,cACVC,EAAa,UACbC,EAAS,WACTC,GACHjsD,EAMG,OACIjI,EAAAA,EAAAA,KAACqqC,GAAAA,GAAI,CAAAnqC,UACDU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CACHhT,KAAW,OAALiB,QAAK,IAALA,OAAK,EAALA,EAAO4yD,mBACb/pD,SAAU,KACViD,WAAW,EAAKnN,SAAA,EAEhBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,wCAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACVF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAEdU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC3CU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAItC,UAAU,cAAarD,SAAA,CAAC,YAC/CF,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,WAAY3B,SAAC,MAAQ,QAEvDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAItC,UAAU,cAAarD,SAAA,EACtDF,EAAAA,EAAAA,KAACo0D,GAAAA,GAAK,CAACC,GAAG,WAAW9nD,GAAG,cAActD,KAAK,cAAcqrD,KAAK,KAAKnzD,MAAO,CAAEJ,MAAO,OAAQyI,aAAc,WACzGxJ,EAAAA,EAAAA,KAACu0D,GAAAA,GAAY,CAACtrD,KAAK,cAAcnC,UAAU,MAAM3F,MAAO,CAAEU,MAAO,oBAKjFjB,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACVF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA9BDwuD,KACd,OAALjzD,QAAK,IAALA,GAAAA,EAAOkzD,uBAAsB,GAC7BR,EAAU,CAAC,GACXC,EAAW,CAAC,GAAG,EAAM,EA2BuBh0D,SAAC,YACjCF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAAS+tD,EAAW7zD,SAAE,iBAGnC,IC3CrB+5B,IAAYt3B,EAAAA,GAAAA,GAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAwTD,GApTyBssD,KACvB,MAAM,cAAEn2C,EAAa,oBAAEK,EAAmB,2BAAEI,IAA+B1J,EAAAA,EAAAA,MAEpEq/C,EAAWC,IAAgB3pD,EAAAA,EAAAA,UAAS,KACpC4pD,EAAmBC,IAAwB7pD,EAAAA,EAAAA,UAAS,KACpDwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCkpD,EAAoBM,IAAyBxpD,EAAAA,EAAAA,WAAS,IACtDiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAEpC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,IAC3CgwB,GAAUnpB,EAAAA,EAAAA,QAAO,OAChBlS,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAEnC8pD,EAA2B,IAAI7Z,GAC/Bt7B,EAAiB,IAAIzG,GAAAA,EACrB6kB,EAAU,CACd,CACE/0B,KAAM,WACNg1B,OAAQ,YACRE,YAAa,EACbC,aAAc,IAEhB,CACEn1B,KAAM,cACNg1B,OAAQ,eACRE,YAAa,EACbE,OAAQp2B,IAAA,IAAC,KAAEkQ,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMikC,aAAkB,GAEtD,CACEnzC,KAAM,OACNg1B,OAAQ,sBACRE,YAAa,EACbE,OAAQh2B,IAAA,IAAC,KAAE8P,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMomC,MAAW,GAQ/C,CACEt1C,KAAM,mBACNg1B,OAAQ,wBACRE,YAAa,EACbE,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAW,OAAJiY,QAAI,IAAJA,GAAAA,EAAM68C,iBAAwB,OAAJ78C,QAAI,IAAJA,OAAI,EAAJA,EAAM68C,iBAAmB,KAAU,GAE5F,CACE/rD,KAAM,SACNg1B,OAAQ,SACRE,YAAa,EACbE,OAAQ5zB,IAAe,IAAd,KAAE0N,GAAM1N,EACf,OACE7J,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YACd5E,MAAO,CAAEyG,OAAQ,oBACjB5B,QAASA,KACPg1B,EAAgB,CAAC7iB,IACjBs8C,GAAsB,EAAK,EAC3Bv0D,SACH,WAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YACdC,QAASA,KACPy1C,EAAoBtjC,EAAK5L,GAAG,EAC5BrM,SAAC,cAGD,IAMRk9B,EAAeA,KAAO,IAAD63B,EACzB,IAAI5jB,EAAe,GAGjBA,EADkB,KAAhB5W,EACak6B,EAES,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWxqC,QAAQ+qC,GACZ/lC,OAAOxO,OAAOu0C,GAAUvnC,OAAOb,cAChC9K,SAASyY,EAAY3N,iBAK5CukB,EAA2B,QAAf4jB,EAAG5jB,SAAY,IAAA4jB,OAAA,EAAZA,EAAc9qC,QAAQ+qC,GACf/lC,OAAOxO,OAAOu0C,GAAUvnC,OAAOb,cAChC9K,SAASzD,EAAcuO,iBAG5CgoC,EAAqBzjB,EAAa,EAe9B8jB,EAA4BA,KAChCv1C,EAAeiB,yBAAyBvI,MAAMwI,IAAY,IAADC,EACvD/B,EAAiC,OAAN8B,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,OAAN,EAANA,EAAcI,oBAAoB,GAE7D,EA+CEs6B,EAAuB8W,IAC3B,IACEl+C,GAAa,GACb0gD,EAAyBtZ,oBAAoB8W,GAAOj6C,MAAMwI,IACxD2zC,GAAsB,GACtBz5B,EAAgB,IAEhBm6B,IACAjZ,IACA7nC,GAAa,GAEU,aAAb,OAANyM,QAAM,IAANA,OAAM,EAANA,EAAQxX,SACVxJ,GAAa,GACbsU,EAAY,CACVtT,SAAU,UACVO,KAAY,OAANyf,QAAM,IAANA,OAAM,EAANA,EAAQtI,OAEY,YAAb,OAANsI,QAAM,IAANA,OAAM,EAANA,EAAQxX,UACjBxJ,GAAa,GACbsU,EAAY,CACVtT,SAAU,QACVO,KAAY,OAANyf,QAAM,IAANA,OAAM,EAANA,EAAQtI,MAElB,GAEJ,CAAE,MAAOqJ,GACP,GAIEq6B,EAAYA,KAChB7nC,GAAa,GACb0gD,EAAyB5Z,qBAAqB7iC,MAAMwI,IAClD8zC,EAAmB,OAAN9zC,QAAM,IAANA,OAAM,EAANA,EAAQ3I,MACrB,IAAIomC,EAAOhgC,GAAgC,eACvCwQ,EAAajO,EAAO3I,KAAKgS,QAAO0L,GAAWA,EAAQ0oB,OAASA,IAChEuW,EAAqB/lC,GAGrB1a,GAAa,EAAM,GACnB,EAUJ,OARA3S,EAAAA,EAAAA,YAAU,KACRw6C,GAAW,GACV,KAEHx6C,EAAAA,EAAAA,YAAU,KACR07B,GAAc,GACb,CAAC3C,EAAalc,KAGf3d,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,uBAEtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAWC,IACT6sB,EAAe7sB,EAAEC,OAAOH,MAAM,EAEhCA,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASo3B,EAAal9B,SAAC,mBAMzDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SACzB3B,MAAO,CAELc,UAAW,SACX/B,UAEFU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJtC,UAAU,cACVpC,MAAO,CAAEgO,aAAc,QAASjP,SAAA,EAEhCF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEi0D,SAAU,SAAUnmD,WAAY,QAAS/O,SAAC,0BAC1DF,EAAAA,EAAAA,KAACm0B,EAAY,CACXE,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,OAKhBuzB,aAAeW,IACbrW,EAAoBqW,GACpByF,EAAe,GAAG,YAO5B95B,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPE,eAAe,EACfC,aAAc,IACd58B,MAtRI,CAAE2b,UAAW,KAuRjBkhB,QAASA,EACTM,WAAYu2B,EAEZQ,WAAaC,GAlMHA,KACtB,MAAMnhB,EAAapZ,EAAa4B,MAAMjjB,GAAQA,EAAInN,KAAO+oD,EAAQ/oD,KAG/DyuB,EADEmZ,EACeohB,GACfA,EAAiBprC,QAAQzQ,GAAQA,EAAInN,KAAO+oD,EAAQ/oD,KAGtC,CAAC+oD,GACnB,EAyLqCE,CAAeF,EAAQn9C,MAChDsmB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,aAO7H9+B,EAAAA,EAAAA,KAACy1D,GAAiB,CAACtB,mBAAoBA,EAAoBM,sBAAuBA,EAAuBZ,iBAzLnFlzC,IACxB,IAAK,IAAD+iC,EAAAC,EAAAE,EAGF,GAFAxvC,GAAa,IAER0mB,EAAahyB,OAMhB,OALAjJ,GAAa,QACbsU,EAAY,CACVtT,SAAU,QACVO,KAAM,uBAKV,MAAMumB,EAAU,CACdrb,GAAmB,QAAjBm3C,EAAE3oB,EAAa,UAAE,IAAA2oB,OAAA,EAAfA,EAAiBn3C,GACrB9L,OAAQkgB,EAAO2yC,YACf/U,KAAqB,QAAjBoF,EAAE5oB,EAAa,UAAE,IAAA4oB,OAAA,EAAfA,EAAiBpF,KACvBnC,YAA4B,QAAjByH,EAAE9oB,EAAa,UAAE,IAAA8oB,OAAA,EAAfA,EAAiBzH,aAEhC2Y,EAAyBvZ,kBAAkB5zB,GAAStP,MAAMwI,IACxD2zC,GAAsB,GACtBz5B,EAAgB,IAEhBm6B,IACAjZ,IACA7nC,GAAa,GAEU,aAAb,OAANyM,QAAM,IAANA,OAAM,EAANA,EAAQxX,SACVxJ,GAAa,GACbsU,EAAY,CACVtT,SAAU,UACVO,KAAY,OAANyf,QAAM,IAANA,OAAM,EAANA,EAAQtI,OAEY,YAAb,OAANsI,QAAM,IAANA,OAAM,EAANA,EAAQxX,UACjBxJ,GAAa,GACbsU,EAAY,CACVtT,SAAU,QACVO,KAAY,OAANyf,QAAM,IAANA,OAAM,EAANA,EAAQtI,MAElB,GAEJ,CAAE,MAAOqJ,GACP,KAiJEhiB,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACK,ECtVhB,GAN6By1D,KAErB11D,EAAAA,EAAAA,KAAC21D,GAAkB,ICU3B,GAX2B,CACzB,CACE3sD,KAAM,gBACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC41D,GAAkB,Q,ytBCuBrB37B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAwRD,GAtRoBytD,KAClB,MAAM,cAAEt3C,EAAa,oBAAEK,IAAwBtJ,EAAAA,EAAAA,MACxCq/C,EAAWC,IAAgB3pD,EAAAA,EAAAA,UAAS6qD,KACpCjB,EAAmBC,IAAwB7pD,EAAAA,EAAAA,UAAS,KACpDwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IAEpC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,KAC1C8qD,EAAgBC,IAAqB/qD,EAAAA,EAAAA,UAAS,IAC/C8pD,EAA2B,IAAI7Z,IAC9BiD,EAAa8X,IAAkBhrD,EAAAA,EAAAA,UAAS,oBACzCgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MAEjBksB,EAAU,CACd,CACE/0B,KAAM,UACNg1B,OAAQ,UACRE,YAAa,GACbC,aAAc,GACdC,OAAQp2B,IAAA,IAAC,KAAEkQ,GAAMlQ,EAAA,OAAKjI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM+9C,SAAc,GAElD,CACEjtD,KAAM,WACNg1B,OAAQ,cACRE,YAAa,EACbE,OAAQh2B,IAAe,IAAd,KAAE8P,GAAM9P,EACX8tD,EAAO,IAAI5qC,KAAK6qC,SAAa,OAAJj+C,QAAI,IAAJA,OAAI,EAAJA,EAAMk+C,WACnCn/C,QAAQC,IAAIg/C,EAAM,QAClB,MAAMG,EAAOH,EAAKI,cACZC,EAAQz8B,OAAOo8B,EAAKM,WAAa,GAAGC,SAAS,EAAG,KAChDC,EAAM58B,OAAOo8B,EAAKS,WAAWF,SAAS,EAAG,KACzCG,EAAQ98B,OAAOo8B,EAAKW,YAAYJ,SAAS,EAAG,KAK5CK,EAAgB,GAAGT,KAAQE,KAASG,KADnBE,EAAQ,IAAM,MAHrB98B,OAAOo8B,EAAKa,cAAcN,SAAS,EAAG,QACtC38B,OAAOo8B,EAAKc,cAAcP,SAAS,EAAG,QACrCG,GAAS,GAAK,KAAO,OAGtC,OAAO72D,EAAAA,EAAAA,KAAA,OAAAE,SAAM62D,GAAoB,GAGrC,CACE9tD,KAAM,WACNg1B,OAAQ,eACRE,YAAa,EACbE,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMq/B,UAAe,GAEnD,CACEvuC,KAAM,eACNg1B,OAAQ,eACRE,YAAa,EACbC,aAAc,IACdC,OAAQ5zB,IAAA,IAAC,KAAE0N,GAAM1N,EAAA,OAAKzK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMikC,aAAkB,GAEtD,CACEnzC,KAAM,SACNg1B,OAAQ,iBACRE,YAAa,EACbC,aAAc,IACdC,OAAQz3B,IAAA,IAAC,KAAEuR,GAAMvR,EAAA,OAAK5G,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAM1X,QAAa,IAK7C28B,EAAeA,KACnB,IAAIiU,EAAe,GAGjBA,EADkB,KAAhB5W,EACak6B,EAES,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWxqC,QAAQ+qC,IAAc,IAADgC,EAE7C,OADkD,QAAjCA,EAAG/nC,OAAOxO,OAAOu0C,GAAUvnC,cAAM,IAAAupC,OAAA,EAA9BA,EAAgCpqC,eACjC9K,SAAoB,OAAXyY,QAAW,IAAXA,OAAW,EAAXA,EAAa3N,cAAc,IAU3DgoC,EAAqBzjB,EAAa,EAsDpC,OAvCA3vC,EAAAA,EAAAA,YAAU,KACR2S,GAAa,GACb0gD,EAAyBpZ,uBAAuBrjC,MAAMwI,IAAY,IAADC,EAC/D6zC,EAAmB,OAAN9zC,QAAM,IAANA,OAAM,EAANA,EAAQ3I,MACrB28C,EAA2B,OAANh0C,QAAM,IAANA,OAAM,EAANA,EAAQ3I,MAE7B9D,GAAa,GACb,MAAMsM,EAAS,IAAIsW,IACb,OAANnW,QAAM,IAANA,GAAY,QAANC,EAAND,EAAQ3I,YAAI,IAAA4I,GAAZA,EAAcoD,SAASoY,IACjB/P,MAAMC,QAAQ8P,EAAwB,aACxCA,EAAwB,YAAEpY,SAAShM,IACjCwI,EAAOuW,IAAI/e,EAAKikC,YAAY,IAG9Bz7B,EAAOuW,IAAIqF,EAAwB,YACrC,IAEFrlB,QAAQC,IAAIqV,MAAM2K,KAAKxW,GAAS,oBAChCq1C,EAAkBxpC,MAAM2K,KAAKxW,GAAQ,GACrC,GACD,KAEHjf,EAAAA,EAAAA,YAAU,KACR07B,GAAc,GACb,CAAC3C,EAAalc,KAGjB7c,EAAAA,EAAAA,YAAU,KAAO,IAADuzD,EAGd,IAAI5jB,EAAesjB,EAEnBtjB,EAA2B,QAAf4jB,EAAG5jB,SAAY,IAAA4jB,OAAA,EAAZA,EAAc9qC,QAAQ+qC,IAAc,IAADiC,EAChD,MAAMC,EAA4C,QAAjCD,EAAGhoC,OAAOxO,OAAOu0C,GAAUvnC,cAAM,IAAAwpC,OAAA,EAA9BA,EAAgCrqC,cACpD,OAAOsqC,EAAYp1C,SAAsB,OAAbzD,QAAa,IAAbA,OAAa,EAAbA,EAAeuO,gBACzCsqC,EAAYp1C,SAAoB,OAAXm8B,QAAW,IAAXA,OAAW,EAAXA,EAAarxB,cAAc,IAEpDgoC,EAAqBzjB,EAAa,GACjC,CAAC8M,EAAa5/B,EAAeo2C,KAE9B/zD,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,0BAGtCjJ,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAAWC,IACT6sB,EAAe7sB,EAAEC,OAAOH,MAAM,EAEhCA,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBf,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASo3B,EAAal9B,SAAC,mBAMzDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SACzB3B,MAAO,CAELc,UAAW,SACX/B,UAEFU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJtC,UAAU,cACVpC,MAAO,CAAEgO,aAAc,QAASjP,SAAA,EAEhCF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEi0D,SAAU,SAAUnmD,WAAY,QAAS/O,SAAC,mBAE1DF,EAAAA,EAAAA,KAACwW,EAAAA,EAAM,CACLjT,UAAU,eACVoW,aAAco8C,EAAe,GAC7BpoD,MAAOwwC,EACPvwC,SAAWC,GAAMooD,EAAepoD,EAAEC,OAAOH,OACzCxM,MAAO,CAAEJ,MAAO,OAChByM,KAAM,SACN+mB,cAAY,EACZC,YAAcC,IAEZ,IAAIE,EAAiB,GAKrB,OAJAA,EAA+B,OAAdohC,QAAc,IAAdA,OAAc,EAAdA,EAAgBxmC,MAC9B3Y,GAAYA,IAAW6d,IAGlBE,GAAmC,EAAE,EAC7Cz0B,SAEa,OAAd61D,QAAc,IAAdA,OAAc,EAAdA,EAAgBntD,KAAI,CAACgO,EAAQ9N,KAC5B,MAAM+rB,EAAU,QAAU/rB,EAC1B,OACE9I,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAClJ,MAAOiJ,EAAO1W,SACrB0W,GAD2Bie,EAEnB,cAOvB70B,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAcpC,MAAO,CAAE0B,QAAS,QAAS3C,UACnFF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SACzB3B,MAAO,CAELc,UAAW,SACX/B,UAEFU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACHG,MAAI,EACJC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJtC,UAAU,cACVpC,MAAO,CAAEgO,aAAc,QAASjP,SAAA,EAEhCF,EAAAA,EAAAA,KAAA,SAAOmB,MAAO,CAAEi0D,SAAU,SAAUnmD,WAAY,QAAS/O,SAAC,0BAE1DF,EAAAA,EAAAA,KAACm0B,EAAY,CACXE,cAAe9V,EACfpd,MAAO,CAAEJ,MAAO,OAChBwiD,cAAe3zB,EAAAA,GAIf0E,aAAeW,IACbrW,EAAoBqW,GAEpByF,EAAe,GAAG,YAO5B95B,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAOyD,UAAU,OAAMhK,SAAA,CAC/Cgb,IACClb,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CACF1C,GAAI,CACFmC,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZF,OAAQ,SACR1C,UAEFF,EAAAA,EAAAA,KAACkC,GAAAA,EAAgB,OAGnBgZ,IACAlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPE,eAAe,EACf38B,MA/PI,CAAE2b,UAAW,KAgQjBkhB,QAASA,EACTM,WAAYu2B,EACZ92B,aAAc,IAEds3B,WAAaC,GAtLHA,KACtB,MAAMnhB,EAAapZ,EAAa4B,MAAMjjB,GAAQA,EAAInN,KAAO+oD,EAAQ/oD,KAG/DyuB,EADEmZ,EACeohB,GACfA,EAAiBprC,QAAQzQ,GAAQA,EAAInN,KAAO+oD,EAAQ/oD,KAGtC,CAAC+oD,GACnB,EA6KqCE,CAAeF,EAAQn9C,MAChDsmB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,cAMnH,EClThB,GANuBu4B,KAEfr3D,EAAAA,EAAAA,KAACs3D,GAAW,ICUpB,GAXsB,CACpB,CACEtuD,KAAM,WACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAACq3D,GAAc,Q,gBCavB,MAyIA,GAtIwB91D,IAEtB,MAAMy0B,EAAc,IAAIC,GAAAA,GACjBoC,EAAgBC,IAAqBrtB,EAAAA,EAAAA,WAAS,IAC9CqO,EAAcif,IAAmBttB,EAAAA,EAAAA,WAAc,OAAL1J,QAAK,IAALA,OAAK,EAALA,EAAOg2D,aAAc,KAC/D5pD,EAAO8qB,IAAYxtB,EAAAA,EAAAA,UAAS,YAE5BytB,EAAeC,IAAoB1tB,EAAAA,EAAAA,WAAS,IAC5C2tB,EAAgBC,IAAqB5tB,EAAAA,EAAAA,WAAS,IAC9CrL,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,MAWzCiM,QAAQC,IAAI,QAAS5V,GA4CrB,OACEX,EAAAA,EAAAA,MAAAX,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRC,QA1D6B8yB,KACjCR,GAAkB,EAAK,EAyDiBp4B,SACrC,YAGDU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM+3B,EAAen4B,SAAA,EAC3BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,qBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,UAChBF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACrC,MAAM,OAAO0F,SAAS,OAAMvG,UAC/BF,EAAAA,EAAAA,KAACsF,EAAAA,GAAU,CAAApF,UACTF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG3F,UAChCF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACC,WAAS,EAAC1C,WAAW,SAAQ5C,UACjCU,EAAAA,EAAAA,MAAC0V,GAAAA,EAAW,CAAApW,SAAA,EACVF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAS,CAACxsB,GAAG,sCAAqCrM,SAAC,2BACpDU,EAAAA,EAAAA,MAAC6Y,GAAAA,EAAU,CACT,kBAAgB,sCAChBxQ,KAAK,iCACL0E,MAAOA,EACPC,SAnCApN,IACpBi4B,EAASj4B,EAAMsN,OAAOH,OACK,YAAvBnN,EAAMsN,OAAOH,MACf4qB,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOi2D,aAEvBj/B,EAAqB,OAALh3B,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAEzB,EA4B2C94B,SAAA,EAEvBF,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,UAAUkM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,cAC5D1W,EAAAA,EAAAA,KAAC4Z,GAAAA,EAAgB,CAACjM,MAAM,eAAekM,SAAS7Z,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAK,IAAKpD,MAAM,qCAUjF9V,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QAxFQizB,KAChCX,GAAkB,EAAM,EAuFmCp4B,SAAC,YAGtDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA9EakzB,KAC3BZ,GAAkB,GAClB,IAAIngB,GAAmB,YAAVxK,EAA4B,OAALpM,QAAK,IAALA,OAAK,EAALA,EAAOy3B,mBAA0B,OAALz3B,QAAK,IAALA,OAAK,EAALA,EAAOg2D,aAAe,GAClFp+B,EAAiB,OAAJhhB,QAAI,IAAJA,OAAI,EAAJA,EAAMvP,KAAIlD,IACf,CACR,WAAYA,EAAK+wB,QACjBre,SAAU1S,EAAKwP,SACf,mBAAoBxP,EAAK+xD,MACzB,mBAAoB/xD,EAAKgyD,UAM7B1hC,EAAYqC,eAAe,CAAE,KAAQc,EAAY,WAAc,iBAAkB7gB,MAAMC,IACrFsgB,EAAkBtgB,GAxBpBogB,GAAiB,GA2Bf74B,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,KAChB,GACF,EAuD0CtY,SAAC,iBAqBzCL,GACAG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KACrEE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,MACJ,ECrJD03D,GAAW,CACb,CACI,KAAQ,WACR,UAAa,IACb,SAAY,SACZ,UAAa,SACb,cAAiB,GACjB,OAAU,CACN,CACI,IAAO,MACP,OAAU,YAItB,CACI,KAAQ,WACR,UAAa,IACb,SAAY,SACZ,UAAa,SACb,cAAiB,GACjB,OAAU,CACN,CACI,OAAU,SACV,KAAQ,UAIpB,CACI,KAAQ,mBACR,UAAa,IACb,SAAY,SACZ,UAAa,OACb,cAAiB,GACjB,OAAU,IAEd,CACI,KAAQ,mBACR,UAAa,IACb,SAAY,SACZ,UAAa,OACb,cAAiB,GACjB,OAAU,KAuNlB,IAnNwBC,EAAAA,EAAAA,aAAW,CAACr2D,EAAOwR,KACvC,MAAOnT,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClC4sD,EAAaC,IAAkB7sD,EAAAA,EAAAA,UAAS,IACzCi/B,EAAgB,CAElB,WAAY,KACZh1B,SAAU,KACV,mBAAoB,KACpB,mBAAoB,MAGlB6iD,EAAYp3C,IACdzJ,QAAQC,IAAIwJ,EAAQ,YACpB,MAAMw2B,EAAS,CAAC,EAiBhB,OAZKx2B,EAAO,cACRw2B,EAAO,YAAc,YAEpBx2B,EAAOzL,WACRiiC,EAAOjiC,SAAW,YAEjByL,EAAO,sBACRw2B,EAAO,oBAAsB,YAE5Bx2B,EAAO,sBACRw2B,EAAO,oBAAsB,YAE1BA,CAAM,EA6CjB,OAJAz1C,EAAAA,EAAAA,YAAU,KACNo2D,EAAeH,GAAS,GACzB,KAGC/2D,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACIF,EAAAA,EAAAA,KAACiqC,GAAAA,GAAM,CACHC,cAAeA,EACf6tB,SAAUA,EACV3tB,SAAUA,CAACzpB,EAAM1Y,KAAyB,IAAvB,cAAE+vD,GAAe/vD,EA/C/BmiC,EAACzpB,EAAQs3C,EAAOt4D,KAAqB,IAAnB,UAAEi0D,GAAWj0D,EAG5C,GADAuX,QAAQC,IAAIwJ,EAAQ,cAChBs3C,EAAS,CAET,MAAMC,EAAgB,IACfv3C,EACH8V,QAAS9V,EAAO,YAChB82C,MAAO92C,EAAO,oBACd+2C,MAAO/2C,EAAO,4BAEXu3C,EAAc,mBACdA,EAAc,2BACdA,EAAc,oBAErBtE,IAEsBzkC,OAAOkN,KAAK1b,GAAQgc,MAAMw7B,GACrCx3C,EAAOw3C,KAAejuB,EAAciuB,KAG3C52D,EAAM62D,SAAS,CAAEC,YAAaJ,EAASN,SAAUO,KAEjDp4D,GAAa,GACbsU,EAAY,CACRtT,SAAU,QACVO,KAAM,qBAGlB,MACIvB,GAAa,GACbsU,EAAY,CACRtT,SAAU,QACVO,KAAM,oCAEd,EAaY+oC,CAASzpB,GAASwO,OAAOkN,KAAK07B,EAASp3C,IAAS5X,OAAQ,CAAE6qD,UAAWA,IAAMoE,GAAc,IAAS,EAEtGM,SAAUvlD,EAAI7S,SAGV,SAAiBmI,GAAmF,IAAlF,QAAE4vD,EAAO,OAAEt3C,EAAM,OAAEw2B,EAAM,cAAE6c,EAAa,UAAEJ,EAAS,aAAE2E,EAAY,WAAExE,GAAY1rD,EA6B7F,OA5BA3G,EAAAA,EAAAA,YAAU,KAAO,IAAD82D,EACmDC,EAAvC,UAAf,OAALl3D,QAAK,IAALA,OAAK,EAALA,EAAOm3D,WAA4B,OAALn3D,QAAK,IAALA,GAAmB,QAAdi3D,EAALj3D,EAAOw5B,oBAAY,IAAAy9B,GAAnBA,EAAqBzvD,SAC9C,OAALxH,QAAK,IAALA,GAAmB,QAAdk3D,EAALl3D,EAAOw5B,oBAAY,IAAA09B,GAAnBA,EAAqBt0C,SAAQ+wC,IACzBlB,EAAc,WAAoB,OAARkB,QAAQ,IAARA,OAAQ,EAARA,EAAUz+B,SACpCu9B,EAAc,WAAoB,OAARkB,QAAQ,IAARA,OAAQ,EAARA,EAAUhgD,UACpC8+C,EAAc,mBAA4B,OAARkB,QAAQ,IAARA,OAAQ,EAARA,EAAUuC,OAC5CzD,EAAc,mBAA4B,OAARkB,QAAQ,IAARA,OAAQ,EAARA,EAAUwC,MAAM,IAE1D,GACD,CAAC1D,KAGJ2E,EAAAA,EAAAA,qBAAoB5lD,GAAK,MACrBghD,UAAAA,GACI78C,QAAQC,IAAI,mBAUZohD,GACJ,OAIAv4D,EAAAA,EAAAA,KAACqqC,GAAAA,GAAI,CAAAnqC,SAEI23D,EAAa9uD,OAAoB,OAAX8uD,QAAW,IAAXA,OAAW,EAAXA,EAAajvD,KAAI,CAAClD,EAAMkzD,KAAU,IAADC,EACpD,MAAMC,EAAoB,OAAJpzD,QAAI,IAAJA,OAAI,EAAJA,EAAMuD,KACtB8vD,EAAoBp4C,EAAOm4C,KAAsB,OAAJpzD,QAAI,IAAJA,OAAI,EAAJA,EAAM07B,eAEzD,IAAI43B,EAAgB,OAAJtzD,QAAI,IAAJA,OAAI,EAAJA,EAAMq7B,UACPpgB,EAAqB,QAAfk4C,EAAChB,EAAY,UAAE,IAAAgB,OAAA,EAAdA,EAAgB5vD,MAEtC,OACIjJ,EAAAA,EAAAA,KAAA,OAAKuD,UAAU,oBAAmBrD,UAC9BU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CACDC,WAAS,EACTC,QAAS,EACT3C,WAAW,SAAQ5C,SAAA,EAEnBF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACpDF,EAAAA,EAAAA,KAAA,SAAOi5D,QAAQ,YAAW/4D,UACtBU,EAAAA,EAAAA,MAAA,QAAAV,SAAA,CACS,OAAJwF,QAAI,IAAJA,OAAI,EAAJA,EAAMuD,KACc,OAAhB,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAMk7B,YAAoB5gC,EAAAA,EAAAA,KAAA,QAAMmB,MAAO,CAAEU,MAAO,OAAQ3B,SAAC,MAAW,WAIjFU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAG3F,SAAA,CAET,SAAd84D,IACGh5D,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACN1J,UAAW,eACX1B,MAAc,OAANs1C,QAAM,IAANA,GAAAA,EAAS2hB,GAAkB,UAAc,GACjDzrD,WAAS,EACTG,KAAK,QACLzH,QAAQ,WACRwG,GAAIusD,EACJ7vD,KAAM6vD,EACNnrD,MAAOorD,EACPnrD,SAAWC,IACPmmD,EAAc8E,EAAejrD,EAAEC,OAAOH,MAAM,EAEhDzM,KAAK,OACLC,MAAO,CAAEiH,aAAc,UAKhB,WAAd4wD,IACGh5D,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIU,EAAAA,EAAAA,MAAC4V,EAAAA,EAAM,CACH7S,SAA8B,UAAf,OAALpC,QAAK,IAALA,OAAK,EAALA,EAAOm3D,WAAuB,CAAC,WAAY,YAAY12C,SAAS82C,GAC1EnrD,MAAOorD,EACPnrD,SAAWC,IACPmmD,EAAc8E,EAAejrD,EAAEC,OAAOH,MAAM,EAEhD4mB,cAAY,EACZC,YAAcC,GACLA,GAGM,OAAJ/uB,QAAI,IAAJA,OAAI,EAAJA,EAAMib,OAAO5X,UAAc,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMib,OAAO,GAAG8T,KAFnCz0B,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAInBiB,MAAO,CAAEyB,OAAQ,UAAWwF,aAAc,OAAQrH,MAAO,QAASb,SAAA,EAElEF,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAA3W,SAAC,YAEF,OAAJwF,QAAI,IAAJA,OAAI,EAAJA,EAAMib,OAAO5X,SAAUomB,OAAOkN,KAAS,OAAJ32B,QAAI,IAAJA,OAAI,EAAJA,EAAMib,OAAO,IAAI/X,KAAKswD,IAEjDl5D,EAAAA,EAAAA,KAAC6W,EAAAA,EAAQ,CAAClJ,MAAOurD,EAAMh5D,SAA+B,OAAJwF,QAAI,IAAJA,OAAI,EAAJA,EAAMib,OAAO,GAAGu4C,IAArChwD,KAAAA,oBAQzDlJ,EAAAA,EAAAA,KAACu0D,GAAAA,GAAY,CAACtrD,KAAM6vD,EAAehyD,UAAU,UAlDX8xD,OAdNA,EAmElC,KAER54D,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,KAKtB,IAGPJ,IACGG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,MAE1E,ICxORm6B,IAAYt3B,EAAAA,EAAAA,IAAO,MAAPA,EAAchD,IAAA,IAAC,MAAEoC,GAAOpC,EAAA,MAAM,CAC9CiI,OAAQ,OACR,CAAC7F,EAAMwM,YAAYC,KAAK,OAAQ,CAAE5G,OAAQ,QAC1C,gBAAiB,CACfQ,aAAc,OACd,CAACrG,EAAMwM,YAAYC,KAAK,OAAQ,CAAEpG,aAAc,SAEnD,IAEK+wD,GAAcA,KAClB,MAAMC,GAAetnD,EAAAA,EAAAA,QAAO,OACrBunD,EAAUC,IAAeruD,EAAAA,EAAAA,WAAS,IAClCsuD,EAAcC,IAAmBvuD,EAAAA,EAAAA,UAAS,WAC1CwuD,EAAYC,IAAiBzuD,EAAAA,EAAAA,UAAS,OACtCssD,EAAYoC,IAAiB1uD,EAAAA,EAAAA,UAAS,KACtC2uD,EAAeC,IAAoB5uD,EAAAA,EAAAA,UAAS,KAC5CwvB,EAAaC,IAAkBzvB,EAAAA,EAAAA,UAAS,KACxCiQ,EAAW7G,IAAgBpJ,EAAAA,EAAAA,WAAS,IACpCmvB,EAAcC,IAAmBpvB,EAAAA,EAAAA,WAAS,GAC3C6uD,EAAwB,IAAIC,GAAAA,GAC3Bn6D,EAAWE,IAAgBmL,EAAAA,EAAAA,WAAS,IACpCpL,EAAUuU,IAAenJ,EAAAA,EAAAA,UAAS,OAClCwpB,EAAUqG,IAAe7vB,EAAAA,EAAAA,UAAS,CAAC,IACnC8vB,EAAcC,IAAmB/vB,EAAAA,EAAAA,UAAS,KAC1CsuB,EAAae,IAAkBrvB,EAAAA,EAAAA,UAAS,KACxCquB,EAAUuB,IAAe5vB,EAAAA,EAAAA,UAAS,IACnCgwB,GAAUnpB,EAAAA,EAAAA,QAAO,MACjBopB,EAAUD,GAAWA,EAAQ3oB,SAAW2oB,EAAQ3oB,QAAQ4oB,QAAUD,EAAQ3oB,QAAQ4oB,QAAU,KAC5FE,GAAoBlvB,EAAAA,EAAAA,cAAYjE,IAAmB,IAAlB,SAAEwsB,GAAUxsB,EACjD6yB,EAAYrG,EAAS,GACpB,IAECulC,EAAmBzC,EAAW7qC,MAAK,CAACpJ,EAAGqJ,IACvCrJ,EAAEmT,QAAU9J,EAAE8J,SAAiB,EAC/BnT,EAAEmT,QAAU9J,EAAE8J,QAAgB,EAC3B,IAGDuH,EAAU,CACd,CACE/0B,KAAM,UACNg1B,OAAQ,WACRE,YAAa,EACbC,aAAc,GACdC,OAAQh2B,IAAA,IAAC,KAAE8P,GAAM9P,EAAA,OAAKrI,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMse,SAAc,GAElD,CACExtB,KAAM,WACNg1B,OAAQ,WACRE,YAAa,EACbC,aAAc,GACdC,OAAQ9zB,IAAA,IAAC,KAAE4N,GAAM5N,EAAA,OAAKvK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMjD,UAAe,GAEnD,CACEjM,KAAM,QACNg1B,OAAQ,mBACRE,YAAa,EACbC,aAAc,GACdC,OAAQ5zB,IAAA,IAAC,KAAE0N,GAAM1N,EAAA,OAAKzK,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMs/C,OAAY,GAEhD,CACExuD,KAAM,QACNg1B,OAAQ,mBACRE,YAAa,EACbC,aAAc,GACdC,OAAQz3B,IAAA,IAAC,KAAEuR,GAAMvR,EAAA,OAAK5G,EAAAA,EAAAA,KAAA,OAAAE,SAAU,OAAJiY,QAAI,IAAJA,OAAI,EAAJA,EAAMu/C,OAAY,IA8F5CuC,EAAkBtuD,UAAa,IAADuuD,EAClC,MAAMC,QAAkBL,EAAsBM,wBAE9C,OADAljD,QAAQC,IAAIgjD,EAAW,aACV,OAATA,QAAS,IAATA,GAAe,QAAND,EAATC,EAAWhiD,YAAI,IAAA+hD,GAAfA,EAAiBnxD,QACnB4wD,EAAuB,OAATQ,QAAS,IAATA,OAAS,EAATA,EAAWhiD,MACzBmiB,EAAwB,OAAT6/B,QAAS,IAATA,OAAS,EAATA,EAAWhiD,MAC1B0hD,EAA0B,OAATM,QAAS,IAATA,OAAS,EAATA,EAAWhiD,MACZ,OAATgiD,QAAS,IAATA,OAAS,EAATA,EAAWhiD,MAEX,EACT,GA8BFzW,EAAAA,EAAAA,YAAU,KACRu4D,GAAiB,GAChB,KAEHv4D,EAAAA,EAAAA,YAAU,KAAO,IAADikC,EACd,MAAMxJ,GAA2B,IAAb1H,EAAoByG,EAAUzG,EAC5C2H,EAAkBD,KAAyC,QAAxBwJ,EAAAxW,OAAOkN,KAAKF,UAAY,IAAAwJ,OAAA,EAAxBA,EAA0B/8B,KAAIoF,GAAQmuB,EAAYnuB,OAAU,IACnF,OAAdouB,QAAc,IAAdA,GAAAA,EAAgBrzB,QAClBiyB,EAAgBoB,EAClB,GACC,CAAC3H,KAEJ/yB,EAAAA,EAAAA,YAAU,KACRwV,QAAQC,IAAIsjB,EAAa,iBAzCH9uB,WACtB,IAAI0uD,EAAkB,GAOtB,GANAhmD,GAAa,GAEXgmD,EAD2B,IAAzBT,EAAc7wD,aACQkxD,IAENL,EAEhBS,EAAiB,CACnB,MAAMC,EAAkBD,EAAgBlwC,QAAQowC,IACrC9/B,GAAsB5P,KAAKk3B,UAAUwY,GAASztC,cAAc9K,SAASyY,EAAY3N,kBACtF,GACFwtC,EAAgBvxD,QAClB4wD,EAAcW,GACdhgC,EAAeggC,IAEfX,EAAc,GAElB,CACAtlD,GAAa,EAAM,EAuBnBmmD,CAAgB//B,EAAY,GAC3B,CAACA,IAEJvjB,QAAQC,IAAI,eAEZ,MAAM2lB,EAAwBxD,IAC5BuB,EAAYvB,GACZ,MACME,EADiBuD,GAAoBo8B,GACxB9gB,CAAe,CAAElgC,KAAMo/C,EAAYj+B,WAAU2D,iBAAkBH,EAAsBvD,gBACxGogC,EAAcngC,EAAWj4B,MAAM4W,KAAK,EAGtC,OACEvX,EAAAA,EAAAA,MAACq5B,GAAS,CAAA/5B,SAAA,EACRF,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACG,UAAU,aAAYrD,UACzBF,EAAAA,EAAAA,KAACk9B,EAAAA,GAAU,CAAC50B,cAAe,CAAC,CAAEW,KAAM,sBAGtCrI,EAAAA,EAAAA,MAAA,OAAAV,SAAA,EACEU,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG3C,WAAW,SAAQ5C,SAAA,EAC7CF,EAAAA,EAAAA,KAACuF,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAItC,UAAU,cAAarD,UACtDF,EAAAA,EAAAA,KAACiN,GAAAA,EAAS,CACR/L,KAAK,OACL+H,KAAK,SACLuE,KAAK,QACLI,SAzKqBpN,IAC/B,MAAM28B,EAAiB38B,EAAMsN,OAAOH,MACpC+sB,EAAeyC,EAAe,EAwKpBxvB,MAAO8sB,EACPt5B,MAAO,CAAEJ,MAAO,aAGpBH,EAAAA,EAAAA,MAAC2E,EAAAA,GAAI,CAACG,MAAI,EAACF,WAAS,EAACG,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI/C,WAAW,SAAQ5C,SAAA,EAC5DF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACC,QAAQ,YAAW7F,SAAC,YAG5BF,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEk8B,KAAM,MACpBr9B,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRe,UAAWw2B,GAAAA,KACXt3B,QAASA,KACPszD,GAAY,GACZE,EAAgB,SAAS,EACzBt5D,SACH,YAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAmC,KAAb,OAAZo3B,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QACxB/C,QAASA,KACPszD,GAAY,GACZE,EAAgB,OAAO,EAEzBr4D,MAAO,CAAEyG,OAAQ,gBAAiB1H,SACnC,UAGDF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CACLC,QAAQ,YACRpC,SAAsB,OAAZo3B,QAAY,IAAZA,IAAAA,EAAchyB,OACxB/C,QAtMey3B,KACzBpD,GAAgB,EAAK,EAsMXl5B,MAAO,CAAEyG,OAAQ,iBAAkB1H,SACpC,YAGDF,EAAAA,EAAAA,KAAC29B,GAAe,CACf45B,WAAYA,EACZv+B,mBAAoB+B,WAIzB/6B,EAAAA,EAAAA,KAAA,SAECkb,GACClb,EAAAA,EAAAA,KAAA,OAAKmB,MAAO,CAAEc,UAAW,UAAW/B,UAClCF,EAAAA,EAAAA,KAACsB,GAAAA,EAAM,CAACK,KAAMuZ,OAGhBlb,EAAAA,EAAAA,KAAC49B,GAAAA,GAAQ,CACPC,WAAW,KACXC,eAAe,EACf38B,MAAO,CAAE2b,UAAW,KACpBkhB,QAASA,EACTD,aAAc,IACZO,WAAyB,OAAbhF,EAAoBi+B,EAAayC,EAE/Cz7B,gBAAc,EACd9J,SAAUA,EACV2G,kBAAmBA,EACnBoD,OAAQzrB,GAAOkoB,EAAQ3oB,QAAUS,EAAMA,EAAIT,QAAU,KACrDmsB,YAAU,EACVC,eAAgBA,KAAA,IAAAC,EAAAC,EAAA,OAAY,OAAP3D,QAAO,IAAPA,GAAgB,QAAT0D,EAAP1D,EAAS3oB,eAAO,IAAAqsB,OAAT,EAAPA,EAAkBE,aAAmC,IAAV,OAAZ9D,QAAY,IAAZA,OAAY,EAAZA,EAAchyB,QAAY,EAAW,OAAPkyB,QAAO,IAAPA,GAAgB,QAAT2D,EAAP3D,EAAS3oB,eAAO,IAAAssB,OAAT,EAAPA,EAAkBE,eAAe,EACnH7B,iBAAkBH,OAKvBj9B,IACCG,EAAAA,EAAAA,KAACia,GAAAA,EAAc,CAACra,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,KAG1Ec,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CAAChT,KAAM85B,EAAal6B,SAAA,EACzBF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAAC3U,MAAO,CAAE4U,OAAQ,QAAUxJ,GAAG,yBAAwBrM,SAAC,oBAGpEF,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAAA9V,UACZF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAA/V,SAAC,sDAIrBU,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAAC2S,WAAS,EAACzS,QArPA+4B,KACxB1E,GAAgB,EAAM,EAoP6Bn6B,SAAC,YAG9CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QApPY2F,UAC1B0uB,GAAgB,GAChB,IACEhmB,GAAa,GACb,MAAM2qB,EAAwB,OAAZjE,QAAY,IAAZA,OAAY,EAAZA,EAAcnyB,KAAIlD,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,WAC7CutD,EAAsBW,qBAAqBz7B,GAAW1mB,MAAKC,IAC/DlE,GAAa,GACbvU,GAAa,GACbsU,EAAY,CACVtT,SAAkB,OAARyX,QAAQ,IAARA,OAAQ,EAARA,EAAUjP,OACpBjI,KAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAUC,MAElBsiB,EAAY,CAAC,GACbE,EAAgB,GAAG,GAEvB,CAAE,MAAO72B,GACP+S,QAAQ/S,MAAM,4BAA6BA,EAC7C,CAEA21D,EAAsBM,wBAAwB9hD,MAAMwI,IAClD5J,QAAQC,IAAI2J,EAAO3I,KAAM,eACzBwhD,EAAc74C,EAAO3I,MACrBmiB,EAAexZ,EAAO3I,MACtB0hD,EAAiB/4C,EAAO3I,KAAK,GAC7B,EA4NyCjY,SAAC,kBAK1CU,EAAAA,EAAAA,MAAC0S,GAAAA,EAAM,CACLhT,KAAM+4D,EACN94D,QAASA,KAAQ+4D,GAAY,EAAM,EACnCoB,OAAQ,QACR,kBAAgB,sBAChB,mBAAiB,4BACjBtwD,SAAU,KACViD,WAAW,EACXrH,QAlJuBxF,IAE3BA,EAAMm6D,iBAAiB,EAgJUz6D,SAAA,EAE7BF,EAAAA,EAAAA,KAAC8V,GAAAA,EAAW,CAACvJ,GAAG,sBAAqBrM,SAClC,GAAGq5D,oBAENv5D,EAAAA,EAAAA,KAACgW,GAAAA,EAAa,CAACiI,UAAU,EAAK/d,UAC5BF,EAAAA,EAAAA,KAACiW,GAAAA,EAAiB,CAAC1J,GAAG,4BAA4BquD,UAAW,EAAE16D,UAQ7DF,EAAAA,EAAAA,KAAC66D,GAAe,CAAC9nD,IAAKqmD,EAAchB,SAnP7BzsD,UAIf,GAHAuL,QAAQC,IAAI2jD,EAAiB,uBAGzBA,GAEiB,OAAfA,QAAe,IAAfA,GAAAA,EAAiBzC,YAAa,CAAC,IAAD0C,EAChCzB,GAAY,GACZjlD,GAAa,GACbqlD,EAAcoB,GACd,IAAI51B,EAAc,KAMsB,IAAD81B,EAehCC,EAfP,GAJE/1B,EADmB,SAAjBq0B,GAAuC,OAAZx+B,QAAY,IAAZA,GAAAA,EAAchyB,aACvB+wD,EAAsBoB,qBAAoC,OAAfJ,QAAe,IAAfA,OAAe,EAAfA,EAAiBnD,gBAE5DmC,EAAsBqB,kBAAiC,OAAfL,QAAe,IAAfA,OAAe,EAAfA,EAAiBnD,UAEnD,aAAb,QAAXoD,EAAA71B,SAAW,IAAA61B,OAAA,EAAXA,EAAazxD,QACfwxB,EAAY,CAAC,GACbE,EAAgB,UACV8+B,EAAsBM,wBAAwB9hD,MAAMwI,IACxD5J,QAAQC,IAAI2J,EAAO3I,KAAM,eACzBwhD,EAAc74C,EAAO3I,MACrBmiB,EAAexZ,EAAO3I,MACtB0hD,EAAiB/4C,EAAO3I,KAAK,IAG/BrY,GAAa,GACbsU,EAAY,CACVtT,SAAU,UACVO,KAAiB,QAAb25D,EAAE91B,SAAW,IAAA81B,OAAA,EAAXA,EAAaxiD,WAGrB1Y,GAAa,GACbsU,EAAY,CACVtT,SAAU,QACVO,KAAiB,QAAb45D,EAAE/1B,SAAW,IAAA+1B,OAAA,EAAXA,EAAaziD,KAGzB,CAEFnE,GAAa,EAAM,EA2M6C0mB,aAAcA,EAAc29B,SAAUa,SAGlG34D,EAAAA,EAAAA,MAACkX,GAAAA,EAAa,CAAA5X,SAAA,EACZF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QAASA,KAAQszD,GAAY,EAAM,EAAGp5D,SAAC,YAE/CF,EAAAA,EAAAA,KAAC8F,EAAAA,EAAM,CAACE,QA/MS2F,UACnBytD,EAAa9mD,eAET8mD,EAAa9mD,QAAQyhD,YAC7B,EA2MwC7zD,SAAC,iBAG7B,EAIhB,MCvXA,GAbsBP,IAA4B,IAA3B,SAAEO,KAAa8qD,GAAMrrD,EACxC,MAAMy7D,GAAWC,EAAAA,EAAAA,IAAQ,IACnBn1D,GAAW+L,EAAAA,EAAAA,MACjB,OAAImpD,EAASloC,WAAW,MAEbhtB,EAAS8L,SAASkhB,WAAW,SAAiC,MAAtBhtB,EAAS8L,UADjDhS,EAAAA,EAAAA,KAAC+1B,EAAAA,GAAQ,CAACptB,GAAG,YAGbzC,EAAS8L,SAASkhB,WAAW,oBAC7BlzB,EAAAA,EAAAA,KAACs7D,EAAAA,GAAa,IAElBp7D,CAAQ,ECkBnB,GA5B4Bq7D,KACxB,MAAM,SAAEppC,EAAQ,UAAEhT,IAAcE,EAAAA,EAAAA,OACjBW,EAAAA,EAAAA,MAEf,MAAMw7C,EAAavpC,IAEfE,EAASspC,SAAS,IAAI,EAIpBC,EAAWv3D,IAEb+S,QAAQ/S,MAAM,+BAAgCA,EAAM,EASxD,OANAzC,EAAAA,EAAAA,YAAU,KACNywB,EAASwpC,sBACJrjD,KAAKkjD,GACL55C,MAAM85C,EAAQ,GACpB,CAACvpC,KAGAnyB,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBACF,ECMR07D,GAAiB,IAClBC,KACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MACAC,MC9CqB,CAAC,CACzB5zD,KAAM,eACN6sB,SACE71B,EAAAA,EAAAA,KAACwnC,GAAY,CAAAtnC,UACXF,EAAAA,EAAAA,KAAC68D,GAAe,SD8CP,SAASC,KACtB,MAAMnzC,EAAS,CACb,CACEkM,SACE71B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAC+8D,EAAS,CAAA78D,UACRF,EAAAA,EAAAA,KAACg9D,EAAAA,EAAU,QAIjB98D,SAAU07D,IAEZ,CACE5yD,KAAM,IACN6sB,SAAS71B,EAAAA,EAAAA,KAACi9D,GAAa,KAEzB,CACEj0D,KAAM,kBACN6sB,SAAS71B,EAAAA,EAAAA,KAACu7D,GAAmB,KAE/B,CACEvyD,KAAM,gBACN6sB,SAAS71B,EAAAA,EAAAA,KAACqzB,EAAgB,KAE5B,CACErqB,KAAM,YACN6sB,SAAS71B,EAAAA,EAAAA,KAAC80B,EAAQ,KAEpB,CACE9rB,KAAM,IACN6sB,SAAS71B,EAAAA,EAAAA,KAAC+yB,EAAQ,MAKtB,OADcmqC,EAAAA,EAAAA,IAAUvzC,EAE1B,C,gBEvFA,MAwBA,GAxBiBhqB,IAAgC,IAA/B,eAAEw9D,EAAc,MAAEh5D,GAAOxE,EAGvC,OAAO,IACD,E,4BCOV,MAAMwyB,GAAW,IAAIirC,EAAAA,IAASC,EAAO/rC,MA8CrC,GA7CYgsC,KACV,MAAMv9C,GAAWC,EAAAA,EAAAA,MAkBjB,OAXAte,EAAAA,EAAAA,YAAU,KACR,MAAM67D,EAAQ3xD,YAAW,KAEvB4xD,YAAYC,KADgB,uBACS,GACpC,KAIH,OAFAvmD,QAAQC,IAAIoZ,aAAsB,wBAE3B,IAAMmtC,aAAaH,EAAM,GAC/B,KAGDv9D,EAAAA,EAAAA,KAAC29D,GAAAA,GAAa,CAACC,kBAAmBC,GAChCC,QAAU3wC,MAERjtB,UACFF,EAAAA,EAAAA,KAACmiB,EAAAA,GAAQ,CAAC47C,MAAO90C,EAAAA,EAAM/oB,UACrBF,EAAAA,EAAAA,KAAC8kB,GAAAA,EAAgB,CAAA5kB,UACfU,EAAAA,EAAAA,MAACo9D,EAAAA,GAAS,CAAA99D,SAAA,EACRF,EAAAA,EAAAA,KAACud,EAAAA,GAAS,KACVvd,EAAAA,EAAAA,KAACwC,EAAAA,GAAY,CAAAtC,UACXF,EAAAA,EAAAA,KAACi+D,EAAAA,GAAQ,CACP9rC,SAAUA,GACV+rC,mBA7BaA,CAAC/rC,EAAUC,KACpCrS,GAASsS,EAAAA,EAAAA,KAAcD,GAAe,IAAKnsB,OAAOC,SAASwrB,QAAQ,EA6BvDysC,eA3BS,WACrBp+C,EAAS9Z,OAAOC,SAASwrB,OAC3B,EAyB6CxxB,UAC/BF,EAAAA,EAAAA,KAACkf,GAAAA,EAAsB,CAAAhf,UACrBF,EAAAA,EAAAA,KAAC88D,GAAM,kBAOL,E,2BC7CpB,IAAIpvD,GAAO,KA6CI,SAAS,KAGtB,GAAIzH,OAAOm4D,OAAQ,CAGjB,IAAIC,GAAe,EAEnBp4D,OAAOm4D,OAAOE,SAAS,UAAU,KAC3BD,EACFnnD,QAAQqnD,KACN,+EAIJF,GAAe,EA3DrB,WAAkB,IAADG,EAAAC,EACfC,UAAU,CAAC,+BAAgCC,IACzC14D,OAAO04D,YAAcA,CAAW,IAIlC,IAAIC,GACW,QAAbJ,EAAAv4D,OAAOm4D,cAAM,IAAAI,GAAM,QAANC,EAAbD,EAAen7C,YAAI,IAAAo7C,OAAN,EAAbA,EAAqBhzD,cAAc,WACnCD,SAASqzD,eAAe,QAGrBD,IACHA,EAAcpzD,SAASszD,cAAc,OACrCF,EAAYryD,GAAK,OACbtG,OAAOm4D,QAAUn4D,OAAOm4D,OAAO/6C,KACjCpd,OAAOm4D,OAAO/6C,KAAK07C,YAAYH,GAG/BpzD,SAAS6X,KAAK07C,YAAYH,IAOzBlxD,KAEHA,GAAOsxD,EAAAA,WAAoBJ,IAK7BlxD,GAAK2wB,QACHr+B,EAAAA,EAAAA,KAACi/D,GAAAA,EAAoB,CAACC,aAAW,EAAAh/D,UACjCU,EAAAA,EAAAA,MAACu+D,GAAAA,cAAa,CAAC/D,SAAS,IAAGl7D,SAAA,EACzBF,EAAAA,EAAAA,KAAC+Q,GAAAA,GAAW,KACZ/Q,EAAAA,EAAAA,KAACs9D,GAAG,SAIV,CAyBM8B,GAAO,GAEX,MACEloD,QAAQ/S,MACN,sEAGN,C,yEClFA,MAAMo7B,EAAc8/B,EAAAA,EAAMC,SAG1B//B,EAAYggC,aAAaC,QAAQC,KAC5BpC,IAGGA,EAAOtsC,QAAQ2uC,cAAgB,WAAYp1C,EAAAA,EAAAA,KACpC+yC,KAEVl5D,GACUw7D,QAAQC,OAAOz7D,KAK9Bo7B,EAAYggC,aAAahnD,SAASknD,KAC7BlnD,GACUA,IAEVpU,IAAW,IAAD07D,EAEP,OADA3oD,QAAQ/S,MAAM,kBAAmBA,EAAMoU,UAChConD,QAAQC,QAAa,OAALz7D,QAAK,IAALA,GAAe,QAAV07D,EAAL17D,EAAOoU,gBAAQ,IAAAsnD,OAAV,EAALA,EAAiB1nD,OAAS,wBAAwB,IAIjF,S,0ECzBO,MAAMpE,EAAUsrB,WAAAA,GAAA,KACrBsU,aAAe,IACNpU,EAAAA,EACJC,IACC,GAAGlP,EAAAA,wBACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,eAAgB0J,GACvB,MAEX,KAEF0oC,oBAAuBp+B,GACdonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,4BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,sBAAuB0J,GAC9B,MAEX,KACFmoC,SAAY79B,GACHonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,wBACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,WAAY0J,GACnB,MAEX,KAEF+oC,SAAYz+B,GACHonB,EAAAA,EACJO,IACC,GAAGxP,EAAAA,2BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,WAAY0J,GACnB,MAEX,KAEF0mC,SAAYvU,GACHT,EAAAA,EACJU,OACC,GAAG3P,EAAAA,2BACH,CAAEnY,KAAM,CAAE6nB,QACVlP,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,qBAAsBA,GAC9BA,CAAK,GAEf,E,0EC7FG,MAAM8P,EAAWorB,WAAAA,GAAA,KACpBhnB,0BAA6BF,GACtBonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,0CACHnY,EACA6Y,EAAAA,IAED1Y,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,kBAAmB0J,GAC1B,MAEZ,KACDiyD,YAAe3nD,GACNonB,EAAAA,EACJC,IACC,GAAGlP,EAAAA,yBACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,WAAY0J,GACnB,MAEZ,KACDkyD,aAAgB//B,GACPT,EAAAA,EACJU,OACC,GAAG3P,EAAAA,+BACH,CAAEnY,KAAM,CAAE6nB,QACVlP,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,qBAAsBA,GAC9BA,CAAK,IAEf,KACFwT,mBAAoBqoD,IAClB/5D,OAAO3F,KAAK,GAAGgwB,EAAAA,MAAmB0vC,IAAW,CAC9C,E,+FC9CH,IAAIC,EAA6B,GAClB,MAAMC,EAAqB7gC,WAAAA,GAAA,KACtC8gC,SAAYC,IACR,IAAIC,EAAkB,CAClB,UAAa,YACb,QAAW,CACP,gBAAmB,4CACnB,SAAY,SACZ,SAAY,MACZ,cAAiB,UAErB,YAAe,CACX,UAAa,GAAGD,EAAQE,gBACxB,QAAS,KACT,SAAY,QAEhB,YAAe,IAMnB,OAAOjB,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,2BAA0CwvC,EAJ7C,CACd,UAAa,IACb,cAAiB,MAEwE/nD,MAAMmnB,IAC/F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACN,MAAMA,CAAC,GACT,EACJ,KAIF0yD,gBAAmB/oC,IACf,IAAIgpC,EAAc,CACd,YAAe,CACX,GAAY,OAANhpC,QAAM,IAANA,OAAM,EAANA,EAAQipC,MACd,UAAa,WACb,SAAY,SAOpB,OAAOpB,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,4BAA2C2vC,EAJ9C,CACd,UAAa,IACb,cAAiB,MAEqEloD,MAAMmnB,IAC5F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACN,MAAMA,CAAC,GACT,EACJ,KAGF6yD,UAAY,CAACN,EAASlrD,KAClB,IAAImrD,EAAkB,CAClB,UAAa,qBACb,QAAW,CACP,gBAAmB,4CACnB,SAAY,SACZ,SAAY,MACZ,cAAiB,UAErB,YACI,CACI,UAAa,GAAGD,EAAQE,gBACxB,QAAS,KACT,SAAY,SAQxB,OAAOjB,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,2BAA0CwvC,EAJ7C,CACd,UAAa,IACb,cAAiB,MAEwE/nD,MAAMmnB,IAC/F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACN,MAAMA,CAAC,GACT,EACJ,KAEF8yD,iBAAoBnpC,IAChB,IAAIgpC,EAAc,CACd,YAAe,CACX,IAAO,CAAC,CAAC,GAAW,OAANhpC,QAAM,IAANA,OAAM,EAANA,EAAQopC,SACtB,UAAa,aACb,SAAY,SAQpB,OAAOvB,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,4BAA2C2vC,EAJ9C,CACd,UAAa,IACb,cAAiB,MAEqEloD,MAAMmnB,IAC5F,GAAmB,MAAfA,EAAIn2B,OAOJ,OANAm2B,EAAItnB,KAAKvP,KAAKlD,IACPA,EAAKm7D,aAAat0D,MAAa,OAANirB,QAAM,IAANA,OAAM,EAANA,EAAQopC,SAChCX,EAA2Bj0D,KAAKtG,EACpC,IAGGu6D,EAA2BA,GAA8BA,EAA2Bl3D,OAAO,GAEtG,MAAMk3D,EAA2B,EAAE,IACpCr+C,OAAO/T,IACN,MAAMA,CAAC,GACT,EACJ,KACFizD,iBAAoB3oD,GACTknD,EAAAA,EAAMv/B,IAAI,GAAGnP,EAAAA,+BAAsDxY,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IAC/G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KAEFkzD,kBAAqBx0D,GAEVozD,QAAQqB,QADJ,CAACC,MAAK,IAUnB,KACFC,sBAAyB30D,GACd8yD,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,eAAqCpkB,IAAM0kB,EAAAA,IAA6B3Y,MAAMmnB,IAC9F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFszD,qBAAwB50D,GACb8yD,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,cAAoCpkB,IAAM0kB,EAAAA,IAA6B3Y,MAAMmnB,IAC7F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFuzD,mBAAqB,CAAC70D,EAAI80D,EAAWpyC,KACjC,IAAIrH,EAAU,CACV,GAAMrb,EACN,UAAa80D,EACb,SAAY,QAMhB,OAAOhC,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,qCAAoDjJ,EAJvD,CACd,UAAa,IACb,cAAiB,MAE0EtP,MAAMmnB,IACjG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAAK,GAEpB,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,GACT,EACJ,KACFyzD,WAAcC,IACV,IAAI35C,EAAU,CACZ45C,UAAW,aACXC,QAAS,CACPC,gBAAiB,4CACjBC,SAAU,SACVC,SAAU,MACVC,cAAe,UAEjBC,YAAa,CACX3pD,KAAM,CACJ,CACE,GAAMopD,KAIZrsD,SAAU,QAQZ,OAAOmqD,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,6BAA4CjJ,EAL/C,CAChB,UAAa,IACb,cAAiB,MAIhBtP,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEb,MAAM,IAAI4pD,MAAM,sCAAsC,IAEzDngD,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,oBAAqBA,GAC7BA,CAAK,GACX,EACJ,KAEJ69D,YAAeT,IACX,IAAI35C,EAAU,CACZ45C,UAAW,WACXC,QAAS,CACPC,gBAAiB,4CACjBC,SAAU,SACVC,SAAU,MACVC,cAAe,UAEjBC,YAAa,CACX3pD,KAAM,CACJ,CACE,GAAMopD,KAIZrsD,SAAU,QAQZ,OAAOmqD,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,8BAA6CjJ,EALhD,CAChB,UAAa,IACb,cAAiB,MAIhBtP,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,QAAkBkjB,MAAMC,QAAQgT,EAAItnB,OAASsnB,EAAItnB,KAAKpP,OAAS,EACnE,OAAO02B,EAAItnB,KAGb,MAAM,IAAI4pD,MAAM,qBAAqB,IAExCngD,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,4BAA6BA,GACrCA,CAAK,GACX,EACJ,KAEF89D,aAAgBC,IACd,IAAIt6C,EAAU,CACZ45C,UAAW,eACXC,QAAS,CACPC,gBAAiB,4CACjBC,SAAU,SACVC,SAAU,MACVC,cAAe,UAEjBC,YAAa,CACX3pD,KAAM,CACJ,CACEgqD,aAAc,CACZ51D,GAAI21D,EACJE,0BAA2B,UAC3BC,iBAAkB,GAClB7iD,MAAO,WACP8iD,wBAAyB,WAE3BC,aAAc,YAIpBrtD,SAAU,QAQZ,OAAOmqD,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,+BAA8CjJ,EAL/C,CAClB46C,UAAW,IACXC,cAAe,MAIdnqD,MAAKmnB,IACJ,GAAmB,MAAfA,EAAIn2B,OAAgB,OAAOm2B,EAAItnB,KACnC,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAMzd,IAEL,MADA+S,QAAQ/S,MAAM,8BAA0BA,GAClCA,CAAK,GACX,EACJ,KAGJu+D,cAAgB,CAACn2D,EAAI4L,KACjB,IAAIyP,EAAU,CACV,UAAa,CACT,WAAcrb,EACd,UAAa4L,EAAK,cAClB,YAAeA,EAAkB,YACjC,KAAQA,EACR,SAAY,SAOpB,OAAOknD,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,8BAA6CjJ,EAJhD,CACd,UAAa,IACb,cAAiB,MAEmEtP,MAAMmnB,IAC1F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,GACT,EACJ,KACF80D,aAAgBxqD,IACZ,IAAIyP,EAAU,CACV,UAAa,CACT,GAAMzP,EAAK5L,GACX,KAAQ4L,EAAKjX,KACb,cAAiBiX,EAAKyqD,gBAO9B,OAAOvD,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,+BAA8CjJ,EAJjD,CACd,UAAa,IACb,cAAiB,MAEoEtP,MAAMmnB,IAC3F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,GACT,EACJ,KAEFg1D,kCAAqC1qD,IAEjC,MAAM2qD,EAAY3qD,EAAKgS,QAAOzkB,IAAY,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMuD,QAAY,OAAJvD,QAAI,IAAJA,OAAI,EAAJA,EAAM6G,MAC1D,GAAyB,IAArBu2D,EAAU/5D,OAEV,OADAmO,QAAQ/S,MAAM,yCACPw7D,QAAQC,OAAO,wCAI1B,IAAIY,EAAc,CACd,YAAe,CACX,IAAOsC,EACP,UAAa,aACb,SAAY,SASpB,OAAOzD,EAAAA,EAAM1/B,KAAK,GAAG9O,EAAAA,4BAA2C2vC,EAJ9C,CACd,UAAa,IACb,cAAiB,MAEqEloD,MAAMmnB,IAC5F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,IACf,IACGG,MAAMH,IACL,MAAM4qD,EAAoB,CAAC,EAM3B,OALA5qD,EAAKgM,SAAQze,IAAS,IAADs9D,EACT,OAAJt9D,QAAI,IAAJA,GAAkB,QAAds9D,EAAJt9D,EAAMm7D,oBAAY,IAAAmC,GAAlBA,EAAoB/5D,OACpB85D,EAAkBr9D,EAAKm7D,aAAa53D,MAAQvD,EAChD,IAEGq9D,CAAiB,IACzBnhD,OAAO/T,IACN,MAAMA,CAAC,GACT,EACR,KACFo1D,iBAAoB9qD,GACTknD,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,kCAAyDxY,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IACnH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFq1D,YAAc,IACH7D,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,kBAAyCM,EAAAA,IAA6B3Y,MAAMmnB,IAC5F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFs1D,WAAa,IACF9D,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,iBAAwCM,EAAAA,IAA6B3Y,MAAMmnB,IAC3F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFu1D,iBAAoBjrD,GACTknD,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,2BAAkDxY,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IAC5G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFw1D,sBAAyB92D,GACd8yD,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,yBAA+CpkB,IAAM0kB,EAAAA,IAA6B3Y,MAAMmnB,IACxG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFy1D,sBAAyBC,IACrB,IAAI/rC,EAAS,CACTopC,OAAQ2C,EACRC,UAAU,GAEdC,KAAK9C,iBAAiBnpC,GAAQlf,MAAMmnB,IAChC,GAAGA,EACC,OAAU,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKohC,YAChB,IACDj/C,OAAOzd,OACR,EAUJ,KACFu/D,oBAAuBvrD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,0CAAwDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACzH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACD81D,uBAA0BxrD,GACfonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,uCAAqDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACtH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACD0oC,oBAAuBp+B,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,4BAA0CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC3G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACD+1D,wBAA2BzrD,GAChBonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,8CAA4DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC7H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KAEFg2D,4BAA+B1rD,IAC3B,MAAM2qD,EAAY3qD,EAAKgS,QAAOlhB,GAAiB,OAATA,QAA0B+S,IAAT/S,IACvD,OAAyB,IAArB65D,EAAU/5D,QACVmO,QAAQ/S,MAAM,8CACPw7D,QAAQC,OAAO,uCAEnBrgC,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,wCAAsDwyC,EAAWhyC,EAAAA,IAA8BxY,MAAMmnB,IAC5H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,aAAc0J,GACrBA,IACT,EACJ,KACFi2D,oBAAuB3rD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,6BAA2CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC5G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,IACf,IACDyJ,OAAO/T,GACCA,IAEd,KACDk2D,kBAAqB5rD,GACV,IAAIwnD,SAAQh0D,MAAOi0D,EAAOoB,WACvBzhC,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,2BAAyCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACtF,MAAfA,EAAIn2B,QACJ03D,EAAQvhC,EAAItnB,MAEhBynD,EAAOngC,EAAItnB,KAAK,GAEtB,IACL,KACD6rD,qBAAwB7rD,GACbonB,EAAAA,EAAYO,IAAI,GAAGxP,EAAAA,0BAAwCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACxG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFo2D,QAAWC,GACA3kC,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,8BAA4C4zC,EAAapzC,EAAAA,IAA8BxY,MAAMmnB,IACpH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,GAEb,EC9hBS,MAAMs2D,EAAuB9kC,WAAAA,GAAA,KACxC8gC,SAAYC,GACDf,EAAAA,EAAM1/B,KAAK,GATJykC,MAAO,IAADC,EACxB,MAAMC,EAAer7C,EAAAA,EAAMs7C,WAG3B,MADoC,WADH,OAAZD,QAAY,IAAZA,GAAwB,QAAZD,EAAZC,EAAc17C,kBAAU,IAAAy7C,OAAZ,EAAZA,EAA0B/7C,cACAsI,EAAAA,GAAiCD,EAAAA,EAChE,EAKSyzC,qBAAmChE,EAASnvC,EAAAA,IAA6B3Y,MAAMmnB,IAChG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACN,MAAMA,CAAC,IAEb,KACF0yD,gBAAmB/oC,GACR6nC,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,eAA2C,OAAN6G,QAAM,IAANA,OAAM,EAANA,EAAQipC,QAASxvC,EAAAA,IAA6B3Y,MAAMmnB,IACzG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACN,MAAMA,CAAC,IAEb,KACF6yD,UAAY,CAACN,EAASlrD,IACXmqD,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,wBAA+CyvC,EAASnvC,EAAAA,IAA6B3Y,MAAMmnB,IAC5G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACN,MAAMA,CAAC,IAEb,KACF22D,cAAiBpE,GACNf,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,qBAA4CyvC,EAASnvC,EAAAA,IAA6B3Y,MAAMmnB,IACzG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,IACN,MAAMA,CAAC,IAEb,KACF8yD,iBAAoBnpC,GACT6nC,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,+BAA2D,OAAN6G,QAAM,IAANA,OAAM,EAANA,EAAQopC,SAAU3vC,EAAAA,IAA6B3Y,MAAMmnB,IAC1H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFizD,iBAAoB3oD,GACTknD,EAAAA,EAAMv/B,IAAI,GAAGnP,EAAAA,+BAAsDxY,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IAC/G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KAEFkzD,kBAAqBx0D,GACV8yD,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,mBAAyCpkB,IAAM0kB,EAAAA,IAA6B3Y,MAAMmnB,IAClG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFqzD,sBAAyB30D,GACd8yD,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,eAAqCpkB,IAAM0kB,EAAAA,IAA6B3Y,MAAMmnB,IAC9F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFszD,qBAAwB50D,GACb8yD,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,cAAoCpkB,IAAM0kB,EAAAA,IAA6B3Y,MAAMmnB,IAC7F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFuzD,mBAAqB,CAAC70D,EAAIjD,EAAQ6O,IACvBknD,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,sBAA4CpkB,KAAMjD,IAAU6O,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IACtH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF60D,cAAgB,CAACn2D,EAAI4L,IACVknD,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,wBAA8CpkB,IAAM4L,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IAC9G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFg1D,kCAAqC1qD,IACjC,IAAIssD,EAAe,OAAJtsD,QAAI,IAAJA,OAAI,EAAJA,EAAMusD,MACrB,OAAOrF,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,mDAA0E8zC,EAAUxzC,EAAAA,IAA6B3Y,MAAMmnB,IACxI,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,GACT,EACJ,KACFo1D,iBAAoB9qD,GACTknD,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,kCAAyDxY,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IACnH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFq1D,YAAc,IACH7D,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,kBAAyCM,EAAAA,IAA6B3Y,MAAMmnB,IAC5F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFs1D,WAAa,IACF9D,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,iBAAwCM,EAAAA,IAA6B3Y,MAAMmnB,IAC3F,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFu1D,iBAAoBjrD,GACTknD,EAAAA,EAAM1/B,KAAK,GAAGhP,EAAAA,2BAAkDxY,EAAM8Y,EAAAA,IAA6B3Y,MAAMmnB,IAE5G,GADAvoB,QAAQC,IAAI,2DAA4DsoB,GACrD,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFw1D,sBAAyB92D,GACd8yD,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,yBAA+CpkB,IAAM0kB,EAAAA,IAA6B3Y,MAAMmnB,IACxG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFy1D,sBAAyBC,GACdlE,EAAAA,EAAM7/B,IAAI,GAAG7O,EAAAA,eAAqC4yC,IAAWtyC,EAAAA,IAA6B3Y,MAAMmnB,IACnG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF61D,oBAAuBvrD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,0CAAwDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACzH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACD81D,uBAA0BxrD,GACfonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,uCAAqDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACtH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACD+1D,wBAA2BzrD,GAChBonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,8CAA4DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC7H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF0oC,oBAAuBp+B,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,4BAA0CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC3G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACDg2D,4BAA+B1rD,GACpBonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,wCAAsDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACvH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFi2D,oBAAuB3rD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,6BAA2CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC5G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACDk2D,kBAAqB5rD,GACVonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,2BAAyCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC1G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEd,KACDm2D,qBAAwB7rD,GACbonB,EAAAA,EAAYO,IAAI,GAAGxP,EAAAA,0BAAwCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACxG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFo2D,QAAWC,GACA3kC,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,8BAA4C4zC,EAAapzC,EAAAA,IAA8BxY,MAAMmnB,IACpH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,GAEb,E,cCjRN,IAAI82D,EACAzvD,EAEG,MAAMuU,EAAW4V,WAAAA,GAAA,KACpBulC,kBAAoB,KAEhB,OADA1vD,EAAWC,aAAaC,QAAQ,YACzBF,GACH,IAAK,SACDyvD,EAAiB,IAAIR,EACrB,MACJ,IAAK,OACDQ,EAAiB,IAAIzE,EAE7B,EACH,KAEDC,SAAYC,IACRqD,KAAKmB,oBACED,EAAexE,SAASC,IACjC,KACFG,gBAAmB/oC,IACfisC,KAAKmB,oBACED,EAAepE,gBAAgB/oC,IACxC,KACFkpC,UAAaN,IACTqD,KAAKmB,oBACED,EAAejE,UAAUN,EAASlrD,IAC3C,KACFyrD,iBAAoBnpC,IAChBisC,KAAKmB,oBACED,EAAehE,iBAAiBnpC,IACzC,KACFspC,iBAAoB3oD,IAChBsrD,KAAKmB,oBACED,EAAe7D,iBAAiB3oD,IACzC,KACF4oD,kBAAqBx0D,IACjBk3D,KAAKmB,oBACED,EAAe5D,kBAAkBx0D,IAC1C,KACF20D,sBAAyB30D,IACrBk3D,KAAKmB,oBACED,EAAezD,sBAAsB30D,IAC9C,KACF40D,qBAAwB50D,IACpBk3D,KAAKmB,oBACED,EAAexD,qBAAqB50D,IAC7C,KACF60D,mBAAqB,CAAC70D,EAAIjD,EAAQ6O,EAAM5I,KACpCk0D,KAAKmB,oBACED,EAAevD,mBAAmB70D,EAAIjD,EAAQ6O,IACvD,KACFuqD,cAAgB,CAACn2D,EAAI4L,KACjBsrD,KAAKmB,oBACED,EAAejC,cAAcn2D,EAAI4L,IAC1C,KACF0qD,kCAAqC1qD,IACjCsrD,KAAKmB,oBACED,EAAe9B,kCAAkC1qD,IAC1D,KACF8qD,iBAAoB9qD,IAChBsrD,KAAKmB,oBACED,EAAe1B,iBAAiB9qD,IACzC,KACF+qD,YAAc,KACVO,KAAKmB,oBACED,EAAezB,eACxB,KACFC,WAAa,KACTM,KAAKmB,oBACED,EAAexB,cACxB,KACFC,iBAAoBjrD,IAChBsrD,KAAKmB,oBACED,EAAevB,iBAAiBjrD,IACzC,KACFkrD,sBAAyB92D,IACrBk3D,KAAKmB,oBACED,EAAetB,sBAAsB92D,IAC9C,KACF+2D,sBAAyBC,IACrBE,KAAKmB,oBACED,EAAerB,sBAAsBC,IAC9C,KACFZ,aAAgBxqD,IACZsrD,KAAKmB,oBACED,EAAehC,aAAaxqD,IACtC,KACDmpD,WAAcC,IACVkC,KAAKmB,oBACED,EAAerD,WAAWC,IACnC,KACFS,YAAeT,IACXkC,KAAKmB,oBACED,EAAe3C,YAAYT,IACpC,KAEFU,aAAgBC,IACZuB,KAAKmB,oBACED,EAAe1C,aAAaC,IAGvC,KACA2C,aAAe,IACJtlC,EAAAA,EAAYC,IAAI,GAAGlP,EAAAA,mCAAiDQ,EAAAA,IAA8BxY,MAAMmnB,IAC3G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFo2D,QAAWC,IACPT,KAAKmB,oBACED,EAAeV,QAAQC,IAChC,KACFY,oBAAuBZ,GACZ3kC,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,0CAAwD4zC,EAAapzC,EAAAA,IAA8BxY,MAAMmnB,IAChI,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAMf,KACAk2D,kBAAqB5rD,GACVonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,2BAAyCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC1G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFi2D,oBAAuB3rD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,6BAA2CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC5G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,IACf,IACDyJ,OAAO/T,GACCA,IAEb,KACFk3D,cAAiB5sD,GACNonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,uBAAqCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACtG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFm3D,oBAAuB7sD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,6BAA2CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC5G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFm2D,qBAAwB7rD,IACpBsrD,KAAKmB,oBACED,EAAeX,qBAAqB7rD,IAC7C,KAEF8sD,4BAA+B9sD,GACpBonB,EAAAA,EAAYO,IAAI,GAAGxP,EAAAA,qCAAmDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACnH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KAEFq3D,+BAAkC/sD,GACvBonB,EAAAA,EAAYO,IAAI,GAAGxP,EAAAA,wCAAsDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACtH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KAEFs3D,mBAAqB,IACV5lC,EAAAA,EAAYC,IAAI,GAAGlP,EAAAA,0BAAwCQ,EAAAA,IAA8BxY,MAAMmnB,IAClG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFu3D,aAAgBjtD,GACLonB,EAAAA,EAAYC,IAAI,GAAGlP,EAAAA,qBAAmCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACnG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFw3D,cAAiBltD,GACNonB,EAAAA,EAAYC,IAAI,GAAGlP,EAAAA,0BAAwCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACxG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFy3D,gBAAmBntD,GACRonB,EAAAA,EAAYC,IAAI,GAAGlP,EAAAA,kBAAgCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAChG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF03D,sBAAyBptD,GACdonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,oCAAkDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACnH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF23D,qBAAwBrtD,GACbonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,mCAAiDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAClH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF43D,uBAA0BttD,GACfonB,EAAAA,EAAYO,IAAI,GAAGxP,EAAAA,gCAA8CnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC9G,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF63D,gBAAmBvtD,GACRonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,oBAAkCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACnG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KAEF83D,aAAgBxtD,GACLonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,gDAA8DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC/H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF81D,uBAA0BxrD,IACtBsrD,KAAKmB,oBACED,EAAehB,uBAAuBxrD,IAC/C,KACFytD,kBAAqBztD,GACVonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,qBAAmCnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACpG,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF+1D,wBAA2BzrD,IACvBsrD,KAAKmB,oBACED,EAAef,wBAAwBzrD,IAChD,KACF0tD,oBAAuB1tD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,0CAAwDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACzH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFi4D,uBAA0B3tD,GACfonB,EAAAA,EAAYO,IAAI,GAAGxP,EAAAA,6CAA2DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC3H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF61D,oBAAuBvrD,IACnBsrD,KAAKmB,oBACED,EAAejB,oBAAoBvrD,IAC5C,KACF4tD,yBAA4B5tD,GACjBonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,+CAA6DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC9H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFm4D,oBAAuB7tD,GACZonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,0CAAwDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACzH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF0oC,oBAAuBp+B,IACnBsrD,KAAKmB,oBACED,EAAepuB,oBAAoBp+B,IAC5C,KACF8tD,uBAA0B9tD,GACfonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,6CAA2DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC5H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFg2D,4BAA+B1rD,IAC3BsrD,KAAKmB,oBACED,EAAed,4BAA4B1rD,IACpD,KACF+tD,sBAAyB/tD,GACdonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,kCAAgDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACjH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFwK,0BAA6BF,GAClBonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,0CAAwDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACzH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFs4D,wBAA2BhuD,GAChBonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,8CAA4DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC7H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFu4D,mBAAsBjuD,GACXonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,qCAAmDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACpH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFw4D,wBAA2BluD,GAChBonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,8CAA4DnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IAC7H,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACFy4D,mBAAsBnuD,GACXonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,qCAAmDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACpH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,IAEb,KACF04D,0BAA6BpuD,GAClBonB,EAAAA,EACFI,KACG,GAAGrP,EAAAA,qCACHnY,EACA6Y,EAAAA,IAEH1Y,MAAMmnB,IACH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IAEjByJ,OAAO/T,IACJqJ,QAAQ/S,MAAM,kBAAmB0J,GAC1B,MAElB,KACD8J,mBAAsBqoD,IAClB/5D,OAAO3F,KAAK,GAAGgwB,EAAAA,MAAmB0vC,IAAW,EAChD,KACDwG,cAAiBruD,GACNonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,uBACHnY,EACA2Y,EAAAA,IAEDxY,MAAK3M,UACJ,GAAmB,MAAf8zB,EAAIn2B,OAAgB,CACtB,MAAMm9D,EAAU,GAAGn2C,EAAAA,MAAmBmP,EAAItnB,KAAKuuD,WAC/C,IACE,MAAMnuD,QAAiBouD,MAAMF,EAAS,CACpCG,OAAQ,MACR71C,QAAS,CACP,eAAgB,2BAChB,cAAiB,WAAYzG,EAAAA,EAAAA,QAGjC,IAAK/R,EAASsuD,GACZ,MAAM,IAAI9E,MAAM,4BAElB,MAAM+E,QAAiBvuD,EAASwuD,OAC1BC,EAAcC,IAAIC,gBAAgBJ,GAElCK,EAAO37D,SAASszD,cAAc,KACpCqI,EAAKrrD,KAAOkrD,EACZG,EAAKvvD,SAAW6nB,EAAItnB,KAAKuuD,SACzBS,EAAKC,QACLH,IAAII,gBAAgBL,EACtB,CAAE,MAAO7iE,GACP+S,QAAQ/S,MAAM,8BAA+BA,EAC/C,CACA,OAAOs7B,EAAItnB,IACb,CACA,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,2BAA4BA,GACpCA,CAAK,IAEjB,KACFmjE,gBAAmBnvD,GACRonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,gCACHnY,EACA2Y,EAAAA,IAEDxY,MAAK3M,UACJ,GAAmB,MAAf8zB,EAAIn2B,OAAgB,CACtB,MAAMm9D,EAAU,GAAGn2C,EAAAA,MAAmBmP,EAAItnB,KAAKuuD,WAC/C,IACE,MAAMnuD,QAAiBouD,MAAMF,EAAS,CACpCG,OAAQ,MACR71C,QAAS,CACP,eAAgB,2BAChB,cAAiB,WAAYzG,EAAAA,EAAAA,QAGjC,IAAK/R,EAASsuD,GACZ,MAAM,IAAI9E,MAAM,4BAElB,MAAM+E,QAAiBvuD,EAASwuD,OAC1BC,EAAcC,IAAIC,gBAAgBJ,GAElCK,EAAO37D,SAASszD,cAAc,KACpCqI,EAAKrrD,KAAOkrD,EACZG,EAAKvvD,SAAW6nB,EAAItnB,KAAKuuD,SACzBS,EAAKC,QACLH,IAAII,gBAAgBL,EACtB,CAAE,MAAO7iE,GACP+S,QAAQ/S,MAAM,8BAA+BA,EAC/C,CACA,OAAOs7B,EAAItnB,IACb,CACA,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,2BAA4BA,GACpCA,CAAK,IAEjB,KACFojE,kBAAqBpvD,GACVonB,EAAAA,EAAYI,KAAK,GAAGrP,EAAAA,kCAAgDnY,EAAM2Y,EAAAA,IAA8BxY,MAAMmnB,IACjH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IACfyJ,OAAO/T,GACCA,GAEb,E,0EC3iBC,MAAMksD,EAAsB16B,WAAAA,GAAA,KAC/B+6B,sBAAwB,IACb76B,EAAAA,EACFC,IACG,GAAGlP,EAAAA,sCACHQ,EAAAA,IAEHxY,MAAMmnB,IACH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IAEjByJ,OAAO/T,IACJqJ,QAAQ/S,MAAM,oBAAqB0J,GAC5B,MAEjB,KACF25D,sBAAyBrvD,GACdonB,EAAAA,EACFI,KACG,GAAGrP,EAAAA,0CACHnY,EACA2Y,EAAAA,IAEHxY,MAAMmnB,IACH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IAEjByJ,OAAO/T,IACJqJ,QAAQ/S,MAAM,oBAAqB0J,GAC5B,MAEjB,KAEFstD,kBAAqBhjD,GACVonB,EAAAA,EACFI,KACG,GAAGrP,EAAAA,sCACHnY,EACA2Y,EAAAA,IAEHxY,MAAMmnB,IACH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IAEjByJ,OAAO/T,IACJqJ,QAAQ/S,MAAM,uBAAwB0J,GAC/B,MAEjB,KAEFqtD,qBAAwB/iD,GACbonB,EAAAA,EACFO,IACG,GAAGxP,EAAAA,yCACHnY,EACA2Y,EAAAA,IAEHxY,MAAMmnB,IACH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IAEjByJ,OAAO/T,IACJqJ,QAAQ/S,MAAM,uBAAwB0J,GAC/B,MAEjB,KAEF4sD,qBAAwBz6B,GACbT,EAAAA,EACFU,OACG,GAAG3P,EAAAA,yCACH,CAAEnY,KAAM6nB,GACRlP,EAAAA,IAEHxY,MAAMmnB,IACH,GAAmB,MAAfA,EAAIn2B,OACJ,OAAOm2B,EAAItnB,KAEf,MAAMsnB,EAAItnB,IAAI,IAEjByJ,OAAOzd,IAEJ,MADA+S,QAAQ/S,MAAM,iCAAkCA,GAC1CA,CAAK,GAErB,E,oFC3FC,MAAM8xB,EAAgBoJ,WAAAA,GAG3B,KACAjH,mBAAqB,IACZmH,EAAAA,EACJC,IACC,GAAGlP,EAAAA,0BACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,qBAAsB0J,GAC7B,MAEX,KAEF43B,eAAkBttB,GACTonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,0BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,cAAe0J,GACtB,MAEX,KACFo5B,gBAAmB9uB,GACVonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,8BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,kBAAmB0J,GAC1B,MAEX,KAEF05B,eAAkBpvB,GACTonB,EAAAA,EACJO,IACC,GAAGxP,EAAAA,6BACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,cAAe0J,GACtB,MAEX,KAEFoxB,eAAkBe,GACTT,EAAAA,EAAYU,OACjB,GAAG3P,EAAAA,6BACH,CAAEnY,KAAM,CAAE6nB,QACVlP,EAAAA,IAECxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,wBAAyBA,GACjCA,CAAK,IAEf,KAEF+xB,eAAkB/d,GACTonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,8BACHnY,EACA6Y,EAAAA,IAED1Y,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,kBAAmB0J,GAC1B,MAEX,KACFwqB,eAAkBlgB,GACTonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,4CACHnY,EACA2Y,EAAAA,IAEDxY,MAAK3M,UACJ,GAAmB,MAAf8zB,EAAIn2B,OAAgB,CACtB,MAAMm9D,EAAU,GAAGn2C,EAAAA,MAAmBmP,EAAItnB,KAAKuuD,WAC/C,IACE,MAAMnuD,QAAiBouD,MAAMF,EAAS,CACpCG,OAAQ,MACR71C,QAAS,CACP,eAAgB,2BAChB,cAAiB,WAAYzG,EAAAA,EAAAA,QAGjC,IAAK/R,EAASsuD,GACZ,MAAM,IAAI9E,MAAM,4BAElB,MAAM+E,QAAiBvuD,EAASwuD,OAC1BC,EAAcC,IAAIC,gBAAgBJ,GAElCK,EAAO37D,SAASszD,cAAc,KACpCqI,EAAKrrD,KAAOkrD,EACZG,EAAKvvD,SAAW6nB,EAAItnB,KAAKuuD,SAASp6C,QAAQ,aAAc,IACxD66C,EAAKC,QACLH,IAAII,gBAAgBL,EACtB,CAAE,MAAO7iE,GACP+S,QAAQ/S,MAAM,8BAA+BA,EAC/C,CACA,OAAOs7B,EAAItnB,IACb,CACA,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,2BAA4BA,GACpCA,CAAK,IAEf,KACFwT,mBAAsBqoD,IACpB/5D,OAAO3F,KAAK,GAAGgwB,EAAAA,MAAmB0vC,IAAW,CAC9C,E,mFC7JI,MAAM7mD,EAAuBkmB,WAAAA,GAAA,KAClCxe,uBAAyB,IAChB0e,EAAAA,EACJC,IACC,GAAGlP,EAAAA,6CACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,uBAAwB0J,GAC/B,MAEX,KAEFutC,sBAAyBC,GAChB9b,EAAAA,EACJU,OACC,GAAG3P,EAAAA,iDAA8D+qB,IACjEvqB,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,yCAA0CA,GAClDA,CAAK,IAEf,KAEFm3C,sBAAyBnjC,GAChBonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,6CACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,sBAAuB0J,GAC9B,MAEX,KAEF0tC,sBAAyBpjC,GAChBonB,EAAAA,EACJO,IACC,GAAGxP,EAAAA,gDACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,yBAA0B0J,GACjC,MAEX,KACFqoB,eAAkB/d,GACTonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,yCACHnY,EACA6Y,EAAAA,IAED1Y,MAAMmnB,IAEL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,kBAAmB0J,GAC1B,MAEX,KAEF8J,mBAAoBqoD,IAClB/5D,OAAO3F,KAAK,GAAGgwB,EAAAA,MAAmB0vC,IAAW,EAC9C,KAEDhmD,yBAA4B7B,GACnBonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,kDACHnY,EACA2Y,EAAAA,IAEDxY,MAAK3M,UACJ,GAAmB,MAAf8zB,EAAIn2B,OAAgB,CACtB,MAAMm9D,EAAU,GAAGn2C,EAAAA,MAAmBmP,EAAItnB,KAAKuuD,WAC/C,IACE,MAAMnuD,QAAiBouD,MAAMF,EAAS,CACpCG,OAAQ,MACR71C,QAAS,CACP,eAAgB,2BAChB,cAAiB,WAAYzG,EAAAA,EAAAA,QAGjC,IAAK/R,EAASsuD,GACZ,MAAM,IAAI9E,MAAM,4BAElB,MAAM+E,QAAiBvuD,EAASwuD,OAC1BC,EAAcC,IAAIC,gBAAgBJ,GAElCK,EAAO37D,SAASszD,cAAc,KACpCqI,EAAKrrD,KAAOkrD,EACZG,EAAKvvD,SAAW6nB,EAAItnB,KAAKuuD,SACzBS,EAAKC,QACLH,IAAII,gBAAgBL,EACtB,CAAE,MAAO7iE,GACP+S,QAAQ/S,MAAM,8BAA+BA,EAC/C,CACA,OAAOs7B,EAAItnB,IACb,CACA,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,0BAA2BA,GACnCA,CAAK,IAEf,KAGFiW,gCAAmCjC,GAC1BonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,yDACHnY,EACA2Y,EAAAA,IAEDxY,MAAK3M,UACJ,GAAmB,MAAf8zB,EAAIn2B,OAAgB,CACtB,MAAMm9D,EAAU,GAAGn2C,EAAAA,MAAmBmP,EAAItnB,KAAKuuD,WAC/C,IACE,MAAMnuD,QAAiBouD,MAAMF,EAAS,CACpCG,OAAQ,MACR71C,QAAS,CACP,eAAgB,2BAChB,cAAiB,WAAYzG,EAAAA,EAAAA,QAGjC,IAAK/R,EAASsuD,GACZ,MAAM,IAAI9E,MAAM,4BAElB,MAAM+E,QAAiBvuD,EAASwuD,OAC1BC,EAAcC,IAAIC,gBAAgBJ,GAElCK,EAAO37D,SAASszD,cAAc,KACpCqI,EAAKrrD,KAAOkrD,EACZG,EAAKvvD,SAAW6nB,EAAItnB,KAAKuuD,SACzBS,EAAKC,QACLH,IAAII,gBAAgBL,EACtB,CAAE,MAAO7iE,GACP+S,QAAQ/S,MAAM,8BAA+BA,EAC/C,CACA,OAAOs7B,EAAItnB,IACb,CACA,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,0BAA2BA,GACnCA,CAAK,IAEf,KAEFoW,2BAA8BpC,GACrBonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,oDACHnY,EACA2Y,EAAAA,IAEDxY,MAAK3M,UACJ,GAAmB,MAAf8zB,EAAIn2B,OAAgB,CACtB,MAAMm9D,EAAU,GAAGn2C,EAAAA,MAAmBmP,EAAItnB,KAAKuuD,WAC/C,IACE,MAAMnuD,QAAiBouD,MAAMF,EAAS,CACpCG,OAAQ,MACR71C,QAAS,CACP,eAAgB,2BAChB,cAAiB,WAAYzG,EAAAA,EAAAA,QAGjC,IAAK/R,EAASsuD,GACZ,MAAM,IAAI9E,MAAM,4BAElB,MAAM+E,QAAiBvuD,EAASwuD,OAC1BC,EAAcC,IAAIC,gBAAgBJ,GAElCK,EAAO37D,SAASszD,cAAc,KACpCqI,EAAKrrD,KAAOkrD,EACZG,EAAKvvD,SAAW6nB,EAAItnB,KAAKuuD,SACzBS,EAAKC,QACLH,IAAII,gBAAgBL,EACtB,CAAE,MAAO7iE,GACP+S,QAAQ/S,MAAM,8BAA+BA,EAC/C,CACA,OAAOs7B,EAAItnB,IACb,CACA,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,0BAA2BA,GACnCA,CAAK,GAEf,E,0GChOG,MAAM2b,EAAYuf,WAAAA,GAAA,KACvB+X,gBAAkB,IACT7X,EAAAA,EACJC,IACC,GAAGlP,EAAAA,oBACHQ,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,WAAY0J,GACnB,MAEX,KAEF8rC,WAAcxhC,GACLonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,mBACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,aAAc0J,GACrB,MAEX,KAEF6rC,WAAcvhC,GACLonB,EAAAA,EACJO,IACC,GAAGxP,EAAAA,sBACHnY,EACA2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,aAAc0J,GACrB,MAEX,KAEF4qC,WAAczY,GACLT,EAAAA,EACJU,OACC,GAAG3P,EAAAA,sBACH,CAAEnY,KAAM,CAAE6nB,QACVlP,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,wBAAyBA,GACjCA,CAAK,IAEf,KACFqd,aAAe,KACbtK,QAAQC,IAAI,gCAAiC,GAAGmZ,EAAAA,yBAChDpZ,QAAQC,IAAI,sBAAuB2Z,EAAAA,IAE5ByO,EAAAA,EACJC,IACC,GAAGlP,EAAAA,wBACHQ,EAAAA,IAEDxY,MAAMmnB,IAGL,GAFAvoB,QAAQC,IAAI,yBAA0BsoB,GAEnB,MAAfA,EAAIn2B,OAEN,OADA4N,QAAQC,IAAI,wBAAyBsoB,EAAItnB,MAClCsnB,EAAItnB,KAIb,MADAjB,QAAQqnD,KAAK,kCAAmC9+B,EAAIn2B,QAC9Cm2B,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAON,MANA+S,QAAQ/S,MAAM,+BAAgCA,GAE9C8kB,EAAAA,EAAMO,UAASO,EAAAA,EAAAA,IAAqB,CAClCvE,mBAAmB,KAGfrhB,CAAK,KAEf,KAEF8vB,iBAAoB9b,GACXonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,+BACH,CAAEnY,KAAMA,GACR2Y,EAAAA,IAEDxY,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,mCAAoCA,GAC5CA,CAAK,IAEf,KAEF+yC,WAAc/+B,GACLonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,uBACHnY,EACA6Y,EAAAA,IAED1Y,MAAMmnB,IACL,GAAmB,MAAfA,EAAIn2B,OACN,OAAOm2B,EAAItnB,KAEb,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAO/T,IACNqJ,QAAQ/S,MAAM,cAAe0J,GACtB,MAEX,KACF8pC,WAAcx/B,GACLonB,EAAAA,EACJI,KACC,GAAGrP,EAAAA,0BACHnY,EACA2Y,EAAAA,IAEDxY,MAAK3M,UACJ,GAAmB,MAAf8zB,EAAIn2B,OAAgB,CACtB,MAAMm9D,EAAU,GAAGn2C,EAAAA,MAAmBmP,EAAItnB,KAAKuuD,WAC/C,IACE,MAAMnuD,QAAiBouD,MAAMF,EAAS,CACpCG,OAAQ,MACR71C,QAAS,CACP,eAAgB,2BAChB,cAAiB,WAAYzG,EAAAA,EAAAA,QAGjC,IAAK/R,EAASsuD,GACZ,MAAM,IAAI9E,MAAM,4BAElB,MAAM+E,QAAiBvuD,EAASwuD,OAC1BC,EAAcC,IAAIC,gBAAgBJ,GAElCK,EAAO37D,SAASszD,cAAc,KACpCqI,EAAKrrD,KAAOkrD,EACZG,EAAKvvD,SAAW6nB,EAAItnB,KAAKuuD,SAASp6C,QAAQ,aAAc,IACxD66C,EAAKC,QACLH,IAAII,gBAAgBL,EACtB,CAAE,MAAO7iE,GACP+S,QAAQ/S,MAAM,8BAA+BA,EAC/C,CACA,OAAOs7B,EAAItnB,IACb,CACA,MAAMsnB,EAAItnB,IAAI,IAEfyJ,OAAOzd,IAEN,MADA+S,QAAQ/S,MAAM,2BAA4BA,GACpCA,CAAK,IAEf,KACFwT,mBAAsBqoD,IACpB/5D,OAAO3F,KAAK,8CAA8C0/D,IAAW,CACtE,E","sources":["app/components/CustomAlertBox.jsx","app/components/Loader.jsx","app/components/MatxLayout/MatxLayout.jsx","app/components/MatxLayout/index.js","app/components/MatxLoading.jsx","app/components/MatxTheme/themeColors.js","app/components/McoPages/CustomAlertBox.jsx","app/components/McoPages/PageError.jsx","app/components/Typography.js","app/components/Breadcrumb.jsx","app/components/ChatAvatar.jsx","app/components/Chatbox.jsx","app/components/ChatHead.jsx","app/components/ConfirmationDialog.jsx","app/components/MatxMenu.jsx","app/components/MatxProgressBar.jsx","app/components/MatxSearchBox.jsx","app/components/MatxSidenav/MatxSidenav.jsx","app/components/MatxSidenav/MatxSidenavContainer.jsx","app/components/MatxSidenav/MatxSidenavContent.jsx","app/components/MatxSuspense.jsx","app/components/MatxTheme/MatxTheme.jsx","app/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx","app/components/massUpdatePartDescriptionInEnoviaAndERP.jsx","app/components/exportAllTemplateMapping.jsx","app/components/exportAllAdminGeneralProperties.jsx","app/components/exportAllAdminSystemSetups.jsx","app/components/MatxVerticalNav/MatxVerticalNav.jsx","app/components/SimpleCard.jsx","app/styles/utilities/_spacing.js","app/styles/GlobalCss.jsx","app/styles/utilities/_common.js","app/components/BuConfirmationBox.jsx","app/contexts/OracleSettingsContext.js","app/components/MatxTheme/components.js","app/components/MatxTheme/themeOptions.js","app/components/MatxTheme/initThemes.js","app/components/MatxLayout/settings.js","app/components/MatxLayout/Layout1/Layout1Settings.js","app/contexts/SettingsContext.js","app/hooks/useOracleSettings.js","app/hooks/useSettings.js","app/redux/reducers/MCODetailsReducer.js","app/redux/reducers/GlobalDataReducer.js","app/redux/reducers/GlobalBUandInstanceReducer.js","app/redux/reducers/RootReducer.js","app/redux/Store.js","app/redux/actions/GlobalBUandInstanceAction.js","app/redux/actions/MCODetailsAction.js","app/utils/baseurl.js","app/utils/commonFunctions.js","app/utils/constant.js","app/utils/mcoUtils/commonUtils.js","app/utils/utils.js","app/views/adminConfig/common.jsx","config/index.js","config/config.js","app/contexts/JWTAuthContext.js","app/auth/loginScreen.jsx","app/auth/AuthGuard.jsx","app/views/sessions/NotFound.jsx","app/utils/getBaseUrl.js","app/unAuthorizedPage.js","app/components/CustomSelect.jsx","app/homepage.js","app/components/Loadable.jsx","app/views/mcolist/McoListRoutes.js","app/privateRoutes.js","app/views/template/importDialog.jsx","app/views/template/exportTemplate.jsx","app/components/sortedExportDataHOC.jsx","app/views/template/template.jsx","app/views/template/templateWrapper.jsx","services/plantService.jsx","app/views/template/attributeDialog.jsx","app/views/template/createTemplate.jsx","app/views/template/editTemplate.jsx","app/views/template/templateRoutes.jsx","app/auth/authRoles.js","app/views/plants/exportPlants.jsx","app/views/plants/plants.js","app/views/plants/connectivityDetailsDialog.jsx","app/views/plants/createPlant.jsx","app/views/plants/editPlant.jsx","app/views/plants/plantRoutes.jsx","services/sourceListService.jsx","app/views/sourceList/createSourceList.jsx","app/views/sourceList/editSourceList.jsx","app/views/sourceList/exportSource.jsx","app/views/sourceList/sourceList.jsx","app/views/sourceList/sourceListroutes.jsx","services/mappingsService.jsx","app/views/mappings/createMappings.js","app/views/mappings/editMappings.js","app/views/mappings/mappings.js","app/views/mappings/mappingsroutes.js","app/views/businessUnit/exportBUList.jsx","app/views/businessUnit/buList.jsx","app/views/businessUnit/createBU.jsx","app/views/businessUnit/editBU.jsx","app/views/businessUnit/buRoutes.jsx","app/views/users/bulkImportUsersDialog.jsx","app/views/users/bulkExportUsersDialog.jsx","app/views/users/usersList.jsx","app/views/users/addEditUsers.jsx","app/views/users/usersRoutes.jsx","app/constant.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedDialog.jsx","services/historyManagementService.jsx","services/mvotempcompService.jsx","app/components/importMappingsDialog.jsx","app/contexts/MvoTempCompContext.js","app/hooks/useMVOtempComp.js","app/contexts/ParttypetemplateContext.js","app/hooks/usePartTypeTemplate.js","app/contexts/MVOallowedchangesContext.js","app/hooks/useMVOallowedChanges.js","app/contexts/SetCompTempContext.js","app/hooks/useCompTemp.js","app/contexts/BUPlantContext.js","app/hooks/useBUPlant.js","app/contexts/ExpenseMapContext.js","app/hooks/useExpenseMap.js","app/components/exportMappingTemplate.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedList.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedWrapper.jsx","app/views/mappingPages/orgAllowedTemplates/orgallowedroutes.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvoDialog.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvotemplateList.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibilityWrapper.jsx","app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateDialog.jsx","app/views/mappingPages/partTypeToTemplate/parttypeToTemplateList.jsx","app/views/mappingPages/partTypeToTemplate/parttypetemplateWrapper.jsx","app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesDialog.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesList.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangeWrapper.jsx","app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempDialog.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptempList.jsx","app/views/mappingPages/setCompatibleTemplates/SetCompTempWrapper.jsx","app/views/mappingPages/setCompatibleTemplates/setcomptemproutes.jsx","app/views/mappingPages/buPlantMapping/buplantDialog.jsx","app/views/mappingPages/buPlantMapping/buplantList.jsx","app/views/mappingPages/buPlantMapping/buplantWrapper.jsx","app/views/mappingPages/buPlantMapping/buplantRoutes.jsx","app/views/mappingPages/expenseMapping/expensemapDialog.jsx","app/views/mappingPages/expenseMapping/expensemapList.jsx","app/views/mappingPages/expenseMapping/expensemapWrapper.jsx","app/views/mappingPages/expenseMapping/expensemapRoutes.jsx","app/views/draftChanges/commitChangesForm.jsx","app/views/draftChanges/draftChangesList.jsx","app/views/draftChanges/draftChangesWrapper.jsx","app/views/draftChanges/draftChangesroutes.jsx","app/views/history/historyList.jsx","app/views/history/historyWrapper.jsx","app/views/history/historyroutes.jsx","app/views/systemSetup/exportSetup.jsx","app/views/systemSetup/systemSetupForm.jsx","app/views/systemSetup/systemSetupList.jsx","app/RedirectRoute.js","app/CustomLoginCallback.js","app/routes.jsx","app/views/systemSetup/systemSetupRoutes.jsx","app/components/Fallback/Fallback.jsx","app/App.jsx","index.jsx","services/ApiInstance.js","services/buService.jsx","services/massUpdateService.jsx","services/SaaSExecutionService.jsx","services/OnPremExecutionService.jsx","services/mcoService.jsx","services/systemSettingsService.jsx","services/temlplateService.jsx","services/templateMappingService.jsx","services/usersService.jsx"],"sourcesContent":["\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (<>\r\n                            {openDesc.desc}\r\n                        </>)\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","import React, { useEffect } from \"react\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nexport default function Loader(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        setOpen(props.show)\r\n    }, [props.show]);\r\n\r\n    return (\r\n        <div>\r\n            <Backdrop\r\n                sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={open}>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <CircularProgress color=\"inherit\" style={{\r\n                            zIndex: 9999, // Set your desired z-index value\r\n                        }} />\r\n                    </div>\r\n                    <div>Please wait...</div>\r\n                </div>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}\r\n","import { MatxSuspense } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { MatxLayouts } from './index';\r\n\r\nconst MatxLayout = (props) => {\r\n  const { settings } = useSettings();\r\n  const Layout = MatxLayouts[settings.activeLayout];\r\n\r\n  return (\r\n    <MatxSuspense>\r\n      <Layout {...props} />\r\n    </MatxSuspense>\r\n  );\r\n};\r\n\r\nexport default MatxLayout;\r\n","import React from 'react';\r\n\r\nexport const MatxLayouts = { layout1: React.lazy(() => import('./Layout1/Layout1')) };\r\n","import { CircularProgress } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst StyledLoading = styled('div')(() => ({\r\n  width: '100%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  '& img': {\r\n    width: 'auto',\r\n    height: '25px',\r\n  },\r\n  '& .circleProgress': {\r\n    position: 'absolute',\r\n    left: -7,\r\n    right: 0,\r\n    top: 'calc(50% - 25px)',\r\n  },\r\n}));\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <StyledLoading>\r\n      <Box position=\"relative\">\r\n        <img src=\"/assets/images/logo-circle.svg\" alt=\"\" />\r\n        <CircularProgress className=\"circleProgress\" />\r\n      </Box>\r\n    </StyledLoading>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","const textLight = {\r\n    primary: 'rgba(52, 49, 76, 1)',\r\n    secondary: 'rgba(52, 49, 76, 0.54)',\r\n    disabled: 'rgba(52, 49, 76, 0.38)',\r\n    hint: 'rgba(52, 49, 76, 0.38)',\r\n}\r\n\r\nconst textDark = {\r\n    primary: '#fff',\r\n    secondary: 'rgba(255, 255, 255, 0.7)',\r\n    disabled: 'rgba(255, 255, 255, 0.64)',\r\n    hint: 'rgba(255, 255, 255, 0.64)',\r\n};\r\n\r\nconst secondaryColor = {\r\n    light: '#f9a352',\r\n    main: '#ff9e43',\r\n    dark: '#ff932e',\r\n    contrastText: textLight.primary,\r\n}\r\nconst errorColor = {\r\n    main: '#FF3D57',\r\n}\r\n\r\nexport const themeColors = {\r\n    whitePurple: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    whiteBlue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#ffffff',\r\n                contrastText: textLight.primary,\r\n            },\r\n            secondary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            text: textLight,\r\n        },\r\n    },\r\n    slateDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#005686',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    slateDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1a2038',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purple1: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: secondaryColor,\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purple2: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    purpleDark1: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#7467ef',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    purpleDark2: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#6a75c9',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#ff9e43',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    blue: {\r\n        palette: {\r\n            type: 'light',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            text: textLight,\r\n        },\r\n    },\r\n    blueDark: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#1976d2',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FF4F30',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n            background: {\r\n                paper: '#222A45',\r\n                default: '#1a2038',\r\n            },\r\n        },\r\n    },\r\n    red: {\r\n        palette: {\r\n            type: 'dark',\r\n            primary: {\r\n                main: '#e53935',\r\n                contrastText: '#ffffff',\r\n            },\r\n            secondary: {\r\n                main: '#FFAF38',\r\n                contrastText: textLight.primary,\r\n            },\r\n            error: errorColor,\r\n        },\r\n    },\r\n}\r\n\r\nexport const themeShadows = [\r\n    'none',\r\n    '0px 2px 1px -1px rgba(0, 0, 0, 0.06),0px 1px 1px 0px rgba(0, 0, 0, 0.042),0px 1px 3px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 1px -2px rgba(0, 0, 0, 0.06),0px 2px 2px 0px rgba(0, 0, 0, 0.042),0px 1px 5px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 3px -2px rgba(0, 0, 0, 0.06),0px 3px 4px 0px rgba(0, 0, 0, 0.042),0px 1px 8px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 2px 4px -1px rgba(0, 0, 0, 0.06),0px 4px 5px 0px rgba(0, 0, 0, 0.042),0px 1px 10px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 5px 8px 0px rgba(0, 0, 0, 0.042),0px 1px 14px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 3px 5px -1px rgba(0, 0, 0, 0.06),0px 6px 10px 0px rgba(0, 0, 0, 0.042),0px 1px 18px 0px rgba(0, 0, 0, 0.036)',\r\n    '0px 4px 5px -2px rgba(0, 0, 0, 0.06),0px 7px 10px 1px rgba(0, 0, 0, 0.042),0px 2px 16px 1px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 5px -3px rgba(0, 0, 0, 0.06),0px 8px 10px 1px rgba(0, 0, 0, 0.042),0px 3px 14px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 5px 6px -3px rgba(0, 0, 0, 0.06),0px 9px 12px 1px rgba(0, 0, 0, 0.042),0px 3px 16px 2px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 6px -3px rgba(0, 0, 0, 0.06),0px 10px 14px 1px rgba(0, 0, 0, 0.042),0px 4px 18px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 6px 7px -4px rgba(0, 0, 0, 0.06),0px 11px 15px 1px rgba(0, 0, 0, 0.042),0px 4px 20px 3px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 12px 17px 2px rgba(0, 0, 0, 0.042),0px 5px 22px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 8px -4px rgba(0, 0, 0, 0.06),0px 13px 19px 2px rgba(0, 0, 0, 0.042),0px 5px 24px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 7px 9px -4px rgba(0, 0, 0, 0.06),0px 14px 21px 2px rgba(0, 0, 0, 0.042),0px 5px 26px 4px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 9px -5px rgba(0, 0, 0, 0.06),0px 15px 22px 2px rgba(0, 0, 0, 0.042),0px 6px 28px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 10px -5px rgba(0, 0, 0, 0.06),0px 16px 24px 2px rgba(0, 0, 0, 0.042),0px 6px 30px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 8px 11px -5px rgba(0, 0, 0, 0.06),0px 17px 26px 2px rgba(0, 0, 0, 0.042),0px 6px 32px 5px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 11px -5px rgba(0, 0, 0, 0.06),0px 18px 28px 2px rgba(0, 0, 0, 0.042),0px 7px 34px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 9px 12px -6px rgba(0, 0, 0, 0.06),0px 19px 29px 2px rgba(0, 0, 0, 0.042),0px 7px 36px 6px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n    '0px 10px 13px -6px rgba(0, 0, 0, 0.06),0px 20px 31px 3px rgba(0, 0, 0, 0.042),0px 8px 38px 7px rgba(0, 0, 0, 0.036)',\r\n];","\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst CustomAlertBox = ({ openAlert, openDesc, setOpenAlert }) => {\r\n    const vertical = 'top';\r\n    const horizontal = 'center';\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical, horizontal }}\r\n                open={openAlert}\r\n                // autoHideDuration={30 * 1000} // 30 sec\r\n                onClose={(event, reason) => {\r\n                    if (reason === 'clickaway') {\r\n                        return;\r\n                    }\r\n                    setOpenAlert(false);\r\n                }}\r\n                key={vertical + horizontal}\r\n                sx={{ top: '70px!important' }} // Set top to 70px\r\n            >\r\n\r\n                <Alert\r\n                    onClose={(event, reason) => {\r\n                        if (reason === 'clickaway') {\r\n                            return;\r\n                        }\r\n                        setOpenAlert(false);\r\n                    }}\r\n                    severity={openDesc.severity}\r\n                    sx={{ width: '100%', maxHeight: \"calc(100vh - 100px)\" }}\r\n                >\r\n                    {(openDesc.severity === \"success\") ? (<AlertTitle>Success</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"warning\") ? (<AlertTitle>Warning</AlertTitle>) : (<></>)}\r\n                    {(openDesc.severity === \"error\") ? (<AlertTitle>Error</AlertTitle>) : (<></>)}\r\n                    {\r\n                        (openDesc?.type === 'validationcheck') ? (\r\n                            <>\r\n                                <div style={{ fontWeight: \"bold\" }}>\r\n                                    Please verify the below items.\r\n                                </div>\r\n                                <ul>\r\n                                    {openDesc.desc}\r\n                                </ul>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {openDesc.desc}\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CustomAlertBox;","import React from \"react\";\r\nimport { Grid, Button } from '@mui/material';\r\nimport { SimpleCard } from \"app/components\";\r\n\r\nconst SomethingWrong = () => {\r\n    return (\r\n        <SimpleCard>\r\n            <Grid container spacing={3} alignItems=\"center\" style={{ position: \"relative\" }}>\r\n                <Grid item md={12} sm={12} xs={12} style={{ textAlign: \"center\" }}>\r\n                    Something went wrong! Please inform to administrator or reload the page.\r\n                    <br></br>\r\n                    <br></br>\r\n                    <Button variant=\"contained\" onClick={() => window.location.reload()}>\r\n                        Reload\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </SimpleCard>\r\n    )\r\n}\r\nexport default SomethingWrong;","import { Box, styled } from '@mui/material';\r\nimport clsx from 'clsx';\r\n\r\nconst StyledBox = styled(Box)(({ theme, texttransformstyle, ellipsis }) => ({\r\n  textTransform: texttransformstyle || 'none',\r\n  whiteSpace: ellipsis ? 'nowrap' : 'normal',\r\n  overflow: ellipsis ? 'hidden' : '',\r\n  textOverflow: ellipsis ? 'ellipsis' : '',\r\n}));\r\n\r\nexport const H1 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h1\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"28px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H2 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h2\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"24px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H3 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({ [className || '']: true })}\r\n      component=\"h3\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"18px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H4 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h4\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"16px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H5 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h5\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const H6 = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"h6\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"13px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Paragraph = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"p\"\r\n      mb={0}\r\n      mt={0}\r\n      fontSize=\"14px\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Small = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"12px\"\r\n      fontWeight=\"500\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Span = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"span\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n\r\nexport const Tiny = ({ children, className, ellipsis, textTransform, ...props }) => {\r\n  return (\r\n    <StyledBox\r\n      texttransformstyle={textTransform}\r\n      ellipsis={ellipsis}\r\n      className={clsx({\r\n        [className || '']: true,\r\n      })}\r\n      component=\"small\"\r\n      fontSize=\"10px\"\r\n      lineHeight=\"1.5\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </StyledBox>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Breadcrumbs, Hidden, Icon, styled, useTheme } from '@mui/material';\r\nimport { NavLink } from 'react-router-dom';\r\nimport shortId from 'shortid';\r\n\r\nconst BreadcrumbRoot = styled('div')(() => ({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst BreadcrumbName = styled('h4')(() => ({\r\n  margin: 0,\r\n  fontSize: '16px',\r\n  paddingBottom: '1px',\r\n  verticalAlign: 'middle',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst SubName = styled('span')(({ theme }) => ({\r\n  textTransform: 'capitalize',\r\n  color: theme.palette.text.secondary,\r\n}));\r\n\r\nconst Separator = styled('h4')(({ theme }) => ({\r\n  margin: 0,\r\n  marginLeft: 8,\r\n  paddingBottom: '3px',\r\n  color: theme.palette.text.hint,\r\n}));\r\n\r\nconst StyledIcon = styled(Icon)(() => ({\r\n  marginLeft: 8,\r\n  marginBottom: '4px',\r\n  verticalAlign: 'middle',\r\n}));\r\n\r\nconst Breadcrumb = ({ routeSegments }) => {\r\n  const theme = useTheme();\r\n  const hint = theme.palette.text.hint;\r\n\r\n  return (\r\n    <BreadcrumbRoot>\r\n      {/* {routeSegments ? (\r\n        <Hidden xsDown>\r\n          <BreadcrumbName>{routeSegments[routeSegments.length - 1]['name']}</BreadcrumbName>\r\n          <Separator>|</Separator>\r\n        </Hidden>\r\n      ) : null} */}\r\n\r\n      <Breadcrumbs\r\n        separator={<Icon sx={{ color: hint }}>navigate_next</Icon>}\r\n        sx={{ display: 'flex', alignItems: 'center', position: 'relative' }}\r\n      >\r\n        <NavLink to={\"/calist\"}>\r\n          <StyledIcon color=\"primary\">home</StyledIcon>\r\n        </NavLink>\r\n\r\n        {routeSegments\r\n          ? routeSegments.map((route, index) => {\r\n            return index !== routeSegments.length - 1 ? (\r\n              <NavLink key={shortId.generate()} to={route.path}>\r\n                <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              </NavLink>\r\n            ) : (\r\n              // <SubName key={shortId.generate()}>{route.name}</SubName>\r\n              <BreadcrumbName key={shortId.generate()}>{route.name}</BreadcrumbName>\r\n            );\r\n          })\r\n          : null}\r\n      </Breadcrumbs>\r\n    </BreadcrumbRoot>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import { Avatar, Box, styled } from '@mui/material';\r\n\r\nconst StyledAvatar = styled(Avatar)(() => ({\r\n  height: '40px',\r\n  width: '40px',\r\n}));\r\n\r\nconst StatusCircle = styled('div')(({ theme, status }) => ({\r\n  height: '14px',\r\n  width: '14px',\r\n  bottom: '0px',\r\n  right: '-3px',\r\n  borderRadius: '7px',\r\n  position: 'absolute',\r\n  border: '2px solid white',\r\n  background: status === 'online' ? theme.palette.primary.main : theme.palette.error.main,\r\n  color: status !== 'online' && 'white !important',\r\n}));\r\n\r\nconst ChatAvatar = ({ src, status }) => {\r\n  return (\r\n    <Box position=\"relative\">\r\n      <StyledAvatar src={src} />\r\n      <StatusCircle status={status} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatAvatar;\r\n","import { Avatar, Box, Divider, Icon, IconButton, styled, TextField, useTheme } from '@mui/material';\r\nimport { ChatAvatar } from 'app/components';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport { H5, H6, Span } from './Typography';\r\nimport shortId from 'shortid';\r\n\r\nconst ChatContainer = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  background: '#fff',\r\n}));\r\n\r\nconst StyledScrollBar = styled(ScrollBar)(() => ({\r\n  flexGrow: 1,\r\n}));\r\n\r\nconst ProfileBox = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '12px 12px 12px 20px',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatStatus = styled('div')(({ theme }) => ({\r\n  marginLeft: '12px',\r\n  color: theme.palette.primary.main,\r\n  '& h5': {\r\n    marginTop: 0,\r\n    fontSize: '14px',\r\n    marginBottom: '3px',\r\n  },\r\n  '& span': { fontWeight: '500' },\r\n}));\r\n\r\nconst ChatMessage = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  maxWidth: 240,\r\n  fontSize: '14px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  whiteSpace: 'pre-wrap',\r\n  wordBreak: 'break-word',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst MessageTime = styled('span')(({ theme }) => ({\r\n  fontSize: '13px',\r\n  fontWeight: '500',\r\n  color: theme.palette.primary.main,\r\n}));\r\n\r\nconst ChatImgContainer = styled('div')(({ theme }) => ({\r\n  padding: '20px',\r\n  display: 'flex',\r\n  justifyContent: 'flex-end',\r\n}));\r\n\r\nconst ChatImgBox = styled('div')(({ theme }) => ({\r\n  padding: '8px',\r\n  fontSize: '14px',\r\n  maxWidth: 240,\r\n  borderRadius: '4px',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'flex-end',\r\n  color: theme.palette.primary.main,\r\n  background: '#fafafa',\r\n}));\r\n\r\nconst ChatImg = styled('img')(() => ({ width: '40px' }));\r\nconst ChatImgSize = styled(MessageTime)(() => ({}));\r\n\r\n// for previewing bot message\r\nconst globalMessageList = [];\r\n\r\nconst Chatbox = ({ togglePopup }) => {\r\n  const [isAlive, setIsAlive] = useState(true);\r\n  const [message, setMessage] = useState('');\r\n  const [messageList, setMessageList] = useState([]);\r\n  const currentUserId = '7863a6802ez0e277a0f98534';\r\n  const chatBottomRef = document.querySelector('#chat-scroll');\r\n\r\n  const sendMessageOnEnter = (event) => {\r\n    if (event.key === 'Enter' && !event.shiftKey) {\r\n      let tempMessage = message.trim();\r\n      if (tempMessage !== '') {\r\n        let tempList = [...messageList];\r\n        let messageObject = {\r\n          text: tempMessage,\r\n          contactId: currentUserId,\r\n        };\r\n        tempList.push(messageObject);\r\n        globalMessageList.push(messageObject);\r\n        if (isAlive) setMessageList(tempList);\r\n        dummyReply();\r\n      }\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const dummyReply = async () => {\r\n    setTimeout(() => {\r\n      let tempList = [...messageList];\r\n      let messageObject = {\r\n        text: 'Good to hear from you. enjoy!!!',\r\n        contactId: 'opponents contact id',\r\n        avatar: '/assets/images/faces/13.jpg',\r\n        name: 'Frank Powell',\r\n      };\r\n\r\n      tempList.push(messageObject);\r\n      globalMessageList.push(messageObject);\r\n      if (isAlive) setMessageList(globalMessageList);\r\n    }, 2000);\r\n  };\r\n\r\n  const scrollToBottom = useCallback(() => {\r\n    if (chatBottomRef) {\r\n      chatBottomRef.scrollTo({\r\n        top: chatBottomRef.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [chatBottomRef]);\r\n\r\n  useEffect(() => {\r\n    if (isAlive) {\r\n      setMessageList([\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Do you ever find yourself falling into the “discount trap?”',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Giving away your knowledge or product just to gain clients?',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '323sa680b3249760ea21rt47',\r\n          text: 'Yes',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '323sa680b3249760ea21rt47',\r\n          name: 'Frank Powell',\r\n          avatar: '/assets/images/faces/13.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n        {\r\n          contactId: '7863a6802ez0e277a0f98534',\r\n          text: 'Don’t feel bad. It happens to a lot of us',\r\n          time: '2018-02-10T08:45:28.291Z',\r\n          id: '7863a6802ez0e277a0f98534',\r\n          name: 'John Doe',\r\n          avatar: '/assets/images/face-1.jpg',\r\n          status: 'online',\r\n          mood: '',\r\n        },\r\n      ]);\r\n    }\r\n  }, [isAlive]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n    return () => setIsAlive(false);\r\n  }, [messageList, scrollToBottom]);\r\n\r\n  const { palette } = useTheme();\r\n  const primary = palette.primary.main;\r\n  const textPrimary = palette.text.primary;\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ProfileBox>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <ChatAvatar src=\"/assets/images/face-2.jpg\" status=\"online\" />\r\n          <ChatStatus>\r\n            <H5>Ryan Todd</H5>\r\n            <Span>Active</Span>\r\n          </ChatStatus>\r\n        </Box>\r\n        <IconButton onClick={togglePopup}>\r\n          <Icon fontSize=\"small\">clear</Icon>\r\n        </IconButton>\r\n      </ProfileBox>\r\n      <StyledScrollBar id=\"chat-scroll\">\r\n        {messageList.map((item, ind) => (\r\n          <Box\r\n            key={shortId.generate()}\r\n            p=\"20px\"\r\n            display=\"flex\"\r\n            sx={{\r\n              justifyContent: currentUserId === item.contactId && 'flex-end',\r\n            }}\r\n          >\r\n            {currentUserId !== item.contactId && <Avatar src={item.avatar} />}\r\n            <Box ml=\"12px\">\r\n              {currentUserId !== item.contactId && (\r\n                <H5\r\n                  sx={{\r\n                    mb: '4px',\r\n                    fontSize: '14px',\r\n                    color: primary,\r\n                  }}\r\n                >\r\n                  {item.name}\r\n                </H5>\r\n              )}\r\n              <ChatMessage>{item.text}</ChatMessage>\r\n              <MessageTime>1 minute ago</MessageTime>\r\n            </Box>\r\n          </Box>\r\n        ))}\r\n\r\n        {/* example of image sent by current user*/}\r\n        <ChatImgContainer>\r\n          <Box ml=\"12px\">\r\n            <ChatImgBox>\r\n              <ChatImg alt=\"laptop\" src=\"/assets/images/laptop-1.png\" />\r\n              <Box ml=\"12px\">\r\n                <H6 sx={{ mt: 0, mb: '4px' }}>Asus K555LA.png</H6>\r\n                <ChatImgSize>21.5KB</ChatImgSize>\r\n              </Box>\r\n            </ChatImgBox>\r\n            <MessageTime>1 minute ago</MessageTime>\r\n          </Box>\r\n        </ChatImgContainer>\r\n      </StyledScrollBar>\r\n      <div>\r\n        <Divider\r\n          sx={{\r\n            background: `rgba(${convertHexToRGB(textPrimary)}, 0.15)`,\r\n          }}\r\n        />\r\n        <TextField\r\n          placeholder=\"Type here ...\"\r\n          multiline\r\n          rowsMax={4}\r\n          fullWidth\r\n          sx={{ '& textarea': { color: primary } }}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <Box display=\"flex\">\r\n                <IconButton size=\"small\">\r\n                  <Icon>tag_faces</Icon>\r\n                </IconButton>\r\n                <IconButton size=\"small\">\r\n                  <Icon>attachment</Icon>\r\n                </IconButton>\r\n              </Box>\r\n            ),\r\n            classes: { root: 'pl-5 pr-3 py-3 text-body' },\r\n          }}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyUp={sendMessageOnEnter}\r\n        />\r\n      </div>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import { styled } from '@mui/material';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport clsx from 'clsx';\r\nimport { cloneElement, useState } from 'react';\r\n\r\nconst PopupRoot = styled('div')(({ theme }) => ({\r\n  '& .popupOpen': {\r\n    top: topBarHeight + 16,\r\n    [theme.breakpoints.down('sm')]: { bottom: 0 },\r\n  },\r\n  '& .closeIcon': {\r\n    position: 'absolute',\r\n    top: 6,\r\n    right: 6,\r\n  },\r\n}));\r\n\r\nconst Popup = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  right: theme.spacing(2),\r\n  bottom: theme.spacing(2),\r\n  top: '100vh',\r\n  transition: 'top 250ms ease-in-out',\r\n  boxShadow: theme.shadows[6],\r\n  borderRadius: 6,\r\n  zIndex: 99999,\r\n  width: 360,\r\n  overflow: 'hidden',\r\n  '@media only screen and (max-width: 450px)': {\r\n    width: 'calc(100% - 32px)',\r\n    left: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ChatHead = ({ icon, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const togglePopup = async () => {\r\n    setOpen((open) => !open);\r\n  };\r\n\r\n  return (\r\n    <PopupRoot>\r\n      {cloneElement(icon, { onClick: togglePopup })}\r\n      <Popup className={clsx({ popupOpen: open })}>\r\n        {open ? cloneElement(children, { togglePopup }) : null}\r\n      </Popup>\r\n    </PopupRoot>\r\n  );\r\n};\r\n\r\nexport default ChatHead;\r\n","import { Button, Dialog, styled } from '@mui/material';\r\n\r\nconst DialogBox = styled('div')(() => ({\r\n  width: 360,\r\n  padding: '32px',\r\n  textAlign: 'center',\r\n  marginLeft: 'auto',\r\n  marginRight: 'auto',\r\n}));\r\n\r\nconst Title = styled('h4')(() => ({\r\n  margin: 0,\r\n  marginBottom: '8px',\r\n  textTransform: 'capitalize',\r\n}));\r\n\r\nconst Controller = styled('div')(() => ({\r\n  margin: '8px',\r\n  paddingTop: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst StyledButton = styled(Button)(({ theme }) => ({\r\n  margin: '8px',\r\n  paddingLeft: '24px',\r\n  paddingRight: '24px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  transition: 'all 250ms',\r\n  '&.yesBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.primary.main} !important`,\r\n      backgroundColor: `${theme.palette.primary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n  '&.noBtn': {\r\n    '&:hover': {\r\n      color: '#ffffff',\r\n      background: `${theme.palette.secondary.main} !important`,\r\n      backgroundColor: `${theme.palette.secondary.main} !important`,\r\n      fallbacks: [{ color: 'white !important' }],\r\n    },\r\n  },\r\n}));\r\n\r\nconst ConfirmationDialog = ({\r\n  open,\r\n  onConfirmDialogClose,\r\n  text,\r\n  title = 'confirm',\r\n  onYesClick,\r\n}) => {\r\n  return (\r\n    <Dialog maxWidth=\"xs\" open={open} onClose={onConfirmDialogClose}>\r\n      <DialogBox>\r\n        <Title>{title}</Title>\r\n        <p>{text}</p>\r\n        <Controller>\r\n          <StyledButton className=\"yesBtn\" variant=\"outlined\" color=\"primary\" onClick={onYesClick}>\r\n            Yes\r\n          </StyledButton>\r\n          <StyledButton\r\n            className=\"noBtn\"\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={onConfirmDialogClose}\r\n          >\r\n            No\r\n          </StyledButton>\r\n        </Controller>\r\n      </DialogBox>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import { Menu, ThemeProvider } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment } from 'react';\r\nimport shortId from 'shortid';\r\n\r\nconst MenuButton = styled(Box)(({ theme }) => ({\r\n  display: 'inline-block',\r\n  color: theme.palette.text.primary,\r\n  '& div:hover': {\r\n    backgroundColor: theme.palette.action.hover,\r\n  },\r\n}));\r\n\r\nconst MatxMenu = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const children = React.Children.toArray(props.children);\r\n  let { shouldCloseOnItemClick = true, horizontalPosition = 'left' } = props;\r\n  const { settings } = useSettings();\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <MenuButton onClick={handleClick}>{props.menuButton}</MenuButton>\r\n      <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n        <Menu\r\n          elevation={8}\r\n          getContentAnchorEl={null}\r\n          anchorEl={anchorEl}\r\n          open={!!anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: horizontalPosition,\r\n          }}\r\n        >\r\n          {children.map((child, index) => (\r\n            <div onClick={shouldCloseOnItemClick && handleClose} key={shortId.generate()}>\r\n              {child}\r\n            </div>\r\n          ))}\r\n        </Menu>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxMenu;\r\n","import { Grid, LinearProgress, Typography } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { Small } from './Typography';\r\n\r\nconst CustomLinearProgress = styled(LinearProgress)(() => ({\r\n  borderRadius: 2,\r\n  background: 'rgba(0, 0, 0, 0.1)',\r\n}));\r\n\r\nconst MatxProgressBar = ({\r\n  value = 75,\r\n  color = 'primary',\r\n  text = '',\r\n  spacing = 2,\r\n  coloredText = false,\r\n}) => {\r\n  const theme = useTheme();\r\n  const secondary = theme.palette.text.secondary;\r\n\r\n  return (\r\n    <Grid container spacing={spacing} alignItems=\"center\">\r\n      <Grid item xs={text ? 8 : 12}>\r\n        <CustomLinearProgress\r\n          color={color}\r\n          value={value}\r\n          variant=\"determinate\"\r\n        ></CustomLinearProgress>\r\n      </Grid>\r\n      {text !== '' && (\r\n        <Grid item xs={text ? 4 : false}>\r\n          <Typography color={color}>\r\n            <Small sx={{ color: coloredText ? '' : secondary }}>{text}</Small>\r\n          </Typography>\r\n        </Grid>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default MatxProgressBar;\r\n","import { Icon, IconButton } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport React, { useState } from 'react';\r\n\r\nconst SearchContainer = styled('div')(({ theme }) => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  height: topBarHeight,\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': {\r\n    color: theme.palette.text.primary,\r\n  },\r\n}));\r\n\r\nconst SearchInput = styled('input')(({ theme }) => ({\r\n  width: '100%',\r\n  border: 'none',\r\n  outline: 'none',\r\n  fontSize: '1rem',\r\n  paddingLeft: '20px',\r\n  height: 'calc(100% - 5px)',\r\n  background: theme.palette.primary.main,\r\n  color: theme.palette.text.primary,\r\n  '&::placeholder': { color: theme.palette.text.primary },\r\n}));\r\n\r\nconst MatxSearchBox = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const toggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const { palette } = useTheme();\r\n  const textColor = palette.text.primary;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!open && (\r\n        <IconButton onClick={toggle}>\r\n          <Icon sx={{ color: textColor }}>search</Icon>\r\n        </IconButton>\r\n      )}\r\n\r\n      {open && (\r\n        <SearchContainer>\r\n          <SearchInput type=\"text\" placeholder=\"Search here...\" autoFocus />\r\n          <IconButton onClick={toggle} sx={{ mx: 2, verticalAlign: 'middle' }}>\r\n            <Icon sx={{ color: textColor }}>close</Icon>\r\n          </IconButton>\r\n        </SearchContainer>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MatxSearchBox;\r\n","import { Box, styled, useMediaQuery, useTheme } from '@mui/material';\r\n\r\nconst SideNav = styled('div')(({ theme, width }) => ({\r\n  zIndex: 91,\r\n  width: width,\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  transition: 'width 250ms ease',\r\n  background: theme.palette.background.default,\r\n  [theme.breakpoints.down('sm')]: {\r\n    top: 0,\r\n    left: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n  },\r\n}));\r\n\r\nconst SideNavOverlay = styled('div')(() => ({\r\n  zIndex: 90,\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'absolute',\r\n  background: 'rgba(0, 0, 0, 0.74)',\r\n}));\r\n\r\nconst MatxSidenav = ({ sx, open, children, toggleSidenav, width = '220px' }) => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  return (\r\n    <Box height=\"100%\" display=\"flex\">\r\n      <SideNav sx={sx} width={open || !isMobile ? width : '0px'}>\r\n        {children}\r\n      </SideNav>\r\n\r\n      {open && isMobile && <SideNavOverlay onClick={toggleSidenav} />}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MatxSidenav;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Container = styled('div')(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContainer = ({ children }) => {\r\n  return <Container>{children}</Container>;\r\n};\r\n\r\nexport default MatxSidenavContainer;\r\n","import { styled } from '@mui/material';\r\n\r\nconst Content = styled('div')(() => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  position: 'relative',\r\n}));\r\n\r\nconst MatxSidenavContent = ({ children }) => {\r\n  return <Content>{children}</Content>;\r\n};\r\n\r\nexport default MatxSidenavContent;\r\n","import { MatxLoading } from 'app/components';\r\nimport React, { Suspense } from 'react';\r\n\r\nconst MatxSuspense = ({ children }) => {\r\n  return <Suspense fallback={<MatxLoading />}>{children}</Suspense>;\r\n};\r\n\r\nexport default MatxSuspense;\r\n","import React from 'react';\r\nimport { CssBaseline, ThemeProvider } from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\n\r\nconst MatxTheme = ({ children }) => {\r\n  const { settings } = useSettings();\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n  return (\r\n    <ThemeProvider theme={activeTheme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default MatxTheme;\r\n","import { ButtonBase, Icon } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport clsx from 'clsx';\r\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst NavExpandRoot = styled('div')(({ theme }) => ({\r\n  '& .expandIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(90deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .collapseIcon': {\r\n    transition: 'transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms',\r\n    transform: 'rotate(0deg)',\r\n    color: theme.palette.common.white,\r\n  },\r\n  '& .expansion-panel': {\r\n    overflow: 'hidden',\r\n    transition: 'max-height 0.3s cubic-bezier(0, 0, 0.2, 1)',\r\n\r\n  },\r\n  '& .highlight': {\r\n    background: theme.palette.primary.main,\r\n  },\r\n  '&.compactNavItem': {\r\n    width: 44,\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n    '& .itemText': { display: 'none' },\r\n    '& .itemIcon': { display: 'none' },\r\n  },\r\n}));\r\n\r\nconst BaseButton = styled(ButtonBase)(({ theme }) => ({\r\n  height: 44,\r\n  width: '100%',\r\n  whiteSpace: 'pre',\r\n  overflow: 'hidden',\r\n  paddingRight: '16px',\r\n  borderRadius: '4px',\r\n  marginBottom: '8px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between !important',\r\n  color: theme.palette.text.primary,\r\n  //color: theme.palette.common.white,\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '& .icon': {\r\n    width: 36,\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n    color: 'white',\r\n  },\r\n}));\r\n\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  width: 4,\r\n  height: 4,\r\n  color: 'inherit',\r\n  overflow: 'hidden',\r\n  marginLeft: '20px',\r\n  marginRight: '8px',\r\n  borderRadius: '300px !important',\r\n  background: theme.palette.primary.contrastText,\r\n\r\n}));\r\n\r\nconst ItemText = styled('span')(({ theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  verticalAlign: 'middle',\r\n  color: theme.palette.common.white,\r\n  //color: 'white',\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 4px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  //color: 'white',\r\n}));\r\n\r\nconst MatxVerticalNavExpansionPanel = ({ item, children, mode }) => {\r\n  const [collapsed, setCollapsed] = useState(true); // State to manage collapsed/expanded state\r\n  const elementRef = useRef(null); // Ref to track the DOM element\r\n  const componentHeight = useRef(0); // Ref to store the calculated height\r\n  const { pathname } = useLocation(); // To track the current route\r\n  const { name, icon, iconText, badge } = item; // Destructure item props\r\n\r\n  // Toggle collapsed state with additional checks for child clicks\r\n  const handleClick = (e) => {\r\n    // Prevent collapsing if a child is clicked\r\n    const isChildClick = e?.target?.closest('.submenu');\r\n    if (isChildClick) return;\r\n\r\n    componentHeight.current = 0;\r\n    calcaulateHeight(elementRef.current);\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const calcaulateHeight = useCallback((node) => {\r\n    if (node.name !== 'child') {\r\n      for (let child of node.children) {\r\n        calcaulateHeight(child);\r\n      }\r\n    }\r\n\r\n    if (node.name === 'child') componentHeight.current += node.scrollHeight;\r\n    else componentHeight.current += 44; //here 44 is node height\r\n    return;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!elementRef) return;\r\n\r\n    calcaulateHeight(elementRef.current);\r\n\r\n    // OPEN DROPDOWN IF CHILD IS ACTIVE OR NAME IS \"Search\"\r\n    for (let child of elementRef.current.children) {\r\n      if (child.getAttribute('href') === pathname || name === \"Search\") {\r\n        setCollapsed(false);\r\n      }\r\n    }\r\n  }, [pathname, calcaulateHeight, name]);\r\n\r\n  return (\r\n    <NavExpandRoot>\r\n      <BaseButton\r\n        className={clsx({\r\n          'has-submenu compactNavItem': true,\r\n          compactNavItem: mode === 'compact',\r\n          open: !collapsed,\r\n        })}\r\n        onClick={(e) => handleClick(e)} // Pass the event to handleClick\r\n      >\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {icon && <Icon className=\"icon\">{icon}</Icon>}\r\n          {iconText && <BulletIcon />}\r\n          <ItemText className={`sidenavHoverShow`}>{name}</ItemText>\r\n        </Box>\r\n\r\n        {badge && <BadgeValue className=\"sidenavHoverShow itemIcon\">{badge.value}</BadgeValue>}\r\n\r\n        <div\r\n          className={clsx({\r\n            sidenavHoverShow: true,\r\n            collapseIcon: collapsed,\r\n            expandIcon: !collapsed,\r\n          })}\r\n        >\r\n          <Icon fontSize=\"small\" sx={{ verticalAlign: 'middle' }}>\r\n            chevron_right\r\n          </Icon>\r\n        </div>\r\n      </BaseButton>\r\n\r\n      <div\r\n        ref={elementRef}\r\n        className=\"expansion-panel submenu\"\r\n        style={collapsed ? { maxHeight: '0px' } : { maxHeight: componentHeight.current + 'px' }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </NavExpandRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(MatxVerticalNavExpansionPanel);","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\nimport { BUService } from \"services/buService\";\r\nimport { MassUpdate } from \"services/massUpdateService\";\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialog-paper-root': {\r\n        backgroundColor: '#ffffff',\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst MassUpdatePartDescriptionInEnoviaAndERP = (props) => {\r\n    const buService = new BUService();\r\n    const massUpdate = new MassUpdate();\r\n    const { importMassupdateFile, setImportMassupdateFile, setOpenAlert, setOpenDesc, setIsLoading } = props;\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    // const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    const instance = localStorage.getItem('instance')\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n    });\r\n\r\n    const importFileData = (e) => {\r\n        console.log('file selected')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null)\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null)\r\n        }\r\n    }\r\n    const handleCloseImport = () => {\r\n        setImportedFileData(null)\r\n        setImportMassupdateFile(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        //console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        if (importedFileData !== null) {\r\n            //alert('file is upl7oaded')\r\n            if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n                setImportMassupdateFile(false);\r\n                setIsLoading(true);\r\n\r\n                console.log('ok for mass update')\r\n                let postData = {\r\n                    'file': importedFileData,\r\n                    data: {\r\n                        BU: importSelectionValues.BU,\r\n                        Instance: instance,\r\n                    }\r\n                };\r\n\r\n                // console.log(importSelectionValues, 'importSelectionValues');\r\n                console.log(postData, 'postData');\r\n                massUpdate.massUpdatePartDescription(postData).then((response) => {\r\n                    console.log(response, 'response 11111');\r\n                    setImportResponse(response)\r\n                    setimportfileBar(true);\r\n                    setImportedFileData(null)\r\n                    setImportedFileName(null)\r\n                    setImportMassupdateFile(false)\r\n\r\n                    setIsLoading(false);\r\n                    setOpenAlert(false);\r\n                    if (response?.status === \"success\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"success\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    } else if (response?.status === \"failed\") {\r\n                        setOpenAlert(true);\r\n                        setOpenDesc({\r\n                            severity: \"error\",\r\n                            desc: response?.msg,\r\n                        });\r\n                    }\r\n\r\n                    // if (!importResponse?.errorInTemplateCount || !importResponse?.errorInPlantCount) {\r\n                    //     updateRefreshData(true);\r\n                    //     fetchData()\r\n                    // }\r\n                });\r\n            }\r\n            console.log('cancle for mass update')\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [bussinessUnitLists])\r\n    const handleDownload = () => {\r\n        let filelocation = 'massUpdate/sample-massUpdatepartDescription.xlsx'\r\n        massUpdate.downloadSampleFile(filelocation)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importMassupdateFile}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Mass Update Part Description in Enovia and ERP\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Instance\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel id=\"bussinessUnit\">{instance}</InputLabel>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Upload File (Excel File)\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                                    Upload file\r\n                                                    <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                                </Button>\r\n                                                {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell colSpan={2}>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <a\r\n                                                    // href={sampleFileUrl}\r\n                                                    onClick={handleDownload}\r\n                                                    download=\"Example-XLSX-document\"\r\n                                                    rel=\"noreferrer\"\r\n                                                    // target=\"_blank\"\r\n                                                    //style={{ color: \"blue\" }}\r\n                                                    style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                                                >\r\n                                                    Click Here\r\n                                                </a> to download the sample Excel template for the Part Description Update.\r\n\r\n                                                {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                                                {/* </a> */}\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <b>Note:</b> Use only the Excel template, downloaded from this page. Other Excel templates\r\n                                                will not be accepted. The Excel file has four columns with Header labels in the\r\n                                                following order. Fields mark with * are the mandatory fields in the input excel.\r\n                                            </div>\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                Part Type*<br />\r\n                                                Part Name*<br />\r\n                                                Part Revision*<br />\r\n                                                Part Description*<br />\r\n                                            </div>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    Parts Description Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                    {/* Template imported successfully! */}\r\n                </Alert>\r\n            </Snackbar >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MassUpdatePartDescriptionInEnoviaAndERP;","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllTemplateMapping = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllTempMapping, setExportAllTempMapping } = props;\r\n    // const [noFileError, setNoFileError] = useState(false);\r\n    // const [importResponse, setImportResponse] = useState(false);\r\n    // const [importfileBar, setimportfileBar] = useState(false);\r\n    // const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n    // const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n    //const [bussinessUnitLists, setBussinessUnitLists] = useState([]);\r\n    //const instance = localStorage.getItem('instance')\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    // const [ERPTypeError, setERPTypeError] = useState(false);\r\n    // const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n\r\n    // const importFileData = (e) => {\r\n    //     console.log('file selected')\r\n    //     if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n    //         setImportedFileData(e.target.files[0])\r\n    //         setImportedFileName(e.target.files[0].name)\r\n    //         setNoFileError(false)\r\n    //     } else {\r\n    //         setNoFileError(true)\r\n    //         setImportedFileName(null)\r\n    //         setImportedFileData(null)\r\n    //     }\r\n    // }\r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllTempMapping(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n        console.info(event.target, 'importSelectionValues')\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n\r\n        //if (importedFileData !== null) {\r\n        //alert('file is upl7oaded')\r\n        //if (window.confirm(`You have requested a report that will take some time to complete. This report will continue to run if you close this browser window. To access this report later, use 'Mass Update Part Description' > My Report.`)) {\r\n        //console.log('ok for mass update')\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n\r\n        // console.log(importSelectionValues, 'importSelectionValues');\r\n        console.log(postData, 'postData');\r\n        templateMappingService.exportAllTemplateMapping(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            // setImportResponse(response)\r\n            // setimportfileBar(true);\r\n            // setImportedFileData(null)\r\n            setImportedFileName(null)\r\n            //console.log(response, ';resprespresp')\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllTempMapping(false)\r\n        });\r\n        // }\r\n        // console.log('cancle for mass update')\r\n        //}\r\n    }\r\n\r\n    // const handleImportfileBarClose = (event, reason) => {\r\n    //     if (reason === \"clickaway\") {\r\n    //         return;\r\n    //     }\r\n    //     setimportfileBar(false);\r\n    // };\r\n    // const getUniqueValues = (column) => {\r\n    //     const values = new Set();\r\n    //     bussinessUnitLists?.forEach(item=>{\r\n    //         values.add(item[column]);\r\n    //     })\r\n    //     return Array.from(values);\r\n    // };\r\n    useEffect(() => {\r\n        if (bussinessUnitLists?.length === 0) {\r\n            // buService.getAllBuList().then((result) => {\r\n            //   setBussinessUnitLists(result.data)\r\n            // });\r\n        }\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Dialog open={exportAllTempMapping}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Template Mappings\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllTemplateMapping;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllGeneralPropertiesDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminGeneralPropertiesDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminGeneralProperties(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminGeneralPropertiesDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminGeneralPropertiesDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin General Properties\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllGeneralPropertiesDialogBox;","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { BUService } from \"services/buService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import { MassUpdate } from \"services/massUpdateService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    FormControl,\r\n    Radio,\r\n    RadioGroup,\r\n    FormControlLabel\r\n} from \"@mui/material\";\r\n\r\n//import MuiAlert from \"@mui/material/Alert\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst ExportAllSystemSetupsDialogBox = (props) => {\r\n    const buService = new BUService();\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog } = props;    \r\n    const [importedFileName, setImportedFileName] = useState(null);    \r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        BU: '',\r\n        dataToExport: 'masterData'\r\n    });\r\n    \r\n    const handleCloseImport = () => {\r\n        // setImportedFileData(null)\r\n        setExportAllAdminSystemSetupsDialog(false);\r\n    };\r\n\r\n    const handleImportOptionSelection = (event) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [event.target.name]: event.target.value,\r\n            };\r\n        })\r\n        if (event.target.name === 'BU') { setBUError(false) }\r\n    }\r\n    const handleImportFile = () => {\r\n        let hasError = false;\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            hasError = true\r\n        }\r\n        if (hasError) { return }\r\n        let postData = {\r\n            rdo: importSelectionValues.BU,\r\n            dataToExport: importSelectionValues.dataToExport,\r\n        }\r\n        templateMappingService.exportAllAdminSystemSetups(postData).then((response) => {\r\n            console.log(response, 'response 11111');\r\n            setImportedFileName(null)\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: response?.status,\r\n                desc: response?.msg,\r\n            });\r\n            setExportAllAdminSystemSetupsDialog(false)\r\n        });\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Dialog open={exportAllAdminSystemSetupsDialog}\r\n                PaperProps={{\r\n                    style: {\r\n                        backgroundColor: '#fff',\r\n                        boxShadow: 'none',\r\n                    },\r\n                }} >\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Export All Admin System System\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            {/* <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            > */}\r\n                                            Design Organization\r\n                                            {/* </InputLabel> */}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <FormControl fullWidth>\r\n                                                <InputLabel id=\"bussinessUnit\">Select RDO</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"bussinessUnit\"\r\n                                                    id=\"bussinessUnit\"\r\n                                                    name=\"BU\"\r\n                                                    size=\"medium\"\r\n                                                    label=\"Select RDO\"\r\n                                                    fullWidth\r\n                                                    style={{ width: \"70%\", maxHeight: \"200px\", }} // Set the width here\r\n                                                    value={importSelectionValues.BU ? importSelectionValues.BU : ''}\r\n                                                    onChange={handleImportOptionSelection}\r\n\r\n                                                >\r\n                                                    {bussinessUnitLists?.map((option) => (\r\n                                                        <MenuItem key={option.buName} value={option.buName}\r\n                                                            style={{ backgroundColor: '#fff' }}\r\n                                                        >\r\n                                                            {option.buName}\r\n                                                        </MenuItem>\r\n                                                    ))}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            Data to Export\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <div style={{ paddingTop: '10px' }}>\r\n                                                <FormControl>\r\n                                                    {/* <FormLabel id=\"demo-row-radio-buttons-group-label\">Gender</FormLabel> */}\r\n                                                    <RadioGroup\r\n                                                        row\r\n                                                        aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                                                        name=\"dataToExport\"\r\n                                                        defaultValue=\"masterData\"\r\n                                                        // value={value}\r\n                                                        onChange={handleImportOptionSelection}\r\n                                                    >\r\n                                                        <FormControlLabel value=\"masterData\" control={<Radio />} label=\"Master Data\" />\r\n                                                        <FormControlLabel value=\"draftData\" control={<Radio />} label=\"Proposed Changes\" />\r\n                                                    </RadioGroup>\r\n                                                </FormControl>\r\n                                            </div>\r\n                                            {importedFileName && (<p>{importedFileName}</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleImportFile}>Done</Button>\r\n                    <Button autoFocus onClick={handleCloseImport}>\r\n                        Cancel\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ExportAllSystemSetupsDialogBox;","import { Box, ButtonBase, Icon, styled, useMediaQuery } from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Paragraph, Span } from '../Typography';\r\nimport MatxVerticalNavExpansionPanel from './MatxVerticalNavExpansionPanel';\r\nimport shortId from 'shortid';\r\n// import { getBasename } from \"app/utils/baseurl\";\r\nimport MassUpdatePartDescriptionInEnoviaAndERP from '../massUpdatePartDescriptionInEnoviaAndERP';\r\nimport ExportAllTemplateMapping from '../exportAllTemplateMapping';\r\nimport ExportAllGeneralPropertiesDialogBox from '../exportAllAdminGeneralProperties';\r\nimport CustomAlertBox from \"app/components/McoPages/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport ExportAllSystemSetupsDialogBox from '../exportAllAdminSystemSetups';\r\nconst ListLabel = styled(Paragraph)(({ theme, mode }) => ({\r\n  fontSize: '12px',\r\n  marginTop: '20px',\r\n  marginLeft: '15px',\r\n  marginBottom: '10px',\r\n  textTransform: 'uppercase',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.text.secondary,\r\n\r\n}));\r\n\r\nconst ExtAndIntCommon = {\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '4px',\r\n  height: 44,\r\n  whiteSpace: 'pre',\r\n  marginBottom: '8px',\r\n  textDecoration: 'none',\r\n  justifyContent: 'space-between',\r\n  transition: 'all 150ms ease-in',\r\n  '&:hover': { background: 'rgba(255, 255, 255, 0.08)' },\r\n  '&.compactNavItem': {\r\n    overflow: 'hidden',\r\n    justifyContent: 'center !important',\r\n  },\r\n  '& .icon': {\r\n    fontSize: '18px',\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    verticalAlign: 'middle',\r\n  },\r\n};\r\nconst ExternalLink = styled('a')(({ theme }) => ({\r\n  ...ExtAndIntCommon,\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\nconst InternalLink = styled(Box)(({ theme }) => ({\r\n  '& a': {\r\n    ...ExtAndIntCommon,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  '& .navItemActive': {\r\n    backgroundColor: 'rgba(255, 255, 255, 0.16)',\r\n  },\r\n}));\r\n\r\nconst StyledText = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\n//for mass update start\r\nconst StyledTextforMassUpdate = styled(Span)(({ mode, theme }) => ({\r\n  fontSize: '0.875rem',\r\n  paddingLeft: '0.8rem',\r\n  display: mode === 'compact' && 'none',\r\n  color: theme.palette.common.white,\r\n}));\r\n//for mass update end\r\nconst BulletIcon = styled('div')(({ theme }) => ({\r\n  padding: '2px',\r\n  marginLeft: '24px',\r\n  marginRight: '8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n  background: theme.palette.common.white,\r\n}));\r\n\r\nconst BadgeValue = styled('div')(() => ({\r\n  padding: '1px 8px',\r\n  overflow: 'hidden',\r\n  borderRadius: '300px',\r\n}));\r\n\r\nconst MatxVerticalNav = ({ items }) => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { mode } = settings.layout1Settings.leftSidebar;\r\n  const theme = useTheme();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  // const getBasenameVal = getBasename();\r\n  // const routePaths = getBasenameVal?.segment;\r\n  const [importMassupdateFile, setImportMassupdateFile] = useState(false)\r\n  const [exportAllTempMapping, setExportAllTempMapping] = useState(false)\r\n  const [exportAllAdminGeneralPropertiesDialog, setExportAllAdminGeneralPropertiesDialog] = useState(false)\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [exportAllAdminSystemSetupsDialog, setExportAllAdminSystemSetupsDialog] = useState(false)\r\n  const handleClickImportButton = (event) => {\r\n    if (event === 'massUpdate') {\r\n      setImportMassupdateFile(true)\r\n    } else if (event === 'exportAll') {\r\n      setExportAllTempMapping(true)\r\n    } else if (event === 'exportAllAdminGeneralProperties') {\r\n      setExportAllAdminGeneralPropertiesDialog(true)\r\n    } else if (event === 'exportAllAdminSystemSetups') {\r\n      setExportAllAdminSystemSetupsDialog(true)\r\n    }\r\n  }\r\n  // For NavLink components\r\n  const handleNavLinkClick = () => {\r\n    if (isMdScreen) {\r\n      updateSidebarMode({ mode: 'close' }); // Close the sidebar\r\n    }\r\n  };\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    updateSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const renderLevels = (data) => {\r\n    return data.map((item, index) => {\r\n      if (item.type === 'label')\r\n        return (\r\n          <ListLabel key={shortId.generate()} mode={mode} className=\"sidenavHoverShow\">\r\n            {item.label}\r\n          </ListLabel>\r\n        );\r\n\r\n      if (item.children) {\r\n        return (\r\n          <MatxVerticalNavExpansionPanel mode={mode} item={item}>\r\n            <div style={{ marginLeft: '20px' }}>\r\n              {renderLevels(item.children)}\r\n            </div>\r\n          </MatxVerticalNavExpansionPanel>\r\n        );\r\n      } else if (item.type === 'extLink') {\r\n        return (\r\n          <ExternalLink\r\n            key={shortId.generate()}\r\n            href={item.path}\r\n            className={`${mode === 'compact' && 'compactNavItem'}`}\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n              {(() => {\r\n                if (item.icon) {\r\n                  return <Icon className=\"icon\">{item.icon}</Icon>;\r\n                } else {\r\n                  return <span className=\"item-icon icon-text\">{item.iconText}</span>;\r\n                }\r\n              })()}\r\n              <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                {item.name}\r\n              </StyledText>\r\n              <Box mx=\"auto\"></Box>\r\n              {item.badge && <BadgeValue>{item.badge.value}</BadgeValue>}\r\n            </ButtonBase>\r\n          </ExternalLink>\r\n        );\r\n      } else if (item.type === 'popup3') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup3\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup3\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllGeneralPropertiesDialogBox\r\n                          exportAllAdminGeneralPropertiesDialog={exportAllAdminGeneralPropertiesDialog}\r\n                          setExportAllAdminGeneralPropertiesDialog={setExportAllAdminGeneralPropertiesDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else if (item.type === 'popup6') {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup6\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup6\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllSystemSetupsDialogBox\r\n                          exportAllAdminSystemSetupsDialog={exportAllAdminSystemSetupsDialog}\r\n                          setExportAllAdminSystemSetupsDialog={setExportAllAdminSystemSetupsDialog}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      } else {\r\n        return (\r\n          <InternalLink key={shortId.generate()}>\r\n            {\r\n              (item.type === undefined || item.type === \"popup2\" || item.type !== \"popup\") ? (\r\n                <>\r\n                  {\r\n                    (item.type === \"popup2\") ? (\r\n                      <>\r\n                        <NavLink>\r\n                          <ButtonBase onClick={() => {\r\n                            handleClickImportButton(item.path)\r\n                          }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                            {item?.icon ? (\r\n                              <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                                {item.icon}\r\n                              </Icon>\r\n                            ) : (\r\n                              <Fragment>\r\n                                <BulletIcon\r\n                                  className={`nav-bullet`}\r\n                                  sx={{ display: mode === 'compact' && 'none' }}\r\n                                />\r\n                                <Box\r\n                                  className=\"nav-bullet-text\"\r\n                                  sx={{\r\n                                    ml: '20px',\r\n                                    fontSize: '11px',\r\n                                    display: mode !== 'compact' && 'none',\r\n                                  }}\r\n                                >\r\n                                  {item.iconText}\r\n                                </Box>\r\n                              </Fragment>\r\n                            )}\r\n                            <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledText>\r\n\r\n                            <Box mx=\"auto\" />\r\n\r\n                            {item.badge && (\r\n                              <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                            )}\r\n                          </ButtonBase>\r\n                        </NavLink>\r\n                        <ExportAllTemplateMapping\r\n                          exportAllTempMapping={exportAllTempMapping}\r\n                          setExportAllTempMapping={setExportAllTempMapping}\r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <NavLink\r\n                        onClick={handleNavLinkClick}\r\n                        to={`${item.path}`}\r\n                        className={({ isActive }) =>\r\n                          isActive\r\n                            ? `navItemActive ${mode === 'compact' && 'compactNavItem'}`\r\n                            : `${mode === 'compact' && 'compactNavItem'}`\r\n                        }\r\n                      >\r\n                        <ButtonBase key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          {item?.icon ? (\r\n                            <Icon className=\"icon\" sx={{ width: 36 }}>\r\n                              {item.icon}\r\n                            </Icon>\r\n                          ) : (\r\n                            <Fragment>\r\n                              <BulletIcon\r\n                                className={`nav-bullet`}\r\n                                sx={{ display: mode === 'compact' && 'none' }}\r\n                              />\r\n                              <Box\r\n                                className=\"nav-bullet-text\"\r\n                                sx={{\r\n                                  ml: '20px',\r\n                                  fontSize: '11px',\r\n                                  display: mode !== 'compact' && 'none',\r\n                                }}\r\n                              >\r\n                                {item.iconText}\r\n                              </Box>\r\n                            </Fragment>\r\n                          )}\r\n                          <StyledText mode={mode} className=\"sidenavHoverShow\">\r\n                            {item.name}\r\n                          </StyledText>\r\n\r\n                          <Box mx=\"auto\" />\r\n\r\n                          {item.badge && (\r\n                            <BadgeValue className=\"sidenavHoverShow\">{item.badge.value}</BadgeValue>\r\n                          )}\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    )\r\n                  }\r\n                </>\r\n              ) :\r\n                (\r\n                  <>\r\n                    <InternalLink key={shortId.generate()}>\r\n                      <NavLink>\r\n                        <ButtonBase onClick={() => {\r\n                          handleClickImportButton(item.path)\r\n                        }} key={item.name} name=\"child\" sx={{ width: '100%' }}>\r\n                          <Fragment>\r\n                            <BulletIcon\r\n                              className={`nav-bullet`}\r\n                              sx={{ display: mode === 'compact' && 'none' }}\r\n                            />\r\n                            <StyledTextforMassUpdate mode={mode} className=\"sidenavHoverShow\">\r\n                              {item.name}\r\n                            </StyledTextforMassUpdate>\r\n                          </Fragment>\r\n                        </ButtonBase>\r\n                      </NavLink>\r\n                    </InternalLink>\r\n                    <MassUpdatePartDescriptionInEnoviaAndERP\r\n                      importMassupdateFile={importMassupdateFile}\r\n                      setImportMassupdateFile={setImportMassupdateFile}\r\n                      setOpenAlert={setOpenAlert}\r\n                      setOpenDesc={setOpenDesc}\r\n                      setIsLoading={setIsLoading}\r\n                    />\r\n                    {\r\n                      (openDesc) ? (\r\n                        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n                      ) : (<></>)\r\n                    }\r\n                    {\r\n                      isLoading ? (\r\n                        <div className=\"textAlignCenter\">\r\n                          <Loader show={isLoading} />\r\n                        </div>\r\n                      ) : <></>\r\n                    }\r\n                  </>\r\n                )\r\n            }\r\n          </InternalLink>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return <div className=\"navigation\">{renderLevels(items)}</div>;\r\n};\r\n\r\nexport default React.memo(MatxVerticalNav);","import React from 'react';\r\nimport { Card } from '@mui/material';\r\nimport { Box, styled } from '@mui/system';\r\n\r\nconst CardRoot = styled(Card)(() => ({\r\n  height: '100%',\r\n  padding: '20px 24px',\r\n}));\r\n\r\nconst CardTitle = styled('div')(({ subtitle }) => ({\r\n  fontSize: '1rem',\r\n  fontWeight: '500',\r\n  textTransform: 'capitalize',\r\n  marginBottom: !subtitle && '16px',\r\n}));\r\n\r\nconst SimpleCard = ({ children, title, subtitle, icon }) => {\r\n  return (\r\n    <CardRoot elevation={6}>\r\n      <CardTitle subtitle={subtitle}>{title}</CardTitle>\r\n      {subtitle && <Box sx={{ mb: 2 }}>{subtitle}</Box>}\r\n      {children}\r\n    </CardRoot>\r\n  );\r\n};\r\n\r\nexport default SimpleCard;\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const spacingStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.px-80': {\r\n            paddingRight: '80px',\r\n            paddingLeft: '80px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingRight: '16px',\r\n                paddingLeft: '16px',\r\n            },\r\n        },\r\n        '.px-sm-30': {\r\n            padding: '0px 30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 16px',\r\n            },\r\n        },\r\n        '.p-sm-24': {\r\n            padding: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '16px !important',\r\n            },\r\n        },\r\n        '.px-sm-24': {\r\n            padding: '0px 24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                padding: '0px 12px !important',\r\n            },\r\n        },\r\n        '.pt-sm-24': {\r\n            paddingTop: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingTop: '16px !important',\r\n            },\r\n        },\r\n        '.pl-sm-24': {\r\n            paddingLeft: '24px !important',\r\n            [theme.breakpoints.down('sm')]: {\r\n                paddingLeft: '16px !important',\r\n            },\r\n        },\r\n        '.m-auto': { margin: 'auto !important' },\r\n        '.mx-auto': {\r\n            marginLeft: 'auto !important',\r\n            marginRight: 'auto !important',\r\n        },\r\n        '.my-auto': {\r\n            marginTop: 'auto !important',\r\n            marginBottom: 'auto !important',\r\n        },\r\n        '.m-sm-30': {\r\n            margin: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                margin: '16px',\r\n            },\r\n        },\r\n        '.mb-sm-30': {\r\n            marginBottom: '30px',\r\n            [theme.breakpoints.down('sm')]: {\r\n                marginBottom: '16px',\r\n            },\r\n        },\r\n        '.w-full': { width: '100%' },\r\n        '.mui-invalid': { color: '#FF3D57' },\r\n        '.max-w-full': { maxWidth: '100% !important' },\r\n        '.min-w-full': { minWidth: '100% !important' },\r\n        '.min-w-full-screen': { minWidth: '100vw !important' },\r\n        '.w-full-screen': { width: '100vw' },\r\n        '.min-w-600': { minWidth: '600px' },\r\n        '.min-w-750': { minWidth: '750px' },\r\n        '.min-w-1050': { minWidth: '1050px' },\r\n        '.max-w-450': { maxWidth: '450px' },\r\n        '.max-w-550': { maxWidth: '550px' },\r\n        '.max-h-500': { maxHeight: '500px' },\r\n        '.max-w-600': { maxWidth: '600px' },\r\n        '.max-w-770': { maxWidth: '770px' },\r\n        '.max-w-800': { maxWidth: '800px' },\r\n        '.max-w-850': { maxWidth: '850px' },\r\n        '.max-w-900': { maxWidth: '900px' },\r\n        '.max-w-1340': { maxWidth: '1340px' },\r\n        '.h-full': { height: '100% !important' },\r\n        '.min-h-full': { minHeight: '100% !important' },\r\n        '.h-auto': { height: 'auto' },\r\n        '.h-full-screen': { height: '100vh' },\r\n        '.min-h-full-screen': { minHeight: '100vh !important' },\r\n        '.h-150px': { height: '150px !important' },\r\n        '.size-36': { height: '36px !important', width: '36px !important' },\r\n        '.size-24': { height: '24px !important', width: '24px !important' },\r\n        ...generateMarginPadding(0, 25, 0.25, 'rem'),\r\n        ...generateMarginPadding(1, 16, 1, 'px'),\r\n        ...generateMarginPadding(-25, -1, 0.25, 'rem'),\r\n        ...generateMarginPadding(-16, -1, 1, 'px'),\r\n        ...generateHeightWidh(),\r\n    },\r\n}))\r\n\r\nconst generateMarginPadding = (\r\n    start = 0,\r\n    end = 25,\r\n    increament = 0.25,\r\n    unit = 'rem'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i++) {\r\n        classList[`.m-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            margin: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.ml-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.mx-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginLeft: `${i * increament}${unit} !important`,\r\n            marginRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.my-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            marginTop: `${i * increament}${unit} !important`,\r\n            marginBottom: `${i * increament}${unit} !important`,\r\n        }\r\n\r\n        classList[`.p-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            padding: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pt-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pb-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pr-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.pl-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.px-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingLeft: `${i * increament}${unit} !important`,\r\n            paddingRight: `${i * increament}${unit} !important`,\r\n        }\r\n        classList[`.py-${i}${unit === 'px' ? 'px' : ''}`] = {\r\n            paddingTop: `${i * increament}${unit} !important`,\r\n            paddingBottom: `${i * increament}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n\r\nconst generateHeightWidh = (\r\n    start = 0,\r\n    end = 400,\r\n    increament = 4,\r\n    unit = 'px'\r\n) => {\r\n    let classList = {}\r\n\r\n    for (let i = start; i <= end; i += increament) {\r\n        classList[`.w-${i}`] = {\r\n            width: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-w-${i}`] = {\r\n            minWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-w-${i}`] = {\r\n            maxWidth: `${i}${unit} !important`,\r\n        }\r\n        classList[`.h-${i}`] = {\r\n            height: `${i}${unit} !important`,\r\n        }\r\n        classList[`.min-h-${i}`] = {\r\n            minHeight: `${i}${unit} !important`,\r\n        }\r\n        classList[`.max-h-${i}`] = {\r\n            maxHeight: `${i}${unit} !important`,\r\n        }\r\n    }\r\n\r\n    return classList\r\n}\r\n","import './VendorCss'\r\nimport React from 'react'\r\n// import { variableStyles } from './_variables'\r\n// import { positioningStyles } from './utilities/_positionings'\r\nimport { spacingStyles } from './utilities/_spacing'\r\n// import { borderStyles } from './utilities/_border'\r\n// import { shadowStyles } from './utilities/_shadows'\r\n// import { colorStyles } from './utilities/_color'\r\n// import { typographyStyles } from './utilities/_typography'\r\nimport { commonStyles } from './utilities/_common'\r\n\r\nconst GlobalCss = ({ children }) => {\r\n    // variableStyles()\r\n    // positioningStyles()\r\n    // spacingStyles()\r\n    // borderStyles()\r\n    // colorStyles()\r\n    // shadowStyles()\r\n    // typographyStyles()\r\n    // commonStyles()\r\n\r\n    return children || null\r\n}\r\n\r\nexport default React.memo(GlobalCss)\r\n","import { styled as makeStyles } from '@mui/material/styles';\r\n\r\nexport const commonStyles = makeStyles(({ palette, ...theme }) => ({\r\n    '@global': {\r\n        '.circular-image-small': {\r\n            height: '48px',\r\n            width: '48px',\r\n            borderRadius: '50%',\r\n            overflow: 'hidden',\r\n        },\r\n        '.card': { transition: 'all 0.3s ease' },\r\n        '.card:hover': { boxShadow: theme.shadows[12] },\r\n        '.card-title': {\r\n            fontSize: '1rem',\r\n            textTransform: 'capitalize',\r\n            fontWeight: '500',\r\n        },\r\n        '.card-subtitle': { fontSize: '0.875rem', color: 'var(--text-muted)' },\r\n        '.theme-dark .card-subtitle': { color: 'rgba(255, 255, 255, 0.54)' },\r\n        '.hide-on-mobile': { display: 'inherit' },\r\n        '@media screen and (max-width: 767px)': {\r\n            '.hide-on-mobile': { display: 'none !important' },\r\n            '.show-on-mobile': { display: 'inherit !important' },\r\n            '.invisible-on-pc': { visibility: 'visible' },\r\n        },\r\n        '@media screen and (min-width: 1200px)': {\r\n            '.hide-on-pc': { display: 'none !important' },\r\n        },\r\n        '@media screen and (max-width: 1200px)': {\r\n            '.show-on-pc': { display: 'none !important' },\r\n        },\r\n        '.VictoryContainer svg': { height: '100% !important' },\r\n        '.box-shadow-none': { boxShadow: 'none !important' },\r\n        '.circle-44': { height: '44px !important', width: '44px !important' },\r\n        '.circle-32': {\r\n            height: '32px !important',\r\n            minHeight: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.circle-32 .MuiFab-root': { minHeight: '32px !important' },\r\n        '.circle-32 .MuiIcon-root': { fontSize: '13px !important' },\r\n        '.show-on-mobile': { display: 'none !important' },\r\n        '.invisible-on-pc': { visibility: 'hidden' },\r\n        '.highlight-js pre': { whiteSpace: 'pre-line' },\r\n        '.cursor-pointer': {\r\n            cursor: 'pointer',\r\n        },\r\n        '.cursor-move': {\r\n            cursor: 'move',\r\n        },\r\n        '.avatar': {\r\n            height: '32px !important',\r\n            width: '32px !important',\r\n        },\r\n        '.face-group .avatar:not(:first-child)': {\r\n            marginLeft: '-0.875rem !important',\r\n        },\r\n        '.opacity-1': {\r\n            opacity: 1,\r\n        },\r\n        '.datatimeInputCls': {\r\n            opacity: 1,\r\n        },\r\n    },\r\n}))\r\n","import * as React from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useEffect } from 'react';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n        padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n        padding: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function BuConfirmationBox({ isBUModified, updateBUModifiedData }) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n        // Prevent closing on backdrop click or escape key\r\n        if (reason === 'backdropClick' || reason === 'escapeKeyDown') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n        updateBUModifiedData();\r\n    };\r\n\r\n    useEffect(() => {\r\n        setOpen(isBUModified);\r\n    }, [isBUModified]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <BootstrapDialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n            >\r\n                <DialogTitle sx={{ m: 0, p: 2 }} id=\"customized-dialog-title\">\r\n                    Organization Credentials Updated\r\n                </DialogTitle>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={handleClose}\r\n                    sx={(theme) => ({\r\n                        position: 'absolute',\r\n                        right: 8,\r\n                        top: 8,\r\n                        color: theme.palette.grey[500],\r\n                    })}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                <DialogContent dividers>\r\n                    <Typography gutterBottom>\r\n                        The credentials for the organization have been modified. To ensure you have the latest data,\r\n                        <br></br>\r\n                        <br></br>\r\n                        please click \"Okay\" to proceed.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose}>\r\n                        Okay\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { TemplateMappingService } from \"./../../services/templateMappingService\";\r\nimport { UserService } from \"services/usersService\";\r\nimport Loader from 'app/components/Loader';\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport SomethingWrong from \"app/components/McoPages/PageError\";\r\nimport BuConfirmationBox from \"app/components/BuConfirmationBox\";\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nconst OracleSettingsContext = createContext({\r\n    isLoading: false,\r\n    userDetails: null,\r\n    bussinessUnit: null,\r\n    bussinessUnitLists: null,\r\n    templatesInfo: [],\r\n    allTemplatesInfo: [],\r\n    mappingTemplatesInfo: [],\r\n    refreshData: true,\r\n    updateBussinessUnit: () => null,\r\n    updateBussinessUnitLists: () => null,\r\n    updateTemplateLists: () => [],\r\n    updateAllTemplate: () => [],\r\n    updateMappingTemplatesInfo: () => [],\r\n    updateRefreshData: () => null,\r\n})\r\n\r\nexport const OracleMappingsProvider = ({ children }) => {\r\n    const { authState, authService } = useOktaAuth();\r\n    const {\r\n        globalBussinessUnit,\r\n    } = useSelector((state) => ({\r\n        globalBussinessUnit: state.globalBUandInstance.bu,\r\n    }), shallowEqual);\r\n\r\n    // const tempService = new templateService();\r\n    const tempMapService = new TemplateMappingService();\r\n    const userService = new UserService();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [isPageHavingError, setIsPageHavingError] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [bussinessUnit, setBussinessUnit] = useState(localStorage.getItem('bussinessUnit') || null);\r\n    const [isBUModified, setIsBUModified] = useState(false);\r\n    const [bussinessUnitLists, setBussinessUnitLists] = useState(null);\r\n    const [templatesInfo, setTemplatesInfo] = useState([]);\r\n    const [allTemplatesInfo, setAllTemplatesInfo] = useState([]);\r\n    const [mappingTemplatesInfo, setMappingTemplatesInfo] = useState([]);\r\n    const [refreshData, setRefreshData] = useState(true);\r\n\r\n    const updateBussinessUnit = (values) => {\r\n        setBussinessUnit(values);\r\n    };\r\n    const updateBussinessUnitLists = (values) => {\r\n        setBussinessUnitLists(values);\r\n    };\r\n    const updateTemplateLists = (values) => {\r\n        setTemplatesInfo(values);\r\n        setAllTemplatesInfo(values);\r\n    };\r\n    const updateAllTemplate = (values) => {\r\n        setAllTemplatesInfo(values);\r\n        setTemplatesInfo(values);\r\n    };\r\n    const updateMappingTemplatesInfo = (values) => {\r\n        setMappingTemplatesInfo(values);\r\n    };\r\n    const updateRefreshData = (values) => {\r\n        setRefreshData(values);\r\n    };\r\n\r\n    const updateBUModifiedData = () => {\r\n        if (location?.pathname?.includes(\"mcodetail\")) {\r\n            window.location.reload();\r\n        } else {\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n            if (bu) {\r\n                setBussinessUnit(bu);\r\n            }\r\n        }\r\n        setIsBUModified(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userDetails && mappingTemplatesInfo?.length <= 1) {\r\n            if (authState && authState.isAuthenticated) {\r\n                // tempService.getAllTemplateList().then((result) => {\r\n                //     updateAllTemplate(result.template);\r\n                // });\r\n                updateRefreshData(true);\r\n                tempMapService.getAlltemplateMappings().then((result) => {\r\n                    updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n                    updateTemplateLists(result?.data?.templateList);\r\n                    updateBussinessUnitLists(result?.data?.bulist);\r\n\r\n                    updateAllTemplate(result?.data?.templateList);\r\n\r\n                    updateRefreshData(false);\r\n                });\r\n            }\r\n        }\r\n        if (authState && authState.isAuthenticated && authService) {\r\n            authService.getAccessToken().then((accessToken) => {\r\n                console.log('Access Token: ', accessToken);\r\n            });\r\n        }\r\n    }, [authState, authService, userDetails]);\r\n\r\n    useEffect(() => {\r\n        if (authState?.isAuthenticated && !userDetails) {\r\n            setIsLoading(true);\r\n            userService.validateUser().then((result) => {\r\n                if (result.status === 'error') {\r\n                    navigate(\"/accessDenied\", { state: { userInfo: result?.data[0], NotAuthorized: true } });\r\n                } else {\r\n                    if (result?.data?.length) {\r\n                        setUserDetails(result?.data[0]);\r\n                        setIsLoading(false);\r\n                    }\r\n                }\r\n            }).catch(err => {\r\n                setIsLoading(false);\r\n                setIsPageHavingError(true);\r\n            });\r\n        }\r\n    }, [authState]);\r\n\r\n    useEffect(() => {\r\n        console.log(globalBussinessUnit, \"=====globalBussinessUnit\");\r\n\r\n        const checkLocalStorage = (event) => {\r\n            // for avoid the check for mcodetails screen\r\n            if (location?.pathname?.includes(\"mcodetail\")) {\r\n                return false;\r\n            }\r\n            const bu = localStorage.getItem('bussinessUnit');\r\n\r\n            console.log(bussinessUnit, \"===localStorageBusinessUnit\");\r\n            console.log(bu, \"===localStorageBusinessUnit 2\");\r\n            // if (event.key === 'bussinessUnit') { // Check if the specific key you're interested in changed\r\n            //     return;\r\n            // }\r\n            if (bu && bu !== bussinessUnit) {\r\n                // setBussinessUnit(bu);\r\n                setIsBUModified(true);\r\n                console.log(bu, \"===localStorageBusinessUnit 3\");\r\n            }\r\n        };\r\n\r\n        window.addEventListener('storage', checkLocalStorage);\r\n        // checkLocalStorage(); // Check initially\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', checkLocalStorage);\r\n        };\r\n    });\r\n\r\n\r\n    return (\r\n        <OracleSettingsContext.Provider\r\n            value={{\r\n                isLoading,\r\n                userDetails,\r\n                bussinessUnit,\r\n                bussinessUnitLists,\r\n                templatesInfo,\r\n                allTemplatesInfo,\r\n                mappingTemplatesInfo,\r\n                refreshData,\r\n                updateBussinessUnit,\r\n                updateBussinessUnitLists,\r\n                updateTemplateLists,\r\n                updateAllTemplate,\r\n                updateMappingTemplatesInfo,\r\n                updateRefreshData\r\n            }}\r\n        >\r\n            {\r\n                (!authState?.isAuthenticated) ? (children) : (\r\n                    <>\r\n                        {\r\n                            (!isPageHavingError) ? (\r\n                                <>\r\n                                    {(userDetails && !isLoading) ? children : (\r\n                                        <div style={{ textAlign: \"center\", position: \"absolute\", width: \"100%\", top: \"50%\" }}>\r\n                                            <CircularProgress />\r\n                                        </div>\r\n                                    )}\r\n                                </>\r\n                            ) : (<SomethingWrong />)\r\n                        }\r\n                    </>\r\n                )\r\n            }\r\n            {\r\n                (isBUModified) ? (<>\r\n                    <BuConfirmationBox isBUModified={isBUModified} updateBUModifiedData={updateBUModifiedData} />\r\n                </>) : (null)\r\n            }\r\n        </OracleSettingsContext.Provider>\r\n    );\r\n};\r\n\r\nexport default OracleSettingsContext;","import { themeShadows } from './themeColors';\r\n\r\nexport const components = {\r\n  MuiTable: {\r\n    styleOverrides: {\r\n      root: {\r\n        tableLayout: 'fixed',\r\n      },\r\n    },\r\n  },\r\n  MuiTableCell: {\r\n    styleOverrides: {\r\n      head: {\r\n        fontSize: '13px',\r\n        padding: '12px 0px',\r\n      },\r\n      root: {\r\n        fontSize: '14px',\r\n        whiteSpace: 'pre-wrap',\r\n        wordBreak: 'break-all',\r\n        padding: '12px 8px 12px 0px',\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableSelectCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 12,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableHeadCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 16,\r\n      },\r\n    },\r\n  },\r\n  MUIDataTableBodyCell: {\r\n    styleOverrides: {\r\n      root: {\r\n        paddingLeft: 8,\r\n      },\r\n    },\r\n  },\r\n  MuiButton: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '12px',\r\n        textTransform: 'none',\r\n        fontWeight: '400',\r\n      },\r\n      contained: {\r\n        boxShadow: themeShadows[8],\r\n      },\r\n    },\r\n  },\r\n  MuiCssBaseline: {\r\n    styleOverrides: {\r\n      '*': {\r\n        boxSizing: 'border-box',\r\n      },\r\n      html: {\r\n        MozOsxFontSmoothing: 'grayscale',\r\n        WebkitFontSmoothing: 'antialiased',\r\n        height: '100%',\r\n        width: '100%',\r\n      },\r\n      body: {\r\n        height: '100%',\r\n      },\r\n      a: {\r\n        textDecoration: 'none',\r\n        color: 'inherit',\r\n      },\r\n      '#root': {\r\n        height: '100%',\r\n      },\r\n      '#nprogress .bar': {\r\n        zIndex: '2000 !important',\r\n      },\r\n    },\r\n  },\r\n  MuiFab: {\r\n    styleOverrides: {\r\n      root: {\r\n        boxShadow: themeShadows[12],\r\n      },\r\n    },\r\n  },\r\n  MuiAccordion: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiTooltip: {\r\n    styleOverrides: {\r\n      tooltip: {\r\n        fontSize: '11px',\r\n      },\r\n    },\r\n  },\r\n  MuiMenuItem: {\r\n    styleOverrides: {\r\n      root: {\r\n        fontSize: '0.875rem',\r\n      },\r\n    },\r\n  },\r\n  MuiExpansionPanel: {\r\n    styleOverrides: {\r\n      root: {\r\n        '&:before': {\r\n          display: 'none',\r\n        },\r\n      },\r\n    },\r\n  },\r\n  MuiCard: {\r\n    styleOverrides: {\r\n      root: {\r\n        borderRadius: '8px',\r\n        boxShadow:\r\n          '0px 3px 3px -2px rgb(0 0 0 / 6%), 0px 3px 4px 0px rgb(0 0 0 / 4%), 0px 1px 8px 0px rgb(0 0 0 / 4%) !important',\r\n      },\r\n    },\r\n  },\r\n};\r\n","import { red } from '@mui/material/colors';\r\nimport { components } from './components';\r\n\r\nconst themeOptions = {\r\n  typography: {\r\n    fontSize: 14,\r\n    body1: { fontSize: '14px' },\r\n  },\r\n\r\n  status: { danger: red[500] },\r\n  components: { ...components },\r\n};\r\n\r\nexport default themeOptions;\r\n","import { createTheme } from '@mui/material';\r\nimport { forEach, merge } from 'lodash';\r\nimport { themeColors } from './themeColors';\r\nimport themeOptions from './themeOptions';\r\n\r\nfunction createMatxThemes() {\r\n  let themes = {};\r\n\r\n  forEach(themeColors, (value, key) => {\r\n    themes[key] = createTheme(merge({}, themeOptions, value));\r\n  });\r\n\r\n  return themes;\r\n}\r\nexport const themes = createMatxThemes();\r\n","import { themes } from '../MatxTheme/initThemes';\r\nimport layout1Settings from './Layout1/Layout1Settings';\r\n\r\n// UPDATE BELOW CODE\r\nexport const MatxLayoutSettings = {\r\n  activeLayout: 'layout1', // layout1, layout2\r\n  activeTheme: 'blue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  perfectScrollbar: true,\r\n\r\n  themes: themes,\r\n  layout1Settings, // open Layout1/Layout1Settings.js\r\n\r\n  secondarySidebar: {\r\n    show: true,\r\n    open: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n  // Footer options\r\n  footer: {\r\n    show: true,\r\n    fixed: false,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n","const Layout1Settings = {\r\n  leftSidebar: {\r\n    show: true,\r\n    mode: 'full', // full, close, compact, mobile,\r\n    theme: 'slateDark1', // View all valid theme colors inside MatxTheme/themeColors.js\r\n    bgimgurl: '/assets/images/sidebar/sidebar-bg-dark.jpg',\r\n  },\r\n  topbar: {\r\n    show: true,\r\n    fixed: true,\r\n    theme: 'whiteBlue', // View all valid theme colors inside MatxTheme/themeColors.js\r\n  },\r\n};\r\n\r\nexport default Layout1Settings;\r\n","import React, { createContext, useState, useMemo } from 'react'\r\nimport { merge } from 'lodash'\r\nimport { MatxLayoutSettings } from 'app/components/MatxLayout/settings'\r\n\r\nconst SettingsContext = createContext({\r\n    settings: MatxLayoutSettings,\r\n    updateSettings: () => { },\r\n})\r\n\r\nexport const SettingsProvider = ({ settings, children }) => {\r\n    const [currentSettings, setCurrentSettings] = useState(\r\n        settings || MatxLayoutSettings\r\n    )\r\n\r\n    const handleUpdateSettings = (update = {}) => {\r\n        // Fixed typo from \"marged\" to \"merged\"\r\n        const merged = merge({}, currentSettings, update);\r\n        setCurrentSettings(merged);\r\n    }\r\n\r\n    // Use useMemo to ensure the context value object is stable unless currentSettings changes\r\n    const contextValue = useMemo(() => ({\r\n        settings: currentSettings,\r\n        updateSettings: handleUpdateSettings,\r\n    }), [currentSettings]);\r\n\r\n    return (\r\n        <SettingsContext.Provider value={contextValue}>\r\n            {children}\r\n        </SettingsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SettingsContext\r\n","import { useContext } from 'react';\r\nimport OracleSettingsContext from 'app/contexts/OracleSettingsContext';\r\n\r\nconst useOracleSettings = () => useContext(OracleSettingsContext)\r\n\r\nexport default useOracleSettings\r\n","import { useContext } from 'react'\r\nimport SettingsContext from 'app/contexts/SettingsContext'\r\n\r\nconst useSettings = () => useContext(SettingsContext)\r\n\r\nexport default useSettings\r\n","import {\r\n  GET_MCOLIST,\r\n  GET_MCOINFO,\r\n  GET_UPDATEMCODETAILS,\r\n  GET_UPDATE_MCO_RELATED_VALUES,\r\n  RESET_VALUES,\r\n  SET_ALL_CA_MCO_DETAILS,\r\n  SET_UPDATED_ROUTES\r\n} from '../actions/MCODetailsAction';\r\n\r\nconst initialState = {\r\n  isPageHavingIssue: false,\r\n  stepData: 'Create',\r\n  RSMEList: {},\r\n  RMEList: {},\r\n  responseData: {\r\n    itemERPStatus: [],\r\n  },\r\n  affectedPartsData: [],\r\n  exportAffectedPartsData: [],\r\n  currentMcoDetails: null,\r\n  isPropertyFormEdited: false,\r\n  isMaterialFormEdited: false,\r\n  selectedRowData: {},\r\n  selectedRowFormdata: {},\r\n  selectedRowIndex: null,\r\n  templates: [],\r\n  source: [],\r\n  plants: [],\r\n  materialData: [],\r\n  masterData: {},\r\n  templateMappingsInfo: [],\r\n  ORGAllowedTemplateMappings: [],\r\n  previousMcosDetails: [],\r\n  // eachPartMRDetails: {},\r\n  mrDetails: [],\r\n  massUpdateChanges: {},\r\n  lifeCycleData: {},\r\n  systemSetingsDetail: [],\r\n  eachTemplateOptions: {},\r\n  bulkPartTemplates: [],\r\n  caRelatedEachMCODetails: {},\r\n  allCaMCODetails: {},\r\n  mcoSearchLists: {},\r\n  showMaterialForm: false,\r\n  parentMCODetails: {},\r\n  caLifeCycleData: {},\r\n};\r\n\r\nconst MCODetailsReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_UPDATED_ROUTES:\r\n      return {\r\n        ...state,\r\n        updatedRoutes: action.payload,\r\n    };\r\n    case GET_MCOLIST: {\r\n      return { ...action.payload };\r\n    }\r\n    case GET_MCOINFO: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATEMCODETAILS: {\r\n      return {\r\n        ...state,\r\n        responseData: {\r\n          ...state.responseData,\r\n          ...action.payload\r\n        },\r\n      };\r\n    }\r\n    case GET_UPDATE_MCO_RELATED_VALUES: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case SET_ALL_CA_MCO_DETAILS: {\r\n      return {\r\n        ...state,\r\n        allCaMCODetails: action.payload, // Update the Redux state\r\n      };\r\n    }\r\n    case RESET_VALUES:\r\n      return {\r\n        // Reset to initial state\r\n        ...initialState,\r\n        updatedRoutes: state.updatedRoutes,\r\n      };\r\n  \r\n      \r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default MCODetailsReducer;\r\n","import {\r\n  GET_CURRENT_INSTANCE,\r\n} from '../actions/GlobalDataAction';\r\n\r\nimport { getBasename } from \"app/utils/baseurl\";\r\n\r\nconst baseValues = getBasename();\r\n\r\nconst initialState = {\r\n  segment: baseValues?.segment || {},\r\n  instanceType: baseValues?.instanceType || {},\r\n};\r\n\r\nconst GlobalDataReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CURRENT_INSTANCE: {\r\n      return { ...state };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalDataReducer;\r\n","import {\r\n  GET_BU_AND_INSTANSE,\r\n} from '../actions/GlobalBUandInstanceAction';\r\n\r\nconst initialState = {\r\n  bu: '',\r\n  instance: '',\r\n  systemName: \"\"\r\n};\r\n\r\nconst GlobalBUandInstanceReducer = function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BU_AND_INSTANSE: {\r\n      return { ...state, ...action.payload };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default GlobalBUandInstanceReducer;","import { combineReducers } from 'redux';\r\n// import NavigationReducer from './NavigationReducer';\r\n// import NotificationReducer from './NotificationReducer';\r\nimport MCODetailsReducer from './MCODetailsReducer';\r\nimport GlobalDataReducer from './GlobalDataReducer';\r\nimport GlobalBUandInstanceReducer from './GlobalBUandInstanceReducer';\r\n\r\nconst RootReducer = combineReducers({\r\n  // notifications: NotificationReducer,\r\n  // navigations: NavigationReducer,\r\n  mcoDetails: MCODetailsReducer,\r\n  globalData: GlobalDataReducer,\r\n  globalBUandInstance: GlobalBUandInstanceReducer\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport RootReducer from './reducers/RootReducer';\r\n\r\nconst initialState = {};\r\nconst middlewares = [thunk];\r\nlet devtools = (x) => x;\r\n\r\nif (\r\n  process &&\r\n  process.env.NODE_ENV !== 'production' &&\r\n  process.browser &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n) {\r\n  devtools = window.__REDUX_DEVTOOLS_EXTENSION__();\r\n}\r\n\r\nexport const Store = createStore(\r\n  RootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middlewares), devtools)\r\n);\r\n","export const GET_BU_AND_INSTANSE = 'GET_BU_AND_INSTANSE';\r\n\r\nexport const updateGlobalBUandInstance = (data) => async (dispatch) => {\r\n    try {\r\n      console.log(data, 'updateGlobalBUandInstance data')\r\n      dispatch({\r\n        type: GET_BU_AND_INSTANSE,\r\n        payload: data,\r\n      })\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  };","import { MCOService } from '../../../services/mcoService';\r\n\r\nexport const mcoService = new MCOService();\r\n\r\nexport const GET_MCOLIST = 'GET_MCOLIST';\r\nexport const GET_MCOINFO = 'GET_MCOINFO';\r\nexport const GET_UPDATEMCODETAILS = 'GET_UPDATEMCODETAILS';\r\nexport const GET_UPDATE_MCO_RELATED_VALUES = 'GET_UPDATE_MCO_RELATED_VALUES';\r\nexport const SET_ALL_CA_MCO_DETAILS = 'SET_ALL_CA_MCO_DETAILS';\r\nexport const SET_UPDATED_ROUTES = \"SET_UPDATED_ROUTES\";\r\n\r\nexport const RESET_VALUES = 'RESET_VALUES';\r\n\r\nexport const setUpdatedRoutes = (routes) => ({\r\n  type: SET_UPDATED_ROUTES,\r\n  payload: routes,\r\n});\r\n\r\nexport const getMCOLists = (data) => async (dispatch) => {\r\n  try {\r\n    // await mcoService.searchMCO(search).then((result) => {\r\n    await dispatch({\r\n      type: GET_MCOLIST,\r\n      payload: data,\r\n    })\r\n    // })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateResponseData = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_MCOINFO,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const updateMcoDetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATEMCODETAILS,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const update_generalValues = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: GET_UPDATE_MCO_RELATED_VALUES,\r\n      payload: data,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\nexport const resetValues = () => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: RESET_VALUES,\r\n    })\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n};\r\n\r\nexport const setAllCaMCODetails = (data) => async (dispatch) => {\r\n  try {\r\n    await dispatch({\r\n      type: SET_ALL_CA_MCO_DETAILS,\r\n      payload: data,\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","//import React from \"react\";\r\n\r\nexport const getBasename = () => {\r\n    const path = window.location.pathname;\r\n    let currentInstance = \"\";\r\n    if (path === \"/\") {\r\n        return {\r\n            segment: path,\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    if (path.includes(\"login\")) {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n\r\n    let pathArray = path.split('/');\r\n    pathArray = pathArray.filter(fitem => fitem !== \"\");\r\n\r\n    let returnVal = '/';\r\n    if (pathArray.length > 1) {\r\n        if (pathArray[1] === \"Cloud\" || pathArray[1] === \"onPrem\") {\r\n            if (pathArray[0] === \"Dev\") {\r\n                currentInstance = pathArray[1];\r\n                returnVal = pathArray[0] + \"/\";\r\n            }\r\n        }\r\n    } else if (pathArray.length === 1 && pathArray[0] === \"Dev\") {\r\n        return {\r\n            segment: \"/\",\r\n            instanceType: currentInstance,\r\n        };\r\n    }\r\n    return {\r\n        segment: returnVal,\r\n        instanceType: currentInstance,\r\n    }\r\n};","import jwt from 'jwt-simple';\r\nimport { Buffer } from 'buffer';\r\n\r\nexport const getToken = () => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const getToken = window.localStorage.getItem('okta-token-storage')\r\n            const sessionToken = (getToken) ? JSON.parse(getToken)?.accessToken?.accessToken : null;\r\n            resolve(sessionToken);\r\n        }, 500);\r\n    });\r\n}\r\n\r\nexport const getOKTAAccessKey = () => {\r\n    const getToken = window.localStorage.getItem('okta-token-storage');\r\n    if (!getToken) {\r\n        console.error('Token storage item not found');\r\n        return null;\r\n    }\r\n\r\n    const parsedToken = JSON.parse(getToken);\r\n    const accessToken = parsedToken?.accessToken?.accessToken;\r\n    const curruid = parsedToken?.accessToken?.claims?.uid;\r\n    const userinfo = parsedToken?.idToken?.claims;\r\n\r\n    if (!accessToken || !userinfo) {\r\n        console.error('Access token or userinfo not found in token storage item');\r\n        return null;\r\n    }\r\n\r\n    const payload = {\r\n        exp: Math.floor(Date.now() / 1000) + (60 * 60), // expires in 1 hour\r\n        data: {\r\n            accessToken: accessToken,\r\n            userinfo: {\r\n                username: userinfo?.name,\r\n                email: userinfo?.email,\r\n                uid: curruid\r\n            }\r\n        },\r\n    };\r\n\r\n    const secret = 'EMRPRoDucTDaTa';\r\n    let token = null;\r\n    try {\r\n        window.Buffer = Buffer;\r\n        token = jwt.encode(payload, secret, 'HS512')\r\n    } catch (error) {\r\n        console.error('Error encoding JWT:', error);\r\n        return null;\r\n    }\r\n    return token;\r\n}","export const topBarHeight = 64\r\nexport const sideNavWidth = 260\r\nexport const navbarHeight = 60\r\nexport const sidenavCompactWidth = 80\r\nexport const containedLayoutWidth = 1200","\r\nexport const formatMessage = (template, replaceArray) => {\r\n    let formattedMessage = template;\r\n    // Replace placeholders in the message template\r\n    replaceArray.forEach((value, index) => {\r\n        const placeholder = new RegExp(`\\\\{${index}\\\\}`, 'g');\r\n        formattedMessage = formattedMessage?.replace(placeholder, value);\r\n    });\r\n    return formattedMessage;\r\n}\r\n\r\nexport const sortDataByKey = (data, key) => {\r\n  if (!Array.isArray(data)) {\r\n    console.error('Invalid data: Expected an array');\r\n    return [];\r\n  }\r\n\r\n  return data.sort((a, b) => {\r\n    const valueA = a[key] !== undefined ? a[key].toString().toLowerCase() : '';\r\n    const valueB = b[key] !== undefined ? b[key].toString().toLowerCase() : '';\r\n\r\n    if (!isNaN(valueA) && !isNaN(valueB)) {\r\n      return parseFloat(valueA) - parseFloat(valueB);\r\n    }\r\n\r\n    if (valueA < valueB) return -1;\r\n    if (valueA > valueB) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortDataByKeyAllowableOrgTemplates = (data, key) => {\r\n  return data.sort((a, b) => {\r\n    const valueA = a.details[key] || '';\r\n    const valueB = b.details[key] || '';\r\n    return valueA.toLowerCase().localeCompare(valueB.toLowerCase());\r\n  });\r\n}; \r\n\r\nexport const sortByLabel = (data) => {\r\n  return data.sort((a, b) => {\r\n    const labelA = a.label ? a.label.toLowerCase() : '';\r\n    const labelB = b.label ? b.label.toLowerCase() : '';\r\n    return labelA.localeCompare(labelB);\r\n  });\r\n};","import { differenceInSeconds } from 'date-fns';\r\n\r\nexport const convertHexToRGB = (hex) => {\r\n  // check if it's a rgba\r\n  if (hex.match('rgba')) {\r\n    let triplet = hex.slice(5).split(',').slice(0, -1).join(',');\r\n    return triplet;\r\n  }\r\n\r\n  let c;\r\n  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\r\n    c = hex.substring(1).split('');\r\n    if (c.length === 3) {\r\n      c = [c[0], c[0], c[1], c[1], c[2], c[2]];\r\n    }\r\n    c = '0x' + c.join('');\r\n\r\n    return [(c >> 16) & 255, (c >> 8) & 255, c & 255].join(',');\r\n  }\r\n};\r\n\r\nexport function debounce(func, wait, immediate) {\r\n  let timeout;\r\n  return function () {\r\n    let context = this,\r\n      args = arguments;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    }, wait);\r\n    if (immediate && !timeout) func.apply(context, args);\r\n  };\r\n}\r\n\r\nexport function isMobile() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 767px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isMdScreen() {\r\n  if (window) {\r\n    return window.matchMedia(`(max-width: 1199px)`).matches;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction currentYPosition(elm) {\r\n  if (!window && !elm) {\r\n    return;\r\n  }\r\n  if (elm) return elm.scrollTop;\r\n  // Firefox, Chrome, Opera, Safari\r\n  if (window.pageYOffset) return window.pageYOffset;\r\n  // Internet Explorer 6 - standards mode\r\n  if (document.documentElement && document.documentElement.scrollTop)\r\n    return document.documentElement.scrollTop;\r\n  // Internet Explorer 6, 7 and 8\r\n  if (document.body.scrollTop) return document.body.scrollTop;\r\n  return 0;\r\n}\r\n\r\nfunction elmYPosition(elm) {\r\n  let y = elm.offsetTop;\r\n  let node = elm;\r\n  while (node.offsetParent && node.offsetParent !== document.body) {\r\n    node = node.offsetParent;\r\n    y += node.offsetTop;\r\n  }\r\n  return y;\r\n}\r\n\r\nexport function scrollTo(scrollableElement, elmID) {\r\n  let elm = document.getElementById(elmID);\r\n\r\n  if (!elmID || !elm) {\r\n    return;\r\n  }\r\n\r\n  let startY = currentYPosition(scrollableElement);\r\n  let stopY = elmYPosition(elm);\r\n\r\n  let distance = stopY > startY ? stopY - startY : startY - stopY;\r\n  if (distance < 100) {\r\n    scrollTo(0, stopY);\r\n    return;\r\n  }\r\n  let speed = Math.round(distance / 50);\r\n  if (speed >= 20) speed = 20;\r\n  let step = Math.round(distance / 25);\r\n  let leapY = stopY > startY ? startY + step : startY - step;\r\n  let timer = 0;\r\n  if (stopY > startY) {\r\n    for (let i = startY; i < stopY; i += step) {\r\n      setTimeout(\r\n        (function (leapY) {\r\n          return () => {\r\n            scrollableElement.scrollTo(0, leapY);\r\n          };\r\n        })(leapY),\r\n        timer * speed\r\n      );\r\n      leapY += step;\r\n      if (leapY > stopY) leapY = stopY;\r\n      timer++;\r\n    }\r\n    return;\r\n  }\r\n  for (let i = startY; i > stopY; i -= step) {\r\n    setTimeout(\r\n      (function (leapY) {\r\n        return () => {\r\n          scrollableElement.scrollTo(0, leapY);\r\n        };\r\n      })(leapY),\r\n      timer * speed\r\n    );\r\n    leapY -= step;\r\n    if (leapY < stopY) leapY = stopY;\r\n    timer++;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function getTimeDifference(date) {\r\n  let difference = differenceInSeconds(new Date(), date);\r\n\r\n  if (difference < 60) return `${Math.floor(difference)} sec`;\r\n  else if (difference < 3600) return `${Math.floor(difference / 60)} min`;\r\n  else if (difference < 86400) return `${Math.floor(difference / 3660)} h`;\r\n  else if (difference < 86400 * 30) return `${Math.floor(difference / 86400)} d`;\r\n  else if (difference < 86400 * 30 * 12) return `${Math.floor(difference / 86400 / 30)} mon`;\r\n  else return `${(difference / 86400 / 30 / 12).toFixed(1)} y`;\r\n}\r\n\r\nexport function generateRandomId() {\r\n  const crypto = window.crypto || window.msCrypto;\r\n  let array = new Uint32Array(1);\r\n  crypto.getRandomValues(array); // Compliant for security-sensitive use cases\r\n  const uid = array[0];\r\n  return uid;\r\n}\r\n\r\nexport function getQueryParam(prop) {\r\n  let params = {};\r\n  let search = decodeURIComponent(\r\n    window.location.href.slice(window.location.href.indexOf('?') + 1)\r\n  );\r\n  let definitions = search.split('&');\r\n  definitions.forEach(function (val, key) {\r\n    let parts = val.split('=', 2);\r\n    params[parts[0]] = parts[1];\r\n  });\r\n  return prop && prop in params ? params[prop] : params;\r\n}\r\n\r\nexport function classList(classes) {\r\n  return Object.entries(classes)\r\n    .filter((entry) => entry[1])\r\n    .map((entry) => entry[0])\r\n    .join(' ');\r\n}\r\n\r\nexport const flat = (array) => {\r\n  let result = [];\r\n  array.forEach(function (a) {\r\n    result.push(a);\r\n    if (Array.isArray(a.children)) {\r\n      result = result.concat(flat(a.children));\r\n    }\r\n  });\r\n  return result;\r\n};\r\n// Sorted latest data get passed to bulkExport function\r\nexport const sortExportData = (data, sortInfo) => {\r\n  if (!sortInfo || !sortInfo.id) {\r\n    // If sortInfo is null or does not have an id, return original order\r\n    return data;\r\n  }\r\n\r\n  return [...data].sort((a, b) => {\r\n    const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n    const aValue = a[field]?.toLowerCase() || '';\r\n    const bValue = b[field]?.toLowerCase() || '';\r\n    if (aValue < bValue) {\r\n      return sortInfo.dir === 1 ? -1 : 1;\r\n    }\r\n    if (aValue > bValue) {\r\n      return sortInfo.dir === 1 ? 1 : -1;\r\n    }\r\n    return 0;\r\n  });\r\n};\r\n\r\nexport const sortInsideRowData = (data) => {\r\n  let sortedNameDivs = [];\r\n  let sortedMvoTemplateToDivs = [];\r\n\r\n  return data.map(item => {\r\n    if (item.name) {\r\n      const nameDivs = item.name.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedNameDivs = nameDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    if (item.MVO_TEMPLATE_TO) {\r\n      const mvoTemplateToDivs = item.MVO_TEMPLATE_TO.match(/<div>.*?<\\/div>/g) || [];\r\n      sortedMvoTemplateToDivs = mvoTemplateToDivs.sort((a, b) => {\r\n        const textA = a.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        const textB = b.replace(/<div>|<\\/div>/g, '').toUpperCase();\r\n        return textA.localeCompare(textB);\r\n      });\r\n    }\r\n\r\n    return {\r\n      ...item,\r\n      name: sortedNameDivs.join(''),\r\n      MVO_TEMPLATE_TO: sortedMvoTemplateToDivs.join('')\r\n    };\r\n  });\r\n};\r\n\r\nexport function sortAndReorderData(filterData) {\r\n  // Function to sort object values alphabetically (excluding \"Entity\")\r\n  function sortObjectValues(obj) {\r\n      return {\r\n          Entity: obj.Entity,\r\n          ...Object.fromEntries(\r\n              Object.entries(obj)\r\n                  .filter(([key]) => key !== \"Entity\")\r\n                  .sort((a, b) => a[1].localeCompare(b[1])) // Sort values alphabetically\r\n          )\r\n      };\r\n  }\r\n\r\n  // Find the \"PlantGroup\" object without removing it\r\n  const plantGroup = filterData.find(item => item.Entity === \"PlantGroup\");\r\n\r\n  // Sort the \"PlantGroup\" object (if found)\r\n  const sortedPlantGroup = plantGroup ? sortObjectValues(plantGroup) : null;\r\n\r\n  // Sort the rest of the objects based on \"Entity\" alphabetically, excluding \"PlantGroup\"\r\n  const sortedOtherEntities = filterData\r\n      .filter(item => item.Entity !== \"PlantGroup\") // Keep everything except \"PlantGroup\"\r\n      .map(sortObjectValues)\r\n      .sort((a, b) => a.Entity.localeCompare(b.Entity));\r\n\r\n  // Return the final array with \"PlantGroup\" on top (if exists)\r\n  return sortedPlantGroup ? [sortedPlantGroup, ...sortedOtherEntities] : sortedOtherEntities;\r\n}\r\n\r\nexport const caseInsensitiveSort = (a, b) => {\r\n  return a.localeCompare(b, undefined, { sensitivity: 'base' });\r\n};","import { sortByLabel } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nexport const BUOptions = [\r\n  { value: \"Micro Motion\", label: \"Micro Motion\" },\r\n  { value: \"Daniel\", label: \"Daniel\" },\r\n  { value: \"EPM brazil\", label: \"EPM brazil\" },\r\n  { value: \"Poly Oil\", label: \"Poly Oil\" },\r\n  { value: \"Rosemount Flow\", label: \"Rosemount Flow\" },\r\n  { value: \"Roxar\", label: \"Roxar\" },\r\n  { value: \"Rosemount Measurement\", label: \"Rosemount Measurement\" },\r\n  { value: \"Flow Assurance\", label: \"Flow Assurance\" },\r\n  { value: \"Flow Systems\", label: \"Flow Systems\" },\r\n  { value: \"Ultrasonic\", label: \"Ultrasonic\" },\r\n  { value: \"Metran Flow\", label: \"Metran Flow\" },\r\n  { value: \"Flow Control Valves\", label: \"Flow Control Valves\" },\r\n  { value: \"Biffi Morin\", label: \"Biffi Morin\" },\r\n  { value: \"DP Flow\", label: \"DP Flow\" },\r\n  { value: \"Magtech\", label: \"Magtech\" },\r\n  { value: \"Keystone Butterfly Valves\", label: \"Keystone Butterfly Valves\" },\r\n];\r\nexport const bomusageOptions = [\r\n  { value: \"1\", label: \"Production\" },\r\n  { value: \"2\", label: \"Engineering/Design\" },\r\n  { value: \"3\", label: \"Universal\" },\r\n  { value: \"4\", label: \"Plant maintenance\" },\r\n  { value: \"5\", label: \"Sales and Distribution\" },\r\n  { value: \"6\", label: \"Costing\" },\r\n  { value: \"7\", label: \"Empties\" },\r\n  { value: \"8\", label: \"Stability study\" },\r\n  { value: \"M\", label: \"External Munitions Display \" },\r\n  { value: \"Z\", label: \"Planning BOM\" },\r\n];\r\nexport const ERPtypeOptions = [\r\n  { value: \"ORACLE\", label: \"ORACLE\" },\r\n  { value: \"JDE\", label: \"JDE\" },\r\n  { value: \"SAP\", label: \"SAP\" },\r\n];\r\n\r\nexport const instanceOptions = sortByLabel([\r\n  { value: \"BETSYD10\", label: \"betsyD10\" },\r\n  { value: \"D01\", label: \"D01\" },\r\n  { value: \"D03\", label: \"D03\" },\r\n  { value: \"ED1\", label: \"ED1\" },\r\n  { value: \"EP1\", label: \"EP1\" },\r\n  { value: \"P01\", label: \"P01\" },\r\n  { value: \"P03\", label: \"P03\" },\r\n  // { value: \"Q01\", label: \"Q01\" },\r\n  // { value: \"Q03\", label: \"Q03\" },\r\n  // { value: \"EQ1\", label: \"EQ1\" },\r\n  // { value: \"EQ3\", label: \"EQ3\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n  // { value: \"BETSY\", label: \"BETSY\" },\r\n]);\r\n\r\nexport const exportToERPOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const existInOracleOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const notOwningDivisionOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const userGroupOptions = [\r\n  \"admin\",\r\n  \"Everyone\",\r\n  \"Guest\",\r\n]\r\n\r\nexport const is_authorizedOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\n\r\nexport const enableBOSTransferOptions = [\r\n  { value: \"Y\", label: \"Yes\" },\r\n  { value: \"N\", label: \"No\" },\r\n]\r\nexport const InstanceOptions = sortByLabel([\r\n  { value: \"onPrem\", label: \"onPrem\" },\r\n  { value: \"SaaS\", label: \"SaaS\" },\r\n]);\r\n","// EMRPDH SERVER\r\nexport const BACKEND_API_URL = process.env.REACT_APP_PRO_MODE;\r\n\r\n// React Okta\r\nexport const REACT_APP_EMRPDH_OKTA_CLIENT_ID = process.env.REACT_APP_EMRPDH_OKTA_CLIENT_ID;\r\nexport const REACT_APP_EMRPDH_OKTA_ISSUER = process.env.REACT_APP_EMRPDH_OKTA_ISSUER;\r\nexport const REACT_APP_EMRPDH_OKTA_DOMAIN = process.env.REACT_APP_EMRPDH_OKTA_DOMAIN;\r\n\r\nexport const REACT_APP_ENOVIA_API_URL = process.env.REACT_APP_ENOVIA_API_URL;\r\nexport const REACT_APP_ENOVIA_CLOUD_API_URL = process.env.REACT_APP_ENOVIA_CLOUD_API_URL;\r\nexport const REACT_APP_MULSOFT_API_URL = process.env.REACT_APP_MULSOFT_API_URL;\r\n\r\nexport const REACT_APP_PLM_API_KEY = process.env.REACT_APP_PLM_API_KEY;\r\nexport const REACT_APP_PLM_API_KEY_VALUE = process.env.REACT_APP_PLM_API_KEY_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_ENRYPT_KEY_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_KEY_VALUE;\r\nexport const REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE = process.env.REACT_APP_MULESOFT_ENRYPT_INIT_VECTOR_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE;\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET;\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE = process.env.REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE;\r\nexport const client_id = 123;\r\nexport const client_secret = 456;\r\nexport const REACT_APP_ENOVIA_SAAS_API_URL = 'https://oi000186152-us1-space.3dexperience.3ds.com/enovia/resources/v1' //process.env.REACT_APP_ENOVIA_SAAS_API_URL\r\nexport const SAP_API_BASE_URL = process.env.REACT_APP_PRO_MODE; //\"http://localhost:8086\" //'https://emr-product-datahub-server-sap-stage.azurewebsites.net' //\"http://localhost:8086\" // process.env.API_BASE_URL\r\n\r\nexport const REACT_APP_BACKEND_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n};\r\nexport const REACT_APP_BACKEND_API_HEADER_FOR_FILE = {\r\n    headers: {\r\n        \"content-type\": \"multipart/form-data; boundary=-------842470573919341855553902\"\r\n    },\r\n};\r\nexport const REACT_APP_ENOVIA_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_PLM_API_KEY]: REACT_APP_PLM_API_KEY_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_ITEM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_API_CLIENT_ID]: REACT_APP_MULESOFT_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_API_CLIENT_SECRET]: REACT_APP_MULESOFT_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\nexport const REACT_APP_MULESOFT_BOM_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'text/plain',\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_ID]: REACT_APP_MULESOFT_BOM_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET]: REACT_APP_MULESOFT_BOM_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SPEC_ASS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_ID_VALUE,\r\n        [REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET]: REACT_APP_MULESOFT_SPEC_ASS_API_CLIENT_SECRET_VALUE,\r\n    },\r\n};\r\n\r\nexport const REACT_APP_MULESOFT_SAAS_API_HEADER = {\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'client_id': client_id,\r\n        'client_secret': client_secret,\r\n        'Access-Control-Allow-Origin': '*'\r\n    },\r\n};","import { REACT_APP_EMRPDH_OKTA_CLIENT_ID, REACT_APP_EMRPDH_OKTA_ISSUER, REACT_APP_EMRPDH_OKTA_DOMAIN } from \"./index\";\r\n\r\nconst CLIENT_ID = REACT_APP_EMRPDH_OKTA_CLIENT_ID;\r\nconst ISSUER = REACT_APP_EMRPDH_OKTA_ISSUER;\r\nconst domain = REACT_APP_EMRPDH_OKTA_DOMAIN;\r\n\r\nconst OKTA_TESTING_DISABLEHTTPSCHECK = process.env.OKTA_TESTING_DISABLEHTTPSCHECK || false;\r\nconst REDIRECT_URI = `${window.location.origin}/login/callback`;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  oidc: {\r\n    clientId: CLIENT_ID,\r\n    issuer: ISSUER,\r\n    redirectUri: REDIRECT_URI,\r\n    scopes: ['openid', 'profile', 'email', 'groups'],\r\n    pkce: true,\r\n    disableHttpsCheck: OKTA_TESTING_DISABLEHTTPSCHECK,\r\n    domain: domain,\r\n  },\r\n  resourceServer: {\r\n    messagesUrl: `${window.location.origin}`,\r\n  },\r\n};\r\n","import React, { createContext, useEffect, useReducer } from 'react'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from 'axios'\r\nimport { MatxLoading } from 'app/components'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    isInitialised: false,\r\n    user: null,\r\n}\r\n\r\nconst isValidToken = (accessToken) => {\r\n    if (!accessToken) {\r\n        return false\r\n    }\r\n\r\n    const decodedToken = jwtDecode(accessToken)\r\n    const currentTime = Date.now() / 1000\r\n    return decodedToken.exp > currentTime\r\n}\r\n\r\nconst setSession = (accessToken) => {\r\n    if (accessToken) {\r\n        localStorage.setItem('accessToken', accessToken)\r\n        axios.defaults.headers.common.Authorization = `Bearer ${accessToken}`\r\n    } else {\r\n        localStorage.removeItem('accessToken')\r\n        delete axios.defaults.headers.common.Authorization\r\n    }\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INIT': {\r\n            const { isAuthenticated, user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated,\r\n                isInitialised: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGIN': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        case 'LOGOUT': {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                user: null,\r\n            }\r\n        }\r\n        case 'REGISTER': {\r\n            const { user } = action.payload\r\n\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user,\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state }\r\n        }\r\n    }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    ...initialState,\r\n    method: 'JWT',\r\n    login: () => Promise.resolve(),\r\n    logout: () => { },\r\n    register: () => Promise.resolve(),\r\n})\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    const login = async (email, password) => {\r\n        const response = await axios.post('/api/auth/login', {\r\n            email,\r\n            password,\r\n        })\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const register = async (email, username, password) => {\r\n        const response = await axios.post('/api/auth/register', {\r\n            email,\r\n            username,\r\n            password,\r\n        })\r\n\r\n        const { accessToken, user } = response.data\r\n\r\n        setSession(accessToken)\r\n\r\n        dispatch({\r\n            type: 'REGISTER',\r\n            payload: {\r\n                user,\r\n            },\r\n        })\r\n    }\r\n\r\n    const logout = () => {\r\n        setSession(null)\r\n        dispatch({ type: 'LOGOUT' })\r\n    }\r\n\r\n    useEffect(() => {\r\n        ; (async () => {\r\n            try {\r\n                const accessToken = window.localStorage.getItem('accessToken')\r\n\r\n                if (accessToken && isValidToken(accessToken)) {\r\n                    setSession(accessToken)\r\n                    const response = await axios.get('/api/auth/profile')\r\n                    const { user } = response.data\r\n\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: true,\r\n                            user,\r\n                        },\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: 'INIT',\r\n                        payload: {\r\n                            isAuthenticated: false,\r\n                            user: null,\r\n                        },\r\n                    })\r\n                }\r\n            } catch (err) {\r\n                console.error(err)\r\n                dispatch({\r\n                    type: 'INIT',\r\n                    payload: {\r\n                        isAuthenticated: false,\r\n                        user: null,\r\n                    },\r\n                })\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    if (!state.isInitialised) {\r\n        return <MatxLoading />\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{\r\n                ...state,\r\n                method: 'JWT',\r\n                login,\r\n                logout,\r\n                register,\r\n            }}\r\n        >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { toRelativeUrl } from '@okta/okta-auth-js';\r\n\r\nconst LoginScreen = () => {\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n\r\n    const login = async () => {\r\n        // try {\r\n        //     oktaAuth.tokenManager.clear();\r\n        //     const response = await oktaAuth.signInWithRedirect();\r\n        //     // handle successful authentication here\r\n        // } catch (error) {\r\n        //     console.error('Authentication error:', error);\r\n        //     // handle error appropriately, e.g., display error message or redirect to login page\r\n        // }\r\n        try {\r\n            await oktaAuth.signInWithRedirect();\r\n        } catch (error) {\r\n            if (error.name === 'AuthApiError') {\r\n                // Handle AuthApiError\r\n                console.error('Authentication failed:', error.message);\r\n                // Display an error message to the user\r\n            } else {\r\n                // Handle other errors\r\n                console.error('An unexpected error occurred:', error);\r\n                // Display a generic error message to the user\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!authState) {\r\n            return;\r\n        }\r\n\r\n        if (!authState?.isAuthenticated) {\r\n            const originalUri = toRelativeUrl(window.location.href, window.location.origin);\r\n            oktaAuth.setOriginalUri(originalUri);\r\n            // oktaAuth.signInWithRedirect();\r\n\r\n            login();\r\n        }\r\n    }, [oktaAuth, !!authState, authState?.isAuthenticated]);\r\n\r\n    if (!authState || !authState?.isAuthenticated) {\r\n        return null;\r\n    }\r\n\r\n    return (<Outlet />);\r\n}\r\n\r\nexport default LoginScreen;","import React from \"react\";\r\nimport useAuth from 'app/hooks/useAuth';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react'\r\nimport LoginScreen from \"./loginScreen\";\r\n\r\nconst AuthGuard = ({ children }) => {\r\n  const { authState } = useOktaAuth()\r\n\r\n  // let {\r\n  //   isAuthenticated,\r\n  //   // user\r\n  // } = useAuth();\r\n  // const { pathname } = useLocation();\r\n\r\n  // // IF YOU NEED ROLE BASED AUTHENTICATION,\r\n  // // UNCOMMENT ABOVE LINES\r\n  // // AND COMMENT OUT BELOW authenticated VARIABLE\r\n\r\n  // let authenticated = isAuthenticated;\r\n\r\n  const isAuthenticated = authState && authState.isAuthenticated\r\n  let authenticated = isAuthenticated;\r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        children\r\n      ) : (\r\n        // <Navigate replace to=\"/session/signin\" state={{ from: pathname }} />\r\n        <LoginScreen />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthGuard;\r\n","import { Box, Button, styled } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FlexBox = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n}));\r\n\r\nconst JustifyBox = styled(FlexBox)(() => ({\r\n  maxWidth: 320,\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n}));\r\n\r\nconst IMG = styled('img')(() => ({\r\n  width: '100%',\r\n  marginBottom: '32px',\r\n}));\r\n\r\nconst NotFoundRoot = styled(FlexBox)(() => ({\r\n  width: '100%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  height: '100vh !important',\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <NotFoundRoot>\r\n      <JustifyBox>\r\n        <IMG src=\"/assets/images/illustrations/404.svg\" alt=\"\" />\r\n\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          sx={{ textTransform: 'capitalize' }}\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          Go Back\r\n        </Button>\r\n      </JustifyBox>\r\n    </NotFoundRoot>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Store } from \"app/redux/Store\";\r\nimport { getBasename } from \"app/utils/baseurl\";\r\nconst getBaseUrl_bk = () => {\r\n    const getStorevalue = Store.getState();\r\n    const currentPathValue = getStorevalue.globalData.segment || \"\";\r\n    return (currentPathValue === \"/\") ? currentPathValue : \"/\" + currentPathValue;\r\n}\r\nconst getBaseUrl = () => {\r\n    const getStorevalue = getBasename();\r\n   // return (getStorevalue?.segment === \"/\") ? getStorevalue?.segment : \"/\" + getStorevalue?.segment;\r\n    return (getStorevalue?.segment.startsWith(\"/\")) ? getStorevalue?.segment : \"/\" + getStorevalue?.segment;\r\n}\r\n\r\nexport default getBaseUrl;","import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport getBaseUrl from \"app/utils/getBaseUrl\";\r\nimport Button from '@mui/material/Button';\r\nimport { UserService } from \"services/usersService\";\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nconst UnauthorizedPage = () => {\r\n    const userService = new UserService();\r\n    const { authState, oktaAuth } = useOktaAuth();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const userInfo = location.state?.userInfo !== undefined ? location.state?.userInfo : false;\r\n    const NotAuthorized = location.state?.NotAuthorized !== undefined ? location.state?.NotAuthorized : false;\r\n    console.log(location.state?.NotAuthorized, 'location.state?.NotAuthorized')\r\n    console.log(NotAuthorized, 'NotAuthorized')\r\n    const [requestforAccess, setRequestforAccess] = useState(false);\r\n    const requestAccess = () => {\r\n        if (!requestforAccess) {\r\n            userService.requestForAccess({ userData: userInfo }).then((result) => {\r\n                setRequestforAccess(true);\r\n                // setIsLoading(false)\r\n                setTimeout(() => {\r\n                    logout()\r\n                }, 2000);\r\n            });\r\n        }\r\n    }\r\n    const logout = async () => {\r\n        try {\r\n            if (authState.isAuthenticated) {\r\n                // await oktaAuth.signOut();\r\n                await oktaAuth.signOut({\r\n                    postLogoutRedirectUri: window.location.origin,\r\n                });\r\n            }\r\n            // handle successful authentication here\r\n        } catch (error) {\r\n            // handle error appropriately, e.g., display error message or redirect to login page\r\n        }\r\n    };\r\n    return (\r\n        <div style={styles.container}>\r\n            <h1 style={styles.title}>Access Denied</h1>\r\n            {!NotAuthorized ?\r\n                <><p style={styles.message}>Sorry, you don't have permission to access the page.</p>\r\n                    {/* You can optionally add a button to redirect users to another page */}\r\n                    <Button variant=\"contained\" onClick={() => navigate(getBaseUrl() + '/calist')}>Go to Home</Button>\r\n                    {/* <button onClick={() => navigate(getBaseUrl() + '/calist')} style={styles.button}>Go to Home</button> */}\r\n                </>\r\n                :\r\n                <>\r\n                    <p style={styles.message}>Sorry, you don't have permission to access the application.</p>\r\n                    <p style={styles.message}>To access the application Please request by click on the button below.</p>\r\n                    <Button variant=\"contained\" onClick={requestAccess}>Request Access</Button>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100vh',\r\n        backgroundColor: '#f8f9fa',\r\n    },\r\n    title: {\r\n        fontSize: '2rem',\r\n        color: '#333',\r\n    },\r\n    message: {\r\n        fontSize: '1rem',\r\n        color: '#666',\r\n        textAlign: 'center',\r\n        marginTop: '10px',\r\n    },\r\n    // Optional button styles\r\n    button: {\r\n        marginTop: '20px',\r\n        padding: '10px 20px',\r\n        fontSize: '1rem',\r\n        backgroundColor: '#007bff',\r\n        color: '#fff',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n        transition: 'background-color 0.3s ease',\r\n        textDecoration: 'none',\r\n        outline: 'none',\r\n        ':hover': {\r\n            backgroundColor: '#0056b3',\r\n        },\r\n    },\r\n};\r\n\r\nexport default UnauthorizedPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Select, MenuItem } from '@mui/material';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n//import {bussinessUnitLists} from '../contexts/OracleSettingsContext'\r\n//export default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, optionValues, onChangeFunc, style = {} }) {\r\nexport default function CustomSelect({ isdisabled = false, selectedvalue, defaultValue, onChangeFunc, style = {}, size }) {\r\n    const { bussinessUnitLists } = useOracleSettings();\r\n    //console.log(bussinessUnitLists, 'bussinessUnitLists')\r\n    useEffect(() => {\r\n        if (defaultValue) {\r\n            onChangeFunc(defaultValue);\r\n        }\r\n    }, [defaultValue]);\r\n\r\n    return (\r\n        <Select\r\n            disabled={isdisabled}\r\n            className=\"form-control\"\r\n            defaultValue={defaultValue}\r\n            value={selectedvalue}\r\n            onChange={(e) => onChangeFunc(e.target.value)}\r\n            style={style}\r\n            size={size?size:'medium'}\r\n            displayEmpty // Enable displayEmpty prop\r\n            renderValue={(selected) => {\r\n                // Render the selected value\r\n                let selectedOption = [];\r\n                selectedOption = bussinessUnitLists?.find(\r\n                    (option) => (option.businessUnit === selected)\r\n                );\r\n\r\n                return (selectedOption?.businessUnit) ? selectedOption.buName : '';\r\n                //return (selectedOption?.value) ? selectedOption.label : '';\r\n            }}\r\n        >\r\n            {bussinessUnitLists?.map((option, index) => {\r\n                const listKey = \"dpKey\" + index;\r\n                return (\r\n                    <MenuItem value={option.businessUnit} key={listKey}>\r\n                        {/* {option.templateName ? option.instance + \"_\" + option.templateName + \"_\" + option.desc : ''} */}\r\n                        {/*option.templateName ? option.desc : ''*/}\r\n                        {option.buName}\r\n                    </MenuItem>\r\n                )\r\n            })}\r\n        </Select>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport CustomSelect from \"./components/CustomSelect\";\r\nimport { Grid, Select, MenuItem } from \"@mui/material\";\r\nimport { useSelector } from 'react-redux';\r\nimport { InstanceOptions } from \"./views/adminConfig/common.jsx\";\r\n\r\nconst Homepage = () => {\r\n  const globalBUandInstance = useSelector((state) => state.globalBUandInstance);\r\n  const [bussinessUnit, setBussinessUnit] = useState('')\r\n  const [instance, setInstance] = useState('')\r\n  const handleSelectChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === 'Instance') {\r\n      setInstance(value)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (globalBUandInstance.bu !== '') {\r\n      setBussinessUnit(globalBUandInstance.bu)\r\n    }\r\n    if (globalBUandInstance.instanse !== '') {\r\n      setInstance(globalBUandInstance.instanse)\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n\r\n      <h1 style={styles.title}>Select RDO and Instance</h1>\r\n      <Grid container item md={6} sm={6} xs={12} className=\"font-medium\"\r\n        style={{ backgroundColor: 'lightblue', padding: '20px' }}\r\n      >\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Design Organization:</span>\r\n          <CustomSelect\r\n            selectedvalue={bussinessUnit}\r\n            style={{ width: \"50%\" }}\r\n            // optionsValues={BUOptions}\r\n            defaultValue={bussinessUnit ? bussinessUnit : \"\"}\r\n            onChangeFunc={(selectedOptionValue) => {\r\n              setBussinessUnit(selectedOptionValue);\r\n              console.log(selectedOptionValue, 'selectedOptionValue')\r\n              //handleSelectChange()\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n          <span>Select Instance:</span>\r\n          <Select\r\n            labelId=\"Instance\"\r\n            id=\"Instance\"\r\n            name=\"Instance\"\r\n            fullWidth\r\n            style={{ width: \"50%\" }} // Set the width here\r\n            value={instance ? instance : ''}\r\n            onChange={handleSelectChange}\r\n          >\r\n            {InstanceOptions.map((option) => (\r\n              <MenuItem key={option.value} value={option.value}>\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f8f9fa',\r\n  },\r\n  title: {\r\n    fontSize: '2rem',\r\n    color: '#333',\r\n  },\r\n  message: {\r\n    fontSize: '1rem',\r\n    color: '#666',\r\n    textAlign: 'center',\r\n    marginTop: '10px',\r\n  },\r\n  // Optional button styles\r\n  button: {\r\n    marginTop: '20px',\r\n    padding: '10px 20px',\r\n    fontSize: '1rem',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    cursor: 'pointer',\r\n    transition: 'background-color 0.3s ease',\r\n    textDecoration: 'none',\r\n    outline: 'none',\r\n    ':hover': {\r\n      backgroundColor: '#0056b3',\r\n    },\r\n  },\r\n};\r\n\r\nexport default Homepage;\r\n","import { Suspense } from 'react';\r\nimport Loading from './MatxLoading';\r\n\r\nconst Loadable = (Component) => (props) => {\r\n  return (\r\n    <Suspense fallback={<Loading />}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Loadable;\r\n","import Loadable from 'app/components/Loadable';\r\nimport React, { lazy } from 'react';\r\n\r\nconst CaList = Loadable(lazy(() => import('./CaList')));\r\nconst CaDetails = Loadable(lazy(() => import('./CaDetails')));\r\nconst McoList = Loadable(lazy(() => import('./McoList')));\r\nconst Mcodetails = Loadable(lazy(() => import('./Mcodetails')));\r\nconst TrackerProgressBar = Loadable(lazy(() => import('./TrackerProgressBar')));\r\nconst SpecCreationList = Loadable(lazy(() => import('./SpecCreationList')));\r\nconst ObsoletePartList = Loadable(lazy(() => import('./ObsoletePartList')));\r\nconst MyReportList = Loadable(lazy(() => import('./MyReports')));\r\n\r\nconst McoListRoutes = [\r\n    { path: '/calist', element: <CaList /> },\r\n    { path: '/caDetails/:ca_id', element: <CaDetails /> },\r\n    { path: '/mcolist', element: <McoList /> },\r\n    { path: '/mcodetail/:mco_id?', element: <Mcodetails /> },\r\n    { path: '/:mcoName/tracker', element: <TrackerProgressBar /> },\r\n    { path: '/specCreationList', element: <SpecCreationList /> },\r\n    { path: '/obsoletePartList', element: <ObsoletePartList /> },\r\n    { path: '/myreport', element: <MyReportList /> }\r\n];\r\n\r\nexport default McoListRoutes;\r\n","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n    const { userDetails } = useOracleSettings();\r\n    const { authState } = useOktaAuth();\r\n    return (\r\n        (authState?.isAuthenticated && userDetails?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && userRoles?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated && authState?.idToken?.claims?.userinfo?.includes(\"admin\")) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n        // (authState?.isAuthenticated) ? (children) : (<Navigate to=\"/accessDenied\" />)\r\n\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import React, { useEffect, useState, useRef } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n    Select,\r\n    MenuItem\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n// import * as sampleTemplate from '../../../assets/sample-template.xlsx';\r\n\r\nimport download from 'downloadjs';\r\nimport {\r\n    instanceOptions,\r\n    ERPtypeOptions,\r\n    existInOracleOptions,\r\n    exportToERPOptions,\r\n    notOwningDivisionOptions,\r\n    BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport { textAlign } from \"@mui/system\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportDialogBox = (props) => {\r\n    const { allTemplatesInfo, updateAllTemplate, bussinessUnitLists } = useOracleSettings();\r\n\r\n    const tempService = new templateService();\r\n    const { importTemplate, setImportTemplate, setTemplateData, setIsLoading } = props;\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null)\r\n\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const fileName = 'sample-template.xlsx';\r\n    const handleDownload = () => {\r\n        tempService.downloadSampleFile(fileName)\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        console.log(column, '==values ==', selectedValues)\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: column === 'BU' ? selectedValues : selectedValues.value,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        //console.log(allTemplatesInfo, 'allTemplatesInfo vvvvv');\r\n\r\n        /*  allTemplatesInfo?.forEach((subscriber) => {\r\n             if (column === \"plants\") {\r\n                 subscriber[column]?.forEach((plant) => {\r\n                     values.add(plant.plantName);\r\n                 });\r\n             } else if (column === \"BU\") {\r\n                 subscriber[column]?.forEach((BU) => {\r\n                     values.add(BU);\r\n                 });\r\n             } else {\r\n                 values.add(subscriber[column]);\r\n             }\r\n         });\r\n         return Array.from(values); */\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    const importFileData = (e) => {\r\n        //  console.log(e.target.files[0].name, 'rowData')\r\n        //  console.log(e.target.files[0].type, 'rowData')\r\n        //  console.log(e.target.files[0].name.split('.').pop(), 'file name')\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0]);\r\n                setImportedFileName(e.target.files[0].name);\r\n                setNoFileError(false);\r\n            } else {\r\n                setNoFileError(true);\r\n                setImportedFileName(null);\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true);\r\n            setImportedFileName(null);\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setImportedFileData(null)\r\n        setImportTemplate(false)\r\n        setImportedFileName(null)\r\n        setNoFileError(false)\r\n        setERPTypeError(false)\r\n        setinstanceError(false)\r\n        setBUError(false)\r\n    };\r\n    const handleImportfileBarClick = () => {\r\n        setimportfileBar(true);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.ERPType === null || importSelectionValues.ERPType.length < 1) { setERPTypeError(true) }\r\n        if (importSelectionValues.instance === null || importSelectionValues.instance.length < 1) { setinstanceError(true) }\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) { setBUError(true) }\r\n        if (importedFileData === null || importedFileData.length < 1) { setNoFileError(true) }\r\n        // console.log(importSelectionValues, 'importSelectionValueshandleImportTemplate')\r\n        if (importSelectionValues.ERPType.length > 1 && importSelectionValues.instance.length > 1 && importSelectionValues.BU.length > 1 && importedFileData !== null) {\r\n            let postData = { 'file': importedFileData, data: importSelectionValues };\r\n            setIsLoading(true);\r\n            setImportTemplate(false)\r\n            tempService.importTemplate(postData).then(async (response) => {\r\n                setImportResponse(response)\r\n                let desc;\r\n                let severity;\r\n                if (response.errorCount > 0) {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {/* Failure <br /> */}\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                    setOpenAlert(true);\r\n                    setOpenDesc({\r\n                        severity: severity,\r\n                        desc: desc,\r\n                    });\r\n                    setIsLoading(false);\r\n                } else {\r\n                    desc = (\r\n                        <div>\r\n                            Success <br />\r\n                            New Template Added: {response.newTemplateAdded} <br />\r\n                            Template Updated: {response.updateTemplates} <br />\r\n                            Error in Template: {response.errorCount} <br />\r\n                        </div>\r\n                    );\r\n                    severity = 'success';\r\n                    setIsLoading(false);\r\n\r\n                }\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setImportSelectionValues((prev) => {\r\n                    return {\r\n                        ERPType: [],\r\n                        instance: [],\r\n                        BU: []\r\n                    }\r\n                })\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                // setTimeout(() => {\r\n                //     setImportTemplate(false)\r\n                // }, 200);\r\n\r\n                await tempService.getAllTemplateList().then((result) => {\r\n                    setTemplateData(result.template);\r\n                    updateAllTemplate(result.template);\r\n                });\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setImportSelectionValues((prev) => {\r\n            return {\r\n                ERPType: [],\r\n                instance: [],\r\n                BU: []\r\n            }\r\n        })\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo cccc');\r\n    }, [allTemplatesInfo])\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    Import Template\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                ERP Type\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={ERPtypeOptions}\r\n                                                value={importSelectionValues.ERPType}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"ERPType\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select ERP Type\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.ERPType.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {ERPTypeError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select ERP Type</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Instance\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={instanceOptions}\r\n                                                value={importSelectionValues.instance}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"instance\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select Instance\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                // getOptionLabel={(option) => option}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.instance.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {instanceError && (<p style={{ textAlign: \"left\", color: \"red\" }}>please select Instance</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p style={{ textAlign: \"left\", color: \"red\" }}>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleTemplate}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={3000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity=\"success\"\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    {importResponse && (\r\n                        <div>\r\n                            {importResponse.msg} <br />\r\n                            New Template Added: {importResponse.newTemplateAdded} <br />\r\n                            Template Updated: {importResponse.updateTemplates} <br />\r\n                            Error in Template: {importResponse.errorCount} <br />\r\n                        </div>\r\n                    )}\r\n                </Alert>\r\n            </Snackbar> */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportDialogBox;","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.templateData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n\r\n  /* export template data start */\r\n  //const [exportResponse, setExportResponse] = useState('');\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    //console.log(dataToExport, 'vdataToExport')\r\n    console.log(props?.filterTemplateData, 'filterTemplateData')\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.templateData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Template Name': item.templateName,\r\n        'Description': item.desc,\r\n        'ERP Type': item.ERPType,\r\n         Instance: item.instance,\r\n        'Design Organization': Array.isArray(item?.BU) && item?.BU.length > 0\r\n          ? item?.BU.join(', ')\r\n          : null,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Template' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.templateData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React from 'react';\r\n\r\nconst sortedExportDataHOC = (WrappedComponent) => {\r\n    return ({ data = [], sortInfo = {}, initialData = [], ...props }) => {\r\n        const sortData = (data, sortInfo) => {\r\n            if (!Array.isArray(data)) {\r\n                return [];\r\n            }\r\n\r\n            if (!sortInfo || !sortInfo.id) {\r\n                return initialData; // Return initial data if sortInfo is null or empty\r\n            }\r\n\r\n            const field = sortInfo.id || sortInfo.name || sortInfo.columnName;\r\n            const direction = sortInfo.dir === 1 ? 1 : -1;\r\n\r\n            return [...data].sort((a, b) => {\r\n                const aValue = String(a[field] || '').toLowerCase();\r\n                const bValue = String(b[field] || '').toLowerCase();\r\n\r\n                if (aValue < bValue) return -direction;\r\n                if (aValue > bValue) return direction;\r\n                return 0;\r\n            });\r\n        };\r\n\r\n        const sortedData = sortData(data, sortInfo);\r\n        return <WrappedComponent data={sortedData} sortInfo={sortInfo} {...props} />;\r\n    };\r\n};\r\n\r\nexport default sortedExportDataHOC;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Box,\r\n  styled,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport ImportDialogBox from \"./importDialog\";\r\nimport ExportDialogBox from \"./exportTemplate\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Template = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const { updateAllTemplate } = useOracleSettings();\r\n  const tempService = new templateService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [templateData, setTemplateData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelTemplate, setselectedDelTemplate] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredTempData, setFilteredTempData] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const sortedFilterTempData = sortDataByKey(filteredTempData, \"templateName\");\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteTemplateDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditTemplate(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    tempService.getAllTemplateList()\r\n      .then((result) => {\r\n        setTemplateData(result.template);\r\n        setInitialData(result.template); // Set initial data\r\n        setFilteredTempData(result.template);\r\n        updateAllTemplate(result.template);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredTempData(templateData);\r\n  }, [templateData]);\r\n\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  //************Search code************* */\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  // *************Search code ends *******/\r\n  const navigate = useNavigate();\r\n  const templateModeRef = useRef(\"initialValue\");\r\n  const handleCreateTemplate = () => {\r\n    templateModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createTemplate\");\r\n    }, 200);\r\n  };\r\n  const handleEditTemplate = (editSelectedTemplate) => {\r\n    templateModeRef.current = \"edit\";\r\n    const selectedTempalteData = editSelectedTemplate;\r\n    setTimeout(() => {\r\n      navigate(`/editTemplate/${selectedTempalteData?.id}`, {\r\n        state: { templateMode: templateModeRef.current, selectedTempalteData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteTemplateDialog = (Deltemplate) => {\r\n    setDeleteDialog(true);\r\n    setselectedDelTemplate(Deltemplate);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setselectedDelTemplate(null);\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTemplate = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await tempService.deleteTemplate(selRowsId).then(async (response) => {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n\r\n        await tempService.getAllTemplateList().then((result) => {\r\n          setTemplateData(result.template);\r\n          setInitialData(result.template); // Set initial data\r\n          setFilteredTempData(result.template);\r\n          updateAllTemplate(result.template);\r\n        });\r\n      })\r\n    } catch (error) {\r\n      return error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleImportTemplateDialog = () => {\r\n    setImportTemplate(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (templateData) {\r\n      const new_FilteredData = templateData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber?.templateName?.toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.desc\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.plants?.some((plant) =>\r\n            plant.plantName\r\n              .toLowerCase()\r\n              .includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.BU?.some((BU) =>\r\n            BU.toLowerCase().includes(searchValue.toLowerCase())\r\n          ) ||\r\n          subscriber.instance\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase()) ||\r\n          subscriber.ERPType.toLowerCase().includes(\r\n            searchValue.toLowerCase()\r\n          ))\r\n      })\r\n      setFilteredTempData(new_FilteredData);\r\n    }\r\n  }, [searchValue, templateData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedTemplate = sortedExportDataHOC(Template);\r\n    // const sortedData = SortedTemplate({ data: templateData, sortInfo, filteredTempData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    const sortedData = SortedTemplate({ data: templateData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setTemplateData(sortedData.props.data);\r\n    //setFilteredTempData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateTemplate}\r\n              style={{ marginRight: \"10px\" }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 0px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportTemplateDialog}\r\n              style={{ marginRight: '10px' }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <ExportDialogBox templateData={templateData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            <DataGrid\r\n              idProperty=\"id\"\r\n              showZebraRows={false}\r\n              style={{ minHeight: 550 }}\r\n              defaultLimit={100}\r\n              columns={[\r\n                {\r\n                  name: \"templateName\",\r\n                  header: <Tooltip title={'Name'}>Template Name</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.templateName}</div>,\r\n                },\r\n                {\r\n                  name: \"desc\",\r\n                  header: <Tooltip title={\"Description\"}>Description</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{data?.desc}</div>,\r\n                },\r\n                {\r\n                  name: \"ERPType\",\r\n                  header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"instance\",\r\n                  header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                },\r\n                {\r\n                  name: \"BU\",\r\n                  header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  defaultFlex: 1,\r\n                  defaultWidth: 50,\r\n                  render: ({ data }) => <div>{(data?.BU) ? data.BU.sort().map((item) => item).join(\", \") : ''}</div>,\r\n                },\r\n              ]}\r\n              dataSource={sortedFilterTempData}\r\n              checkboxColumn\r\n              selected={selected}\r\n              onSelectionChange={onSelectionChange}\r\n              handle={ref => gridRef.current = ref ? ref.current : null}\r\n              pagination\r\n              renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n              onSortInfoChange={handleSortInfoChange}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the template{\" \"}\r\n                <b>{selectedDelTemplate?.templateName}</b> with instance{\" \"}\r\n                <b>{selectedDelTemplate?.instance}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted templates?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ImportDialogBox\r\n        importTemplate={importTemplate}\r\n        setImportTemplate={setImportTemplate}\r\n        setTemplateData={setTemplateData}\r\n        setIsLoading={setIsLoading}\r\n      />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Template;","import React from \"react\";\r\nimport Template from \"./template\";\r\n// import { TemplateProvider } from \"app/contexts/\";\r\n\r\nconst TemplateWrapper = () => {\r\n    return (\r\n        <>\r\n            {/* <TemplateProvider> */}\r\n            <Template />\r\n            {/* </TemplateProvider> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TemplateWrapper;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class PlantService {\r\n  getAllPlantsList = () => {\r\n    return ApiInstance\r\n      .get(`${BACKEND_API_URL}/plant/getplants`, REACT_APP_BACKEND_API_HEADER)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllPlantsList\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getPlantById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/getPlantById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewPlant = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/plant/addPlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updatePlant = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/plant/updatePlant`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deletePlant = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/plant/deletePlant`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst AttributeDialog = ({\r\n  open,\r\n  handleDialogClose,\r\n  tempObject,\r\n  handleAttributeChange,\r\n  handleAddAttribute,\r\n  newKey,\r\n  newValue,\r\n  handleAddRow,\r\n  handleDeleteRow,\r\n  keyerror,\r\n  attributeForm,\r\n  valuesInputList,\r\n}) => {\r\n  const InputTypeOptions = [\r\n    { value: \"text\", label: \"text\" },\r\n    { value: \"select\", label: \"select\" },\r\n  ];\r\n  const DataTypeOptions = [\r\n    { value: \"int\", label: \"int\" },\r\n    { value: \"string\", label: \"string\" },\r\n    { value: \"long\", label: \"long\" },\r\n    { value: \"bool\", label: \"bool\" },\r\n  ];\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {attributeForm === null ? \"Add Attribute\" : \"Edit Attribute\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Name:\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"name\"\r\n              value={tempObject.name || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Mandatory: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.mandatory || \"YES\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"mandatory\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Material master:{\" \"}\r\n              {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                value={tempObject.material_master || \"Y\"}\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"material_master\"\r\n                onChange={handleAttributeChange}\r\n              >\r\n                <FormControlLabel value=\"Y\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"N\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Data type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"DataType-label\"\r\n              id=\"DataType-select\"\r\n              name=\"dataType\"\r\n              fullWidth\r\n              value={tempObject.dataType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {DataTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.value}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Input Type: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              labelId=\"InputType-label\"\r\n              id=\"InputType-select\"\r\n              name=\"inputType\"\r\n              fullWidth\r\n              value={tempObject.inputType || \"\"}\r\n              onChange={handleAttributeChange}\r\n            >\r\n              {InputTypeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          {tempObject.inputType === \"select\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12}>\r\n                <span>\r\n                  Values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"value\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"display value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleAttributeChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Default values: {/* <span className={classes.spanRed}>*</span>:*/}\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              name=\"defaultValues\"\r\n              value={tempObject.defaultValues || \"\"}\r\n              onChange={handleAttributeChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddAttribute}>\r\n          {attributeForm === null ? \"Add\" : \"Update\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AttributeDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from \"@mui/material/styles\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\n\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { caseInsensitiveSort, generateRandomId } from \"../../utils/utils\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function CreateTemplate() {\r\n  const tempService = new templateService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n\r\n  const [templateForm, setTemplateForm] = useState({\r\n    exportToERP: \"Y\",\r\n    existInOracle: \"N\",\r\n    notOwningDivision: \"Y\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  //**********AttributeComplete States end ************************** */\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  // const handleBUChange = (event) => {\r\n  //   setSelectedBU(event.target.value);\r\n  // };\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = \"Y\";\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      setAttributeData((prevAttributeData) => [\r\n        ...prevAttributeData,\r\n        updatedTempObject,\r\n      ]);\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    setAttributeData((prevData) => {\r\n      const updatedData = [...prevData];\r\n      updatedData.splice(index, 1);\r\n      return updatedData;\r\n    });\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n      setTempObject({ ...attributeData[index] });\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {}).map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    let updatedForm = {};\r\n  \r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n  \r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        SalesOrg,\r\n        ECN_required,\r\n        bomusage,\r\n        ConnectivityDetails,\r\n      } = value;\r\n  \r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n  \r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n    setTemplateForm(updatedForm);\r\n  };\r\n  \r\n  const handleTemplateNameBlur = (event) => {\r\n    const { name, value } = event.target;\r\n    const trimmedValue = value.trim().replace(/\\s+/g, ' '); // Trim and replace multiple spaces\r\n    setTemplateForm((prevForm) => ({\r\n      ...prevForm,\r\n      [name]: trimmedValue,\r\n    }));\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n  //console.log(filteredPlant, \"2323232 plant \");\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    const randomid = Math.floor(100000 + generateRandomId() * 900000);\r\n\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const updatedForm = {\r\n      ...templateForm,\r\n      id: randomid.toString(),\r\n      attributes: attributeData,\r\n      BU: selectedBU,\r\n      plants: selectedplants,\r\n    };\r\n\r\n    tempService.addnewTemplate(updatedForm).then((resp) => {\r\n      if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n        const altHtml = resp?.message?.map((citem) => {\r\n          return (<li key={shortId.generate()}>{citem}</li>)\r\n        });\r\n        handlesnackBarClick(altHtml, \"error\");\r\n        return;\r\n      }\r\n      // handlesnackBarClick(\"Template added successfully!\", \"success\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: 'Template added successfully', status: \"success\" } });\r\n      }, 200);\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const sortedBusinessUnitList = sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  // console.log(templateForm, \"tempform data\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Create Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span> <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  onBlur={handleTemplateNameBlur}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={templateForm.ERPType}\r\n                  onChange={handleTemplateFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>{\" \"}\r\n                      <span className={classes.spanRed}>*</span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        // label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" ||\r\n                templateForm.ERPType === \"SAP\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                        onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plant</span> <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  IconButton,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  Select,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport AttributeDialog from \"./attributeDialog\";\r\nimport Loader from 'app/components/Loader';\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  existInOracleOptions,\r\n  exportToERPOptions,\r\n  notOwningDivisionOptions,\r\n  BUOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport shortId from 'shortid';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { caseInsensitiveSort } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nconst defaultFormValue = {\r\n  name: null,\r\n  mandatory: null,\r\n  material_master: null,\r\n  dataType: null,\r\n  inputType: null,\r\n  values: null,\r\n  defaultValues: null,\r\n};\r\n\r\nexport default function EditTemplate() {\r\n  const tempService = new templateService();\r\n  const { refreshData, bussinessUnitLists } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [plantData, setPlantData] = useState();\r\n  const classes = useStyles();\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n\r\n  //**********AttributeComplete States************************** */\r\n  const [diabox, setDiabox] = useState(false);\r\n\r\n  const [attributeForm, setAttributeForm] = useState(null);\r\n  const [tempObject, setTempObject] = useState({});\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  //**********AttributeComplete States end ************************** */\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const params = useParams();\r\n\r\n  const [selectedTemplateObj, setSelectedTemplateObj] = useState();\r\n  const [templateForm, setTemplateForm] = useState({});\r\n  const [attributeData, setAttributeData] = useState([]);\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n  }, []);\r\n\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  //********all atrribute functions */\r\n  const handleAttributeChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddAttribute = () => {\r\n    const updatedTempObject = {\r\n      ...tempObject,\r\n      values: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n\r\n    if (updatedTempObject.material_master === \"\") {\r\n      updatedTempObject[\"material_master\"] = selectedTemplateObj;\r\n    }\r\n    if (updatedTempObject.mandatory === \"\") {\r\n      updatedTempObject[\"mandatory\"] = \"Y\";\r\n    }\r\n\r\n    if (Object.keys(updatedTempObject.values).length) {\r\n      updatedTempObject[\"values\"] = [updatedTempObject.values];\r\n    }\r\n\r\n    if (attributeForm !== null) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData[attributeForm] = updatedTempObject;\r\n      setAttributeData(updatedAttributeData);\r\n    } else {\r\n      if (attributeData) {\r\n        setAttributeData((prevAttributeData) => [\r\n          ...prevAttributeData,\r\n          updatedTempObject,\r\n        ]);\r\n      } else {\r\n        const newAttr = [updatedTempObject]\r\n        setAttributeData(newAttr);\r\n      }\r\n    }\r\n\r\n    setDiabox(false);\r\n    setTempObject(defaultFormValue);\r\n    setValuesInputList([]);\r\n    setAttributeForm(null);\r\n  };\r\n\r\n  const handleDeleteAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      const updatedAttributeData = [...attributeData];\r\n      updatedAttributeData.splice(index, 1);\r\n      setAttributeData(updatedAttributeData);\r\n    }\r\n  };\r\n  const handleEditAttribute = (index) => {\r\n    if (index >= 0 && index < attributeData.length) {\r\n      setAttributeForm(index);\r\n      setDiabox(true);\r\n\r\n      const selectedAttribute = { ...attributeData[index] };\r\n\r\n      const attindex = attributeData[index]?.values[0];\r\n      const valuesArray = Object.entries(attindex || {})?.map(\r\n        ([key, value]) => ({\r\n          key,\r\n          value,\r\n        })\r\n      );\r\n\r\n      setValuesInputList(valuesArray);\r\n\r\n      setTempObject(selectedAttribute);\r\n    }\r\n  };\r\n\r\n  const handleAddNewAttribute = () => {\r\n    setAttributeForm(null);\r\n    setDiabox(true);\r\n    setTempObject({\r\n      name: \"\",\r\n      mandatory: \"\",\r\n      material_master: \"\",\r\n      dataType: \"\",\r\n      inputType: \"\",\r\n      defaultValues: \"\",\r\n    });\r\n    setValuesInputList([]);\r\n  };\r\n\r\n  //********all atrribute functions ends */\r\n\r\n  const handleSelectChange = (event, type) => {\r\n    const selectedValues = event.target.value;\r\n\r\n    if (type === \"BU\") {\r\n      setSelectedBU(selectedValues);\r\n    } else if (type === \"plants\") {\r\n      const selectedPlantsInfo = plantData?.filter((option) =>\r\n        selectedValues.includes(option.plantName)\r\n      );\r\n\r\n      const extractedInfo = selectedPlantsInfo?.map((option) => ({\r\n        plantName: option.plantName,\r\n        id: option.id,\r\n      }));\r\n\r\n      setSelectedPlants(extractedInfo);\r\n    }\r\n  };\r\n\r\n  const handleTemplateFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    let updatedForm = {};\r\n\r\n    if (name === \"ERPtype\") {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: null,\r\n        plants: null,\r\n        url: null,\r\n        username: null,\r\n        port: null,\r\n        authkey: null,\r\n        material_master: null,\r\n        SalesOrg: null,\r\n        ECN_required: null,\r\n        bomusage: null,\r\n        //oracle changes\r\n        // exportToERP: null,\r\n        // existInOracle: null,\r\n        // notOwningDivision: null,\r\n        BU: null,\r\n\r\n        [name]: value,\r\n      };\r\n    } else if (name === \"plant\") {\r\n      const {\r\n        id,\r\n        plantName,\r\n        material_master,\r\n        ECN_required,\r\n        bomusage,\r\n        SalesOrg,\r\n        ConnectivityDetails,\r\n      } = value;\r\n\r\n      const { url, username, password, port, authkey } = ConnectivityDetails;\r\n\r\n      updatedForm = {\r\n        ...templateForm,\r\n        plantId: id,\r\n        plantName: plantName,\r\n        ECN_required: ECN_required,\r\n        bomusage: bomusage,\r\n        SalesOrg: SalesOrg,\r\n        url: url,\r\n        material_master: material_master,\r\n        username: username,\r\n        password: password,\r\n        port: port,\r\n        authkey: authkey,\r\n      };\r\n    } else {\r\n      updatedForm = {\r\n        ...templateForm,\r\n        [name]: value,\r\n      };\r\n    }\r\n\r\n    // if (updatedForm.ERPType === \"SAP\") {\r\n    //   updatedForm.exportToERP = \"\";\r\n    //   updatedForm.existInOracle = \"\";\r\n    //   updatedForm.notOwningDivision = \"\";\r\n    // }\r\n\r\n    setTemplateForm(updatedForm);\r\n  };\r\n\r\n  const filteredPlant = plantData?.filter(\r\n    (plant) =>\r\n      plant.ERPType === templateForm.ERPType &&\r\n      plant.instance === templateForm.instance\r\n  );\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    // setSnackbarMessage(message);\r\n    // setSnackbarSeverity(severity);\r\n    // setsnackBar(true);\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  const handleSubmitTempForm = async () => {\r\n    if (\r\n      templateForm.templateName?.trim() === \"\" ||\r\n      !templateForm.templateName ||\r\n      templateForm.desc?.trim() === \"\" ||\r\n      !templateForm.desc ||\r\n      // templateForm.plantName?.trim() === \"\" ||\r\n      // !templateForm.plantName ||\r\n      templateForm.ERPType?.trim() === \"\" ||\r\n      !templateForm.ERPType ||\r\n      (templateForm.ERPType === \"SAP\" && !templateForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the required details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    setTemplateForm((prevData) => {\r\n      const updatedForm = {\r\n        ...prevData,\r\n        id: templateForm.id,\r\n        templates: templateForm.templates,\r\n        attributes: attributeData,\r\n        BU: selectedBU,\r\n        plants: selectedplants,\r\n      };\r\n\r\n      tempService.updateTemplate(updatedForm).then((resp) => {\r\n        if (resp && Object.keys(resp)?.length && resp?.status === \"failed\") {\r\n          const altHtml = resp?.message?.map((citem) => {\r\n            return (<li key={shortId.generate()}>{citem}</li>)\r\n          });\r\n          handlesnackBarClick(altHtml, \"error\");\r\n          return;\r\n        }\r\n        // handlesnackBarClick(\"Template updated successfully\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/template\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      });\r\n\r\n      return updatedForm;\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.tempId) {\r\n      setIsLoading(true);\r\n      tempService.getTemplateById({ id: params?.tempId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp && Object?.keys(resp)?.length) {\r\n          const selectedTemplate = resp;\r\n\r\n          setSelectedTemplateObj(selectedTemplate);\r\n\r\n          setSelectedBU(\r\n            selectedTemplate.BU\r\n          );\r\n          setAttributeData(\r\n            selectedTemplate.attributes\r\n          );\r\n          setSelectedPlants(\r\n            selectedTemplate.plants\r\n          );\r\n          setTemplateForm({\r\n            id: selectedTemplate.id,\r\n            templates: selectedTemplate.templates,\r\n            templateName: selectedTemplate.templateName,\r\n            desc: selectedTemplate.desc,\r\n            ERPType: selectedTemplate.ERPType,\r\n            instance: selectedTemplate.instance,\r\n            plantId: selectedTemplate.plantId,\r\n            plantName: selectedTemplate.plantName,\r\n            port: selectedTemplate.port,\r\n            url: selectedTemplate.url,\r\n            username: selectedTemplate.username,\r\n            attributes: selectedTemplate.attributes,\r\n            ECN_required: selectedTemplate.ECN_required,\r\n            bomusage: selectedTemplate.bomusage,\r\n            //oracle changes\r\n            BU: selectedTemplate.BU,\r\n            // exportToERP: selectedTemplate.exportToERP,\r\n            // existInOracle: selectedTemplate.existInOracle,\r\n            // notOwningDivision: selectedTemplate.notOwningDivision,\r\n          });\r\n        } else {\r\n          navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/template\", { state: { message: \"Template not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n sortDataByKey(bussinessUnitLists, \"businessUnit\");\r\n  \r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Template\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid item md={9} sm={6} xs={6}>\r\n          <form>\r\n            <h4>Edit Template</h4>\r\n\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Template Name</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"templateName\"\r\n                  value={templateForm.templateName}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  disabled\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Description</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"desc\"\r\n                  value={templateForm.desc}\r\n                  onChange={handleTemplateFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              {(templateForm.ERPType === \"SAP\" ||\r\n                templateForm.ERPType === \"ORACLE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>ERP Type </span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        labelId=\"ERPType-label\"\r\n                        id=\"ERPType-select\"\r\n                        name=\"ERPType\"\r\n                        fullWidth\r\n                        value={templateForm?.ERPType}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {ERPtypeOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Instance</span>\r\n                      <span className={classes.spanRed}>*</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        label=\"instance\"\r\n                        id=\"instance\"\r\n                        name=\"instance\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={templateForm.instance}\r\n                        onChange={handleTemplateFormChange}\r\n                      >\r\n                        {instanceOptions?.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n              {/* {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Export to ERP </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"exportToERP\"\r\n                      name=\"exportToERP\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.exportToERP}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {exportToERPOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Exist in Oracle </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"existInOracle\"\r\n                      name=\"existInOracle\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.existInOracle}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {existInOracleOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {templateForm.ERPType === \"ORACLE\" && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Not Owning Division </span>{\" \"}\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      id=\"notOwningDivision\"\r\n                      name=\"notOwningDivision\"\r\n                      fullWidth\r\n                      displayEmpty\r\n                      value={templateForm.notOwningDivision}\r\n                      onChange={handleTemplateFormChange}\r\n                    >\r\n                      {notOwningDivisionOptions.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )} */}\r\n\r\n              {(templateForm.ERPType === \"ORACLE\" || templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>\r\n                      Design Organization <span className={classes.spanRed}>*</span>\r\n                    </span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      multiple\r\n                      name=\"BU\"\r\n                      value={selectedBU.sort(caseInsensitiveSort)}\r\n                      onChange={(e) => handleSelectChange(e, \"BU\")}\r\n                      renderValue={(selected) => selected.sort(caseInsensitiveSort).join(\", \")}\r\n                      MenuProps={{\r\n                        sx: {\r\n                          \"&& .Mui-selected\": {\r\n                            backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                          }\r\n                        }\r\n                      }}\r\n                    >\r\n                      {bussinessUnitLists?.map((option) => (\r\n                        <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                          {option.businessUnit}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              {/* <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Plants</span>\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  name=\"plants\"\r\n                  value={selectedplants.map((item) => item.plantName)}\r\n                  onChange={(e) => handleSelectChange(e, \"plants\")}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                >\r\n                  {filteredPlant?.map((option) => (\r\n                    <MenuItem key={option.id} value={option.plantName}>\r\n                      {option.plantName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid> */}\r\n\r\n              {(templateForm.ERPType === \"SAP\") && (\r\n                <>\r\n                  <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                    <span>Attributes</span>\r\n                  </Grid>\r\n\r\n                  <Grid item md={9} sm={8} xs={12}>\r\n                    <span>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        margin=\"2px\"\r\n                        onClick={handleAddNewAttribute}\r\n                      >\r\n                        Add Attribute\r\n                      </Button>\r\n                    </span>\r\n                    <br />\r\n                    &nbsp;\r\n                    <Grid md={4}>\r\n                      <span>\r\n                        <div\r\n                          style={{\r\n                            height: \"154px\",\r\n                            overflowY: \"auto\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            width: \"500px\",\r\n                          }}\r\n                        >\r\n                          {attributeData?.map((attrivar, aindex) => (\r\n                            <Paper\r\n                              key={aindex}\r\n                              style={{\r\n                                paddingLeft: \"50px\",\r\n                                marginBottom: \"8px\",\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-between\",\r\n                                alignItems: \"center\",\r\n                                height: \"46px\",\r\n                              }}\r\n                            >\r\n                              <Grid container alignItems=\"center\" spacing={3}>\r\n                                <Grid item md={9} sm={8} xs={12}>\r\n                                  <p>\r\n                                    <b>Name:</b> {attrivar.name}\r\n                                    <IconButton\r\n                                      onClick={() => handleEditAttribute(aindex)}\r\n                                    >\r\n                                      <EditIcon />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                      onClick={() => handleDeleteAttribute(aindex)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </p>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </Paper>\r\n                          ))}\r\n                        </div>\r\n                      </span>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleSubmitTempForm}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n\r\n          <Snackbar\r\n            open={snackBar}\r\n            autoHideDuration={3000}\r\n            onClose={handlesnackbarClose}\r\n            anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n          >\r\n            <Alert\r\n              onClose={handlesnackbarClose}\r\n              severity={snackbarseverity}\r\n              sx={{ width: \"100%\" }}\r\n            >\r\n              {snackbarmessage}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {(openDesc) ? (\r\n            <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n          ) : (<></>)}\r\n          {\r\n            (refreshData || isLoading) ? (\r\n              <div style={{ textAlign: 'center' }}>\r\n                <Loader show={true} />\r\n              </div>\r\n            ) : <></>\r\n          }\r\n\r\n          {/* add attribute dialog box code */}\r\n          <AttributeDialog\r\n            open={diabox}\r\n            handleDialogClose={handleDialogClose}\r\n            attributeForm={attributeForm}\r\n            tempObject={tempObject}\r\n            handleAttributeChange={handleAttributeChange}\r\n            handleAddAttribute={handleAddAttribute}\r\n            newKey={newKey}\r\n            newValue={newValue}\r\n            handleAddRow={handleAddRow}\r\n            handleDeleteRow={handleDeleteRow}\r\n            keyerror={keyerror}\r\n            valuesInputList={valuesInputList}\r\n          />\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport TemplateWrapper from \"./templateWrapper\";\r\nimport CreateTemplate from \"./createTemplate\";\r\nimport EditTemplate from \"./editTemplate\";\r\n\r\nconst templateRoutes = [\r\n  {\r\n    path: \"/template\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <TemplateWrapper />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n\r\n  {\r\n    path: \"/createTemplate\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n\r\n  {\r\n    path: \"/editTemplate/:tempId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditTemplate />\r\n      </PrivateRoute>\r\n    ),\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default templateRoutes;\r\n","export const authRoles = {\r\n    sa: ['SA'], // Only Super Admin has access\r\n    admin: ['SA', 'ADMIN'], // Only SA & Admin has access\r\n    editor: ['SA', 'ADMIN', 'EDITOR'], // Only SA & Admin & Editor has access\r\n    guest: ['SA', 'ADMIN', 'EDITOR', 'GUEST'], // Everyone has access\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.plantData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.plantData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Plant Name': item.plantName,\r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        \"Export To ERP\": item.exportToERP,\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Plants' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.plantData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportPlants\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst Plant = () => {\r\n  const plantService = new PlantService();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [selectedDelPlant, setSelectedDelPlant] = useState();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeletePlantDialog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditPlant(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  const fetchPlants = () => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList()\r\n      .then((result) => {\r\n        setPlantData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredPlantData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPlants();\r\n  }, []);\r\n\r\n  const [filteredPlantData, setFilteredPlantData] = useState([]);\r\n  let sortedPlanteData = sortDataByKey([...filteredPlantData], \"plantName\");\r\n    \r\n  useEffect(() => {\r\n    setFilteredPlantData(plantData);\r\n  }, [plantData]);\r\n  // ***** Global search functionality ********\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  // ***** Global search functionality ends********\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreatePlant = () => {\r\n    plantModeRef.current = \"create\"; // Update the ref with the new value of plantMode\r\n    setTimeout(() => {\r\n      navigate(\"/createPlant\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleDeletePlantDialog = (DeletePlant) => {\r\n    setDeleteDialog(true);\r\n    setSelectedDelPlant(DeletePlant);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeletePlant = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await plantService.deletePlant(selRowsId);\r\n      setSelected({});\r\n      setSelectedRows([]);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n    });\r\n    handlesnackBarClick(\"Plant deleted successfully\", \"success\");\r\n  };\r\n\r\n  const handleEditPlant = (editSelectedPlant) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedPlantData = editSelectedPlant;\r\n    setTimeout(() => {\r\n      navigate(`/editPlant/${selectedPlantData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedPlantData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = plantData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.plantName\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    });\r\n    setFilteredPlantData(new_FilteredData);\r\n  }, [searchValue, plantData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedPlant = sortedExportDataHOC(Plant);\r\n    const sortedData = SortedPlant({ data: plantData, sortInfo, sortedPlanteData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setPlantData(sortedData.props.data);\r\n    setFilteredPlantData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Plant\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreatePlant}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n\r\n            <ExportDialogBox\r\n              plantData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedPlanteData : plantData}\r\n              filterTemplateData={selectedRows} />\r\n          </Grid>\r\n\r\n\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"plantName\",\r\n                    header: <Tooltip title={'Name'}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.plantName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERP\",\r\n                    header: <Tooltip title={\"Export To ERP\"}>Export To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  // {\r\n                  //   name: \"orgId\",\r\n                  //   header: <Tooltip title={\"Org Id\"}>Org Id</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  // },\r\n                  // {\r\n                  //   name: \"BU\",\r\n                  //   header: <Tooltip title={\"Design Organization\"}>Design Organization</Tooltip>,\r\n                  //   defaultFlex: 1,\r\n                  //   defaultWidth: 50,\r\n                  //   render: ({ data }) => <div>{(data?.BU) ? data.BU.map((item) => item).join(\", \") : ''}</div>,\r\n                  // },\r\n                ]}\r\n                  dataSource={sortInfo === null ? filteredPlantData : sortedPlanteData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Plant\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the plant <b>{selectedDelPlant?.plantName}</b>{\" \"}\r\n                with instance <b>{selectedDelPlant?.instance}</b> having Design Organizations{\" \"}\r\n                {/* <b>\r\n                  {selectedDelPlant?.BU.map((buname) => {\r\n                    return buname;\r\n                  }).join(\",\")}\r\n                </b> */}\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted plants?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeletePlant}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Plant;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nexport default function ConnectivityDetailsDialog({\r\n  open,\r\n  connDetails,\r\n  handleCDChange,\r\n  handleAddCD,\r\n  connectivityError,\r\n  handleDialogClose,\r\n  plantForm,\r\n}) {\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>Add Connectivity details</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>URL :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"URL\"\r\n              name=\"url\"\r\n              value={connDetails.url}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Username :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Username\"\r\n              name=\"username\"\r\n              value={connDetails.username}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Password :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              value={connDetails?.password || \"\"}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>AuthKey :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Authkey\"\r\n              name=\"authkey\"\r\n              value={connDetails.authkey}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n            <span>Port :</span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <TextField\r\n              label=\"Port\"\r\n              name=\"port\"\r\n              value={connDetails.port}\r\n              onChange={handleCDChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n\r\n          {plantForm.ERPType === \"SAP\" && (\r\n            <>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapsysnum :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapsysnum\"\r\n                  name=\"sapsysnum\"\r\n                  value={connDetails.sapsysnum}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>sapclientid :</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"sapclientid\"\r\n                  name=\"sapclientid\"\r\n                  value={connDetails.sapclientid}\r\n                  onChange={handleCDChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n            </>\r\n          )}\r\n        </Grid>\r\n        <p style={{ color: \"red\" }}>{connectivityError}</p>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddCD}>Add</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Box,\r\n  styled\r\n} from \"@mui/material\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function CreatePlant() {\r\n  const plantService = new PlantService();\r\n  const { bussinessUnitLists } = useOracleSettings();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [plantForm, setPlantForm] = useState({\r\n    BU: [],\r\n    exportToERP: \"Y\", // Initialize BU as an empty array\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    orgId: \"\",\r\n    plantName: \"\",\r\n    SalesOrg: \"\",\r\n    aliasPlant: \"\",\r\n    material_master: \"\",\r\n    ECN_required: \"\",\r\n    bomusage: \"\",\r\n    // ... other fields\r\n  });\r\n  const [connDetails, setconnDetails] = useState({});\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let navigate = useNavigate();\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //console.log(diaBox, \"dialogbox status\");\r\n\r\n  const handleAddPlant = () => {\r\n    const newPlant = {\r\n      id:\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance,\r\n      plants: plantForm.plantName + \"_\" + plantForm.ERPType,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      orgId: plantForm.orgId,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n      ConnectivityDetails: connDetails,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n      newPlant[\"id\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n      newPlant[\"plants\"] =\r\n        plantForm.plantName +\r\n        \"_\" +\r\n        plantForm.ERPType +\r\n        \"_\" +\r\n        plantForm.instance;\r\n    }\r\n\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n    } else {\r\n      plantService.addnewPlant(newPlant).then((resp) => {\r\n        if (resp && resp?.data && resp?.data?.length) {\r\n          if (resp?.data[0]?.id) {\r\n            handlesnackBarClick(\"Plant added successfully!\", \"success\");\r\n\r\n            setTimeout(() => {\r\n              navigate(\"/plants\");\r\n            }, 2000);\r\n          } else if (resp?.data[0]?.msg) {\r\n            handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n          }\r\n        } else {\r\n          //console.log(\"No data in resp.\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setconnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  //connectivity form methods\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n    setconnDetails(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  //console.log(plantForm, \"plantform\");\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Create Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    fullWidth\r\n                    displayEmpty\r\n                    value={plantForm.ERPType}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" || plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Organization Id<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Organization Id\"\r\n                        name=\"orgId\"\r\n                        value={plantForm.orgId}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\" || plantForm.ERPType === \"JDE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\", \"JDE\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export to ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {bussinessUnitLists.map((option) => (\r\n                          <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                            {option.businessUnit}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org<span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"Sales Org\"\r\n                        name=\"SalesOrg\"\r\n                        value={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plant Alias Name\r\n                            <span className={classes.spanRed}>*</span>\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage <span className={classes.spanRed}>*</span>\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {console.log(plantForm.ERPType, 'plantForm.ERPType')}\r\n                    {plantForm.ERPType === \"SAP\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>Connectivity Details </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <span>\r\n                            {Object.keys(connDetails).length === 0 && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            )}\r\n                            {Object.keys(connDetails).length > 0 && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>AuthKey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                          </span>\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      {/* dialogBox */}\r\n\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { Formik, Form } from \"formik\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  instanceOptions,\r\n  ERPtypeOptions,\r\n  bomusageOptions,\r\n  BUOptions,\r\n  exportToERPOptions,\r\n} from \"../adminConfig/common\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport ConnectivityDetailsDialog from \"./connectivityDetailsDialog\";\r\nimport { Grid, TextField, Select, MenuItem, Box, styled } from \"@mui/material\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\nexport default function EditPlant() {\r\n  const { refreshData } = useOracleSettings();\r\n  const plantService = new PlantService();\r\n  const [allPlantData, setallPlantData] = useState();\r\n  const [diaBox, setDiabox] = useState(false);\r\n  const classes = useStyles();\r\n  const initialValues = {\r\n    id: \"\",\r\n    plants: \"\",\r\n    ERPType: \"\",\r\n    instance: \"\",\r\n    Connectivitydetails: {},\r\n  };\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [connectivityError, setconnectivityError] = useState();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  // const selectedPlant = location.state?.selectedPlantData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantForm, setPlantForm] = useState({});\r\n  const [connDetails, setConnDetails] = useState({});\r\n  const [selectedBU, setSelectedBU] = useState([]);\r\n  const [selectedPlant, setSelectedPlant] = useState({});\r\n\r\n  const materialMasterOption = [\r\n    {\r\n      value: \"Y\",\r\n      label: \"Yes\",\r\n    },\r\n    {\r\n      value: \"N\",\r\n      label: \"No\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setallPlantData(result.plant);\r\n    });\r\n  }, []);\r\n\r\n  //plantform methods\r\n\r\n  const handleAddPlant = async () => {\r\n    setIsLoading(true);\r\n    const newPlant = {\r\n      id: plantForm.id,\r\n      plants: plantForm.plants,\r\n      plantName: plantForm.plantName,\r\n      ERPType: plantForm.ERPType,\r\n      SalesOrg: plantForm.SalesOrg,\r\n      aliasPlant: plantForm.aliasPlant,\r\n      material_master: plantForm.material_master,\r\n      ECN_required: plantForm.ECN_required,\r\n      bomusage: plantForm.bomusage,\r\n      ConnectivityDetails: connDetails,\r\n      // BU: plantForm.ERPType === \"SAP\" ? \"\" : selectedBU,\r\n      // exportToERP: plantForm.ERPType === \"SAP\" ? \"\" : plantForm.exportToERP,\r\n      exportToERP: plantForm.exportToERP,\r\n    };\r\n\r\n    if (plantForm?.instance) {\r\n      newPlant[\"instance\"] = plantForm?.instance;\r\n    }\r\n    if (\r\n      plantForm.plantName?.trim() === \"\" || !plantForm.plantName ||\r\n      plantForm.ERPType?.trim() === \"\" || !plantForm.ERPType ||\r\n      plantForm.instance?.trim() === \"\" || !plantForm.instance ||\r\n      plantForm.exportToERP?.trim() === \"\" || !plantForm.exportToERP ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.plantName?.trim() === \"\" || !plantForm.plantName)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.material_master?.trim() === \"\" || !plantForm.material_master)) ||\r\n      (plantForm.ERPType === \"SAP\" && (plantForm.bomusage?.trim() === \"\" || !plantForm.bomusage)) ||\r\n      (plantForm.ERPType === \"SAP\" && !plantForm.instance)\r\n    ) {\r\n      handlesnackBarClick(\"Please fill required details \", \"error\");\r\n      setIsLoading(false);\r\n    } else {\r\n      setIsLoading(true);\r\n      await plantService.updatePlant(newPlant).then((resp) => {\r\n        if (resp?.data?.id) {\r\n          handlesnackBarClick(\"Plant updated successfully\", \"success\");\r\n          setTimeout(() => {\r\n            setIsLoading(false);\r\n            navigate(\"/plants\");\r\n          }, 2000);\r\n        } else if (resp.msg) {\r\n          setIsLoading(false);\r\n          // console.log(resp.msg, \"res.msg\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCDChange = (e) => {\r\n    setConnDetails({\r\n      ...connDetails,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddCD = () => {\r\n    setDiabox(false);\r\n  };\r\n\r\n  const handlePlantFromChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...plantForm,\r\n      [name]: value,\r\n    };\r\n    setPlantForm(updatedForm);\r\n  };\r\n\r\n  const handleBUChange = (event) => {\r\n    setSelectedBU(event.target.value);\r\n  };\r\n  const handleDialogClose = () => {\r\n    setDiabox(false);\r\n    setconnectivityError(\"\");\r\n  };\r\n\r\n  // snackbar code\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  function hasValues(obj) {\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key) && obj[key] !== \"\" && obj[key] !== undefined) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (params?.plantId) {\r\n      setIsLoading(true);\r\n      plantService.getPlantById({ id: params?.plantId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedPlantObj = resp?.data;\r\n          setSelectedPlant(\r\n            selectedPlantObj\r\n          );\r\n          setSelectedBU(\r\n            selectedPlantObj?.BU\r\n          );\r\n          setPlantForm({\r\n            id: selectedPlantObj?.id,\r\n            plants: selectedPlantObj?.plants,\r\n            plantName: selectedPlantObj?.plantName,\r\n            SalesOrg: selectedPlantObj?.SalesOrg,\r\n            aliasPlant: selectedPlantObj?.aliasPlant,\r\n            ERPType: selectedPlantObj?.ERPType,\r\n            instance: selectedPlantObj?.instance,\r\n            material_master: selectedPlantObj?.material_master,\r\n            ECN_required: selectedPlantObj?.ECN_required,\r\n            bomusage: selectedPlantObj?.bomusage,\r\n            exportToERP: selectedPlantObj?.exportToERP,\r\n\r\n            Connectivitydetails: {\r\n              url: selectedPlantObj?.ConnectivityDetails?.url,\r\n              username: selectedPlantObj?.ConnectivityDetails?.username,\r\n              password: selectedPlantObj?.ConnectivityDetails?.password,\r\n              authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n              port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            },\r\n          });\r\n          setConnDetails({\r\n            url: selectedPlantObj?.ConnectivityDetails?.url,\r\n            username: selectedPlantObj?.ConnectivityDetails?.username,\r\n            password: selectedPlantObj?.ConnectivityDetails?.password,\r\n            authkey: selectedPlantObj?.ConnectivityDetails?.authkey,\r\n            port: selectedPlantObj?.ConnectivityDetails?.port,\r\n            sapsysnum: selectedPlantObj?.ConnectivityDetails?.sapsysnum,\r\n            sapclientid: selectedPlantObj?.ConnectivityDetails?.sapclientid,\r\n          });\r\n        } else {\r\n          navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/plants\", { state: { message: \"Plant not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Plant\" }]} />\r\n      </Box>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        onSubmit={() => {\r\n        }}\r\n      >\r\n        <Form>\r\n          <SimpleCard>\r\n            <Grid item md={9} sm={6} xs={6}>\r\n              <h4>Edit Plant</h4>\r\n\r\n              <Grid container spacing={3} alignItems=\"center\">\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    Plant Name <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                </Grid>\r\n\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <TextField\r\n                    disabled\r\n                    name=\"plantName\"\r\n                    value={plantForm.plantName}\r\n                    onChange={handlePlantFromChange}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    ERP Type <span className={classes.spanRed}>*</span>\r\n                  </span>\r\n                  {/* <span className={classes.spanRed}>*</span> */}\r\n                </Grid>\r\n                <Grid item md={9} sm={8} xs={12}>\r\n                  <Select\r\n                    id=\"ERPType\"\r\n                    name=\"ERPType\"\r\n                    label=\"ERPType\"\r\n                    fullWidth\r\n                    disabled\r\n                    displayEmpty\r\n                    value={[plantForm?.ERPType]}\r\n                    onChange={handlePlantFromChange}\r\n                  >\r\n                    {ERPtypeOptions.map((option) => (\r\n                      <MenuItem key={option.value} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </Grid>\r\n\r\n                {(plantForm.ERPType === \"SAP\" ||\r\n                  plantForm.ERPType === \"ORACLE\") && (\r\n                    <>\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>\r\n                          Instance <span className={classes.spanRed}>*</span>\r\n                        </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <Select\r\n                          label=\"instance\"\r\n                          id=\"instance\"\r\n                          name=\"instance\"\r\n                          disabled\r\n                          fullWidth\r\n                          displayEmpty\r\n                          value={plantForm.instance}\r\n                          onChange={handlePlantFromChange}\r\n                        >\r\n                          {instanceOptions.map((option) => (\r\n                            <MenuItem key={option.value} value={option.value}>\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          ))}\r\n                        </Select>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {[\"ORACLE\", \"SAP\"]?.includes(plantForm.ERPType) && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>Export To ERP</span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"exportToERP\"\r\n                        name=\"exportToERP\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.exportToERP}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {exportToERPOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )}\r\n\r\n                {/* {plantForm.ERPType === \"ORACLE\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Design Organization\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        style={{ width: \"100%\" }}\r\n                        multiple\r\n                        value={selectedBU}\r\n                        onChange={handleBUChange}\r\n                        renderValue={(selected) => selected.join(\", \")}\r\n                        MenuProps={{\r\n                          sx: {\r\n                            \"&& .Mui-selected\": {\r\n                              backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                            }\r\n                          }\r\n                        }}\r\n                      >\r\n                        {BUOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                  </>\r\n                )} */}\r\n\r\n                {plantForm.ERPType === \"SAP\" && (\r\n                  <>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Default Sales Org\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <TextField\r\n                        label=\"SalesOrg\"\r\n                        name=\"SalesOrg\"\r\n                        defaultValue={plantForm.SalesOrg}\r\n                        onChange={handlePlantFromChange}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        Material Master\r\n                      </span>\r\n                      {/* <span className={classes.spanRed}>*</span> */}\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"material_master\"\r\n                        name=\"material_master\"\r\n                        label=\"material_master\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.material_master}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    {plantForm.material_master === \"Y\" && (\r\n                      <>\r\n                        <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                          <span>\r\n                            Plantname Alias\r\n                          </span>\r\n                        </Grid>\r\n\r\n                        <Grid item md={9} sm={8} xs={12}>\r\n                          <TextField\r\n                            label=\"aliasPlant\"\r\n                            name=\"aliasPlant\"\r\n                            value={plantForm.aliasPlant}\r\n                            onChange={handlePlantFromChange}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        ECN Required\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"ECN_required\"\r\n                        name=\"ECN_required\"\r\n                        label=\"ECN_required\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.ECN_required}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {materialMasterOption.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n\r\n                    <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                      <span>\r\n                        BOM Usage\r\n                      </span>\r\n                    </Grid>\r\n\r\n                    <Grid item md={9} sm={8} xs={12}>\r\n                      <Select\r\n                        id=\"bomusage\"\r\n                        name=\"bomusage\"\r\n                        fullWidth\r\n                        displayEmpty\r\n                        value={plantForm.bomusage}\r\n                        onChange={handlePlantFromChange}\r\n                      >\r\n                        {bomusageOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </Grid>\r\n                    {hasValues(connDetails) && (<>\r\n\r\n                      <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                        <span>Connectivity Details </span>\r\n                      </Grid>\r\n\r\n                      <Grid item md={9} sm={8} xs={12}>\r\n                        <span>\r\n                          {Object.keys(connDetails).length === 0 ||\r\n                            (selectedPlant?.ConnectivityDetails === null && (\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                margin=\"2px\"\r\n                                onClick={() => {\r\n                                  setDiabox(true);\r\n                                }}\r\n                              >\r\n                                Add Connectivity Details\r\n                              </Button>\r\n                            ))}\r\n                          {(Object.keys(connDetails).length > 0 ||\r\n                            selectedPlant?.ConnectivityDetails !== null) && (\r\n                              <Grid item md={12} sm={8} xs={12}>\r\n                                <>\r\n                                  <div style={{ display: \"flex\" }}>\r\n                                    <p>\r\n                                      <b>URL :</b> {connDetails.url}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Username :</b> {connDetails.username}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Pass :</b> {connDetails.password}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>authkey :</b> {connDetails.authkey}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    <p>\r\n                                      <b>Port :</b> {connDetails.port}\r\n                                    </p>{\" \"}\r\n                                    &nbsp;\r\n                                    {plantForm.ERPType === \"SAP\" && (\r\n                                      <>\r\n                                        <p>\r\n                                          <b>sapsysnum :</b> {connDetails.sapsysnum}\r\n                                        </p>{\" \"}\r\n                                        &nbsp;\r\n                                        <p>\r\n                                          <b>sapclientid :</b> {connDetails.sapclientid}\r\n                                        </p>{\" \"}\r\n                                      </>\r\n                                    )}\r\n                                    <p>\r\n                                      {\" \"}\r\n                                      <EditIcon\r\n                                        onClick={() => {\r\n                                          setDiabox(true);\r\n                                        }}\r\n                                      />\r\n                                    </p>\r\n                                  </div>\r\n                                </>\r\n                              </Grid>\r\n                            )}\r\n                        </span>\r\n                      </Grid>\r\n                    </>)}\r\n                  </>\r\n                )}\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleAddPlant}\r\n                    >\r\n                      Update\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n                <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                  <span>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      margin=\"2px\"\r\n                      onClick={handleCancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </span>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </SimpleCard>\r\n        </Form>\r\n      </Formik>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n\r\n      {\r\n        (refreshData || isLoading) ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={true} />\r\n          </div>\r\n        ) : <></>\r\n      }\r\n\r\n      {/* dialogBox */}\r\n      <ConnectivityDetailsDialog\r\n        open={diaBox}\r\n        onClose={handleDialogClose}\r\n        connDetails={connDetails}\r\n        handleDialogClose={handleDialogClose}\r\n        handleCDChange={handleCDChange}\r\n        handleAddCD={handleAddCD}\r\n        connectivityError={connectivityError}\r\n        plantForm={plantForm}\r\n        classes={classes}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nimport Plants from \"./plants\";\r\nimport CreatePlant from \"./createPlant\";\r\nimport EditPlant from \"./editPlant\";\r\n\r\nconst plantRoutes = [\r\n  {\r\n    path: \"/plants\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Plants />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/createPlant\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreatePlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editPlant/:plantId\",\r\n    exact: true,\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditPlant />\r\n      </PrivateRoute>\r\n    )\r\n    // auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default plantRoutes;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SourceListService {\r\n  getAllSourceList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/sourceList/getSource`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getSourceDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteSource = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/sourceList/deleteSource`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting source:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewSource = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/addSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewSource\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateSource = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/sourceList/updateSource`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getSourceById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/sourceList/getSourceById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getPlantById\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateSourceList() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const handleAddSource = () => {\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.addnewSource(newSource).then((resp) => {\r\n      if (resp?.data?.id) {\r\n        handlesnackBarClick(\"Source added successfully!\", \"success\");\r\n\r\n        setTimeout(() => {\r\n          navigate(\"/sourceList\");\r\n        }, 2000);\r\n      } else if (resp?.data[0]?.msg) {\r\n        //console.log(resp?.data[0]?.msg, \"res.msg\");\r\n\r\n        handlesnackBarClick(resp.data[0].msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={sourceForm.ERPType}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditSourceList() {\r\n  const { refreshData } = useOracleSettings();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const sourceListService = new SourceListService();\r\n  // const selectedSource = location.state?.selectedSourceData;\r\n  const [sourceForm, setSourceForm] = useState({});\r\n\r\n  const handleAddSource = async () => {\r\n    setIsLoading(true);\r\n    if (\r\n      sourceForm.source?.trim() === \"\" ||\r\n      !sourceForm.source ||\r\n      sourceForm.environment?.trim() === \"\" ||\r\n      !sourceForm.environment ||\r\n      sourceForm.instance?.trim() === \"\" ||\r\n      !sourceForm.instance ||\r\n      sourceForm.ERPType?.trim() === \"\" ||\r\n      !sourceForm.ERPType\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    const newSource = {\r\n      source: sourceForm.source,\r\n      environment: sourceForm.environment,\r\n      instance: sourceForm.instance,\r\n      ERPType: sourceForm.ERPType,\r\n    };\r\n    sourceListService.updateSource(newSource).then((resp) => {\r\n      handlesnackBarClick(\"Source updated successfully\", \"success\");\r\n      setTimeout(() => {\r\n        setIsLoading(false);\r\n        navigate(\"/sourceList\");\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  const handleSourceFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...sourceForm,\r\n      [name]: value,\r\n    };\r\n    setSourceForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  useEffect(() => {\r\n    if (params?.sourceId) {\r\n      setIsLoading(true);\r\n      sourceListService.getSourceById({ id: params?.sourceId }).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data && Object?.keys(resp?.data)?.length) {\r\n          const selectedSource = resp?.data;\r\n          setSourceForm({\r\n            source: selectedSource.source,\r\n            environment: selectedSource.environment,\r\n            instance: selectedSource.instance,\r\n            ERPType: selectedSource.ERPType,\r\n          });\r\n        } else {\r\n          navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/sourceList\", { state: { message: \"Source not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Source\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Source</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Source <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"source\"\r\n                  disabled\r\n                  value={sourceForm.source}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Instance <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"instance\"\r\n                  disabled\r\n                  value={sourceForm.instance}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Environment <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"environment\"\r\n                  value={sourceForm.environment}\r\n                  onChange={handleSourceFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  disabled\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={[sourceForm.ERPType]}\r\n                  onChange={handleSourceFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddSource}\r\n                  >\r\n                    Update\r\n                  </Button>\r\n                </span>\r\n                {/* <span className={classes.spanRed}>*</span> */}\r\n              </Grid>\r\n              <Grid item md={2} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.sourceData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.sourceData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        Source: item.source,\r\n        Instance: item.instance,\r\n        Environment: item.environment,\r\n        'ERP Type': item.ERPType\r\n      }\r\n      return res\r\n    })\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Source' }).then((response) => {\r\n      setExportResponse(response)\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.sourceData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n    }\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSource\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SourceList = () => {\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [sourceData, setsourceData] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const sourceListService = new SourceListService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n  const [unSortSourceData, setUnSortSourceData] = useState([])\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    sourceListService.getAllSourceList()\r\n      .then((result) => {\r\n        setsourceData(result);\r\n        setInitialData(result); // Set initial data\r\n        setFilteredSourceData(result);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const [filteredSourceData, setFilteredSourceData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredSourceData(sourceData);\r\n  }, [sourceData]);\r\n\r\n  let sortedSourceData = sortDataByKey([...filteredSourceData], \"source\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateSourceList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createSourceList\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedSourceData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editSourceList/${selectedSourceData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedSourceData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await sourceListService.deleteSource(selRowsId).then(result => {\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        });\r\n      });\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n    sourceListService.getAllSourceList().then((result) => {\r\n      setsourceData(result);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    const new_FilteredData = sourceData.filter((subscriber) => {\r\n      return (searchValue === \"\" ||\r\n        subscriber.source\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.environment\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.instance\r\n          .toLowerCase()\r\n          .includes(searchValue.toLowerCase()) ||\r\n        subscriber.ERPType.toLowerCase().includes(\r\n          searchValue.toLowerCase()\r\n        ))\r\n    })\r\n\r\n    setFilteredSourceData(new_FilteredData);\r\n  }, [searchValue, sourceData]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedSource = sortedExportDataHOC(SourceList);\r\n    const sortedData = SortedSource({ data: sourceData, sortInfo, sortedSourceData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setsourceData(sortedData.props.data);\r\n    setFilteredSourceData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Source\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateSourceList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sourceData={sourceData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              // Display loading spinner while data is being fetched\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  minHeight: 550\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              // Render DataGrid once data is loaded\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                style={{ minHeight: 550 }}\r\n                defaultLimit={100}\r\n                columns={[\r\n                  {\r\n                    name: \"source\",\r\n                    header: <Tooltip title={'Name'}>Source</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.source}</div>,\r\n                  },\r\n                  {\r\n                    name: \"instance\",\r\n                    header: <Tooltip title={\"Instance\"}>Instance</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"environment\",\r\n                    header: <Tooltip title={\"Environment\"}>Environment</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"ERPType\",\r\n                    header: <Tooltip title={\"ERP Type\"}>ERP Type</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.ERPType}</div>,\r\n                  }\r\n                ]}\r\n                dataSource={sortInfo==null ? filteredSourceData : sortedSourceData}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Source\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the source <b>{selectedSource?.source}</b>{\" \"}\r\n                having instance <b>{selectedSource?.instance}</b> and ERPType{\" \"}\r\n                <b>{selectedSource?.ERPType}</b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted sources?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SourceList;","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateSourceList from \"./createSourceList\";\r\nimport EditSourceList from \"./editSourceList\";\r\nimport SourceList from \"./sourceList\";\r\n\r\nconst sourceListRoutes = [\r\n  {\r\n    path: \"/sourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createSourceList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editSourceList/:sourceId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditSourceList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n];\r\n\r\nexport default sourceListRoutes;\r\n","import {\r\n    BACKEND_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\n\r\n\r\nexport class MappingsService {\r\n\r\n\r\n    getAllMappings = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/mappings/getMappings`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"getSourceDetails\", e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    deleteMapping = (mappingId) => {\r\n        return ApiInstance.delete(`${BACKEND_API_URL}/mappings/deleteMapping/${mappingId}`, REACT_APP_BACKEND_API_HEADER)\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error deleting source:', error);\r\n                throw error;\r\n            });\r\n    };\r\n\r\n    addnewMapping = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mappings/addMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            // console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewSource', e);\r\n            return [];\r\n        });\r\n    };\r\n\r\n    updateMapping = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mappings/updateMapping`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            //console.log(data, 'data in post call');\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error('addnewPlant', e);\r\n            return [];\r\n        });\r\n    };\r\n}","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\n\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function CreateMapping() {\r\n  const [sourceForm, setSourceForm] = useState({});\r\n  const [mappingForm, setMappingForm] = useState({});\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const sourceListService = new SourceListService();\r\n  const mappingService = new MappingsService();\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.addnewMapping(newMaping).then((resp) => {\r\n      if (resp && resp?.data && resp?.data?.length) {\r\n        if (resp?.data[0]?.id) {\r\n          handlesnackBarClick(\"Mapping added successfully!\", \"success\");\r\n\r\n          setTimeout(() => {\r\n            navigate(\"/mappings\");\r\n          }, 200);\r\n        } else if (resp?.data[0]?.msg) {\r\n          handlesnackBarClick(resp?.data[0]?.msg, \"error\");\r\n        }\r\n      } else {\r\n        console.log(\"No data in resp.\");\r\n      }\r\n    });\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // console.log(\r\n  //   valuesInputList,\r\n  //   \"values\"\r\n  // );\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  Paper,\r\n  IconButton,\r\n} from \"@mui/material\";\r\n\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport { ERPtypeOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditMapping() {\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [tempObject, setTempObject] = useState({});\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const location = useLocation();\r\n  const mappingService = new MappingsService();\r\n  const selectedMapping = location.state?.selectedMappingData;\r\n  //console.log(selectedMapping, \"selected from list to edit \");\r\n  const [mappingForm, setMappingForm] = useState({\r\n    Name: selectedMapping.Name,\r\n    ERPType: selectedMapping.ERPType,\r\n  });\r\n\r\n  const reversedList = Object.entries(selectedMapping.List).map(([key, value]) => ({ key, value }));\r\n  //console.log(reversedList, \"reversed list    \")\r\n  const [valuesInputList, setValuesInputList] = useState(reversedList);\r\n\r\n\r\n  const handleAddMapping = () => {\r\n    if (\r\n      mappingForm.Name?.trim() === \"\" ||\r\n      !mappingForm.Name ||\r\n      mappingForm.ERPType?.trim() === \"\" ||\r\n      !mappingForm.ERPType ||\r\n      valuesInputList.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newMaping = {\r\n      Name: mappingForm.Name,\r\n      ERPType: mappingForm.ERPType,\r\n      List: valuesInputList.reduce((acc, curr) => {\r\n        acc[curr.key] = curr.value;\r\n        return acc;\r\n      }, {}),\r\n    };\r\n    mappingService.updateMapping(newMaping).then((resp) => {\r\n      setTimeout(() => {\r\n        navigate(\"/mappings\");\r\n      }, 200);\r\n    });\r\n\r\n    handlesnackBarClick(\"Mapping updated successfully\", \"success\");\r\n  };\r\n\r\n  //*********mapping values*******/\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      { key: newKey, value: newValue },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleMappingvalueChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    } else if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    } else {\r\n      setTempObject((prevObject) => ({\r\n        ...prevObject,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n  //**********values code end******/\r\n\r\n  const handleMappingFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...mappingForm,\r\n      [name]: value,\r\n    };\r\n    setMappingForm(updatedForm);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setSnackbarMessage(message);\r\n    setSnackbarSeverity(severity);\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //console.log(mappingForm, \"mappingForm\");\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Mapping\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Mapping</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"Name\"\r\n                  disabled\r\n                  value={mappingForm.Name}\r\n                  onChange={handleMappingFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>ERP Type </span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"ERPType-label\"\r\n                  id=\"ERPType-select\"\r\n                  name=\"ERPType\"\r\n                  fullWidth\r\n                  value={mappingForm.ERPType}\r\n                  onChange={handleMappingFormChange}\r\n                >\r\n                  {ERPtypeOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Mapping values <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Grid container alignItems=\"center\">\r\n                  <Grid item xs={3} style={{ marginLeft: \"3px\" }}>\r\n                    <TextField\r\n                      name=\"newKey\"\r\n                      label=\"key\"\r\n                      value={newKey}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      name=\"newValue\"\r\n                      label=\"value\"\r\n                      value={newValue}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      margin=\"normal\"\r\n                      onChange={handleMappingvalueChange}\r\n                    />\r\n                  </Grid>\r\n                  &nbsp; &nbsp;\r\n                  <Grid item xs={3}>\r\n                    <Button\r\n                      style={{ fontSize: \"30px\", marginTop: \"6px\" }}\r\n                      onClick={handleAddRow}\r\n                    >\r\n                      <b>+</b>\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <p style={{ color: \"red\" }}>{keyerror}</p>\r\n                <div\r\n                  style={{\r\n                    height: \"100px\",\r\n                    overflowY: \"auto\",\r\n                    border: \"1px solid #ccc\",\r\n                    borderRadius: \"4px\",\r\n                    alignContent: \"center\",\r\n                    width: \"51%\",\r\n                  }}\r\n                >\r\n                  {valuesInputList.map((row, index) => (\r\n                    <Paper\r\n                      key={index}\r\n                      style={{\r\n                        paddingLeft: \"50px\",\r\n                        marginBottom: \"8px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginLeft: \"2px\" }}\r\n                      >\r\n                        <Grid item xs={6}>\r\n                          <p>\r\n                            <b>{row.key}</b>:<b>{row.value}</b>\r\n                          </p>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                          <IconButton onClick={() => handleDeleteRow(index)}>\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Paper>\r\n                  ))}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n              <span>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddMapping}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </span>\r\n              {/* <span className={classes.spanRed}>*</span> */}\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        <Snackbar\r\n          open={snackBar}\r\n          autoHideDuration={3000}\r\n          onClose={handlesnackbarClose}\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n        >\r\n          <Alert\r\n            onClose={handlesnackbarClose}\r\n            severity={snackbarseverity}\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            {snackbarmessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\r\n\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\n\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  InputLabel,\r\n  Grid,\r\n  TextField,\r\n  Autocomplete,\r\n} from \"@mui/material\";\r\n\r\nimport { SourceListService } from \"services/sourceListService\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { MappingsService } from \"services/mappingsService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst Mappings = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [selectedMapping, setSelectedMapping] = useState();\r\n  const [mappingData, setMappingData] = useState();\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [filteredRows, setFilteredRows] = useState([]);\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const mappingService = new MappingsService();\r\n  useEffect(() => {\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n  }, []);\r\n  //console.log(mappingData, \"mappingData\");\r\n\r\n  const [filteredMappingData, setFilteredMappingData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFilteredMappingData(mappingData);\r\n  }, [mappingData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n    if (newSearchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData?.filter(\r\n        (subscriber) =>\r\n          subscriber?.Name?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          ) ||\r\n          subscriber.ERPType?.toLowerCase().includes(\r\n            newSearchValue.toLowerCase()\r\n          )\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (_, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    if (searchValue === \"\") {\r\n      setFilteredMappingData(mappingData);\r\n    } else {\r\n      const filteredData = mappingData.filter((subscriber) =>\r\n        subscriber?.Name.toLowerCase().includes(searchValue.toLowerCase())\r\n      );\r\n      setFilteredMappingData(filteredData);\r\n    }\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n\r\n  const handleCreateMappings = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createMappings\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditMapping = (editselectedMapping) => {\r\n    plantModeRef.current = \"edit\";\r\n\r\n    const selectedMappingData = editselectedMapping;\r\n    setTimeout(() => {\r\n      navigate(\"/editMappings\", {\r\n        state: { plantMode: plantModeRef.current, selectedMappingData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteMappingDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n\r\n    setSelectedMapping(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteMapping = async () => {\r\n    setDeleteDialog(false);\r\n    // console.log(selectedMapping.id, \" selected deleted plant \");\r\n\r\n    try {\r\n      await mappingService.deleteMapping(selectedMapping.id);\r\n    } catch (error) {\r\n      console.error(\"Failed to delete plant:\", error);\r\n    }\r\n\r\n    mappingService.getAllMappings().then((result) => {\r\n      setMappingData(result);\r\n    });\r\n\r\n    handlesnackBarClick();\r\n  };\r\n\r\n  const handlesnackBarClick = () => {\r\n    setsnackBar(true);\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackBar(false);\r\n  };\r\n  // ****************filters**********************\r\n  const [filterValues, setFilterValues] = useState({\r\n    Name: [],\r\n\r\n    ERPType: [],\r\n  });\r\n\r\n  const handleFilterChange = (column, selectedValues) => {\r\n    setFilterValues((prevFilterValues) => ({\r\n      ...prevFilterValues,\r\n      [column]: selectedValues,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let dataToShow = mappingData;\r\n\r\n    if (filterValues[\"Name\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"Name\"].includes(row[\"Name\"])\r\n      );\r\n    }\r\n\r\n    if (filterValues[\"ERPType\"].length > 0) {\r\n      dataToShow = dataToShow.filter((row) =>\r\n        filterValues[\"ERPType\"].includes(row[\"ERPType\"])\r\n      );\r\n    }\r\n\r\n    setFilteredRows(dataToShow);\r\n  }, [filterValues]);\r\n\r\n  const getUniqueValues = (column) => {\r\n    const values = new Set();\r\n    mappingData?.forEach((subscriber) => values.add(subscriber[column]));\r\n    return Array.from(values);\r\n  };\r\n\r\n  // *******filters end***********\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Mappings\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateMappings}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <StyledTable>\r\n              <TableHead>\r\n                <TableRow>\r\n                  {/* <TableCell align=\"left\">Id</TableCell> */}\r\n                  {/*<TableCell align=\"left\">ID</TableCell>*/}\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Mapping Name\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"Name\")}\r\n                      value={filterValues.Name}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"Name\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter Name\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.Name.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      ERP Type\r\n                    </InputLabel>\r\n\r\n                    <br />\r\n                    <Autocomplete\r\n                      style={{ width: \"70%\" }}\r\n                      multiple\r\n                      options={getUniqueValues(\"ERPType\")}\r\n                      value={filterValues.ERPType}\r\n                      onChange={(_, newValue) =>\r\n                        handleFilterChange(\"ERPType\", newValue)\r\n                      }\r\n                      renderValue={() => null}\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          variant=\"outlined\"\r\n                          label=\"Filter ERP Type\"\r\n                          placeholder=\"Search...\"\r\n                        />\r\n                      )}\r\n                      PaperProps={{\r\n                        style: {\r\n                          maxHeight: \"200px\",\r\n                        },\r\n                      }}\r\n                      disableCloseOnSelect\r\n                      isOptionEqualToValue={(option, value) => option === value}\r\n                      getOptionLabel={(option) => option}\r\n                      getOptionSelected={(option, value) =>\r\n                        filterValues.ERPType.includes(value)\r\n                      }\r\n                      ChipProps={{\r\n                        style: {\r\n                          fontSize: \"8px\",\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <InputLabel\r\n                      style={{\r\n                        paddingBottom: \"85px\",\r\n                        fontWeight: \"bold\",\r\n                        color: \"rgba(52, 49, 76, 1)\",\r\n                      }}\r\n                    >\r\n                      Actions\r\n                    </InputLabel>\r\n                  </TableCell>\r\n\r\n                  {/* <TableCell align=\"right\">Action</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredMappingData?.length > 0 ? (\r\n                  filteredMappingData\r\n                    .filter(\r\n                      (subscriber) =>\r\n                        (searchValue === \"\" ||\r\n                          subscriber.Name.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          ) ||\r\n                          subscriber?.ERPType.toLowerCase().includes(\r\n                            searchValue.toLowerCase()\r\n                          )) &&\r\n                        (filterValues.Name.length === 0 ||\r\n                          filterValues.Name.includes(subscriber.Name)) &&\r\n                        (filterValues.ERPType.length === 0 ||\r\n                          filterValues.ERPType.includes(subscriber.ERPType))\r\n                    )\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((subscriber, index) => {\r\n                      return (\r\n                        <TableRow key={index}>\r\n                          {/* <TableCell align=\"left\">{subscriber.id}</TableCell>*/}\r\n                          {/* <TableCell align=\"left\">{subscriber.name}</TableCell> */}\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.Name}\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            {subscriber.ERPType}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            align=\"left\"\r\n                            style={{ textTransform: \"none\" }}\r\n                          >\r\n                            <EditIcon\r\n                              id={subscriber.id}\r\n                              onClick={() => handleEditMapping(subscriber)}\r\n                            />{\" \"}\r\n                            <DeleteIcon\r\n                              onClick={() =>\r\n                                handleDeleteMappingDilaog(subscriber)\r\n                              }\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })\r\n                ) : (\r\n                  <>\r\n                    <TableCell\r\n                      align=\"left\"\r\n                      colSpan={5}\r\n                      style={{ textAlign: \"center\" }}\r\n                    >\r\n                      {\"No result found!\"}\r\n                    </TableCell>\r\n                  </>\r\n                )}\r\n              </TableBody>\r\n            </StyledTable>\r\n            {mappingData?.length ? (\r\n              <TablePagination\r\n                sx={{ px: 2 }}\r\n                page={page}\r\n                component=\"div\"\r\n                rowsPerPage={rowsPerPage}\r\n                count={mappingData?.length}\r\n                onPageChange={handleChangePage}\r\n                rowsPerPageOptions={[10, 25, 50]}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                nextIconButtonProps={{ \"aria-label\": \"Next Page\" }}\r\n                backIconButtonProps={{ \"aria-label\": \"Previous Page\" }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          Mapping deleted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the source <b>{selectedMapping?.Name}</b>{\" \"}\r\n            having ERP type <b>{selectedMapping?.ERPType}</b>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Mappings;\r\n","import React from 'react';\r\nimport { authRoles } from \"../../auth/authRoles\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport CreateMapping from \"./createMappings\";\r\nimport EditMapping from \"./editMappings\";\r\n\r\nimport Mappings from \"./mappings\";\r\n\r\nconst mappingsroutes = [\r\n  {\r\n    path: \"/mappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <Mappings />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin\r\n  },\r\n  {\r\n    path: \"/createMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n  {\r\n    path: \"/editMappings\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditMapping />\r\n      </PrivateRoute>\r\n    ),\r\n    auth: authRoles.admin,\r\n  },\r\n];\r\n\r\nexport default mappingsroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.buData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false);\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.buData) || [];\r\n\r\n    // Check if props.sortInfo is an empty object\r\n    if (!props.sortInfo || Object.keys(props.sortInfo).length === 0) {\r\n      data = data.sort((a, b) => {\r\n        const aValue = a.businessUnit?.toLowerCase() || '';\r\n        const bValue = b.businessUnit?.toLowerCase() || '';\r\n        if (aValue < bValue) return -1;\r\n        if (aValue > bValue) return 1;\r\n        return 0;\r\n      });\r\n    }\r\n   \r\n    let exportData = data?.map(item => {\r\n      let res = {\r\n        'Design Organization': item.businessUnit,\r\n        'Export To ERP Disabled': item.exportToERPdisabled,\r\n        'Export To ERP Bypassed': item.exportToERPbyPassed,\r\n        'Enable BOS Transfer': item.enableBOSTransfer,\r\n        'Context DFF': item.contextDEF,\r\n        'EMR Division ARG': item.EMRDivisionORGValue,\r\n        'Product Hierarchy': item.productHierarchy,\r\n        'Plant Name': item?.plants?.length > 0 ? item?.plants?.map(plant => plant?.plantName).join(\"\\n\") : null,\r\n        'Do Not Send To ERP': item.doNotSendToERP.join(\"\\n\"),\r\n        'Oracle Existing': item.oracleExisting.join(\"\\n\"),\r\n        'Make Without BOM List': item.makeWithoutBOMList.join(\"\\n\"),\r\n        'Not Owning Division List': item.notOwningDivisionList.join(\"\\n\"),\r\n        //ERPType: item.ERPType,\r\n        //Instance: item.instance,\r\n        // attributes: typeof item.attributes == \"object\"? JSON.stringify(item.attributes):null,\r\n        //RDO: typeof item.BU == \"object\" && item.BU.length>0 ? JSON.stringify(item.BU.join(', ')):null,\r\n        // ExportToERP: item.exportToERP,\r\n        // ExistInOracle: item.existInOracle,\r\n        // NotOwningDivision: item.notOwningDivision,\r\n        //Name: item.Name\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'Design Organization' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.buData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { CircularProgress } from \"@mui/material\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { BUService } from \"services/buService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportBUList\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUList = () => {\r\n  const { bussinessUnitLists, updateBussinessUnitLists } = useOracleSettings();\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [selectedSource, setselectedSource] = useState();\r\n  const [buData, setBUData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const buService = new BUService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({}); // State to keep track of sorting information\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [initialData, setInitialData] = useState([]);\r\n  \r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    const styles = \r\n    {\r\n          backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n          zIndex: 99,\r\n          background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n          height: \"auto !important\",\r\n          whiteSpace: \"normal\"\r\n        }\r\n    return styles;\r\n  };\r\n \r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteSourceDilaog(selectedRows[0])\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditSource(selectedRows[0]);\r\n  };\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (!bussinessUnitLists) {\r\n      buService.getAllBuList()\r\n        .then((result) => {\r\n          setBUData(result.data);\r\n          updateBussinessUnitLists(result.data);\r\n          setInitialData(result.data); // Set initial data\r\n          setFilteredBUData(result.data);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setTimeout(() => {\r\n        setBUData(bussinessUnitLists);\r\n        setInitialData(bussinessUnitLists);\r\n        setIsLoading(false);\r\n      }, 500);\r\n\r\n    }\r\n  }, [bussinessUnitLists]);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUData(buData);\r\n  }, [buData]);\r\n\r\n  const sortedFilteredBuData =  sortDataByKey([...filteredBUData], \"buName\");\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n  const plantModeRef = useRef(\"initialValue\");\r\n  const handleCreateBUList = () => {\r\n    plantModeRef.current = \"create\";\r\n    setTimeout(() => {\r\n      navigate(\"/createBU\", {\r\n        state: { plantMode: plantModeRef.current },\r\n      });\r\n    }, 200);\r\n  };\r\n  const handleEditSource = (editSelectedSource) => {\r\n    plantModeRef.current = \"edit\";\r\n    const selectedBUData = editSelectedSource;\r\n    setTimeout(() => {\r\n      navigate(`/editBU/${selectedBUData?.id}`, {\r\n        state: { plantMode: plantModeRef.current, selectedBUData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteSourceDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n    setselectedSource(DeleteSource);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSource = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await buService.deleteBU(selRowsId).then(response => {\r\n        console.log(response, 'delete response')\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete BU:\", error);\r\n    }\r\n    buService.getAllBuList().then((result) => {\r\n      setBUData(result.data);\r\n      updateBussinessUnitLists(result.data)\r\n      setInitialData(result.data);\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (buData) {\r\n      const new_FilteredData = buData.filter((subscriber) => {\r\n        return (searchValue === \"\" ||\r\n          subscriber.buName\r\n            .toLowerCase()\r\n            .includes(searchValue.toLowerCase())\r\n        )\r\n      })\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, buData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      buService.getAllBuList().then((result) => {\r\n        setBUData(result.data);\r\n        updateBussinessUnitLists(result.data)\r\n        setInitialData(result.data); \r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedbuList = sortedExportDataHOC(BUList);\r\n    const sortedData = SortedbuList({ data: buData, sortInfo, sortedFilteredBuData, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setBUData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateBUList}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox sortInfo={sortInfo} buData={buData} filterTemplateData={selectedRows} />\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br />\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  minHeight: 550,\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <DataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                rowStyle={rowStyle}\r\n                // style={{ minHeight: 550 }}\r\n                columns={[\r\n                  {\r\n                    name: \"buName\",\r\n                    header: <Tooltip title={'Design Organization'}>Design Organization</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.buName}</div>,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPdisabled\",\r\n                    header: <Tooltip title={\"Export To ERP Disabled\"}>Export To ERP Disabled</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"exportToERPbyPassed\",\r\n                    header: <Tooltip title={\"Export To ERP Bypassed\"}>Export To ERP Bypassed</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"enableBOSTransfer\",\r\n                    header: <Tooltip title={\"Enable BOS Transfer\"}>Enable BOS Transfer</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                  },\r\n                  {\r\n                    name: \"contextDFF\",\r\n                    header: <Tooltip title={\"Context DFF\"}>Context DFF</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.contextDEF}</div>,\r\n                  },\r\n                  {\r\n                    name: \"EMRDivisionORGValue\",\r\n                    header: <Tooltip title={\"EMR Division ORG Value\"}>EMR Division ARG</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.EMRDivisionORGValue}</div>,\r\n                  },\r\n                  {\r\n                    name: \"productHierarchy\",\r\n                    header: <Tooltip title={\"Product Hierarchy\"}>Product Hierarchy</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => <div>{data?.productHierarchy}</div>,\r\n                  },\r\n                  {\r\n                    name: \"plants\",\r\n                    header: <Tooltip title={\"Plant Name\"}>Plant Name</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.plants\r\n                          .sort((a, b) => a.plantName.localeCompare(b.plantName))\r\n                          .map((item, index) => (\r\n                            <div key={index}>{item?.plantName}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"DoNotSendToERP\",\r\n                    header: <Tooltip title={\"DoNotSendToERP\"}>Do Not Send To ERP</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.doNotSendToERP\r\n                          .sort((a, b) => a.localeCompare(b)) \r\n                          .map((item, index) => (\r\n                            <div key={index}>{item}</div>\r\n                          ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"OracleExisting\",\r\n                    header: <Tooltip title={\"OracleExisting\"}>Oracle Existing</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 50,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.oracleExisting.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"MakeWithoutBOMList\",\r\n                    header: <Tooltip title={\"Make Without BOMList\"}>Make Without BOM List</Tooltip>,\r\n                    defaultFlex: 0,\r\n                    defaultWidth: 170,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.makeWithoutBOMList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div>\r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"NotOwningDivisionList\",\r\n                    header: <Tooltip title={\"Not Owning DivisionList\"}>Not Owning Division List</Tooltip>,\r\n                    defaultFlex: 1,\r\n                    defaultWidth: 100,\r\n                    render: ({ data }) => (\r\n                      <div>\r\n                        {data?.notOwningDivisionList.sort((a, b)=>a.localeCompare(b))\r\n                        .map((item, index) => (\r\n                          <div key={index}>{item}</div> \r\n                        ))}\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ]}\r\n                dataSource={sortedFilteredBuData}\r\n                // rowHeight={null}\r\n                checkboxColumn\r\n                selected={selected}\r\n                onSelectionChange={onSelectionChange}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                pagination\r\n                renderScroller={() => gridRef?.current?.setScrollTop(selectedRows?.length == 0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                onSortInfoChange={handleSortInfoChange}\r\n              />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {\r\n            (selectedRows.length === 1) ? (<>\r\n              <DialogContentText>\r\n                Do you want to delete the RDO <b>{selectedSource?.buName}</b> having\r\n                plants{\" \"}\r\n                <b>\r\n                  {\" \"}\r\n                  {selectedSource?.plants\r\n                    .map((plant) => {\r\n                      return plant.plantName;\r\n                    })\r\n                    .join(\",\")}{\" \"}\r\n                </b>\r\n              </DialogContentText>\r\n            </>) : (<>\r\n              <DialogContentText>\r\n                Do you want to delete the seleted Design Organization?\r\n              </DialogContentText>\r\n            </>)\r\n          }\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSource}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUList;","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nexport default function CreateBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [buForm, setBuFrom] = useState({\r\n    exportToERPdisabled: \"N\",\r\n    exportToERPbyPassed: \"N\",\r\n    enableBOSTransfer: \"Y\",\r\n  });\r\n  const [plantData, setPlantData] = useState([]);\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let navigate = useNavigate();\r\n  const buService = new BUService();\r\n\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n    const newbuName = {\r\n      id: buForm.buName,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.addnewBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, \"error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    setBuFrom(updatedForm);\r\n  };\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(`New Value: ${name} - `, selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n  sortDataByKey(templatesInfo, 'templateName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Create Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Create Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                Design Organization <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPdisabled\"\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPdisabled}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP Bypassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"exportToERPbyPassed\"\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm.exportToERPbyPassed}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span style={{ color: \"#FF3D57\" }}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              {/* DoNotSendToERP */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* OracleExisting */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* MakeWithoutBOMList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* NotOwningDivisionList */}\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              {/* add templates  */}\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={refreshData} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport { styled as makeStyles } from '@mui/material/styles';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { exportToERPOptions, enableBOSTransferOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { BUService } from \"services/buService\";\r\nimport { PlantService } from \"services/plantService\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport Loader from 'app/components/Loader';\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = makeStyles({\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n});\r\n\r\nexport default function EditBU() {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n  const [plantData, setPlantData] = useState([]);\r\n  const location = useLocation();\r\n  // const selectBU = location.state?.selectedBUData;\r\n  const [selectBU, setSelectBU] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [buForm, setBuFrom] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n  const params = useParams();\r\n\r\n  const buService = new BUService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const plantService = new PlantService();\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    plantService.getAllPlantsList().then((result) => {\r\n      setPlantData(result);\r\n      setIsLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      buForm.buName?.trim() === \"\" ||\r\n      !buForm.buName ||\r\n      selectedplants.length === 0\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: buForm.id,\r\n      buName: buForm.buName,\r\n      exportToERPdisabled: buForm.exportToERPdisabled,\r\n      contextDEF: buForm.contextDEF,\r\n      EMRDivisionORGValue: buForm.EMRDivisionORGValue,\r\n      productHierarchy: buForm.productHierarchy,\r\n      exportToERPbyPassed: buForm.exportToERPbyPassed,\r\n      enableBOSTransfer: buForm.enableBOSTransfer,\r\n      plants: selectedplants?.map((option) => {\r\n        return {\r\n          id: option?.id,\r\n          plantName: option?.plantName\r\n        }\r\n      }) || [],\r\n      doNotSendToERP: DoNotSendToERP?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      oracleExisting: OracleExisting?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      makeWithoutBOMList: MakeWithoutBOMList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n      notOwningDivisionList: NotOwningDivisionList?.map((option) => (\r\n        option.templateName\r\n      )) || [],\r\n    };\r\n    setIsLoading(true);\r\n    buService.updateBU(newbuName).then((resp) => {\r\n      setIsLoading(false);\r\n      if (resp.status === 'success') {\r\n        setIsLoading(false);\r\n        tempMapService.getAlltemplateMappings().then((result) => {\r\n          updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n          setIsLoading(true);\r\n        });\r\n        setTimeout(() => {\r\n          navigate(\"/buList\", { state: { message: resp.msg, status: resp.status } });\r\n        }, 200);\r\n      } else if (resp.status === 'error') {\r\n        handlesnackBarClick(resp.msg, resp.status);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handlebuFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...buForm,\r\n      [name]: value,\r\n    };\r\n    console.log(updatedForm, \"===================updatedForm\");\r\n    setBuFrom(updatedForm);\r\n  };\r\n\r\n  const [selectedplants, setSelectedPlants] = useState([]);\r\n  const [DoNotSendToERP, setDoNotSendToERP] = useState([]);\r\n  const [OracleExisting, setOracleExisting] = useState([]);\r\n  const [MakeWithoutBOMList, setMakeWithoutBOMList] = useState([]);\r\n  const [NotOwningDivisionList, setNotOwningDivisionList] = useState([]);\r\n  const handlePlantsChange = (selectedObj) => {\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => plantData.some((existing) => existing.plantName === item.plantName)\r\n    ) || [];\r\n    setSelectedPlants(newselectedObj);\r\n  };\r\n  const handleTemplateChange = (name, selectedObj) => {\r\n    console.log(\"New Value:\", selectedObj);\r\n    const newselectedObj = selectedObj?.filter(\r\n      (item) => templatesInfo.some((existing) => existing.templateName === item.templateName)\r\n    ) || [];\r\n    if (name === 'DoNotSendToERP') {\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    else if (name === 'OracleExisting') {\r\n      setOracleExisting(newselectedObj);\r\n    }\r\n    else if (name === 'MakeWithoutBOMList') {\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    else if (name === 'NotOwningDivisionList') {\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n\r\n  const getTemplValues = (fieldValue) => {\r\n    const newselectedObj = templatesInfo?.filter(\r\n      (item) => fieldValue.some((templateName) => templateName === item.templateName)\r\n    ) || [];\r\n    return newselectedObj;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectBU?.plants) {\r\n      const newselectedObj = plantData?.filter(\r\n        (item) => selectBU?.plants.some((eitem) => eitem?.plantName === item?.plantName)\r\n      ) || [];\r\n      setSelectedPlants(newselectedObj)\r\n    }\r\n    if (selectBU?.doNotSendToERP) {\r\n      const newselectedObj = getTemplValues(selectBU?.doNotSendToERP);\r\n      setDoNotSendToERP(newselectedObj)\r\n    }\r\n    if (selectBU?.oracleExisting) {\r\n      const newselectedObj = getTemplValues(selectBU?.oracleExisting);\r\n      setOracleExisting(newselectedObj)\r\n    }\r\n    if (selectBU?.makeWithoutBOMList) {\r\n      const newselectedObj = getTemplValues(selectBU.makeWithoutBOMList);\r\n      setMakeWithoutBOMList(newselectedObj)\r\n    }\r\n    if (selectBU?.notOwningDivisionList) {\r\n      const newselectedObj = getTemplValues(selectBU.notOwningDivisionList);\r\n      setNotOwningDivisionList(newselectedObj)\r\n    }\r\n  }, [selectBU, plantData, templatesInfo]);\r\n\r\n  useEffect(() => {\r\n    if (params?.buId) {\r\n      setIsLoading(true);\r\n      buService.getBusinessUnitbyid([{ id: params?.buId }]).then((resp) => {\r\n        setIsLoading(false);\r\n        if (resp?.data?.length && (resp?.data?.[0] && Object?.keys(resp?.data?.[0])?.length)) {\r\n          setSelectBU(resp?.data[0]);\r\n          const selectBUValue = resp?.data[0];\r\n          setBuFrom({\r\n            id: selectBUValue.id,\r\n            buName: selectBUValue.buName,\r\n            exportToERPdisabled: selectBUValue.exportToERPdisabled,\r\n            exportToERPbyPassed: selectBUValue.exportToERPbyPassed,\r\n            enableBOSTransfer: selectBUValue.enableBOSTransfer,\r\n            contextDEF: selectBUValue.contextDEF,\r\n            EMRDivisionORGValue: selectBUValue.EMRDivisionORGValue,\r\n            productHierarchy: selectBUValue.productHierarchy,\r\n          });\r\n        } else {\r\n          navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n        }\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/buList\", { state: { message: \"Design Organization not found!\", status: \"error\" } });\r\n      }, 200);\r\n    }\r\n  }, []);\r\n\r\n  sortDataByKey(plantData, 'plantName');\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Edit Design Organization\" }]} />\r\n      </Box>\r\n\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>Edit Design Organization</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Design Organization <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"buName\"\r\n                  disabled\r\n                  value={buForm.buName}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Export to ERP Disabled </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPdisabled\"\r\n                  name=\"exportToERPdisabled\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPdisabled ? buForm?.exportToERPdisabled : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Export To ERP ByPassed\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"exportToERPbyPassed\"\r\n                  name=\"exportToERPbyPassed\"\r\n                  fullWidth\r\n                  value={buForm?.exportToERPbyPassed ? buForm?.exportToERPbyPassed : \"N\"}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {exportToERPOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Enable BOS Transfer </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  labelId=\"enableBOSTransfer\"\r\n                  id=\"enableBOSTransfer\"\r\n                  name=\"enableBOSTransfer\"\r\n                  fullWidth\r\n                  value={buForm?.enableBOSTransfer ? buForm?.enableBOSTransfer : 'Y'}\r\n                  onChange={handlebuFormChange}\r\n                >\r\n                  {enableBOSTransferOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Context DFF\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"contextDEF\"\r\n                  value={buForm.contextDEF}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  EMR Division ARG\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"EMRDivisionORGValue\"\r\n                  value={buForm.EMRDivisionORGValue}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Product Hierarchy\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"productHierarchy\"\r\n                  value={buForm.productHierarchy}\r\n                  onChange={handlebuFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Plant Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={selectedplants}\r\n                  getOptionLabel={(option) => option.plantName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handlePlantsChange(newValue)\r\n                  }}\r\n                  options={plantData}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.plantName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n                <div style={{ marginTop: '5px' }}>\r\n                  <InfoIcon style={{ marginTop: '5px' }} color=\"secondary\" fontSize=\"small\" /><span style={{ marginBottom: '20px' }}> Changing Plants will affect the Template Mappings.</span>\r\n                </div>\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Do Not Send To ERP\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={DoNotSendToERP}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"DoNotSendToERP\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Oracle Existing\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={OracleExisting}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"OracleExisting\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Make Without BOM List\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={MakeWithoutBOMList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"MakeWithoutBOMList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Not Owning Division List\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Autocomplete\r\n                  multiple\r\n                  value={NotOwningDivisionList}\r\n                  getOptionLabel={(option) => option.templateName}\r\n                  autoHighlight\r\n                  onChange={(e, newValue) => {\r\n                    handleTemplateChange(\"NotOwningDivisionList\", newValue)\r\n                  }}\r\n                  options={templatesInfo}\r\n                  renderInput={(params) => <TextField {...params} className={\"sampleeeee\"} />}\r\n                  renderOption={(props, option) => {\r\n                    return (\r\n                      <Box component=\"li\" sx={{ '& > img': { mr: 2, flexShrink: 0 } }} {...props}>\r\n                        {option.templateName}\r\n                      </Box>\r\n                    )\r\n                  }}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleCancel}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  margin=\"2px\"\r\n                  onClick={handleAddbuName}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n        {(openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)}\r\n\r\n        {\r\n          (refreshData || isLoading) ? (\r\n            <div style={{ textAlign: 'center' }}>\r\n              <Loader show={true} />\r\n            </div>\r\n          ) : <></>\r\n        }\r\n      </form>\r\n    </Container >\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport BUList from \"./buList\";\r\nimport CreateBU from \"./createBU\";\r\nimport EditBU from \"./editBU\";\r\n\r\nconst buListRoutes = [\r\n  {\r\n    path: \"/buList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/createBU\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <CreateBU />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/editBU/:buId\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <EditBU />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\nexport default buListRoutes;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from \"shortid\";\r\nimport { MCOService } from \"services/mcoService\";\r\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Box,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { UserService } from \"services/usersService\";\r\n// import download from 'downloadjs';\r\n// import CustomSelect from \"./CustomSelect\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n  whiteSpace: \"pre\",\r\n  \"& thead\": {\r\n    \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n  },\r\n  \"& tbody\": {\r\n    \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n  },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled(\"input\")({\r\n  clip: \"rect(0 0 0 0)\",\r\n  clipPath: \"inset(50%)\",\r\n  height: 1,\r\n  overflow: \"hidden\",\r\n  position: \"absolute\",\r\n  bottom: 0,\r\n  left: 0,\r\n  whiteSpace: \"nowrap\",\r\n  width: 1,\r\n});\r\n\r\nconst BulkImportUsers = ({\r\n  userImportDialog,\r\n  setUserImportDialog,\r\n  setUserData,\r\n}) => {\r\n  const mcoService = new MCOService();\r\n  // const { importBulkUpdateFile, setImportBulkUpdateFile, savePartAndOracleTempInRedux } = props;\r\n  const userService = new UserService();\r\n  const [noFileError, setNoFileError] = useState(false);\r\n  const [importResponse, setImportResponse] = useState(false);\r\n  const [importfileBar, setimportfileBar] = useState(false);\r\n  const [importedFileData, setImportedFileData] = useState(null);\r\n  const [importedFileName, setImportedFileName] = useState(null);\r\n  const instance = localStorage.getItem(\"instance\");\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const importFileData = (e) => {\r\n    console.log(\"file selected\");\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const fileType = file.name.split('.').pop();\r\n      if (fileType === 'xlsx' || fileType === 'xls') {\r\n        // if (\r\n        //   e.target.files[0].name.split(\".\").pop() == \"xlsx\" ||\r\n        //   e.target.files[0].name.split(\".\").pop() === \"xls\"\r\n        // ) {\r\n        setImportedFileData(e.target.files[0]);\r\n        setImportedFileName(e.target.files[0].name);\r\n        setNoFileError(false);\r\n      } else {\r\n        setNoFileError(true);\r\n        setImportedFileName(null);\r\n        setImportedFileData(null);\r\n      }\r\n    } else {\r\n      setNoFileError(true);\r\n      setImportedFileName(null);\r\n      setImportedFileData(null);\r\n    }\r\n  };\r\n\r\n  // const handleCloseImport = () => {\r\n  //     setImportedFileData(null)\r\n  //     setImportBulkUpdateFile(false);\r\n  // };\r\n  const handleImportFile1 = () => {\r\n    let hasError = false;\r\n    if (importedFileData === null || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      hasError = true;\r\n    }\r\n    if (hasError) {\r\n      return;\r\n    }\r\n\r\n    if (importedFileData !== null) {\r\n      //alert('file is upl7oaded')\r\n      let postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      // console.log(importSelectionValues, 'importSelectionValues');\r\n      console.log(postData, \"postData\");\r\n      userService.importUser(postData).then((response) => {\r\n        console.log(response, \"response 11111\");\r\n        if (response.status === \"success\") {\r\n          console.log(\r\n            response,\r\n            \"response 22222 file uploaded successfully and user added\"\r\n          );\r\n        }\r\n        setImportResponse(response);\r\n        setimportfileBar(true);\r\n        setImportedFileData(null);\r\n        setImportedFileName(null);\r\n        //   setImportBulkUpdateFile(false)\r\n        handleCloseImportDialog();\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImportFile = async () => {\r\n    if (!importedFileData || importedFileData.length < 1) {\r\n      setNoFileError(true);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const postData = {\r\n        file: importedFileData,\r\n        data: {\r\n          Instance: instance,\r\n        },\r\n      };\r\n\r\n      console.log(postData, \"postData\");\r\n\r\n      const response = await userService.importUser(postData);\r\n      console.log(response, \"response 11111\");\r\n\r\n      // Determine the status from the response\r\n      const status = response.status || \"error\";\r\n\r\n      // Common tasks for both success and failure cases\r\n      setImportResponse(response);\r\n      setimportfileBar(true);\r\n      setImportedFileData(null);\r\n      setImportedFileName(null);\r\n      handleCloseImportDialog();\r\n\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: status,\r\n        desc: status === \"success\" ? response?.msg : response.errors.join(\", \"),\r\n      });\r\n\r\n      if (status === \"success\") {\r\n        console.log(\r\n          response,\r\n          \"response 22222 file uploaded successfully and user added\"\r\n        );\r\n        const result = await userService.getAllUsersList();\r\n        setUserData(result.data);\r\n      } else {\r\n        console.log(status, \"response status\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error importing file:\", error);\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: \"error\",\r\n        desc: \"An error occurred while importing the file.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    let filelocation = \"sample-bulkUserUpload.xlsx\";\r\n    mcoService.downloadSampleFile(filelocation);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    setUserImportDialog(false);\r\n    setImportedFileData(null);\r\n    setImportedFileName(null);\r\n  };\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={userImportDialog}\r\n        onClose={handleCloseImportDialog}\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: \"#fff\",\r\n            boxShadow: \"none\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Bulk Upload Required Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <StyledTable>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"left\">Upload File (Excel File)</TableCell>\r\n                    <TableCell align=\"left\">\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <Button\r\n                          component=\"label\"\r\n                          variant=\"contained\"\r\n                          startIcon={<CloudUploadIcon />}\r\n                        >\r\n                          Upload file\r\n                          <VisuallyHiddenInput\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            accept=\".xls, .xlsx\"\r\n                            onChange={importFileData}\r\n                          />\r\n                        </Button>\r\n                        {noFileError && (\r\n                          <p>Please Select xlsx file to Upload </p>\r\n                        )}\r\n                      </div>\r\n                      {importedFileName && <p>{importedFileName}</p>}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell colSpan={2}>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <a\r\n                          // href={sampleFileUrl}\r\n                          onClick={handleDownload}\r\n                          download=\"Example-XLSX-document\"\r\n                          rel=\"noreferrer\"\r\n                          // target=\"_blank\"\r\n                          //style={{ color: \"blue\" }}\r\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                        >\r\n                          Click Here\r\n                        </a>{\" \"}\r\n                        to download the sample Excel template for bulk user\r\n                        upload.\r\n                        {/* <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={() => { download(sampleFileUrl) }}>\r\n                                                Download sample file\r\n                                            </Button> */}\r\n                        {/* </a> */}\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        <b>Note:</b> Upload file must contain six columns with\r\n                        header labels in following order.\r\n                      </div>\r\n                      <div style={{ paddingTop: \"10px\" }}>\r\n                        1. User Name\r\n                        <br />\r\n                        3. Name\r\n                        <br />\r\n                        4. Email\r\n                        <br />\r\n                        5. Is Authorized\r\n                        <br />\r\n                        6. User Group\r\n                        <br />\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </StyledTable>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleImportFile}>Upload</Button>\r\n          <Button onClick={handleCloseImportDialog}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkImportUsers;\r\n","import { SimpleCard } from \"app/components\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport RadioGroup from \"@mui/material/RadioGroup\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport { Grid, Box } from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { getUserInfo } from \"@okta/okta-auth-js\";\r\nimport { UserService } from 'services/usersService';\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst BulkExportUsers = ({\r\n  userExportDialog,\r\n  setUserExportDialog,\r\n  userData,\r\n  selectedRows,\r\n}) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [dataToExport, setDataToExport] = useState(userData || []);\r\n  const [value, setValue] = useState(\"allData\");\r\n  const userService = new UserService();\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n\r\n  const handleCloseExportUser = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    console.log(userData, \"userData in bulk export inside export template.\");\r\n\r\n    let data = (value !== \"allData\" ? selectedRows : userData) || [];\r\n    let exportData = data?.map((item) => {\r\n      let res = {\r\n        // userId: item.userId,\r\n        \"Name\": item.name,\r\n        \"User Name\": item.userName,\r\n        Email: item.email,\r\n        \"Is Authorized\": item.is_authorized,\r\n        \"User Group\": item.userinfo.join(\", \"), // Convert array to comma-separated string\r\n      };\r\n      return res;\r\n    });\r\n\r\n    console.log(data, 'data')\r\n    userService\r\n      .exportUser({ data: exportData, sheet_name: \"Users\" })\r\n      .then((response) => {\r\n        setExportResponse(response);\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"User exported successfully!\", \"success\");\r\n\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    handleCloseExportUser();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const newValue = event.target.value;\r\n    setValue(newValue);\r\n\r\n    if (newValue === \"allData\") {\r\n      setDataToExport(userData);\r\n    } else {\r\n      setDataToExport(selectedRows);\r\n    }\r\n  };\r\n\r\n\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Dialog open={userExportDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Users\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">\r\n                        Select Data to Export\r\n                      </FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel\r\n                          value=\"allData\"\r\n                          control={<Radio />}\r\n                          label=\"All Data\"\r\n                        />\r\n                        <FormControlLabel\r\n                          value=\"selectedData\"\r\n                          disabled={selectedRows.length === 0}\r\n                          control={<Radio />}\r\n                          label=\"Selected Data\"\r\n                        />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseExportUser}>Cancel</Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BulkExportUsers;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport BulkImportUsers from \"./bulkImportUsersDialog\";\r\nimport { Box, styled, Grid, TextField } from \"@mui/material\";\r\n\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport BulkExportUsers from \"./bulkExportUsersDialog\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst UserList = () => {\r\n  const location = useLocation();\r\n  let toastState = location.state;\r\n  const [userData, setUserData] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const userService = new UserService();\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [userImportDialog, setUserImportDialog] = useState(false);\r\n  const [userExportDialog, setUserExportDialog] = useState(false);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({}); // Add this line\r\n\r\n  // ==============table===========\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap =\r\n    gridRef && gridRef.current && gridRef.current.dataMap\r\n      ? gridRef.current.dataMap\r\n      : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"name\",\r\n      header: \"Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.name}</div>,\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"email\",\r\n      header: \"Email\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.email}</div>,\r\n    },\r\n    {\r\n      name: \"is_authorized\",\r\n      header: \"Is Authorized\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>{data?.is_authorized === \"Y\" ? \"Yes\" : \"No\"}</div>\r\n      ),\r\n    },\r\n    {\r\n      name: \"userinfo\",\r\n      header: \"User Group\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => (\r\n        <div>\r\n          {data?.userinfo ? data.userinfo.map((item) => item).join(\", \") : \"\"}\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const handleDeleteDialog = () => {\r\n    handleDeleteUserDilaog(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n    // Perform delete operation here using the rowId or rowData\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    handleEditUser(selectedRows[0]);\r\n  };\r\n\r\n  // ===========Import Export Functions==========//\r\n  const handleImportDialog = () => {\r\n    setUserImportDialog(true);\r\n  };\r\n  const handleExportDialog = () => {\r\n    setUserExportDialog(true);\r\n  };\r\n  const handleCloseImportDialog = () => {\r\n    console.log(\"close dialog\");\r\n    setUserImportDialog(false);\r\n  };\r\n  const handleCloseExportDialog = () => {\r\n    setUserExportDialog(false);\r\n  };\r\n  // ===========Import Export Functions==========//\r\n\r\n  // ==============table===========\r\n\r\n  useEffect(() => {\r\n    console.log(userData, \"userData inside useEffect\");\r\n    if (userData.length === 0) {\r\n      setIsLoading(true);\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n        setIsLoading(false);\r\n      });\r\n    } else {\r\n      setUserData(userData);\r\n    }\r\n  }, []);\r\n  const [filteredBUData, setFilteredBUData] = useState([]);\r\n\r\n// Ensure filteredBUData is an array\r\nconst validFilteredBUData = Array.isArray(filteredBUData) ? filteredBUData : [];\r\nlet sortedUsersData = sortDataByKey([...validFilteredBUData], \"name\");\r\n\r\n  useEffect(() => {\r\n    setFilteredBUData(userData);\r\n    setInitialData(sortedUsersData);\r\n  }, [userData]);\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => { };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleCreateUser = () => {\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: false },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleEditUser = (editSelectedUser) => {\r\n    const selectedUserData = editSelectedUser;\r\n    setTimeout(() => {\r\n      navigate(\"/addEditUser\", {\r\n        state: { isEdit: true, selectedUserData },\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  const handleDeleteUserDilaog = (DeleteSource) => {\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteUser = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true);\r\n      console.log(selectedRows, \"selectedRows\");\r\n      const selRowsId = selectedRows?.map((item) => item?.id);\r\n      await userService.deleteUser(selRowsId).then((response) => {\r\n        console.log(response, \"delete response\");\r\n        setIsLoading(false);\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete User:\", error);\r\n    }\r\n    userService.getAllUsersList().then((result) => {\r\n      setUserData(result.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails =\r\n      selRowsData && Object.keys(selRowsData).map((key) => selRowsData[key]);\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    if (userData) {\r\n      const new_FilteredData = userData.filter((subscriber) => {\r\n        return (\r\n          searchValue === \"\" ||\r\n          subscriber.name.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.email.toLowerCase().includes(searchValue.toLowerCase()) ||\r\n          subscriber.userName.toLowerCase().includes(searchValue.toLowerCase())\r\n        );\r\n      });\r\n      setFilteredBUData(new_FilteredData);\r\n    }\r\n  }, [searchValue, userData]);\r\n  useEffect(() => {\r\n    if (toastState?.status) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: toastState?.status,\r\n        desc: toastState?.message,\r\n      });\r\n      userService.getAllUsersList().then((result) => {\r\n        setUserData(result.data);\r\n        setInitialData(result.data); // Set initial data\r\n      });\r\n    }\r\n    toastState = {};\r\n\r\n    // Clear the state value on page refresh\r\n    window.onbeforeunload = () => {\r\n      window.history.replaceState({}, document.title);\r\n    };\r\n  }, [toastState]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(UserList);\r\n    const sortedData = SortedUserData({ data: userData, sortedUsersData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setUserData(sortedData.props.data);\r\n    setFilteredBUData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Users\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={handleCreateUser}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={handleEditMappingDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleImportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Import\r\n            </Button>\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleExportDialog}\r\n              style={{ margin: \"0 0px 0 10px\" }}\r\n            >\r\n              Export\r\n            </Button>\r\n          </Grid>\r\n          <Box width=\"100%\" overflow=\"auto\">\r\n            <br></br>\r\n            {isLoading ? (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              filteredBUData && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={{ minHeight: 550 }}\r\n                  defaultLimit={100}\r\n                  columns={columns}\r\n                    dataSource={sortInfo === null ? filteredBUData : sortedUsersData}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={(ref) => (gridRef.current = ref ? ref.current : null)}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                  />\r\n              )\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {openDesc ? (\r\n        <CustomAlertBox\r\n          openAlert={openAlert}\r\n          openDesc={openDesc}\r\n          setOpenAlert={setOpenAlert}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Design Organization\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the seleted User(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteUser}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <BulkExportUsers\r\n        userExportDialog={userExportDialog}\r\n        handleCloseExportDialog={handleCloseExportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserExportDialog={setUserExportDialog}\r\n        selectedRows={selectedRows}\r\n        userData={sortInfo && Object.keys(sortInfo).length === 0 ? sortedUsersData : userData} />\r\n        <BulkImportUsers\r\n        userImportDialog={userImportDialog}\r\n        setUserImportDialog={setUserImportDialog}\r\n        setUserData={setUserData}\r\n\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport { Box, styled, Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { is_authorizedOptions } from \"../adminConfig/common\";\r\nimport { userGroupOptions } from \"../adminConfig/common\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { UserService } from \"services/usersService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst useStyles = {\r\n  spanRed: {\r\n    color: \"#FF3D57\",\r\n  },\r\n};\r\n\r\nexport default function AddEditUser() {\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const location = useLocation();\r\n  const isEdit = location.state?.isEdit;\r\n  const selectedUser = location.state?.selectedUserData !== undefined ? location.state?.selectedUserData : {};\r\n  const [userForm, setUserFrom] = useState({\r\n    id: selectedUser.userId !== undefined ? selectedUser.userId : Date.now().toString(),\r\n    userName: selectedUser.userName,\r\n    name: selectedUser.name,\r\n    email: selectedUser.email,\r\n    is_authorized: selectedUser.is_authorized !== undefined ? selectedUser.is_authorized : 'Y',\r\n    userinfo: selectedUser.userinfo !== undefined ? selectedUser.userinfo : []\r\n  });\r\n  const classes = useStyles;\r\n  let navigate = useNavigate();\r\n  const userService = new UserService();\r\n\r\n  const handleAddbuName = () => {\r\n    if (\r\n      userForm.userName?.trim() === \"\" ||\r\n      !userForm.userName ||\r\n      userForm.name?.trim() === \"\" ||\r\n      !userForm.name ||\r\n      userForm.email?.trim() === \"\" ||\r\n      !userForm.email ||\r\n      userGroup.length === 0 ||\r\n      userForm.is_authorized?.trim() === \"\" ||\r\n      !userForm.is_authorized\r\n    ) {\r\n      handlesnackBarClick(\"Please fill the require details\", \"error\");\r\n      return;\r\n    }\r\n\r\n    const newbuName = {\r\n      id: userForm.id,\r\n      userName: userForm.userName,\r\n      name: userForm.name,\r\n      email: userForm.email,\r\n      is_authorized: userForm.is_authorized,\r\n      userinfo: userGroup,\r\n    };\r\n    if (isEdit) {\r\n      userService.updateUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    } else {\r\n      userService.addnewUser({ userData: newbuName }).then((resp) => {\r\n        if (resp.status === 'success') {\r\n          setTimeout(() => {\r\n            navigate(\"/userList\", { state: { message: resp.msg, status: resp.status } });\r\n          }, 200);\r\n        } else if (resp.status === 'error') {\r\n          handlesnackBarClick(resp.msg, resp.status);\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleUserFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...userForm,\r\n      [name]: value,\r\n    };\r\n    setUserFrom(updatedForm);\r\n  };\r\n  const [userGroup, setUserGroup] = useState(selectedUser.userinfo || []);\r\n  const handleuserGroupChange = (event) => {\r\n    const selectedValues = event.target.value;\r\n    const userGroupInfo = userGroupOptions.filter((option) =>\r\n      selectedValues.includes(option)\r\n    );\r\n    setUserGroup(userGroupInfo);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n  const handleCancel = () => {\r\n    setTimeout(() => {\r\n      navigate(-1)\r\n    }, 200);\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: isEdit ? \"Edit User\" : \"Create User\" }]} />\r\n      </Box>\r\n      <form>\r\n        <SimpleCard>\r\n          <Grid item md={9} sm={6} xs={6}>\r\n            <h4>{isEdit ? \"Edit User\" : \"Create User\"}</h4>\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"name\"\r\n                  value={userForm.name}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Name <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"userName\"\r\n                  // disabled={isEdit}\r\n                  value={userForm.userName}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  Email <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <TextField\r\n                  name=\"email\"\r\n                  disabled={isEdit}\r\n                  value={userForm.email}\r\n                  onChange={handleUserFormChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>Is Authorized</span>{\" \"}\r\n                <span className={classes.spanRed}>*</span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  id=\"is_authorized\"\r\n                  name=\"is_authorized\"\r\n                  fullWidth\r\n                  value={userForm.is_authorized ? userForm.is_authorized : ''}\r\n                  onChange={handleUserFormChange}\r\n                >\r\n                  {is_authorizedOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n\r\n              <Grid item md={3} sm={4} xs={12} className=\"font-medium\">\r\n                <span>\r\n                  User Group <span className={classes.spanRed}>*</span>\r\n                </span>\r\n              </Grid>\r\n\r\n              <Grid item md={9} sm={8} xs={12}>\r\n                <Select\r\n                  style={{ width: \"100%\" }}\r\n                  multiple\r\n                  value={userGroup.map((item) => item)}\r\n                  onChange={handleuserGroupChange}\r\n                  renderValue={(selected) => selected.join(\", \")}\r\n                  MenuProps={{\r\n                    sx: {\r\n                      \"&& .Mui-selected\": {\r\n                        backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                      }\r\n                    }\r\n                  }}\r\n                >\r\n                  {userGroupOptions?.map((option) => (\r\n                    <MenuItem key={option} value={option}>\r\n                      {option}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </Grid>\r\n\r\n            </Grid>\r\n            <br />\r\n            <Grid container spacing={3} alignItems=\"center\">\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleAddbuName}\r\n                  >\r\n                    {isEdit ? \"Update\" : \"Create\"}\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n              <Grid item md={3} sm={4} xs={6} className=\"font-medium\">\r\n                <span>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    margin=\"2px\"\r\n                    onClick={handleCancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </span>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </SimpleCard>\r\n      </form>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport USERList from \"./usersList\";\r\nimport AddEditUser from \"./addEditUsers\";\r\n\r\nconst userListRoutes = [\r\n  {\r\n    path: \"/userList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <USERList />\r\n      </PrivateRoute>\r\n    )\r\n  },\r\n  {\r\n    path: \"/addEditUser\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <AddEditUser />\r\n      </PrivateRoute>\r\n    )\r\n  }\r\n];\r\n\r\nexport default userListRoutes;\r\n","const Constant ={\r\n    \"adminConstant\":{\r\n        \"common\":{\r\n            \"deleteNote\":\"Data will not be romeved from the master data. It will be added to your draft changes only.\",\r\n        },\r\n        \"buplantList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"Plant\": \"PLANT\",\r\n                \"BomStatus\": \"BOM STATUS\",\r\n                \"PoORG\": \"PO ORG\",\r\n                \"RduOuSetORG\": \"RDU OU SET ORG\",\r\n            }\r\n        },\r\n        \"expensemapList\":{\r\n            \"tooltip\":{\r\n                \"EXPENSE_TEMPLATE\": \"Template\",\r\n                \"RDO\": \"Design Organization\",\r\n                \"PlantName\":\"Plant Name\"\r\n            }\r\n        },\r\n        \"mvoallowedchangesList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"mvoTemplatesFrom\": \"MVO Template - From\",\r\n                \"mvoTemplatesTo\": \"MVO Template - To\",\r\n            }\r\n        },\r\n        \"mvoTemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionMVO\": \"Template MVO\",\r\n                \"HasMBom\":\"Has MBom\",\r\n                \"OnMBom\":\"ON MBom\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoExist\":\"PO Exist\",\r\n                \"EBomAllowed\":\"EBOM Allowed\",\r\n                \"AllowableOrgTemplate\": \"Org Allowed Templates - Status\",\r\n            }\r\n        },\r\n        \"orgAllowedList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"AllowableOrgTemplate\": \"Template Name\",\r\n                \"HasMBom\":\"Has MBOM\",\r\n                \"EBOM\":\"EBOM Allowed\",\r\n                \"Optional\":\"Optional\",\r\n                \"PoCheck\":\"PO Org Check\",\r\n                \"OnMbom\":\"ON MBOM\",\r\n                \"status\":\"status\"\r\n            }\r\n        },\r\n        \"parttypetemplateList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateOptionsMVO\": \"Enovia Part Type\",\r\n                \"allowableOrgTemplatesExclusive\":\"Org Allowed Templates - Exclusive use\"\r\n            }\r\n        },\r\n        \"setComptempList\":{\r\n            \"tooltip\":{\r\n                \"RDO\": \"Design Organization\",\r\n                \"TemplateForOrgExist\": \"Template for Org(s) Existing\",\r\n                \"TemplateForOrgModify\":\"Template for Org Modifying\"\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default Constant","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { notOwningDivisionOptions } from \"../../adminConfig/common\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nconst OrgAllowedDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  selectedPlants,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  selectedBU\r\n}) => {\r\n\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnitLists,\r\n  } = useOracleSettings();\r\n  const filteredPlants = () => {\r\n    return bussinessUnitLists?.find((plant) => plant.buName === selectedBU)?.plants || []\r\n  };\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Org Allowed Templates \" : \"Add OrgAllowed Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template Name <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"ALLOWABLE_ORG_TEMPLATES\"\r\n              fullWidth\r\n              value={orgAllowedForm.ALLOWABLE_ORG_TEMPLATES}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Has MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Has_MBOM\"\r\n              name=\"Has_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              On MBOM <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"On_MBOM\"\r\n              name=\"On_MBOM\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              EBOM Allowed <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"EBOM_Allowed\"\r\n              name=\"EBOM_Allowed\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Optional <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"Optional\"\r\n              name=\"Optional\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              PO Org Check: <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"PO_Org_Exist_Check\"\r\n              name=\"PO_Org_Exist_Check\"\r\n              fullWidth\r\n              displayEmpty\r\n              value={orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y'}\r\n              onChange={handleorgAllowedFormChange}\r\n            >\r\n              {notOwningDivisionOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Plants <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"plants\"\r\n              value={selectedPlants}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {filteredPlants()?.map((option) => (\r\n                <MenuItem key={option.plantName} value={option.plantName}>\r\n                  {option.plantName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OrgAllowedDialog;\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class HistoryManagementService {\r\n\r\n  // draftChanges services\r\n  getAlldraftChanges = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/draftChanges/getDraftChanges`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deletedraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/adddraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"adddraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/draftChanges/updatedraftChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updatedraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  applyDraftChanges = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/draftChanges/acceptChanges`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"applyDraftChanges\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  discardDraftChanges = (dataId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/draftChanges/deletedraftChanges/${dataId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting discardDraftChanges:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  // mappingHistory services\r\n  getAllmappingHistory = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/mappingHistory/getMappingHistory`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class MVOtempcompService {\r\n  getAlltempcompMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTempCompMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  softDeleteTempCompMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/softDeleteTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"softDeleteTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport shortId from 'shortid';\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CloudDownloadIcon from '@mui/icons-material/CloudDownload';\r\n\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TablePagination,\r\n    TableRow,\r\n    Box,\r\n    styled,\r\n    InputLabel,\r\n    Autocomplete,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport AlertTitle from '@mui/material/AlertTitle';\r\n\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport Loader from 'app/components/Loader';\r\n\r\nimport download from 'downloadjs';\r\nimport CustomSelect from \"./CustomSelect\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst StyledTable = styled(Table)(() => ({\r\n    whiteSpace: \"pre\",\r\n    \"& thead\": {\r\n        \"& tr\": { \"& th\": { paddingLeft: 0, paddingRight: 0 } },\r\n    },\r\n    \"& tbody\": {\r\n        \"& tr\": { \"& td\": { paddingLeft: 0, textTransform: \"capitalize\" } },\r\n    },\r\n}));\r\n\r\nconst VisuallyHiddenInput = styled('input')({\r\n    clip: 'rect(0 0 0 0)',\r\n    clipPath: 'inset(50%)',\r\n    height: 1,\r\n    overflow: 'hidden',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    whiteSpace: 'nowrap',\r\n    width: 1,\r\n});\r\n\r\nconst ImportMappingsDialog = (props) => {\r\n    const {\r\n        allTemplatesInfo,\r\n        // updateTemplateLists,\r\n        updateRefreshData,\r\n        bussinessUnitLists\r\n    } = useOracleSettings();\r\n\r\n    const templateMappingService = new TemplateMappingService();\r\n    const { importTemplate, setImportTemplate, fetchData } = props;\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const [noFileError, setNoFileError] = useState(false);\r\n    const [importResponse, setImportResponse] = useState(false);\r\n\r\n    const [importfileBar, setimportfileBar] = useState(false);\r\n    const [importedFileData, setImportedFileData] = useState(null)\r\n    const [importedFileName, setImportedFileName] = useState(null);\r\n\r\n    const [sampleFileUrl, setSampleFileUrl] = useState(null);\r\n\r\n    const [ERPTypeError, setERPTypeError] = useState(false);\r\n    const [instanceError, setinstanceError] = useState(false);\r\n    const [BUError, setBUError] = useState(false);\r\n    const [importSelectionValues, setImportSelectionValues] = useState({\r\n        ERPType: [],\r\n        instance: [],\r\n        BU: [],\r\n    });\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n\r\n    const importFileData = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            const fileType = file.name.split('.').pop();\r\n            if (fileType === 'xlsx' || fileType === 'xls') {\r\n                // if (e.target.files[0].name.split('.').pop() === 'xlsx' || e.target.files[0].name.split('.').pop() === 'xls') {\r\n                setImportedFileData(e.target.files[0])\r\n                setImportedFileName(e.target.files[0].name)\r\n                setNoFileError(false)\r\n            } else {\r\n                setNoFileError(true)\r\n                setImportedFileName(null)\r\n                setImportedFileData(null);\r\n            }\r\n        } else {\r\n            setNoFileError(true)\r\n            setImportedFileName(null)\r\n            setImportedFileData(null);\r\n        }\r\n    }\r\n\r\n    const handleCloseImportTemplate = () => {\r\n        setImportedFileData(null)\r\n        setImportTemplate(false);\r\n    };\r\n\r\n    const handleImportTemplate = () => {\r\n        if (importSelectionValues.BU === null || importSelectionValues.BU.length < 1) {\r\n            setBUError(true);\r\n            return;\r\n        }\r\n\r\n        if (importedFileData === null || importedFileData.length < 1) {\r\n            setNoFileError(true);\r\n            return;\r\n        }\r\n        if (importedFileData !== null) {\r\n            let postData = {\r\n                'file': importedFileData,\r\n                data: {\r\n                    BU: importSelectionValues.BU,\r\n                    MappingType: props?.MappingType,\r\n                }\r\n            };\r\n\r\n            // console.log(importSelectionValues, 'importSelectionValues');\r\n            // console.log(postData, 'postData');\r\n            // return;\r\n            setIsLoading(true);\r\n            templateMappingService.importTemplate(postData).then((response) => {\r\n                // console.log(response, 'response 11111');\r\n                setImportResponse(response)\r\n                setimportfileBar(true);\r\n                setImportedFileData(null)\r\n                setImportedFileName(null)\r\n                setImportTemplate(false);\r\n                let desc = {};\r\n                let severity='';\r\n                if (response && response.status === 'error') {\r\n                    desc = (\r\n                        <div style={{ color: 'red' }}>\r\n                            {response?.msg} <br />\r\n                            {response?.errorInTemplateCount && (\r\n                                <>\r\n                                    Total Template Count: {response.errorInTemplateCount} <br />\r\n                                    Templates are: <br />\r\n                                    <ul>\r\n                                        {response.errorInTemplate.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n\r\n                            {response?.errorInPlantCount && (\r\n                                <>\r\n                                    Total Plant Count: {response.errorInPlantCount} <br />\r\n                                    Plants are: <br />\r\n                                    <ul>\r\n                                        {response.errorInPlants.map((eitem) => (\r\n                                            <li key={shortId.generate()}>{eitem}</li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                    severity = 'error';\r\n                } else {\r\n                    if (response.errorCount > 0 || (!response.newTemplateAdded && !response.updateTemplates)) {\r\n                        desc = (\r\n                            <div style={{ color: 'red' }}>\r\n                                Failure <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                                {response.errorCount > 0 && <>Error in Template: {response.errorCount} <br /></>}\r\n                            </div>\r\n                        );\r\n                        severity = 'error';\r\n                    } else {\r\n                        desc = (\r\n                            <div>\r\n                                {response.msg} <br />\r\n                                New Template Added: {response.newTemplateAdded} <br />\r\n                                Template Updated: {response.updateTemplates} <br />\r\n                            </div>\r\n                        );\r\n                        severity = 'success';\r\n                    }\r\n                }\r\n\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: severity,\r\n                    desc: desc,\r\n                });\r\n                setIsLoading(false);\r\n                if (severity === 'error') return; // Stop further execution if there is an error\r\n                if (!response?.errorInTemplateCount || !response?.errorInPlantCount) {\r\n                    updateRefreshData(true);\r\n                    fetchData();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    const handleImportfileBarClose = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n        setimportfileBar(false);\r\n    };\r\n\r\n    const handleImportTemplateSelection = (column, selectedValues) => {\r\n        setImportSelectionValues((prevselectedValues) => {\r\n            return {\r\n                ...prevselectedValues,\r\n                [column]: selectedValues,\r\n            };\r\n        })\r\n        if (column === 'ERPType') { setERPTypeError(false) }\r\n        if (column === 'instance') { setinstanceError(false) }\r\n        if (column === 'BU') { setBUError(false) }\r\n        console.info(importSelectionValues, 'importSelectionValues')\r\n    }\r\n\r\n    const getUniqueValues = (column) => {\r\n        const values = new Set();\r\n\r\n        // console.log(allTemplatesInfo, 'allTemplatesInfo 11111');\r\n\r\n        // allTemplatesInfo?.forEach((subscriber) => {\r\n        //     if (column === \"plants\") {\r\n        //         subscriber[column]?.forEach((plant) => {\r\n        //             values.add(plant.plantName);\r\n        //         });\r\n        //     } else if (column === \"BU\") {\r\n        //         subscriber[column]?.forEach((BU) => {\r\n        //             values.add(BU);\r\n        //         });\r\n        //     } else {\r\n        //         values.add(subscriber[column]);\r\n        //     }\r\n        // });\r\n        bussinessUnitLists?.forEach(item => {\r\n            values.add(item[column]);\r\n        })\r\n        return Array.from(values);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let getsampleFileUrl = null;\r\n        switch (props?.MappingType) {\r\n            case \"orgallowedvalues\":\r\n                getsampleFileUrl = \"sample-orgAllowedTemplate.xlsx\";\r\n                break;\r\n            case \"mvoTemplateCompatibility\":\r\n                getsampleFileUrl = \"sample-mvotemplatecompatibility.xlsx\";\r\n                break;\r\n            case \"parttypetotemplate\":\r\n                getsampleFileUrl = \"sample-partTypeToTemplate.xlsx\";\r\n                break;\r\n            case \"mvoallowedchanges\":\r\n                getsampleFileUrl = \"sample-mvoallowedchanges.xlsx\";\r\n                break;\r\n            case \"setcompatibletemplates\":\r\n                getsampleFileUrl = \"sample-setcompatibletemplates.xlsx\";\r\n                break;\r\n            case \"buplantmapping\":\r\n                getsampleFileUrl = \"sample-RDOPlantMapping.xlsx\";\r\n                break;\r\n            case \"expensemapping\":\r\n                getsampleFileUrl = \"sample-expensemapping.xlsx\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        setSampleFileUrl(getsampleFileUrl);\r\n    }, [props.MappingType]);\r\n\r\n    // useEffect(() => {\r\n    //     templateMappingService.getAlltemplateMappings().then((result) => {\r\n    //         updateTemplateLists(result?.data?.templateMappingList);\r\n    //     });\r\n    // }, [])\r\n    const handleDownload = () => {\r\n        templateMappingService.downloadSampleFile(sampleFileUrl)\r\n    };\r\n    return (\r\n        <>\r\n            <Dialog open={importTemplate}\r\n                style={{\r\n                    zIndex: 999, // Set your desired z-index value\r\n                }}>\r\n                <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                    {props.title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Box width=\"100%\" overflow=\"auto\">\r\n                            <StyledTable>\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\">\r\n                                            <InputLabel\r\n                                                style={{\r\n                                                    fontWeight: \"bold\",\r\n                                                    color: \"rgba(52, 49, 76, 1)\",\r\n                                                }}\r\n                                            >\r\n                                                Design Organization\r\n                                            </InputLabel>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\">\r\n                                            <Autocomplete\r\n                                                style={{ width: \"70%\" }}\r\n                                                multiple={false}\r\n                                                options={getUniqueValues(\"buName\")}\r\n                                                // options={getBuList}\r\n                                                value={importSelectionValues.BU}\r\n                                                onChange={(_, newValue) =>\r\n                                                    handleImportTemplateSelection(\"BU\", newValue)\r\n                                                }\r\n                                                renderValue={() => null}\r\n                                                renderInput={(params) => (\r\n                                                    <TextField\r\n                                                        {...params}\r\n                                                        variant=\"outlined\"\r\n                                                        label=\"Select RDO\"\r\n                                                        placeholder=\"Search...\"\r\n                                                    />\r\n                                                )}\r\n                                                PaperProps={{\r\n                                                    style: {\r\n                                                        maxHeight: \"200px\",\r\n                                                    },\r\n                                                }}\r\n                                                disableCloseOnSelect={false}\r\n                                                disableClearable\r\n                                                isOptionEqualToValue={(option, value) => option === value}\r\n                                                getOptionSelected={(option, value) =>\r\n                                                    importSelectionValues.BU.includes(value)\r\n                                                }\r\n                                                ChipProps={{\r\n                                                    style: {\r\n                                                        fontSize: \"8px\",\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                            {BUError && (<p style={{ color: 'red' }}>please select Design Organization</p>)}\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\r\n                                            Upload file\r\n                                            <VisuallyHiddenInput type=\"file\" name=\"file\" accept=\".xls, .xlsx\" onChange={importFileData} />\r\n                                        </Button>\r\n                                        {noFileError && (<p>Please Select xlsx file to Upload </p>)}\r\n                                    </div>\r\n                                    {importedFileName && (<p>{importedFileName}</p>)}\r\n                                    <div style={{ paddingTop: '10px' }}>\r\n                                        {/* <a\r\n                                            href={sampleFileUrl}\r\n                                            download=\"Example-XLSX-document\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noreferrer\"\r\n                                        > */}\r\n                                        <Button component=\"label\" variant=\"contained\" startIcon={<CloudDownloadIcon />} onClick={handleDownload}>\r\n                                            Download sample file\r\n                                        </Button>\r\n                                        {/* </a> */}\r\n                                    </div>\r\n                                </TableBody>\r\n                            </StyledTable>\r\n\r\n                        </Box>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCloseImportTemplate}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleImportTemplate}>Import</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* <Snackbar\r\n                open={importfileBar}\r\n                autoHideDuration={6000}\r\n                onClose={handleImportfileBarClose}\r\n                anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n            >\r\n                <Alert\r\n                    onClose={handleImportfileBarClose}\r\n                    severity={(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"success\" : \"error\"}\r\n                    sx={{ width: \"100%\" }}\r\n                >\r\n                    <AlertTitle>{(importResponse && (!importResponse?.errorInTemplate?.length && !importResponse?.errorInPlants?.length)) ? \"Success\" : \"Error\"}</AlertTitle>\r\n                    {\r\n                        (importResponse && (importResponse?.errorInTemplate?.length || importResponse?.errorInPlants?.length)) ? (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse?.msg} <br />\r\n                                    {\r\n                                        (importResponse?.errorInTemplateCount) ? (<>\r\n                                            Total Template Count: {importResponse?.errorInTemplateCount} <br />\r\n                                            Templates are: <br />\r\n                                            <ul>\r\n                                                {\r\n                                                    importResponse?.errorInTemplate?.map((eitem) => {\r\n                                                        return (\r\n                                                            <li key={shortId.generate()}>\r\n                                                                {eitem}\r\n                                                            </li>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </>) : (<></>)\r\n                                    }\r\n\r\n                                    {\r\n                                        (importResponse?.errorInPlantCount) ? (\r\n                                            <>\r\n                                                Total Plant Count: {importResponse?.errorInPlantCount} <br />\r\n                                                Plants are: <br />\r\n                                                <ul>\r\n                                                    {\r\n                                                        importResponse?.errorInPlants?.map((eitem) => {\r\n                                                            return (\r\n                                                                <li key={shortId.generate()}>\r\n                                                                    {eitem}\r\n                                                                </li>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </ul>\r\n                                            </>\r\n                                        ) : (<></>)\r\n                                    }\r\n\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <div>\r\n                                    {importResponse.msg} <br />\r\n                                    New Template Added: {importResponse.newTemplateAdded} <br />\r\n                                    Template Updated: {importResponse.updateTemplates} <br />\r\n                                </div>\r\n                            </>\r\n                        )\r\n                    }\r\n                </Alert>\r\n            </Snackbar > */}\r\n            {(openDesc) ? (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} sx={{ '& .MuiAlertTitle-root': { backgroundColor: 'red' } }} />\r\n            ) : (<></>)}\r\n\r\n            {\r\n                isLoading ? (\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <Loader show={isLoading} />\r\n                    </div>\r\n                ) : <></>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImportMappingsDialog;","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOtemplatecompContext = createContext({\r\n    mvotemplatecompInfo: [],\r\n    updateMVOtempcompLists: () => [],\r\n})\r\n\r\nexport const MVOtempcompProvider = ({ children }) => {\r\n    const [mvotemplatecompInfo, setMvotemplatecompInfo] = useState([]);\r\n\r\n    const updateMVOtempcompLists = (values) => {\r\n        setMvotemplatecompInfo(values);\r\n       // console.log(values, \"inside update  333\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvotemplatecompInfo, \"templatesContext\");\r\n    }, [mvotemplatecompInfo]);\r\n\r\n    return (\r\n        <MVOtemplatecompContext.Provider\r\n            value={{\r\n                mvotemplatecompInfo,\r\n                updateMVOtempcompLists,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOtemplatecompContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOtemplatecompContext;","import { useContext } from 'react';\r\nimport MVOtemplatecompContext from 'app/contexts/MvoTempCompContext';\r\n\r\nconst useMVOtempComp = () => useContext(MVOtemplatecompContext)\r\n\r\nexport default useMVOtempComp\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst PartTypeTemplateContext = createContext({\r\n  parttypetemplateinfo: [],\r\n  updateParttypeTemplate: () => [],\r\n});\r\n\r\nexport const ParttypetemplateProvider = ({ children }) => {\r\n  const [parttypetemplateinfo, setPartTypeTemplateinfo] = useState([]);\r\n\r\n  const updateParttypeTemplate = (values) => {\r\n    setPartTypeTemplateinfo(values);\r\n    //console.log(values, \"inside update context 2222\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(parttypetemplateinfo, \"templatesContext\");\r\n  }, [parttypetemplateinfo]);\r\n\r\n  return (\r\n    <PartTypeTemplateContext.Provider\r\n      value={{\r\n        parttypetemplateinfo,\r\n        updateParttypeTemplate,\r\n      }}\r\n    >\r\n      {children}\r\n    </PartTypeTemplateContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateContext;\r\n","import { useContext } from 'react';\r\nimport PartTypeTemplateContext from 'app/contexts/ParttypetemplateContext';\r\n\r\nconst usePartTypeTemplate = () => useContext(PartTypeTemplateContext)\r\n\r\nexport default usePartTypeTemplate\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst MVOallowedchangesContext = createContext({\r\n    mvoallowedchangesinfo: [],\r\n    updateMVOallowedchanges: () => [],\r\n})\r\n\r\nexport const MVOallowedchangesProvider = ({ children }) => {\r\n    const [mvoallowedchangesinfo, setmvoallowedchangesInfo] = useState([]);\r\n\r\n    const updateMVOallowedchanges = (values) => {\r\n        setmvoallowedchangesInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(mvoallowedchangesinfo, \"templatesContext\");\r\n    }, [mvoallowedchangesinfo]);\r\n\r\n    return (\r\n        <MVOallowedchangesContext.Provider\r\n            value={{\r\n                mvoallowedchangesinfo,\r\n                updateMVOallowedchanges,\r\n            }}\r\n        >\r\n            {children}\r\n        </MVOallowedchangesContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MVOallowedchangesContext;","import { useContext } from 'react';\r\n\r\nimport MVOallowedchangesContext from '../contexts/MVOallowedchangesContext'\r\n\r\nconst useMVoallowedchanges = () => useContext(MVOallowedchangesContext)\r\n\r\nexport default useMVoallowedchanges\r\n      ","import { createContext, useState, useEffect } from \"react\";\r\n\r\nconst SetTempCompContext = createContext({\r\n  comptempInfo: [],\r\n  updatecomptempList: () => [],\r\n});\r\n\r\nexport const SetTempCompProvider = ({ children }) => {\r\n  const [comptempInfo, setcomptempInfo] = useState([]);\r\n\r\n  const updatecomptempList = (values) => {\r\n    setcomptempInfo(values);\r\n   // console.log(values, \"inside update context\");\r\n  };\r\n\r\n  useEffect(() => {\r\n   // console.log(comptempInfo, \"templatesContext\");\r\n  }, [comptempInfo]);\r\n\r\n  return (\r\n    <SetTempCompContext.Provider\r\n      value={{\r\n        comptempInfo,\r\n        updatecomptempList,\r\n      }}\r\n    >\r\n      {children}\r\n    </SetTempCompContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SetTempCompContext;\r\n","import { useContext } from 'react';\r\n\r\nimport SetTempCompProvider from '../contexts/SetCompTempContext';\r\n\r\n\r\nconst useCompTemp = () => useContext(SetTempCompProvider)\r\n\r\nexport default useCompTemp\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst BUPlantContext = createContext({\r\n    buplantsInfo: [],\r\n    updatebuplantsInfo: () => [],\r\n})\r\n\r\nexport const BUPlantProvider = ({ children }) => {\r\n    const [buplantsInfo, setBuplantInfo] = useState([]);\r\n\r\n    const updatebuplantsInfo = (values) => {\r\n        setBuplantInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(buplantsInfo, \"templatesContext\");\r\n    }, [buplantsInfo]);\r\n\r\n    return (\r\n        <BUPlantContext.Provider\r\n            value={{\r\n                buplantsInfo,\r\n                updatebuplantsInfo,\r\n            }}\r\n        >\r\n            {children}\r\n        </BUPlantContext.Provider>\r\n    );\r\n};\r\n\r\nexport default BUPlantContext;","import { useContext } from 'react';\r\n\r\nimport BUPlantContext from 'app/contexts/BUPlantContext';\r\n\r\nconst useBUPlant = () => useContext(BUPlantContext)\r\n\r\nexport default useBUPlant\r\n      ","import { createContext, useState, useEffect } from 'react'\r\n\r\nconst ExpenseMappingContext = createContext({\r\n    expensemapInfo: [],\r\n    updateExpenseMap: () => [],\r\n})\r\n\r\nexport const ExpenseMapProvider = ({ children }) => {\r\n    const [expensemapInfo, setExpensemapInfo] = useState([]);\r\n\r\n    const updateExpenseMap = (values) => {\r\n        setExpensemapInfo(values);\r\n       // console.log(values, \"inside update context\");\r\n    };\r\n\r\n    useEffect(() => {\r\n       // console.log(expensemapInfo, \"templatesContext\");\r\n    }, [expensemapInfo]);\r\n\r\n    return (\r\n        <ExpenseMappingContext.Provider\r\n            value={{\r\n                expensemapInfo,\r\n                updateExpenseMap,\r\n            }}\r\n        >\r\n            {children}\r\n        </ExpenseMappingContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ExpenseMappingContext;","import { useContext } from 'react';\r\n\r\nimport ExpenseMappingContext from 'app/contexts/ExpenseMapContext';\r\n\r\nconst useExpenseMap = () => useContext(ExpenseMappingContext)\r\n\r\nexport default useExpenseMap\r\n      ","import { SimpleCard } from \"app/components\"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport useMVOtempComp from \"app/hooks/useMVOtempComp\";\r\nimport usePartTypeTemplate from \"app/hooks/usePartTypeTemplate\";\r\nimport useMVoallowedchanges from \"app/hooks/useMVOallowedChanges\";\r\nimport useCompTemp from \"app/hooks/useCompTemp\";\r\nimport useBUPlant from \"app/hooks/useBUPlant\";\r\nimport useExpenseMap from \"app/hooks/useExpenseMap\";\r\nimport CustomAlertBox from \"./CustomAlertBox\";\r\nimport { sortAndReorderData } from \"app/utils/utils\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportMappingTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState([]);\r\n  const { templatesInfo, bussinessUnit, mappingTemplatesInfo } = useOracleSettings();\r\n  const { mvotemplatecompInfo } = useMVOtempComp();\r\n  const { parttypetemplateinfo } = usePartTypeTemplate();\r\n  const { mvoallowedchangesinfo } = useMVoallowedchanges();\r\n  const { comptempInfo } = useCompTemp();\r\n  const { buplantsInfo } = useBUPlant();\r\n  const { expensemapInfo } = useExpenseMap();\r\n  const [value, setValue] = useState('allData');\r\n  //const AllTempData = templatesInfo;\r\n  const filteredTempData = props.filterTemplateData;\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  let bu = localStorage.getItem('bussinessUnit');\r\n\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  const handleExportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  \r\n  function isObjectBlank(obj) { \r\n    return obj && Object.keys(obj).length === 0 && obj.constructor === Object; \r\n  }\r\n\r\n  useEffect(() => {\r\n\r\n    if (mappingTemplatesInfo) {\r\n      mappingTemplatesInfo.forEach(template => {\r\n        const details = template.details;\r\n        if (details) {\r\n          details.allowableOrgTemplates && details.allowableOrgTemplates.sort((a, b) => {\r\n            const key = a.ALLOWABLE_ORG_TEMPLATE ? 'ALLOWABLE_ORG_TEMPLATE' : 'org_allowed_template';\r\n            return a[key] < b[key] ? -1 : a[key] > b[key] ? 1 : 0;\r\n          });\r\n\r\n          details.MVO_TEMPLATES_TO && details.MVO_TEMPLATES_TO.sort((a, b) => {\r\n            return a.MVO_TEMPLATE_TO < b.MVO_TEMPLATE_TO ? -1 : a.MVO_TEMPLATE_TO > b.MVO_TEMPLATE_TO ? 1 : 0;\r\n          });\r\n\r\n          details.TEMPLATE_ORG_MODIFYING && details.TEMPLATE_ORG_MODIFYING.sort((a, b) => {\r\n            return a.TEMPLATE_ORG_MODIFYING < b.TEMPLATE_ORG_MODIFYING ? -1 : a.TEMPLATE_ORG_MODIFYING > b.TEMPLATE_ORG_MODIFYING ? 1 : 0;\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    let mappingType = props.MappingType;\r\n\r\n    if (mappingType === \"mvoallowedchanges\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_FROM';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_FROM';\r\n    }\r\n    if (mappingType === \"mvoTemplateCompatibility\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'MVO_TEMPLATE_OPTION';\r\n      props.sortInfo.columnName = 'MVO_TEMPLATE_OPTION';\r\n    }\r\n    if (mappingType === \"parttypetotemplate\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'ENGG_ITEM_TYPE';\r\n      props.sortInfo.columnName = 'ENGG_ITEM_TYPE';\r\n    }\r\n    // if (mappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n    //   props.sortInfo.dir = 1;\r\n    //   props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n    //   props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n    // }\r\n    if (mappingType === \"setcompatibletemplates\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'TEMPLATE_ORG_EXISTING';\r\n      props.sortInfo.columnName = 'TEMPLATE_ORG_EXISTING';\r\n    }\r\n    if (mappingType === \"expensemapping\" && isObjectBlank(props?.sortInfo)) {\r\n      props.sortInfo.dir = 1;\r\n      props.sortInfo.name = 'EXPENSE_TEMPLATE';\r\n      props.sortInfo.columnName = 'EXPENSE_TEMPLATE';\r\n    }\r\n    let AllTempData = mappingType && mappingTemplatesInfo ? mappingTemplatesInfo.filter(\r\n      (item) => item.MappingType === mappingType) : [];\r\n    // switch (mappingType) {\r\n    //   case \"orgallowedvalues\":\r\n    //     AllTempData = templatesInfo\r\n    //   break;\r\n    //   case \"mvoTemplateCompatibility\":\r\n    //     AllTempData = mvotemplatecompInfo\r\n    //   break;\r\n    //   case \"parttypetotemplate\":\r\n    //     AllTempData = parttypetemplateinfo\r\n    //   break;\r\n    //   case \"mvoallowedchanges\":\r\n    //     AllTempData = mvoallowedchangesinfo\r\n    //   break;\r\n    //   case \"setcompatibletemplates\":\r\n    //     AllTempData = comptempInfo\r\n    //   break;\r\n    //   case \"buplantmapping\":\r\n    //     AllTempData = buplantsInfo\r\n    //   break;\r\n    //   case \"expensemapping\":\r\n    //     AllTempData = expensemapInfo\r\n    //   break;\r\n    //   default:  AllTempData = templatesInfo\r\n    //     break;\r\n    // } \r\n    if (value === 'allData' && props.sortInfo) {\r\n      AllTempData.sort((a, b) => {\r\n        const field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n        const aValue = a[field]?.toLowerCase() || '';\r\n        const bValue = b[field]?.toLowerCase() || '';\r\n        if (aValue < bValue) {\r\n          return props.sortInfo.dir === 1 ? -1 : 1;\r\n        }\r\n        if (aValue > bValue) {\r\n          return props.sortInfo.dir === 1 ? 1 : -1;\r\n        }\r\n        return 0;\r\n      });\r\n    \r\n    }\r\n    let data = value === 'allData' ? AllTempData : props?.filterTemplateData;\r\n    data = data?.filter(item => item.BUID === bussinessUnit);\r\n\r\n    let exportData = data.map(item => {\r\n      if (mappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template Name\": item?.details?.ALLOWABLE_ORG_TEMPLATES,\r\n          \"Design Organization\": item.BUID,\r\n          \"Has MBOM\": item?.details?.Has_MBOM,\r\n          \"On MBOM\": item?.details?.On_MBOM,\r\n          \"EBOM Allowed\": item?.details?.EBOM_Allowed,\r\n          \"Optional\": item?.details?.Optional,\r\n          \"PO Org Check\": item?.details?.PO_Org_Exist_Check,\r\n          ...item?.details?.Plants\r\n        };\r\n        // // res = {...res, ...item?.details?.Plants}\r\n        //  console.log(res, 'newRes')\r\n        //  console.log(item?.details?.Plants, '...item?.details?.Plants')\r\n        //  //let sorted = {...res, ...item?.details?.Plants}\r\n        //  const addObjectResource = Object.assign(res, item?.details?.Plants);\r\n        //  console.log(addObjectResource, 'addObjectResource')\r\n        return res\r\n      } else if (mappingType === 'mvoTemplateCompatibility' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Template MVO\": index === 0 ? item.details.MVO_TEMPLATE_OPTION : null,\r\n            \"Org Allowed Templates\": item1.ALLOWABLE_ORG_TEMPLATE,\r\n            \"Status:\": item1.status,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'parttypetotemplate' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.allowableOrgTemplates?.map((item1, index) => {\r\n          let res = {\r\n            \"Enovia Part Type\": index === 0 ? item.details.ENGG_ITEM_TYPE : null,\r\n            \"Org Allowed Templates\": item1.org_allowed_template,\r\n            \"Exclusive Use\": item1.exclusive_use,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'mvoallowedchanges' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.MVO_TEMPLATES_TO?.map((item1, index) => {\r\n          let res = {\r\n            \"MVO Template - From\": index === 0 ? item.details.MVO_TEMPLATE_FROM : null,\r\n            \"MVO Template - To\": item1.MVO_TEMPLATE_TO,\r\n            \"Design Organization\": index===0?item.BUID:null,\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'setcompatibletemplates' && item.actionFlag !== \"Delete\") {\r\n        return item.details?.TEMPLATE_ORG_MODIFYING?.map((item1, index) => {\r\n          let res = {\r\n            \"Template for Org(s) Existing\": index === 0 ? item.details.TEMPLATE_ORG_EXISTING : null,\r\n            \"Template for Org Modifying\": item1.TEMPLATE_ORG_MODIFYING,\r\n            \"Design Organization\": index===0?item.BUID:null\r\n          }\r\n          return res\r\n        })\r\n      } else if (mappingType === 'buplantmapping' && item.actionFlag !== \"Delete\") {\r\n        //console.log(item, 'inside export data')\r\n        let res = {\r\n          // \"Design Organization\": item.BUID,\r\n          // \"Plants\": item.details.PLANT,\r\n          // \"BOM/NOBOM\": item.details.BOM_STATUS,\r\n          // \"PO Org\": item.details.PO_ORG,\r\n          // \"RDO OU Org set\": item.details.RDU_OU_ORG_SET,\r\n          Entity: item.details.Entity,\r\n          ...Object.keys(item.details.PLANT).sort().reduce((acc, key) => {\r\n            acc[key] = item.details.PLANT[key];\r\n            return acc;\r\n          }, {})\r\n        };\r\n        return res\r\n      } else if (mappingType === 'expensemapping' && item.actionFlag !== \"Delete\") {\r\n        let res = {\r\n          \"Template\": item.details.EXPENSE_TEMPLATE,\r\n          \"Design Organization\": bussinessUnit,\r\n          ...item.details.EXPENSE_PLANTS\r\n        }\r\n        return res\r\n      }\r\n    })\r\n\r\nlet filterData = exportData.flat().filter(item => item !== null && item !== undefined);\r\n\r\nsetDataToExport(filterData);\r\n  }, [bussinessUnit,\r\n    templatesInfo,\r\n    mvotemplatecompInfo,\r\n    parttypetemplateinfo,\r\n    mvoallowedchangesinfo,\r\n    comptempInfo,\r\n    buplantsInfo,\r\n    expensemapInfo,\r\n    value,\r\n    mappingTemplatesInfo,\r\n    props.filterTemplateData,\r\n    props.sortInfo\r\n  ])\r\n\r\n  /* export template data start */\r\n  const exportTemplateHandle = () => {\r\n    //console.log(dataToExport, 'dataToExport dataToExport dataToExport')\r\n    if (dataToExport) {\r\n      let dataToPass = dataToExport;\r\n      if (props.title === \"RDO Plant Mapping\") {\r\n        dataToPass = sortAndReorderData(dataToExport);\r\n      }\r\n      if (props.title === \"Org Allowed Templates\") {\r\n        if (props.MappingType === \"orgallowedvalues\" && isObjectBlank(props?.sortInfo)) {\r\n          props.sortInfo.dir = 1;\r\n          props.sortInfo.name = 'ALLOWABLE_ORG_TEMPLATES';\r\n          props.sortInfo.columnName = 'ALLOWABLE_ORG_TEMPLATES';\r\n        }\r\n        if (props.sortInfo) {\r\n          dataToPass.sort((a, b) => {\r\n            let field = props.sortInfo.id || props.sortInfo.name || props.sortInfo.columnName;\r\n            // Check if the field is 'ALLOWABLE_ORG_TEMPLATES' and sort by 'Template Name'\r\n            if (field === 'ALLOWABLE_ORG_TEMPLATES') {\r\n              field = 'Template Name';\r\n            }\r\n            const aValue = a[field]?.toLowerCase() || '';\r\n            const bValue = b[field]?.toLowerCase() || '';\r\n            if (aValue < bValue) {\r\n              return props.sortInfo.dir === 1 ? -1 : 1;\r\n            }\r\n            if (aValue > bValue) {\r\n              return props.sortInfo.dir === 1 ? 1 : -1;\r\n            }\r\n            return 0;\r\n          });\r\n        }\r\n      }\r\n      tempService.exportTemplate({ 'data': dataToPass, 'sheet_name': props.title.substring(0, 26), 'bussiness_unit': bu }).then((response) => {\r\n        setExportResponse(response)\r\n        //console.log(response, ';resprespresp')\r\n        handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n      });\r\n    }\r\n    setExportTemplate(false)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleExportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleExportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n          \r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportMappingTemplate;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport OrgAllowedDialog from \"./orgallowedDialog\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\nconst OrgAllowedValuesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgallowedData, setorgallowedData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteTempMapping = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Template Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  // ****************filters**********************\r\n\r\n  // *********org allowed values dialog methods**********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ALLOWABLE_ORG_TEMPLATES\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        'BUID': bussinessUnit,\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  }\r\n\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.ALLOWABLE_ORG_TEMPLATES\r\n    );\r\n    const filteredPlants =\r\n      bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants ||\r\n      [];\r\n\r\n    const resultPayload = {};\r\n\r\n    // Iterate over filteredPlants\r\n    filteredPlants.forEach((plant) => {\r\n      const plantName = plant.plantName;\r\n      resultPayload[plantName] = selectedPlants?.includes(plantName) ? \"Y\" : \"N\";\r\n    });\r\n    if (\r\n      !orgAllowedForm.ALLOWABLE_ORG_TEMPLATES ||\r\n      !orgAllowedForm.BUID ||\r\n      selectedPlants?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"orgallowedvalues\",\r\n        id: templateid[0].id + \"_\" + orgAllowedForm.BUID.trim(),\r\n        details: {\r\n          ALLOWABLE_ORG_TEMPLATES: orgAllowedForm.ALLOWABLE_ORG_TEMPLATES,\r\n          Has_MBOM: orgAllowedForm.Has_MBOM !== undefined ? orgAllowedForm.Has_MBOM : 'Y',\r\n          EBOM_Allowed: orgAllowedForm.EBOM_Allowed !== undefined ? orgAllowedForm.EBOM_Allowed : 'Y',\r\n          Optional: orgAllowedForm.Optional !== undefined ? orgAllowedForm.Optional : 'Y',\r\n          PO_Org_Exist_Check: orgAllowedForm.PO_Org_Exist_Check !== undefined ? orgAllowedForm.PO_Org_Exist_Check : 'Y',\r\n          On_MBOM: orgAllowedForm.On_MBOM !== undefined ? orgAllowedForm.On_MBOM : 'Y',\r\n          ALLOWABLE_ORG_TEMPLATES_ID: templateid[0].id,\r\n          Plants: resultPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"Org Allowed Values added successfully\", \"success\");\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Org Allowed Values updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setSelectedPlants([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditOrgAllowedValues = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    for (const key in selectedRows[0]?.details?.Plants) {\r\n      if (selectedRows[0]?.details?.Plants[key] === \"Y\") {\r\n        selectedPlants.push(key);\r\n      }\r\n    }\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const prepareTableColumn = (orgallowedData) => {\r\n    let plantColumnsSet = new Set(); // Define it outside\r\n    if (orgallowedData && orgallowedData.length > 0) {\r\n      orgallowedData.forEach((dataItem) => {\r\n        const plants = dataItem.details?.Plants;\r\n        if (plants) {\r\n          const plantKeys = Object.keys(plants);\r\n          plantKeys.forEach((plant) => {\r\n            plantColumnsSet.add(plant);\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n      return {\r\n        name: plant,\r\n        header: plant,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        ),\r\n      };\r\n    });\r\n    const columns = [\r\n      {\r\n        name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n        defaultWidth: 250,\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>Template Name</Tooltip>,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n\r\n      {\r\n        name: \"BUID\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.RDO}>Design Organization</Tooltip>,\r\n        defaultWidth: 150,\r\n      },\r\n      {\r\n        name: \"Has_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"On_MBOM\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"EBOM_Allowed\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM Allowed</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"Optional\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n        defaultWidth: 100,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      {\r\n        name: \"PO_Org_Exist_Check\",\r\n        header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO org Check</Tooltip>,\r\n        defaultWidth: 120,\r\n        render: (params) => (\r\n          <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n        )\r\n      },\r\n      ...plantColumns,\r\n    ];\r\n\r\n    return columns;\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterOrgAllowedData = sortDataByKey(tableTempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredOrgAllowedDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"orgallowedvalues\" });\r\n        if (filteredOrgAllowedDraftData.length > 0 && filteredOrgAllowedDraftData[0].MappingType === 'orgallowedvalues') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredOrgAllowedDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['TEMPLATE_MAPPING'] === obj2['id']) {\r\n                obj1.details.draftValue_ALLOWABLE_ORG_TEMPLATES = obj2.details.ALLOWABLE_ORG_TEMPLATES !== obj1.details.ALLOWABLE_ORG_TEMPLATES ? obj2.details.ALLOWABLE_ORG_TEMPLATES : null;\r\n                obj1.details.draftValue_Has_MBOM = obj2.details.Has_MBOM !== obj1.details.Has_MBOM ? obj2.details.Has_MBOM : null;\r\n                obj1.details.draftValue_On_MBOM = obj2.details.On_MBOM !== obj1.details.On_MBOM ? obj2.details.On_MBOM : null;\r\n                obj1.details.draftValue_EBOM_Allowed = obj2.details.EBOM_Allowed !== obj1.details.EBOM_Allowed ? obj2.details.EBOM_Allowed : null;\r\n                obj1.details.draftValue_Optional = obj2.details.Optional !== obj1.details.Optional ? obj2.details.Optional : null;\r\n                obj1.details.draftValue_PO_Org_Exist_Check = obj2.details.PO_Org_Exist_Check !== obj1.details.PO_Org_Exist_Check ? obj2.details.PO_Org_Exist_Check : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.Plants) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.Plants[key] !== obj1.details.Plants[key] ? obj2.details.Plants[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        setorgallowedData(finalTempMapList);\r\n        let data = finalTempMapList.map(item => {\r\n          item[\"ALLOWABLE_ORG_TEMPLATES\"] = item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES ? item?.details?.draftValue_ALLOWABLE_ORG_TEMPLATES : item?.details?.ALLOWABLE_ORG_TEMPLATES\r\n          item[\"Has_MBOM\"] = item?.details?.draftValue_Has_MBOM\r\n            ? `${item?.details?.draftValue_Has_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Has_MBOM}</span>`\r\n            : item?.details.Has_MBOM;\r\n          item[\"On_MBOM\"] = item?.details?.draftValue_On_MBOM ? `${item?.details?.draftValue_On_MBOM} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.On_MBOM}</span>`\r\n            : item?.details.On_MBOM;\r\n          item[\"EBOM_Allowed\"] = item?.details?.draftValue_EBOM_Allowed ? `${item?.details?.draftValue_EBOM_Allowed} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.EBOM_Allowed}</span>`\r\n            : item?.details.EBOM_Allowed;\r\n          item[\"Optional\"] = item?.details?.draftValue_Optional ? `${item?.details?.draftValue_Optional} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.Optional}</span>`\r\n            : item?.details.Optional;\r\n          item[\"PO_Org_Exist_Check\"] = item?.details?.draftValue_PO_Org_Exist_Check ? `${item?.details?.draftValue_PO_Org_Exist_Check} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${item?.details.PO_Org_Exist_Check}</span>`\r\n            : item?.details.PO_Org_Exist_Check;\r\n\r\n          Object.keys(item?.details?.Plants).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.Plants[plant]} <span>` : item?.details?.Plants[plant]\r\n              : item[plant] = item?.details?.Plants[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    }\r\n    else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      if (result.data) {\r\n        let filterData = result.data.filter(element => element.BUID === BUID || element.BUID === 'Another Name');\r\n        setFilteredDraftTabledata(filterData);\r\n      } else {\r\n        setFilteredDraftTabledata([]);\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Org Allowed Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    //setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item md={12} sm={12} xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditOrgAllowedValues}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                //onClick={handleDeleteOrgAllowedValues}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Org Allowed Templates\"}\r\n                MappingType={\"orgallowedvalues\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={prepareTableColumn(orgallowedData) || []}\r\n                  //dataSource={orgallowedData}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterOrgAllowedData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard >\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the OrgAllowedTemplates Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteTempMapping}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <OrgAllowedDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Allowed Template Mappings\"}\r\n        MappingType={\"orgallowedvalues\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default OrgAllowedValuesList;\r\n","import React from \"react\";\r\nimport OrgAllowedValuesList from \"./orgallowedList\";\r\nconst OrgAllowedValuesWrapper = () => {\r\n    return (\r\n        <OrgAllowedValuesList />\r\n    );\r\n};\r\nexport default OrgAllowedValuesWrapper;\r\n","import React from 'react';\r\nimport OrgAllowedValuesWrapper from \"./orgallowedWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst orgallowedroutes = [\r\n  {\r\n    path: \"/orgallowedList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <OrgAllowedValuesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default orgallowedroutes;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst MVOtemplCompDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n\r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions([RDO])\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.map(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.ALLOWABLE_ORG_TEMPLATE) {\r\n              item.status = item1.status\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n\r\n      let newdata = newTempList.map(item => {\r\n        const newitem = { ...item, ...item?.details }\r\n        return newitem\r\n      }) || [];\r\n\r\n      console.log(newdata, \"================table data\");\r\n\r\n      setTempData(newdata);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  useEffect(() => {\r\n    console.log(formError, 'formError');\r\n  }, [])\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 265,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Has_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.HasMBom}>Has MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n      render: ({ data }) => <div>{data?.details?.Has_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"EBOM_Allowed\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.EBOM}>EBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.EBOM_Allowed}</div>,\r\n    },\r\n    {\r\n      name: \"Optional\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.Optional}>Optional</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.Optional}</div>,\r\n    },\r\n    {\r\n      name: \"PO_Org_Exist_Check\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.PoCheck}>PO Check</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.PO_Org_Exist_Check}</div>,\r\n    },\r\n    {\r\n      name: \"On_MBOM\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.OnMbom}>On MBOM</Tooltip>,\r\n      defaultWidth: 120,\r\n\r\n      render: ({ data }) => <div>{data?.details?.On_MBOM}</div>,\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Status</Tooltip>,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.status === undefined ? 'active' : data.status}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? (selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES])?.trim() : \"active\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"active\" control={<Radio />} label=\"Active\" />\r\n                <FormControlLabel value=\"disabled\" control={<Radio />} label=\"Disable\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>)\r\n      }\r\n    }\r\n  ];\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item?.ALLOWABLE_ORG_TEMPLATE] = item?.status?.toLowerCase();\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='xl'\r\n    >\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit\r\n          ? \"Edit MVO Template Compatibility\"\r\n          : \"Add MVO Template Compatibility\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template MVO:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"MVO_TEMPLATE_OPTION\"\r\n                fullWidth\r\n                value={orgAllowedForm.MVO_TEMPLATE_OPTION}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {tempData?.map((option, index) => (\r\n                  <MenuItem key={index} value={option.details.ALLOWABLE_ORG_TEMPLATES}>\r\n                    {option.details.ALLOWABLE_ORG_TEMPLATES}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n              Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                selected={selected}\r\n                checkboxColumn={true}\r\n                onSelectionChange={onSelectionChange}\r\n                checkboxOnlyRowSelect={true}\r\n                style={{ ...gridStyle, height: '500px' }} // Add height here\r\n                columns={columns}\r\n                dataSource={tempData}\r\n                pagination\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOtemplCompDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOtemplCompDialog from \"./mvoDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOtemplateCompatibilityList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [mvotempcompData, setMVOtempCompData] = useState([]);\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [orgAllowedData, setorgAllowedData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_OPTION\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.TemplateOptionMVO}>Template MVO</Tooltip>,\r\n      defaultWidth: 250,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_OPTION}</div>,\r\n    },\r\n    {\r\n      name: 'name',\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.AllowableOrgTemplate}>Org Allowed Templates - Status</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant?.adminConstant?.mvoTemplateList?.tooltip?.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setRDO(value)\r\n      setFormError(prevState => {\r\n        const { RDOError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_OPTION\") {\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n    }\r\n  };\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter((template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_OPTION);\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.MVO_TEMPLATE_OPTION === undefined || orgAllowedForm.MVO_TEMPLATE_OPTION === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            ALLOWABLE_ORG_TEMPLATE: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            status: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'active' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length) {\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"mvoTemplateCompatibility\",\r\n          BUID: RDO,\r\n          details: {\r\n            MVO_TEMPLATE_OPTION: orgAllowedForm.MVO_TEMPLATE_OPTION,\r\n            MVO_TEMPLATE_OPTION_ID: templateid[0].id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n          id:\r\n            templateid[0].id +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"mvoTemplateCompatibility\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"MVO template compatibility added successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                  fetchDraftData();\r\n                  fetchData();\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\"MVO template compatibility updated successfully\", \"success\");\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    const thisVal = {\r\n      ...selectedDetails,\r\n      BUID,\r\n    }\r\n    setOrgAllowedForm(thisVal);\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => (item.details.ALLOWABLE_ORG_TEMPLATES === fitem.ALLOWABLE_ORG_TEMPLATE &&\r\n          item.BUID === selectedRows[0].BUID)\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false);\r\n        handlesnackBarClick(result?.msg, result?.status);\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoTemplateCompatibility\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      setMVOtempCompData(finalTempMapList);\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoTemplateCompatibility\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoTemplateCompatibility') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.ALLOWABLE_ORG_TEMPLATE));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.ALLOWABLE_ORG_TEMPLATE));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.ALLOWABLE_ORG_TEMPLATE === item2.ALLOWABLE_ORG_TEMPLATE && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      console.log('finalTempMapList', finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"MVO_TEMPLATE_OPTION\"] = item?.details?.MVO_TEMPLATE_OPTION\r\n        item['name'] = item?.details?.allowableOrgTemplates\r\n            .filter((plant, index, self) =>\r\n                index === self.findIndex(p => p.ALLOWABLE_ORG_TEMPLATE === plant.ALLOWABLE_ORG_TEMPLATE)\r\n            )\r\n            .map(plant => {\r\n                const deletedItems = item?.details?.deletedTemplateLists || [];\r\n    \r\n                const deletedText = deletedItems\r\n                    .map(draft_Plant => (\r\n                        plant.ALLOWABLE_ORG_TEMPLATE === draft_Plant.ALLOWABLE_ORG_TEMPLATE\r\n                            ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.ALLOWABLE_ORG_TEMPLATE}</span>`\r\n                            : ''\r\n                    ))\r\n                    .join(' '); // Join deleted items without any separator\r\n    \r\n                const statusText = plant.status ? plant.status.charAt(0).toUpperCase() + plant.status.slice(1) : '';\r\n    \r\n                return `<div>${plant.ALLOWABLE_ORG_TEMPLATE} - ${statusText} &nbsp;&nbsp; ${deletedText}</div>`;\r\n            })\r\n            .join(''); // Join all plant strings without a comma or any separator\r\n    \r\n        return item;\r\n    });\r\n      setUnSortTableTempData(finalTempMapList)\r\n      setTableTempData(data)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setorgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n\r\n  const [localStorageBusinessUnit, setLocalStorageBusinessUnit] = useState(bussinessUnit);\r\n  useEffect(() => {\r\n    setSelected({});\r\n    setSelectedRows([]);\r\n    updateBussinessUnit(bussinessUnit);\r\n    setRDO(bussinessUnit);\r\n    setSearchValue(\"\");\r\n    setSelectedRows([]);\r\n  }, [bussinessUnit]);\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  const sortedByFirstColumnFilteredMVOTempData = sortDataByKey(tableTempData, 'MVO_TEMPLATE_OPTION');\r\n  const sortedFilteredMVOTempData = sortInsideRowData(sortedByFirstColumnFilteredMVOTempData);\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Template Compatibility\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  // onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setRDO(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeleteMVOtempcomp}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Template Compatibility\"}\r\n                MappingType={\"mvoTemplateCompatibility\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : sortedFilteredMVOTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  defaultLimit={100}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={() =>  gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOTemplateCompatibility Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOtemplCompDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        isEdit={isEdit}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Template Compatibility Mappings\"}\r\n        MappingType={\"mvoTemplateCompatibility\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityList;\r\n","import React from \"react\";\r\nimport MVOtemplateCompatibilityList from \"./mvotemplateList\";\r\nconst MVOtemplateCompatibilityWrapper = () => {\r\n    return (\r\n        <MVOtemplateCompatibilityList />\r\n    );\r\n};\r\n\r\nexport default MVOtemplateCompatibilityWrapper;\r\n","import React from 'react';\r\nimport MVOtemplateCompatibilityWrapper from \"./mvocompatibilityWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst mvocompatibilityRoutes = [\r\n  {\r\n    path: \"/mvotemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOtemplateCompatibilityWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvocompatibilityRoutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport Constant from '../../../constant'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { sortDataByKeyAllowableOrgTemplates } from \"app/utils/mcoUtils/commonUtils\";\r\nconst gridStyle = { minHeight: 248 }\r\nconst PartTypeTemplateDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  orgAllowedTempList,\r\n  onSelectionChange,\r\n  selected,\r\n  filteredBUOptions,\r\n  setFilteredBUOptions,\r\n  formError,\r\n  RDO,\r\n  selectedRow,\r\n  handleStatusChange\r\n}) => {\r\n  const [tempData, setTempData] = useState([]);\r\n  const [selectedTemplateValues, setSelectedTemplateValues] = useState({});\r\n  sortDataByKeyAllowableOrgTemplates(tempData, \"ALLOWABLE_ORG_TEMPLATES\");\r\n  \r\n  useEffect(() => {\r\n    if (orgAllowedForm?.BUID) {\r\n      let buoption = [orgAllowedForm?.BUID] || [];\r\n      setFilteredBUOptions(buoption)\r\n    } else {\r\n      setFilteredBUOptions([RDO])\r\n    }\r\n\r\n    if (orgAllowedTempList) {\r\n      const newTempList = orgAllowedTempList?.filter((fitem) => {\r\n        return fitem?.BUID === RDO;\r\n      })\r\n      if (selectedRow) {\r\n        newTempList.map(item => {\r\n          selectedRow?.details?.allowableOrgTemplates.forEach(item1 => {\r\n            if (item.details.ALLOWABLE_ORG_TEMPLATES === item1.org_allowed_template) {\r\n              item.exclusive_use = item1.exclusive_use\r\n            }\r\n          })\r\n          return item;\r\n        })\r\n      }\r\n      setTempData(newTempList);\r\n    }\r\n  }, [orgAllowedTempList, orgAllowedForm]);\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'number' },\r\n    {\r\n      name: \"ALLOWABLE_ORG_TEMPLATES\",\r\n      defaultWidth: 280,\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.AllowableOrgTemplate}>ALLOWABLE ORG TEMPLATES</Tooltip>,\r\n      render: ({ data }) => <div>{data?.details?.ALLOWABLE_ORG_TEMPLATES}</div>,\r\n    },\r\n    {\r\n      name: \"Exclusive\",\r\n      header: <Tooltip title={Constant.adminConstant.orgAllowedList.tooltip.status}>Exclusive Use</Tooltip>,\r\n      defaultWidth: 280,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <FormControl>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name={data?.details?.ALLOWABLE_ORG_TEMPLATES}\r\n                // defaultValue={data.exclusive_use === undefined ? 'Yes' : data.exclusive_use}\r\n                value={((selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES]) ? selectedTemplateValues[data?.details?.ALLOWABLE_ORG_TEMPLATES] : \"Yes\")}\r\n                onChange={(e) => {\r\n                  const updatedStatus = {\r\n                    ...selectedTemplateValues,\r\n                    [e.target.name]: e.target.value,\r\n                  };\r\n                  setSelectedTemplateValues(updatedStatus);\r\n                  handleStatusChange(e);\r\n                }}\r\n              >\r\n                <FormControlLabel value=\"Yes\" control={<Radio />} label=\"Yes\" />\r\n                <FormControlLabel value=\"No\" control={<Radio />} label=\"No\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  ];\r\n\r\n  const transformArray = (array) => {\r\n    let output = {};\r\n    array.forEach(item => {\r\n      output[item.org_allowed_template] = item.exclusive_use;\r\n    });\r\n    return output;\r\n  };\r\n  useEffect(() => {\r\n    if (selectedRow) {\r\n      const getSelTempVal = transformArray(selectedRow?.details?.allowableOrgTemplates);\r\n      setSelectedTemplateValues(getSelTempVal);\r\n    }\r\n  }, [selectedRow])\r\n  return (\r\n    <Dialog open={open}\r\n      fullWidth={true}\r\n      maxWidth='md'>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Part Type to Template \" : \"Add Part Type to Template\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization: {/* <span className={classes.spanRed}>*</span>:*/}\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={RDO}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={true}\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              {\r\n                (formError?.RDOError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.RDOError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Enovia Part Type:\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <TextField\r\n                name=\"ENGG_ITEM_TYPE\"\r\n                value={orgAllowedForm.ENGG_ITEM_TYPE}\r\n                onChange={handleorgAllowedFormChange}\r\n                fullWidth\r\n                disabled={isEdit}\r\n                margin=\"normal\"\r\n              />\r\n              {\r\n                (formError?.templateError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.templateError}</p>\r\n                </>) : (<></>)\r\n              }\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Org Allowed Templates:{\" \"}\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              {\r\n                (formError?.AllowableOrgTempError) ? (<>\r\n                  <p style={{ color: \"red\" }}>{formError?.AllowableOrgTempError}</p>\r\n                </>) : (<></>)\r\n              }\r\n              {\r\n                (tempData?.length) ? (\r\n                  <ReactDataGrid\r\n                    idProperty=\"id\"\r\n                    showZebraRows={false}\r\n                    handle={ref => gridRef.current = ref ? ref.current : null}\r\n                    selected={selected}\r\n                    checkboxColumn={true}\r\n                    onSelectionChange={onSelectionChange}\r\n                    checkboxOnlyRowSelect={true}\r\n                    style={gridStyle}\r\n                    columns={columns}\r\n                    dataSource={tempData}\r\n                  />\r\n                ) : (null)\r\n              }\r\n\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PartTypeTemplateDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport PartTypeTemplateDialog from \"./parttypetemplateDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst PartTypeToTemplateList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [orgAllowedData, setOrgAllowedData] = useState([]);\r\n  const [selectedPlants, setSelectedPlants] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [selected, setSelected] = useState({});\r\n  const [formTemplateSelection, setFormTemplateSelection] = useState({});\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [formError, setFormError] = useState({})\r\n  const [RDO, setRDO] = useState(\"\");\r\n  const [statusObject, setStatusObject] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setSelectedPlants([]);\r\n    }\r\n\r\n    if (name === \"ENGG_ITEM_TYPE\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setFormError(prevState => {\r\n        const { templateError, ...rest } = prevState;\r\n        return rest\r\n      });\r\n      setSelectedPlants([]);\r\n    }\r\n    if (name === \"plants\") {\r\n      setSelectedPlants(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        org_allowed_template: newKey,\r\n        exclusive_use: newValue,\r\n        id: templateid[0].id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.ENGG_ITEM_TYPE\r\n    )\r\n    if (orgAllowedForm) {\r\n      if (RDO === undefined || RDO === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"RDOError\": \"Design Organization is required\",\r\n        }));\r\n      }\r\n      if (orgAllowedForm.ENGG_ITEM_TYPE === undefined || orgAllowedForm.ENGG_ITEM_TYPE === \"\") {\r\n        setFormError(prevState => ({\r\n          ...prevState,\r\n          \"templateError\": \"Template Name is required\",\r\n        }));\r\n      }\r\n      let templatedata = [];\r\n      let new_formError = { ...formError };\r\n      delete new_formError[\"AllowableOrgTempError\"];\r\n      if (Object.keys(formTemplateSelection).length) {\r\n        templatedata = Object.values(formTemplateSelection).map((value) => value)\r\n        templatedata = templatedata.map(item => {\r\n          return {\r\n            org_allowed_template: item.details.ALLOWABLE_ORG_TEMPLATES,\r\n            exclusive_use: statusObject[item.details.ALLOWABLE_ORG_TEMPLATES] === undefined ? 'Yes' : statusObject[item.details.ALLOWABLE_ORG_TEMPLATES],\r\n            id: item.details.ALLOWABLE_ORG_TEMPLATES_ID,\r\n          }\r\n        })\r\n      } else {\r\n        new_formError[\"AllowableOrgTempError\"] = \"Please select at least one template\";\r\n      }\r\n      setFormError(new_formError);\r\n      if (Object.keys(new_formError).length || Object.keys(formError).length) {\r\n        console.log(\"Resultant Payload:\", orgAllowedForm);\r\n        return;\r\n      } else {\r\n        const neworgallowedvalue = {\r\n          MappingType: \"parttypetotemplate\",\r\n          BUID: RDO,\r\n          details: {\r\n            ENGG_ITEM_TYPE: orgAllowedForm.ENGG_ITEM_TYPE,\r\n            ENOVIA_PART_TYPE_ID: templateid[0]?.id,\r\n            allowableOrgTemplates: templatedata,\r\n          },\r\n\r\n          id:\r\n            orgAllowedForm.ENGG_ITEM_TYPE +\r\n            \"_\" +\r\n            RDO.trim() +\r\n            \"_\" +\r\n            \"parttypetotemplate\",\r\n        };\r\n        if (isEdit === false) {\r\n          mvotempcompservice\r\n            .addnewTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp?.status === 'success') {\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                handlesnackBarClick(\"Parttype to Template added successfully\", \"success\");\r\n              } else if (resp?.status === 'error') {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        } else {\r\n          mvotempcompservice\r\n            .updateTempCompMapping(neworgallowedvalue)\r\n            .then((resp) => {\r\n              if (resp.status === \"success\") {\r\n                fetchDraftData();\r\n                fetchData();\r\n                setSelected({})\r\n                setTimeout(() => {\r\n                  setOrgallowedaddDialog(false);\r\n                }, 200);\r\n                setIsEdit(false);\r\n                handlesnackBarClick(\r\n                  \"MVO template compatibility updated successfully\",\r\n                  \"success\"\r\n                );\r\n              } else if (resp?.status === \"error\") {\r\n                handlesnackBarClick(resp?.msg, \"error\");\r\n              }\r\n            });\r\n        }\r\n        handleorgAllowedDialogClose();\r\n      }\r\n    } else {\r\n      let orgtemperror = {}\r\n      if (Object.keys(formTemplateSelection).length === 0) {\r\n        orgtemperror = { \"AllowableOrgTempError\": \"Please select at least one template\" }\r\n      }\r\n      setFormError({\r\n        ...orgtemperror,\r\n        \"templateError\": \"Template Name is required\"\r\n      })\r\n    }\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n    setRDO(bussinessUnit);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setSelectedPlants([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setFormTemplateSelection({});\r\n    setFormError({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleEditPartTypeTotemplate = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    setRDO(BUID)\r\n    const selectedData = selectedRows[0]?.details?.allowableOrgTemplates.map((fitem) => {\r\n      const filterTableData = orgAllowedData?.filter(\r\n        (item) => item.details.ALLOWABLE_ORG_TEMPLATES === fitem.org_allowed_template\r\n      );\r\n      return filterTableData;\r\n    }).flat();\r\n    let object = selectedData.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.id]: item }), {});\r\n    setFormTemplateSelection(object);\r\n    setValuesInputList(selectedRows[0]?.details?.allowableOrgTemplates);\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleDeletePartTypeToTemplate = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"Parttype to Template deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"ENGG_ITEM_TYPE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"parttypetotemplate\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"parttypetotemplate\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'parttypetotemplate') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_allowableOrgTemplates = obj2.details.allowableOrgTemplates;\r\n                const templateSet = new Set(obj2.details.allowableOrgTemplates.map(i => i.org_allowed_template));\r\n                const missingFromArrObj1 = obj1.details.allowableOrgTemplates.filter(j => !templateSet.has(j.org_allowed_template));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_allowableOrgTemplates.filter(item1 => \r\n                    !obj1.details.allowableOrgTemplates.some(item2 => \r\n                        item1.org_allowed_template === item2.org_allowed_template && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.allowableOrgTemplates,  ...obj1.details.newTemplateLists]\r\n                obj1.details.allowableOrgTemplates = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"ENGG_ITEM_TYPE\"] = item?.details?.ENGG_ITEM_TYPE\r\n        item['org_allowed_template'] = item?.details?.allowableOrgTemplates\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.org_allowed_template === plant.org_allowed_template)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.org_allowed_template === draft_Plant.org_allowed_template\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.org_allowed_template}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.org_allowed_template} - ${plant.exclusive_use.charAt(0).toUpperCase() + plant.exclusive_use.slice(1)} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTableTempData(data)\r\n      setUnSortTableTempData(finalTempMapList)\r\n      let buFilterData = mappingTemplatesInfo.filter((item) => {\r\n        return item.MappingType === \"orgallowedvalues\" && item.actionFlag !== \"Delete\"\r\n      });\r\n      if (bussinessUnit) {\r\n        buFilterData = buFilterData?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      setTimeout(() => {\r\n        setOrgAllowedData(buFilterData)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"ENGG_ITEM_TYPE\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.TemplateOptionsMVO}>Enovia Part Type</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>\r\n        {data?.ENGG_ITEM_TYPE}\r\n      </div>,\r\n    },\r\n    {\r\n      name: \"org_allowed_template\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.allowableOrgTemplatesExclusive}>Org Allowed Templates - Exclusive use</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      // render: ({ data }) =>\r\n      //   data?.details?.allowableOrgTemplates.map((template, index) => (\r\n      //     <div key={index}>\r\n      //       {template.org_allowed_template} - {template.exclusive_use}\r\n      //     </div>\r\n      //   )),\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.parttypetemplateList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const onFormSelectionChange = useCallback(({ selected }) => {\r\n    setFormTemplateSelection(selected);\r\n    setFormError(prevState => {\r\n      const { AllowableOrgTempError, ...rest } = prevState;\r\n      return rest\r\n    });\r\n  }, []);\r\n  const handleStatusChange = (event) => {\r\n    const updatedStatus = {\r\n      ...statusObject,\r\n      [event.target.name]: event.target.value,\r\n    };\r\n    setStatusObject(updatedStatus);\r\n  }\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Part Type to Template\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditPartTypeTotemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                //onClick={handleDeletePartTypeToTemplate}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Part Type To Template\"}\r\n                MappingType={\"parttypetotemplate\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterTempData}\r\n                  rowHeight={\"auto\"}\r\n                  defaultLimit={100}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the PartTypeToTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeletePartTypeToTemplate}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <PartTypeTemplateDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        selectedPlants={selectedPlants}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        onSelectionChange={onFormSelectionChange}\r\n        selected={formTemplateSelection}\r\n        orgAllowedTempList={orgAllowedData}\r\n        filteredBUOptions={filteredBUOptions}\r\n        setFilteredBUOptions={setFilteredBUOptions}\r\n        formError={formError}\r\n        RDO={RDO}\r\n        selectedRow={selectedRows[0]}\r\n        handleStatusChange={handleStatusChange}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Parttype To Template Mappings\"}\r\n        MappingType={\"parttypetotemplate\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default PartTypeToTemplateList;\r\n","import React from \"react\";\r\nimport PartTypeToTemplateList from \"./parttypeToTemplateList\";\r\nconst PartTypeToTemplateWrapper = () => {\r\n    return (\r\n        <PartTypeToTemplateList />\r\n    );\r\n};\r\nexport default PartTypeToTemplateWrapper;\r\n","import React from 'react';\r\nimport PartTypeToTemplateWrapper from \"./parttypetemplateWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst parttypetotemplateroutes = [\r\n  {\r\n    path: \"/parttypeToTemplateList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <PartTypeToTemplateWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default parttypetotemplateroutes;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button\r\n} from \"@mui/material\";\r\nconst MVOallowedchangesDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  mvotemplatesTo,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      console.log(tempData, 'tempData tempData tempData')\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit MVO Allowed Changes \" : \"Add MVO Allowed Changes\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n        <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - From <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"MVO_TEMPLATE_FROM\"\r\n              fullWidth\r\n              value={orgAllowedForm.MVO_TEMPLATE_FROM}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              MVO Template - To <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"MVO_TEMPLATE_TO\"\r\n              value={mvotemplatesTo}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport MVOallowedchangesDialog from \"./mvoallowedchangesDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nimport { sortInsideRowData } from \"app/utils/utils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst MVOallowedchangesList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n\r\n  const [mvotemplatesTo, setMVOtemplatesTo] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    if (name === \"MVO_TEMPLATE_FROM\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setMVOtemplatesTo([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"MVO_TEMPLATE_TO\") {\r\n      setMVOtemplatesTo(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.MVO_TEMPLATE_FROM\r\n    );\r\n    let convertedMVO_TEMPLATES_TO = [];\r\n    // Iterate over filteredPlants\r\n    convertedMVO_TEMPLATES_TO = mvotemplatesTo?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        MVO_TEMPLATE_TO: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.MVO_TEMPLATE_FROM ||\r\n      !orgAllowedForm.BUID ||\r\n      mvotemplatesTo?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"mvoallowedchanges\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          MVO_TEMPLATE_FROM: orgAllowedForm.MVO_TEMPLATE_FROM,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          MVO_TEMPLATES_TO: convertedMVO_TEMPLATES_TO,\r\n\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"mvoallowedchanges\",\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              handlesnackBarClick(\"MVO allowed changes added successfully\", \"success\");\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"MVO allowed changes updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, resp.status);\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setMVOtemplatesTo([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setMVOtemplatesTo([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.MVO_TEMPLATES_TO) {\r\n      const template = selectedRows[0]?.details?.MVO_TEMPLATES_TO[key];\r\n      mvotemplatesTo.push(template?.MVO_TEMPLATE_TO);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\"MVO allowed changes  deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n  const sortedFilterTempData = sortDataByKey(tableTempData, \"MVO_TEMPLATE_FROM\");\r\n  const unSortRowSortTableTempData = sortInsideRowData(unSortTableTempData);\r\n  const rowSortTableTempData = sortInsideRowData(sortedFilterTempData);\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"mvoallowedchanges\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"mvoallowedchanges\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'mvoallowedchanges') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_MVO_TEMPLATES_TO = obj2.details.MVO_TEMPLATES_TO;\r\n                const templateSet = new Set(obj2.details.MVO_TEMPLATES_TO.map(i => i.MVO_TEMPLATE_TO));\r\n                const missingFromArrObj1 = obj1.details.MVO_TEMPLATES_TO.filter(j => !templateSet.has(j.MVO_TEMPLATE_TO));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_MVO_TEMPLATES_TO.filter(item1 => \r\n                    !obj1.details.MVO_TEMPLATES_TO.some(item2 => \r\n                        item1.MVO_TEMPLATE_TO === item2.MVO_TEMPLATE_TO && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.MVO_TEMPLATES_TO,  ...obj1.details.newTemplateLists]\r\n                obj1.details.MVO_TEMPLATES_TO = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let unsortedData = [...finalTempMapList].map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM;\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n      \r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span class=\"deleted-text\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); \r\n      \r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); \r\n        return item;\r\n      });\r\n\r\n      let data = finalTempMapList\r\n      .sort((a, b) => a.details.MVO_TEMPLATE_FROM.localeCompare(b.details.MVO_TEMPLATE_FROM))\r\n      .map(item => {\r\n        item[\"MVO_TEMPLATE_FROM\"] = item?.details?.MVO_TEMPLATE_FROM\r\n        item['MVO_TEMPLATE_TO'] = item?.details?.MVO_TEMPLATES_TO\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.MVO_TEMPLATE_TO === plant.MVO_TEMPLATE_TO)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.MVO_TEMPLATE_TO === draft_Plant.MVO_TEMPLATE_TO\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.MVO_TEMPLATE_TO}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.MVO_TEMPLATE_TO} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(unsortedData); // Set the unsorted data\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"MVO_TEMPLATE_FROM\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesFrom}>MVO Template - From</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MVO_TEMPLATE_FROM}</div>,\r\n    },\r\n    {\r\n      name: \"MVO_TEMPLATE_TO\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.mvoTemplatesTo}>MVO Template - To</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.mvoallowedchangesList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n\r\n      defaultWidth: 50,\r\n    }\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      height: \"auto !important\",\r\n      whiteSpace: \"normal\"\r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"MVO Allowed Changes \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"MVO Allowed Changes\"}\r\n                MappingType={\"mvoallowedchanges\"}\r\n                filterTemplateData={selectedRows} \r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog\r\n                />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortRowSortTableTempData : rowSortTableTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the MVOAllowedChanges Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <MVOallowedchangesDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        mvotemplatesTo={mvotemplatesTo}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import MVO Allowed Changes Mappings\"}\r\n        MappingType={\"mvoallowedchanges\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default MVOallowedchangesList;\r\n","import React from \"react\";\r\nimport MVOallowedchangesList from \"./mvoallowedchangesList\";\r\nconst MVOallowedChangesWrapper = () => {\r\n    return (\r\n        <MVOallowedchangesList />\r\n    );\r\n};\r\nexport default MVOallowedChangesWrapper;\r\n","import React from 'react';\r\nimport MVOallowedChangesWrapper from \"./mvoallowedchangeWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst mvoallowedchangesroutes = [\r\n  {\r\n    path: \"/mvoallowedchangesList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <MVOallowedChangesWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default mvoallowedchangesroutes;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n} from \"@mui/material\";\r\n\r\nconst SetCompTempDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  modifytempdata,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddMVOtempComp,\r\n  isEdit,\r\n  templatesInfo,\r\n  selectedBU\r\n}) => {\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo, orgAllowedForm.BUID]);\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Set Compatible Templates\" : \"Add Set Compatible Templates\"}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Existing <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              name=\"TEMPLATE_ORG_EXISTING\"\r\n              fullWidth\r\n              value={orgAllowedForm.TEMPLATE_ORG_EXISTING}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled={isEdit}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Design Organization <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              id=\"DataType-select\"\r\n              name=\"BUID\"\r\n              fullWidth\r\n              value={selectedBU}\r\n              onChange={handleorgAllowedFormChange}\r\n              disabled\r\n            >\r\n              {filteredBUOptions?.map((option) => (\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n\r\n          <Grid item md={3} sm={4} xs={12}>\r\n            <span>\r\n              Template For Org Modifying <span style={{ color: \"red\" }}>*</span>\r\n            </span>\r\n          </Grid>\r\n\r\n          <Grid item md={9} sm={8} xs={12}>\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              multiple\r\n              name=\"TEMPLATE_ORG_MODIFYING\"\r\n              value={modifytempdata}\r\n              onChange={handleorgAllowedFormChange}\r\n              renderValue={(selected) => selected?.join(\", \")}\r\n              MenuProps={{\r\n                sx: {\r\n                  \"&& .Mui-selected\": {\r\n                    backgroundColor: \"rgb(25 118 210 / 67%)\"\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              {templateOption?.map((option) => (\r\n                <MenuItem key={option.templateName} value={option.templateName}>\r\n                  {option.templateName}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddMVOtempComp}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SetCompTempDialog;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport SetCompTempDialog from \"./setcomptempDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SetCompTempList = () => {\r\n  const { refreshData } = useOracleSettings();\r\n  const {\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const [comptempData, setComptempData] = useState([]);\r\n  const [modifytempdata, setModifytempData] = useState([]);\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [valuesInputList, setValuesInputList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [newKey, setNewKey] = useState(\"\");\r\n  const [newValue, setNewValue] = useState(\"\");\r\n  const [keyerror, setKeyerror] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const gridRef = useRef(null);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  //********Dialog code ********\r\n  //console.log(mvoallowedchangesData, \"mvo dta\");\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === \"newKey\") {\r\n      setNewKey(value);\r\n    }\r\n    if (name === \"newValue\") {\r\n      setNewValue(value);\r\n    }\r\n\r\n    if (name === \"BUID\") {\r\n      // Business unit is changed, reset selected plants\r\n      setComptempData([]);\r\n    }\r\n\r\n    if (name === \"TEMPLATE_ORG_EXISTING\") {\r\n      // Template Name is changed, reset selected Business Unit\r\n      setOrgAllowedForm({\r\n        ...orgAllowedForm,\r\n        BUID: \"\",\r\n      });\r\n      setComptempData([]);\r\n    }\r\n\r\n    // If the event comes from the multi-select dropdown\r\n    if (name === \"TEMPLATE_ORG_MODIFYING\") {\r\n      setModifytempData(value);\r\n      // Generate payload\r\n    } else {\r\n      // If it's a form field change\r\n      const updatedForm = {\r\n        ...orgAllowedForm,\r\n        [name]: value,\r\n      };\r\n      setOrgAllowedForm(updatedForm);\r\n    }\r\n  };\r\n\r\n  const handleAddRow = () => {\r\n    const keyExists = valuesInputList.some((row) => row.key === newKey);\r\n    const valueExists = valuesInputList.some((row) => row.value === newValue);\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === newKey\r\n    );\r\n    if (keyExists || valueExists) {\r\n      setKeyerror(\"The key or value already exists\");\r\n      return;\r\n    }\r\n    if (!newKey || !newValue) {\r\n      setKeyerror(\"Template and its status required\");\r\n      return;\r\n    }\r\n\r\n    setValuesInputList((prevList) => [\r\n      ...prevList,\r\n      {\r\n        ALLOWABLE_ORG_TEMPLATE: newKey,\r\n        status: newValue,\r\n        id: templateid[0]?.id,\r\n      },\r\n    ]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n  };\r\n  const handleDeleteRow = (index) => {\r\n    setValuesInputList((prevList) => {\r\n      const newList = [...prevList];\r\n      newList.splice(index, 1);\r\n      return newList;\r\n    });\r\n  };\r\n\r\n  const handleAddMVOtempComp = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) =>\r\n        template.templateName === orgAllowedForm.TEMPLATE_ORG_EXISTING\r\n    );\r\n    let convertedTEMPLATE_ORG_MODIFYING = [];\r\n    // Iterate over filteredPlants\r\n    convertedTEMPLATE_ORG_MODIFYING = modifytempdata?.map((item) => {\r\n      const template = templatesInfo.find((t) => t.templateName === item);\r\n      return {\r\n        id: template ? template.id : null,\r\n        TEMPLATE_ORG_MODIFYING: item,\r\n      };\r\n    });\r\n\r\n    if (\r\n      !orgAllowedForm.TEMPLATE_ORG_EXISTING ||\r\n      !orgAllowedForm.BUID ||\r\n      modifytempdata?.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"setcompatibletemplates\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          TEMPLATE_ORG_EXISTING: orgAllowedForm.TEMPLATE_ORG_EXISTING,\r\n          MVO_TEMPLATE_OPTION_ID: templateid[0]?.id,\r\n          TEMPLATE_ORG_MODIFYING: convertedTEMPLATE_ORG_MODIFYING,\r\n        },\r\n\r\n        id:\r\n          templateid[0]?.id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"setcompatibletemplates\",\r\n      };\r\n\r\n\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n\r\n              handlesnackBarClick(\"Set compatible template mapping added successfully\", \"success\");\r\n\r\n            } else if (resp?.status === 'error') {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              fetchDraftData();\r\n              fetchData();\r\n              setSelected({})\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n\r\n              }, 200);\r\n              setIsEdit(false);\r\n              handlesnackBarClick(\r\n                \"Set compatible template mapping updated successfully\",\r\n                \"success\"\r\n              );\r\n            } else if (resp?.status === \"error\") {\r\n              handlesnackBarClick(resp?.msg, \"error\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setComptempData([]);\r\n    setNewKey(\"\");\r\n    setNewValue(\"\");\r\n    setKeyerror(\"\");\r\n    setValuesInputList([]);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setComptempData([]);\r\n    setModifytempData([]);\r\n    setSelectedRows([]);\r\n    setSelected({})\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = selectedRows[0]?.BUID;\r\n\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      BUID,\r\n    });\r\n    for (const key in selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING) {\r\n      const template = selectedRows[0]?.details?.TEMPLATE_ORG_MODIFYING[key];\r\n      modifytempdata.push(template?.TEMPLATE_ORG_MODIFYING);\r\n    }\r\n\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n\r\n    handlesnackBarClick(\r\n      \"Set compatible template mapping  deleted Successfully\",\r\n      \"success\"\r\n    );\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n  const [unSortTableTempData, setUnSortTableTempData] = useState([])\r\n\r\n  const sortedFilterSetCompTempData = sortDataByKey(tableTempData, \"TEMPLATE_ORG_EXISTING\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"setcompatibletemplates\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredMVOTempDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"setcompatibletemplates\" });\r\n        if (filteredMVOTempDraftData.length > 0 && filteredMVOTempDraftData[0].MappingType === 'setcompatibletemplates') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredMVOTempDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draft_TEMPLATE_ORG_MODIFYING = obj2.details.TEMPLATE_ORG_MODIFYING;\r\n                const templateSet = new Set(obj2.details.TEMPLATE_ORG_MODIFYING.map(i => i.TEMPLATE_ORG_MODIFYING));\r\n                const missingFromArrObj1 = obj1.details.TEMPLATE_ORG_MODIFYING.filter(j => !templateSet.has(j.TEMPLATE_ORG_MODIFYING));\r\n                obj1.details.deletedTemplateLists = missingFromArrObj1;\r\n                let newTemplate = obj1.details.draft_TEMPLATE_ORG_MODIFYING.filter(item1 => \r\n                    !obj1.details.TEMPLATE_ORG_MODIFYING.some(item2 => \r\n                        item1.TEMPLATE_ORG_MODIFYING === item2.TEMPLATE_ORG_MODIFYING && \r\n                        item1.exclusive_use === item2.exclusive_use\r\n                    )\r\n                );\r\n                obj1.details.newTemplateLists = newTemplate;\r\n                let mergeNewOldTemplates = [...obj1.details.TEMPLATE_ORG_MODIFYING,  ...obj1.details.newTemplateLists]\r\n                obj1.details.TEMPLATE_ORG_MODIFYING = mergeNewOldTemplates;\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"TEMPLATE_ORG_EXISTING\"] = item?.details?.TEMPLATE_ORG_EXISTING\r\n        item['TEMPLATE_ORG_MODIFYING'] = item?.details?.TEMPLATE_ORG_MODIFYING\r\n          .filter((plant, index, self) =>\r\n            index === self.findIndex(p => p.TEMPLATE_ORG_MODIFYING === plant.TEMPLATE_ORG_MODIFYING)\r\n          )\r\n          .map(plant => {\r\n            const deletedItems = item?.details?.deletedTemplateLists || [];\r\n\r\n            const deletedText = deletedItems\r\n              .map(draft_Plant => (\r\n                plant.TEMPLATE_ORG_MODIFYING === draft_Plant.TEMPLATE_ORG_MODIFYING\r\n                  ? `<span style=\"color:#f00; font-weight:bold;text-decoration: line-through\">${draft_Plant.TEMPLATE_ORG_MODIFYING}</span>`\r\n                  : ''\r\n              ))\r\n              .join(' '); // Join deleted items without any separator\r\n\r\n            return `<div>${plant.TEMPLATE_ORG_MODIFYING} &nbsp;&nbsp; ${deletedText}</div>`;\r\n          })\r\n          .join(''); // Join all plant strings without a comma or any separator\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setUnSortTableTempData(finalTempMapList)\r\n        setTableTempData(data)\r\n        setIsLoading(false)\r\n      }, 500);\r\n\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, filteredDraftTabledata]);\r\n\r\n  // *********org allowed values dialog methods ends**********\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n\r\n    {\r\n      name: \"TEMPLATE_ORG_EXISTING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgExist}>Template for Org(s) Existing</Tooltip>,\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.TEMPLATE_ORG_EXISTING}</div>,\r\n    },\r\n    {\r\n      name: \"TEMPLATE_ORG_MODIFYING\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.TemplateForOrgModify}>Template for Org Modifying</Tooltip>,\r\n      defaultFlex: 1,\r\n      sortable: false,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.setComptempList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n  ];\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n        height: \"auto !important\",\r\n        whiteSpace: \"normal\"\r\n      \r\n    }\r\n  }\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Set Compatible Templates\" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                // onClick={handleDeleteMVOtempcomp}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Set Compatible Templates\"}\r\n                MappingType={\"setcompatibletemplates\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? unSortTableTempData : sortedFilterSetCompTempData}\r\n                  rowHeight={\"auto\"}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the SetCompatibleTemplate Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <SetCompTempDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddMVOtempComp={handleAddMVOtempComp}\r\n        comptempData={comptempData}\r\n        modifytempdata={modifytempdata}\r\n        isEdit={isEdit}\r\n        newKey={newKey}\r\n        newValue={newValue}\r\n        handleAddRow={handleAddRow}\r\n        handleDeleteRow={handleDeleteRow}\r\n        keyerror={keyerror}\r\n        valuesInputList={valuesInputList}\r\n        templatesInfo={templatesInfo}\r\n        selectedBU={bussinessUnit}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import Set Compatible Templates Mappings\"}\r\n        MappingType={\"setcompatibletemplates\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default SetCompTempList;\r\n","import React from \"react\";\r\nimport SetCompTempList from \"./setcomptempList\";\r\nconst SetCompTempWrapper = () => {\r\n    return (\r\n        <SetCompTempList />\r\n    );\r\n};\r\nexport default SetCompTempWrapper;\r\n","import React from 'react';\r\nimport SetCompTempWrapper from \"./SetCompTempWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nconst setcomptemproutes = [\r\n  {\r\n    path: \"/setcomptempList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <SetCompTempWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\nexport default setcomptemproutes;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\n\r\nconst plantGroupOptions = [\r\n  { name: \"MASTER ORG\", value: \"MASTER ORG\" },\r\n  { name: \"Boulder OU\", value: \"Boulder OU\" },\r\n  { name: \"Nanjing OU\", value: \"Nanjing OU\" },\r\n  { name: \"EDE OU\", value: \"EDE OU\" },\r\n  { name: \"Cluj OU\", value: \"Cluj OU\" },\r\n  { name: \"Others\", value: \"Others\" }\r\n]\r\nconst bomStatusOptions = [\r\n  { name: \"BOM\", value: \"BOM\" },\r\n  { name: \"NO BOM\", value: \"NO BOM\" },\r\n];\r\nconst rduOptions = [\r\n  { name: \"YES\", value: \"YES\" },\r\n  { name: \"NO\", value: \"NO\" },\r\n];\r\nconst entitydropdown = [{ name: \"PlantGroup\", value: \"PlantGroup\" },\r\n{ name: \"BOM or NO BOM\", value: \"BOM or NO BOM\" },\r\n{ name: \"none or PO Org\", value: \"none or PO Org\" },\r\n{ name: \"RDO OU Org Set\", value: \"RDO OU Org Set\" }]\r\nconst BUPlantDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddBuPlant,\r\n  isEdit,\r\n  bussinessUnitLists,\r\n  bussinessUnit,\r\n  setPlantValueList,\r\n  plantValueList,\r\n  setDisplayOrder\r\n}) => {\r\n  const [filteredPlants, setFilteredPlants] = useState([]);\r\n  const [dropdownOptions, setDropdownOptions] = useState([]);\r\n  const [entityOption, setEntityOption] = useState([]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    const Plants = (\r\n      bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || []\r\n    ).concat({ plantName: \"None\", id: \"None\" });\r\n    let plist = Plants.map((item) => {\r\n      let res = {\r\n        \"name\": item.plantName,\r\n        \"value\": item.plantName\r\n      }\r\n      return res;\r\n    })\r\n    setFilteredPlants(plist)\r\n    let filteredPlantsLeftSide = bussinessUnitLists?.find((plant) => plant.buName === bussinessUnit)?.plants || [];\r\n    filteredPlantsLeftSide.map((plant, index) => {\r\n      plant.value = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlantsLeftSide = unionBy(plantValueList, filteredPlantsLeftSide, 'plantName');\r\n    setDataSource(filteredPlantsLeftSide)\r\n    setPlantValueList(filteredPlantsLeftSide)\r\n\r\n    console.log(plantValueList, 'plantValueList plantValueList')\r\n    setEntityOption(entitydropdown)\r\n    if (isEdit) {\r\n      console.log(orgAllowedForm.Entity, 'orgAllowedForm.Entity')\r\n      switch (orgAllowedForm.Entity) {\r\n        case \"PlantGroup\":\r\n          setDropdownOptions(plantGroupOptions)\r\n          setDisplayOrder(1)\r\n          break;\r\n        case \"BOM or NO BOM\":\r\n          setDropdownOptions(bomStatusOptions)\r\n          setDisplayOrder(2)\r\n          break;\r\n        case \"none or PO Org\":\r\n          setDropdownOptions(filteredPlants)\r\n          setDisplayOrder(3)\r\n          break;\r\n        case \"RDO OU Org Set\":\r\n          setDropdownOptions(rduOptions)\r\n          setDisplayOrder(4)\r\n          break;\r\n        default:\r\n          setDropdownOptions([])\r\n          break;\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [bussinessUnit, bussinessUnitLists, orgAllowedForm.Entity, isEdit]);\r\n  const plantColumn = {\r\n    name: 'value',\r\n    header: 'Value',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    sortable: false,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          size=\"small\"\r\n          autoFocus={cellProps.inEdit}\r\n          name={cellProps.data.plantName}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={handleChanges}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n        >\r\n          {dropdownOptions?.map((option) => (\r\n            <MenuItem key={option.name} value={option.name}>\r\n              {option.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      );\r\n    }\r\n  };\r\n\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    plantColumn\r\n  ]\r\n\r\n  const handleChanges = (event) => {\r\n    const data = [...dataSource];\r\n    let newData = data.map(item => {\r\n      if (item.plantName === event.target.name) {\r\n        item.value = event.target.value\r\n      }\r\n      return Object.assign({}, item)\r\n    })\r\n    setDataSource(newData)\r\n    setPlantValueList(newData)\r\n  }\r\n  const handleEntityChange = (event) => {\r\n    handleorgAllowedFormChange(event)\r\n    let dropdownselect = event.target.value;\r\n    switch (dropdownselect) {\r\n      case \"PlantGroup\":\r\n        setDropdownOptions(plantGroupOptions)\r\n        setDisplayOrder(1)\r\n        break;\r\n      case \"BOM or NO BOM\":\r\n        setDropdownOptions(bomStatusOptions)\r\n        setDisplayOrder(2)\r\n        break;\r\n      case \"none or PO Org\":\r\n        setDropdownOptions(filteredPlants)\r\n        setDisplayOrder(3)\r\n        break;\r\n      case \"RDO OU Org Set\":\r\n        setDropdownOptions(rduOptions)\r\n        setDisplayOrder(4)\r\n        break;\r\n      default:\r\n        setDropdownOptions([])\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit RDO Plant Mapping \" : \"Add RDO Plant Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={bussinessUnit}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {bussinessUnitLists?.map((option) => (\r\n                  <MenuItem key={option.businessUnit} value={option.businessUnit}>\r\n                    {option.businessUnit}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Entity <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                style={{ width: \"100%\" }}\r\n                name=\"Entity\"\r\n                value={orgAllowedForm.Entity}\r\n                onChange={handleEntityChange}\r\n                disabled={isEdit}\r\n              >\r\n                {entityOption?.map((option) => (\r\n                  <MenuItem key={option.name} value={option.value}>\r\n                    {option.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Values <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddBuPlant}>{isEdit ? \"Update\" : \"Add\"}</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BUPlantDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField\r\n} from \"@mui/material\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport BUPlantDialog from \"./buplantDialog\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport ImportMappingsDialog from '../../../components/importMappingsDialog';\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst BUPlantList = () => {\r\n  const {\r\n    refreshData,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [snackBar, setsnackBar] = useState(false);\r\n  const [snackbarmessage, setSnackbarMessage] = useState();\r\n  const [snackbarseverity, setSnackbarSeverity] = useState();\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const tempMapService = new TemplateMappingService();\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [displayOrder, setDisplayOrder] = useState(0);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    });\r\n  };\r\n\r\n  const handlesnackbarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") { return; }\r\n    setsnackBar(false);\r\n  };\r\n\r\n  //********Dialog code ********\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n\r\n  const handleAddBuPlant = () => {\r\n    if (!orgAllowedForm.Entity || !orgAllowedForm.BUID || plantValueList.length < 1) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = curr.value;\r\n      return acc;\r\n    }, {});\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        MappingType: \"buplantmapping\",\r\n        BUID: orgAllowedForm.BUID,\r\n        details: {\r\n          Entity: orgAllowedForm.Entity,\r\n          displayOrder: displayOrder,\r\n          PLANT: resultPlantPayload\r\n        },\r\n        id: `${orgAllowedForm.Entity}_${orgAllowedForm.BUID}_buplantmapping`,\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchDraftData();\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"RDO Plant Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status);\r\n            }\r\n\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0])\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditMappingDialog = () => {\r\n    const Entity = { Entity: selectedRows[0]?.details?.Entity }\r\n    const BUID = { BUID: bussinessUnit }\r\n    setOrgAllowedForm({\r\n      ...BUID,\r\n      ...Entity\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.PLANT\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'value': value, 'id': index };\r\n    });\r\n    setDisplayOrder(selectedRows[0]?.details?.displayOrder)\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleDeleteMVOtempcomp = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: result?.status,\r\n          desc: result?.msg,\r\n        })\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    fetchDraftData();\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true)\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n\r\n  const [plantColumns, setPlantColumns] = useState([]);\r\n  const [plantMappingList, setPlantMappingList] = useState([])\r\n\r\n  console.log(\"plantMappingList===\",plantMappingList)\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      // Filter the data based on MappingType\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"buplantmapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      finalTempMapList = finalTempMapList.sort((a, b) => a.details.displayOrder - b.details.displayOrder)\r\n      if (bussinessUnitLists) {\r\n        // Function to sort an object by its values\r\n        function sortObjectByValues(obj) {\r\n          if (obj) {\r\n            return Object.entries(obj).sort((a, b) => a[1].localeCompare(b[1])).reduce((acc, [key, value]) => {\r\n              acc[key] = value;\r\n              return acc;\r\n            }, {});\r\n          } else {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // Sorting the PLANT data by values\r\n        let sortedList = sortObjectByValues(finalTempMapList[0]?.details?.PLANT);\r\n        let plist = bussinessUnitLists.find(bu => bu.buName === bussinessUnit)?.plants || []\r\n        const newList = Object.keys(sortedList).map(plantName => {\r\n          const originalItem = plist.find(item => item?.plantName === plantName);\r\n          return { plantName, id: originalItem?.id, value: sortedList[plantName] };\r\n        });\r\n        /* mycode start */\r\n        const valueCounts = {};\r\n\r\n        // Iterate over the data to populate valueCounts\r\n        newList.forEach((item) => {\r\n          finalTempMapList.forEach((pdata) => {\r\n            if (pdata?.details?.Entity === \"PlantGroup\" && pdata.BUID === bussinessUnit) {\r\n              const plantValue = pdata?.details?.PLANT[item.plantName];\r\n              console.log(\"plantvalue===\",plantValue)\r\n              valueCounts[plantValue] = (valueCounts[plantValue] || 0) + 1;\r\n            }\r\n          });\r\n        });\r\n        let passedColumn = []\r\n        const headerColumns = newList.map((item) => {\r\n          return {\r\n            name: item.plantName,\r\n            header: item.plantName,\r\n            defaultWidth: 150,\r\n\r\n            // colspan: ({ data }) => {\r\n            //   if (data?.details?.Entity === \"PlantGroup\" && data.BUID === bussinessUnit) {\r\n            //     const plantValue = data?.details?.PLANT[item.plantName];\r\n            //     if (passedColumn?.includes(plantValue)) {\r\n            //       return 0\r\n            //     } else {\r\n            //       passedColumn.push(plantValue);\r\n            //       return valueCounts[plantValue];\r\n            //     }\r\n            //   }\r\n            //   return 1; // Default colspan is 1\r\n            // },\r\n            render: (params) => (\r\n              <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n            )\r\n          };\r\n        });\r\n\r\n        setPlantColumns(headerColumns);\r\n\r\n        /* mycode end */\r\n      }\r\n\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredRDODraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"buplantmapping\" });\r\n        if (filteredRDODraftData.length > 0 && filteredRDODraftData[0].MappingType === 'buplantmapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredRDODraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] == obj2['id']) {\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.PLANT.MME !== obj1.details.PLANT.MME ? obj2.details.PLANT.MME : null,\r\n                //   \"MMC\": obj2.details.PLANT.MMC !== obj1.details.PLANT.MMC ? obj2.details.PLANT.MMC : null,\r\n                //   \"MVO\": obj2.details.PLANT.MVO !== obj1.details.PLANT.MVO ? obj2.details.PLANT.MVO : null,\r\n                //   \"NA3\": obj2.details.PLANT.NA3 !== obj1.details.PLANT.NA3 ? obj2.details.PLANT.NA3 : null,\r\n                //   \"NAE\": obj2.details.PLANT.NAE !== obj1.details.PLANT.NAE ? obj2.details.PLANT.NAE : null,\r\n                //   \"CL2\": obj2.details.PLANT.CL2 !== obj1.details.PLANT.CL2 ? obj2.details.PLANT.CL2 : null,\r\n                //   \"PVE\": obj2.details.PLANT.PVE !== obj1.details.PLANT.PVE ? obj2.details.PLANT.PVE : null,\r\n                //   \"MMR\": obj2.details.PLANT.MMR !== obj1.details.PLANT.MMR ? obj2.details.PLANT.MMR : null,\r\n                //   \"MFS\": obj2.details.PLANT.MFS !== obj1.details.PLANT.MFS ? obj2.details.PLANT.MFS : null,\r\n                //   \"MET\": obj2.details.PLANT.MET !== obj1.details.PLANT.MET ? obj2.details.PLANT.MET : null,\r\n                //   \"MMB\": obj2.details.PLANT.MMB !== obj1.details.PLANT.MMB ? obj2.details.PLANT.MMB : null\r\n                // }\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.PLANT) {\r\n                  console.log('obj2.details.PLANT[key]', obj2.details.PLANT[key]);\r\n                  console.log('obj1.details.PLANT[key]', obj1.details.PLANT[key]);\r\n                  obj1.details.draft_Plants[key] = obj2.details.PLANT[key].toLocaleLowerCase() !== obj1.details.PLANT[key].toLocaleLowerCase() ? obj2.details.PLANT[key] : null;\r\n                }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n\r\n      setTimeout(() => {\r\n        let data = finalTempMapList.map(item => {\r\n          // Object.keys(item?.details?.PLANT).map(plant => {\r\n          //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n          //       //item[plant] = item?.details?.draft_Plants[draft_Plant] ? item?.details?.draft_Plants[draft_Plant] + ' ' + item?.details?.PLANT[plant] : item?.details?.PLANT[plant]\r\n          //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MME\"]} <span>` : item?.details?.PLANT[\"MME\"]\r\n          //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMC\"]} <span>` : item?.details?.PLANT[\"MMC\"]\r\n          //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MVO\"]} <span>` : item?.details?.PLANT[\"MVO\"]\r\n          //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NA3\"]} <span>` : item?.details?.PLANT[\"NA3\"]\r\n          //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"NAE\"]} <span>` : item?.details?.PLANT[\"NAE\"]\r\n          //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"CL2\"]} <span>` : item?.details?.PLANT[\"CL2\"]\r\n          //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"PVE\"]} <span>` : item?.details?.PLANT[\"PVE\"]\r\n          //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMR\"]} <span>` : item?.details?.PLANT[\"MMR\"]\r\n          //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MFS\"]} <span>` : item?.details?.PLANT[\"MFS\"]\r\n          //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MET\"]} <span>` : item?.details?.PLANT[\"MET\"]\r\n          //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[\"MMB\"]} <span>`: item?.details?.PLANT[\"MMB\"]\r\n          //     }) : item[plant] = item?.details?.PLANT[plant]          \r\n          //   }            \r\n          // )   \r\n          Object.keys(item?.details?.PLANT).map(plant => {\r\n            item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.PLANT[plant]} <span>` : item?.details?.PLANT[plant]\r\n              : item[plant] = item?.details?.PLANT[plant]\r\n          }\r\n          )\r\n          return item\r\n        })\r\n\r\n        setPlantMappingList(data)\r\n        setIsLoading(false)\r\n\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, bussinessUnitLists, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  // *******react data grid table code *******//\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const columns = [\r\n    {\r\n      name: \"Entity\",\r\n      header: \"Entity\",\r\n      render: ({ data }) => <div><b>{data?.details?.Entity}</b></div>,\r\n      defaultWidth: 150,\r\n    },\r\n    ...plantColumns\r\n  ];\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n      width: 'auto'\r\n    }\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"RDO Plant Mapping \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                    setPlantValueList([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditMappingDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: '0 0px 0 10px' }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true)\r\n                }}\r\n                style={{ margin: '0 10px 0 10px' }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"RDO Plant Mapping\"}\r\n                MappingType={\"buplantmapping\"}\r\n                filterTemplateData={selectedRows}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  rowStyle={rowStyle}\r\n                  columns={columns}\r\n                  dataSource={plantMappingList}\r\n                  defaultLimit={100}\r\n                  // rowHeight={null}\r\n                  checkboxColumn\r\n                  selected={selected}\r\n                  sortable={false}\r\n                  onSelectionChange={onSelectionChange}\r\n                  enableColumnAutosize={true}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                  />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <Snackbar\r\n        open={snackBar}\r\n        autoHideDuration={3000}\r\n        onClose={handlesnackbarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handlesnackbarClose}\r\n          severity={snackbarseverity}\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {snackbarmessage}\r\n        </Alert>\r\n      </Snackbar>\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the RDO Plant Mapping(s) for Design Organization '}<b>{selectedDeleteMapping?.BUID}</b>\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteMVOtempcomp}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <BUPlantDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddBuPlant={handleAddBuPlant}\r\n        isEdit={isEdit}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        bussinessUnit={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n        setDisplayOrder={setDisplayOrder}\r\n      />\r\n\r\n      <ImportMappingsDialog\r\n        title={\"Import RDO Plant Mappings\"}\r\n        MappingType={\"buplantmapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BUPlantList;","import React from \"react\";\r\nimport BUPlantList from \"./buplantList\";\r\n\r\nconst BUPlantWrapper = () => {\r\n    return (\r\n        <BUPlantList />\r\n    );\r\n};\r\n\r\nexport default BUPlantWrapper;\r\n","import React from 'react';\r\nimport BUPlantWrapper from \"./buplantWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst buplantroutes = [\r\n  {\r\n    path: \"/buplantList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <BUPlantWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default buplantroutes;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Tooltip\r\n} from \"@mui/material\";\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport ReactDataGrid from \"@inovua/reactdatagrid-community\";\r\nimport Constant from '../../../constant'\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { unionBy } from 'lodash';\r\nconst gridStyle = { minHeight: 248 }\r\nconst ExpenseMappingDialog = ({\r\n  open,\r\n  handleorgAllowedDialogClose,\r\n  orgAllowedForm,\r\n  handleorgAllowedFormChange,\r\n  handleAddOrgAllowedValues,\r\n  isEdit,\r\n  templatesInfo,\r\n  bussinessUnitLists,\r\n  selectedBU,\r\n  setPlantValueList,\r\n  plantValueList\r\n}) => {\r\n  const [filteredBUOptions, setFilteredBUOptions] = useState([])\r\n  const [dataSource, setDataSource] = useState([]);\r\n  useEffect(() => {\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [orgAllowedForm.EXPENSE_TEMPLATE, selectedBU]);\r\n  useEffect(() => {\r\n    let filteredPlants = bussinessUnitLists?.find((plant) => plant.buName === orgAllowedForm.BUID)?.plants || [];\r\n    filteredPlants.map((plant, index) => {\r\n      plant.expense = ''\r\n      plant.id = index\r\n      return Object.assign({}, plant)\r\n    })\r\n    filteredPlants = unionBy(plantValueList, filteredPlants, 'plantName');\r\n    setDataSource(filteredPlants)\r\n    setPlantValueList(filteredPlants)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [orgAllowedForm.BUID, selectedBU, bussinessUnitLists, setPlantValueList]);\r\n\r\n  const [templateOption, setTemplateOption] = useState([])\r\n  useEffect(() => {\r\n    if (selectedBU) {\r\n      let tempData = templatesInfo.filter(temp => temp?.BU?.includes(selectedBU))\r\n      setTemplateOption(tempData)\r\n    }\r\n    setFilteredBUOptions([selectedBU])\r\n  }, [selectedBU, templatesInfo]);\r\n\r\n  const Input = (props) => {\r\n    const inputRef = useRef(null);\r\n    useEffect(() => {\r\n      if (inputRef && inputRef.current) {\r\n        if (props.autoFocus) {\r\n          inputRef.current.focus();\r\n        }\r\n      }\r\n    }, [props.autoFocus]);\r\n\r\n    return <input {...props} inputRef={inputRef} />;\r\n  };\r\n  const expenseColumn = {\r\n    name: 'expense',\r\n    header: 'Expense',\r\n    defaultFlex: 1, minWidth: 100,\r\n    rendersInlineEditor: true,\r\n    editable: true,\r\n    render: ({ value }, { cellProps }) => {\r\n      let v = cellProps.editProps.inEdit\r\n        ? cellProps.editProps.value\r\n        : value;\r\n      return (\r\n        <Input\r\n          type=\"number\"\r\n          autoFocus={cellProps.inEdit}\r\n          value={v}\r\n          onBlur={e => {\r\n            cellProps.editProps.onComplete(e);\r\n          }}\r\n          onChange={cellProps.editProps.onChange}\r\n          onFocus={() => cellProps.editProps.startEdit()}\r\n          onKeyDown={e => {\r\n            if (e.key === 'Escape') {\r\n              cellProps.editProps.onCancel(e);\r\n            }\r\n            if (e.key === 'Enter') {\r\n              cellProps.editProps.onComplete(e);\r\n            }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n  const gridRef = useRef(null);\r\n  const columns = [\r\n    { name: 'id', header: 'Id', defaultVisible: false, defaultWidth: 60, type: 'string' },\r\n    {\r\n      name: \"plantName\",\r\n      defaultWidth: 180,\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.PlantName}>Plant Name</Tooltip>,\r\n      render: ({ data }) => <div>{data?.plantName}</div>,\r\n    },\r\n    expenseColumn\r\n  ]\r\n\r\n  const onEditComplete = useCallback(({ value, columnId, rowId }) => {\r\n    const data = [...dataSource];\r\n    data[rowId] = Object.assign({}, data[rowId], { [columnId]: value });\r\n    setDataSource(data);\r\n    setPlantValueList(data)\r\n  }, [dataSource, setPlantValueList])\r\n  return (\r\n    <Dialog open={open}>\r\n      <DialogTitle>\r\n        {\" \"}\r\n        {isEdit ? \"Edit Expense Mapping \" : \"Add Expense Mapping\"}\r\n      </DialogTitle>\r\n      <Scrollbars\r\n        autoHeight\r\n        autoHeightMin={100}\r\n        autoHeightMax={500}\r\n        autoHide\r\n        autoHideTimeout={1000}\r\n        autoHideDuration={300}\r\n      >\r\n        <DialogContent>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n          <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Design Organization <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                id=\"DataType-select\"\r\n                name=\"BUID\"\r\n                fullWidth\r\n                value={selectedBU}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled\r\n              >\r\n                {filteredBUOptions?.map((option) => (\r\n                  <MenuItem key={option} value={option}>\r\n                    {option}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Template <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <Select\r\n                name=\"EXPENSE_TEMPLATE\"\r\n                fullWidth\r\n                value={orgAllowedForm.EXPENSE_TEMPLATE}\r\n                onChange={handleorgAllowedFormChange}\r\n                disabled={isEdit}\r\n              >\r\n                {templateOption?.map((option) => (\r\n                  <MenuItem key={option.templateName} value={option.templateName}>\r\n                    {option.templateName}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Grid>\r\n\r\n            <Grid item md={3} sm={4} xs={12}>\r\n              <span>\r\n                Plant Expenses <span style={{ color: \"red\" }}>*</span>\r\n              </span>\r\n            </Grid>\r\n\r\n            <Grid item md={9} sm={8} xs={12}>\r\n              <ReactDataGrid\r\n                idProperty=\"id\"\r\n                showZebraRows={false}\r\n                handle={ref => gridRef.current = ref ? ref.current : null}\r\n                style={gridStyle}\r\n                onEditComplete={onEditComplete}\r\n                columns={columns}\r\n                dataSource={dataSource}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n      </Scrollbars>\r\n      <DialogActions>\r\n        <Button onClick={handleorgAllowedDialogClose}>Cancel</Button>\r\n        <Button onClick={handleAddOrgAllowedValues}>\r\n          {isEdit ? \"Update\" : \"Add\"}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingDialog;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"app/components\";\r\nimport Constant from '../../../constant'\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport ExpenseMappingDialog from \"./expensemapDialog\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport { Box, styled, Grid, TextField, Tooltip } from \"@mui/material\";\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\nimport CustomSelect from \"../../../components/CustomSelect\";\r\nimport { BUOptions } from \"../../adminConfig/common\";\r\nimport { MVOtempcompService } from \"services/mvotempcompService\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport ImportMappingsDialog from \"../../../components/importMappingsDialog\";\r\nimport ExportMappingDialog from '../../../components/exportMappingTemplate'; //export functionality\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst ExpenseMappingList = () => {\r\n  const {\r\n    refreshData,\r\n    templatesInfo,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    mappingTemplatesInfo,\r\n    updateBussinessUnit,\r\n    updateMappingTemplatesInfo\r\n  } = useOracleSettings();\r\n\r\n  const [importTemplate, setImportTemplate] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const [orgallowedaddDialog, setOrgallowedaddDialog] = useState(false);\r\n  const [orgAllowedForm, setOrgAllowedForm] = useState({});\r\n  const gridStyle = { minHeight: 550 };\r\n  const mvotempcompservice = new MVOtempcompService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const draftMapService = new HistoryManagementService();\r\n  const [selectedDeleteMapping, setSelectedDeleteMapping] = useState();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [expensemapData, setExpenseMapData] = useState([]);\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selected, setSelected] = useState({});\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [plantValueList, setPlantValueList] = useState([]);\r\n  const [filteredDraftTabledata, setFilteredDraftTabledata] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState({});\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n\r\n  };\r\n  const handleSearch = () => {\r\n  };\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handlesnackBarClick = (message, severity) => {\r\n    setOpenAlert(true);\r\n    setOpenDesc({\r\n      severity: severity,\r\n      desc: message,\r\n    })\r\n  };\r\n  let plantColumnsSet = new Set(); // Define it outside\r\n  if (expensemapData && expensemapData.length > 0) {\r\n    expensemapData.forEach((dataItem) => {\r\n      const plants = dataItem.details?.EXPENSE_PLANTS;\r\n      if (plants) {\r\n        const plantKeys = Object.keys(plants);\r\n\r\n        plantKeys.forEach((plant) => {\r\n          plantColumnsSet.add(plant);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  const plantColumns = Array.from(plantColumnsSet).map((plant) => {\r\n    return {\r\n      name: plant,\r\n      header: plant,\r\n      sortable: false,\r\n      defaultWidth: 90,\r\n      //render: ({ data }) => <div>{data?.details?.EXPENSE_PLANTS[plant]}</div>,\r\n      render: (params) => (\r\n        <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      ),\r\n    };\r\n  });\r\n  const handleorgAllowedFormChange = (event) => {\r\n    const { name, value } = event.target;\r\n    // If it's a form field change\r\n    const updatedForm = {\r\n      ...orgAllowedForm,\r\n      [name]: value,\r\n    };\r\n    setOrgAllowedForm(updatedForm);\r\n  };\r\n  const handleAddOrgAllowedValues = () => {\r\n    const templateid = templatesInfo?.filter(\r\n      (template) => template.templateName === orgAllowedForm.EXPENSE_TEMPLATE\r\n    );\r\n    const resultPlantPayload = plantValueList.reduce((acc, curr) => {\r\n      acc[curr.plantName] = Number(curr.expense) !== 0 && !isNaN(Number(curr.expense)) ? Number(curr.expense) : '';\r\n      return acc;\r\n    }, {});\r\n    if (\r\n      !orgAllowedForm.EXPENSE_TEMPLATE ||\r\n      !orgAllowedForm.BUID ||\r\n      plantValueList.length < 1\r\n    ) {\r\n      handlesnackBarClick(\"Please Enter the required fields\", \"error\");\r\n      return;\r\n    }\r\n    if (orgAllowedForm) {\r\n      const neworgallowedvalue = {\r\n        BUID: orgAllowedForm.BUID,\r\n        MappingType: \"expensemapping\",\r\n        id:\r\n          templateid[0].id +\r\n          \"_\" +\r\n          orgAllowedForm.BUID.trim() +\r\n          \"_\" +\r\n          \"expensemapping\",\r\n        details: {\r\n          EXPENSE_TEMPLATE: orgAllowedForm.EXPENSE_TEMPLATE,\r\n          EXPENSE_TEMPLATE_ID: templateid[0].id,\r\n          EXPENSE_PLANTS: resultPlantPayload,\r\n        },\r\n      };\r\n      if (isEdit === false) {\r\n        mvotempcompservice\r\n          .addnewTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp?.status === 'success') {\r\n              fetchData();\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n              }, 200);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping added successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      } else {\r\n        mvotempcompservice\r\n          .updateTempCompMapping(neworgallowedvalue)\r\n          .then((resp) => {\r\n            if (resp.status === \"success\") {\r\n              setTimeout(() => {\r\n                setOrgallowedaddDialog(false);\r\n                fetchData();\r\n              }, 200);\r\n              setIsEdit(false);\r\n              setSelected({})\r\n              handlesnackBarClick(\"Expense Mapping updated successfully\", \"success\");\r\n            } else {\r\n              handlesnackBarClick(resp?.msg, resp?.status)\r\n            }\r\n          });\r\n      }\r\n    }\r\n    handleorgAllowedDialogClose();\r\n  };\r\n  const handleorgAllowedDialogOpen = () => {\r\n    setOrgAllowedForm({ BUID: bussinessUnit });\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n  const handleorgAllowedDialogClose = () => {\r\n    setOrgallowedaddDialog(false);\r\n    setOrgAllowedForm(\"\");\r\n    setPlantValueList([])\r\n    setIsEdit(false);\r\n    setSelectedRows([])\r\n    setSelected({})\r\n  };\r\n\r\n  const handleorgAllowedDialogAdd = () => {\r\n    setOrgallowedaddDialog(false);\r\n  };\r\n  const handleDeleteDialog = () => {\r\n    setSelectedDeleteMapping(selectedRows[0]);\r\n    setDeleteDialog(true);\r\n  };\r\n  const handleEditExpenseMapping = () => {\r\n    const selectedDetails = selectedRows[0]?.details;\r\n    const BUID = { BUID: selectedRows[0]?.BUID };\r\n    setOrgAllowedForm({\r\n      ...selectedDetails,\r\n      ...BUID,\r\n    });\r\n    const plantValuesarr = Object.entries(\r\n      selectedRows[0]?.details?.EXPENSE_PLANTS\r\n    ).map(([key, value], index) => {\r\n      return { 'plantName': key, 'expense': value, 'id': index };\r\n    });\r\n    sortDataByKey(plantValuesarr, \"plantName\");\r\n    setPlantValueList(plantValuesarr)\r\n    setIsEdit(true);\r\n    setOrgallowedaddDialog(true);\r\n  };\r\n\r\n  const handleDeleteOrgAllowedValues = async () => {\r\n    try {\r\n      await mvotempcompservice.softDeleteTempCompMapping({ data: selectedRows }).then(result => {\r\n        handleCloseDelete(false)\r\n        setSelectedRows([])\r\n        setSelectedDeleteMapping([])\r\n        setSelected({})\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete mapping:\", error);\r\n    }\r\n    handlesnackBarClick(\"Expense Mapping deleted Successfully\", \"success\");\r\n    fetchData();\r\n    setSelectedRows([]);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: \"EXPENSE_TEMPLATE\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.EXPENSE_TEMPLATE}>Template</Tooltip>,\r\n      defaultWidth: 250,\r\n      // render: (params) => (\r\n      //   <div dangerouslySetInnerHTML={{ __html: params.value }} />\r\n      // )\r\n      render: ({ data }) => <div>{data?.EXPENSE_TEMPLATE}</div>,\r\n    },\r\n\r\n    {\r\n      name: \"BUID\",\r\n      header: <Tooltip title={Constant.adminConstant.expensemapList.tooltip.RDO}>Design Organization</Tooltip>,\r\n      defaultWidth: 150,\r\n    },\r\n\r\n    ...plantColumns,\r\n\r\n    // Add a custom column for checkboxes\r\n  ];\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsLoading(refreshData);\r\n  }, [refreshData]);\r\n  const [tableTempData, setTableTempData] = useState([])\r\n\r\n  const sortedFilterExpenseMappingData = sortDataByKey(tableTempData, \"EXPENSE_TEMPLATE\");\r\n\r\n  useEffect(() => {\r\n    fetchDraftData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    if (mappingTemplatesInfo) {\r\n      let finalTempMapList = mappingTemplatesInfo;\r\n      finalTempMapList = finalTempMapList.filter(\r\n        (item) => item.MappingType === \"expensemapping\" && item.actionFlag !== \"Delete\"\r\n      );\r\n\r\n      if (bussinessUnit) {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return fitem.BUID === bussinessUnit;\r\n        });\r\n      }\r\n      if (searchValue && searchValue !== \"\") {\r\n        finalTempMapList = finalTempMapList?.filter((fitem) => {\r\n          return (\r\n            JSON.stringify(fitem)?.includes(searchValue) ||\r\n            JSON.stringify(fitem)?.toLocaleLowerCase()?.includes(searchValue)\r\n          );\r\n        });\r\n      }\r\n      if (filteredDraftTabledata.length > 0) {\r\n        const filteredExpenseDraftData = filteredDraftTabledata.filter((i) => { return i.MappingType == \"expensemapping\" });\r\n        if (filteredExpenseDraftData.length > 0 && filteredExpenseDraftData[0].MappingType === 'expensemapping') {\r\n          finalTempMapList.forEach(obj1 => {\r\n            filteredExpenseDraftData[0].changes.forEach(obj2 => {\r\n              if (obj1['id'] === obj2['id']) {\r\n                obj1.details.draftValue_EXPENSE_TEMPLATE = obj2.details.EXPENSE_TEMPLATE !== obj1.details.EXPENSE_TEMPLATE ? obj2.details.EXPENSE_TEMPLATE : null;\r\n                obj1.details.draft_Plants = {};\r\n                for (let key in obj1.details.EXPENSE_PLANTS) {\r\n                  obj1.details.draft_Plants[key] = obj2.details.EXPENSE_PLANTS[key] !== obj1.details.EXPENSE_PLANTS[key] ? obj2.details.EXPENSE_PLANTS[key] : null;\r\n                }\r\n                // obj1.details.draft_Plants = {\r\n                //   \"MME\": obj2.details.EXPENSE_PLANTS.MME !== obj1.details.EXPENSE_PLANTS.MME ? obj2.details.EXPENSE_PLANTS.MME : null,\r\n                //   \"MMC\": obj2.details.EXPENSE_PLANTS.MMC !== obj1.details.EXPENSE_PLANTS.MMC ? obj2.details.EXPENSE_PLANTS.MMC : null,\r\n                //   \"MVO\": obj2.details.EXPENSE_PLANTS.MVO !== obj1.details.EXPENSE_PLANTS.MVO ? obj2.details.EXPENSE_PLANTS.MVO : null,\r\n                //   \"NA3\": obj2.details.EXPENSE_PLANTS.NA3 !== obj1.details.EXPENSE_PLANTS.NA3 ? obj2.details.EXPENSE_PLANTS.NA3 : null,\r\n                //   \"NAE\": obj2.details.EXPENSE_PLANTS.NAE !== obj1.details.EXPENSE_PLANTS.NAE ? obj2.details.EXPENSE_PLANTS.NAE : null,\r\n                //   \"CL2\": obj2.details.EXPENSE_PLANTS.CL2 !== obj1.details.EXPENSE_PLANTS.CL2 ? obj2.details.EXPENSE_PLANTS.CL2 : null,\r\n                //   \"PVE\": obj2.details.EXPENSE_PLANTS.PVE !== obj1.details.EXPENSE_PLANTS.PVE ? obj2.details.EXPENSE_PLANTS.PVE : null,\r\n                //   \"MMR\": obj2.details.EXPENSE_PLANTS.MMR !== obj1.details.EXPENSE_PLANTS.MMR ? obj2.details.EXPENSE_PLANTS.MMR : null,\r\n                //   \"MFS\": obj2.details.EXPENSE_PLANTS.MFS !== obj1.details.EXPENSE_PLANTS.MFS ? obj2.details.EXPENSE_PLANTS.MFS : null,\r\n                //   \"MET\": obj2.details.EXPENSE_PLANTS.MET !== obj1.details.EXPENSE_PLANTS.MET ? obj2.details.EXPENSE_PLANTS.MET : null,\r\n                //   \"MMB\": obj2.details.EXPENSE_PLANTS.MMB !== obj1.details.EXPENSE_PLANTS.MMB ? obj2.details.EXPENSE_PLANTS.MMB : null\r\n                // }\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n      setExpenseMapData(finalTempMapList);\r\n      let data = finalTempMapList.map(item => {\r\n        item[\"EXPENSE_TEMPLATE\"] = item?.details?.EXPENSE_TEMPLATE;\r\n        // Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n        //   item?.details?.draft_Plants ? Object.keys(item?.details?.draft_Plants).map(draft_Plant =>{\r\n        //       item[\"MME\"] = item?.details?.draft_Plants[\"MME\"] ? `${item?.details?.draft_Plants[\"MME\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MME\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MME\"]\r\n        //       item[\"MMC\"]= item?.details?.draft_Plants[\"MMC\"] ? `${item?.details?.draft_Plants[\"MMC\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMC\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMC\"]\r\n        //       item[\"MVO\"]= item?.details?.draft_Plants[\"MVO\"] ? `${item?.details?.draft_Plants[\"MVO\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MVO\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MVO\"]\r\n        //       item[\"NA3\"]= item?.details?.draft_Plants[\"NA3\"] ? `${item?.details?.draft_Plants[\"NA3\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NA3\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NA3\"]\r\n        //       item[\"NAE\"]= item?.details?.draft_Plants[\"NAE\"] ? `${item?.details?.draft_Plants[\"NAE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"NAE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"NAE\"]\r\n        //       item[\"CL2\"]= item?.details?.draft_Plants[\"CL2\"] ? `${item?.details?.draft_Plants[\"CL2\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"CL2\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"CL2\"]\r\n        //       item[\"PVE\"]= item?.details?.draft_Plants[\"PVE\"] ? `${item?.details?.draft_Plants[\"PVE\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"PVE\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"PVE\"]\r\n        //       item[\"MMR\"]= item?.details?.draft_Plants[\"MMR\"] ? `${item?.details?.draft_Plants[\"MMR\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMR\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MMR\"]\r\n        //       item[\"MFS\"]= item?.details?.draft_Plants[\"MFS\"] ? `${item?.details?.draft_Plants[\"MFS\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MFS\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MFS\"]\r\n        //       item[\"MET\"]= item?.details?.draft_Plants[\"MET\"] ? `${item?.details?.draft_Plants[\"MET\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MET\"]} <span>` : item?.details?.EXPENSE_PLANTS[\"MET\"]\r\n        //       item[\"MMB\"]= item?.details?.draft_Plants[\"MMB\"] ? `${item?.details?.draft_Plants[\"MMB\"]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[\"MMB\"]} <span>`: item?.details?.EXPENSE_PLANTS[\"MMB\"]\r\n        //     }) : item[plant] = item?.details?.EXPENSE_PLANTS[plant]          \r\n        //   }            \r\n        // )\r\n        Object.keys(item?.details?.EXPENSE_PLANTS).map(plant => {\r\n          item?.details?.draft_Plants ? item[plant] = item?.details?.draft_Plants[plant] ? `${item?.details?.draft_Plants[plant]} &nbsp;&nbsp;&nbsp;&nbsp;<span className=\"previousSelection\" style=\"color:#f00; font-weight:bold;text-decoration: line-through\"> ${item?.details?.EXPENSE_PLANTS[plant]} <span>` : item?.details?.EXPENSE_PLANTS[plant]\r\n            : item[plant] = item?.details?.EXPENSE_PLANTS[plant]\r\n        }\r\n        )\r\n        return item\r\n      })\r\n      setTimeout(() => {\r\n        setTableTempData(data);\r\n        setIsLoading(false)\r\n      }, 500)\r\n    } else {\r\n      if (!bussinessUnit) {\r\n        updateBussinessUnit(BUOptions ? BUOptions[0]?.value : \"\");\r\n      }\r\n    }\r\n  }, [mappingTemplatesInfo, bussinessUnit, searchValue, updateBussinessUnit, filteredDraftTabledata]);\r\n\r\n  const fetchDraftData = () => {\r\n    setIsLoading(true);\r\n    draftMapService.getAlldraftChanges().then((result) => {\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = [];\r\n      if (result.data) {\r\n        filterData = result.data.filter(element => element.BUID === BUID);\r\n      }     \r\n      setFilteredDraftTabledata(filterData);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && Object.keys(selRowsData).map(key => (selRowsData[key]));\r\n    setSelectedRows(selRowsDetails);\r\n  }, [selected, dataMap]);\r\n  const rowStyle = ({ data }) => {\r\n    const isSelected = Object.keys(selected).includes(data.id);\r\n    return {\r\n      backgroundColor: data.actionFlag !== undefined ? 'rgb(25 118 210 / 20%)' : '',\r\n      zIndex: 99,\r\n      background: (isSelected || selected === true) ? '#dee1f2' : 'initial',\r\n    }\r\n  }\r\n  \r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Expense Mapping\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"top\">\r\n          {/* Search Input and Search Button */}\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={handleSearchInputChange}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* Design Organization Text and Dropdown */}\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\" justify=\"flex-end\" style={{ display: \"none\" }}>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'right' }}>\r\n                <label style={{ whiteSpace: \"nowrap\", paddingTop: \"11px\" }}>Design Organization:</label>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={6} className=\"font-medium\" style={{ textAlign: 'left' }}>\r\n                <CustomSelect\r\n                  onChange={handleSearchInputChange}\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"100%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    setSelected({});\r\n                    setSelectedRows([]);\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                    setSelectedRows([]);\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Right-aligned Buttons */}\r\n            <Grid item xs={12} className=\"font-medium\" style={{ marginTop: '0px', textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                onClick={handleorgAllowedDialogOpen}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length === 1 ? false : true}\r\n                onClick={handleEditExpenseMapping}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Edit\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                component={RouterLink}\r\n                disabled={selectedRows?.length !== 0 ? false : true}\r\n                onClick={handleDeleteDialog}\r\n                style={{ margin: \"0 0px 0 10px\" }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => {\r\n                  setImportTemplate(true);\r\n                }}\r\n                style={{ margin: \"0 10px 0 10px\" }}\r\n              >\r\n                Import\r\n              </Button>\r\n              {/* export btn */}\r\n              <ExportMappingDialog\r\n                title={\"Expense Mapping\"}\r\n                MappingType={\"expensemapping\"}\r\n                filterTemplateData={selectedRows}\r\n                sortInfo={sortInfo} // Pass sortInfo to ExportMappingDialog \r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          {/* DataGrid */}\r\n          <Grid item xs={12} style={{ marginTop: '10px' }}>\r\n            <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n              {isLoading && (\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100vh\",\r\n                  }}\r\n                >\r\n                  <CircularProgress />\r\n                </Box>\r\n              )}\r\n              {!isLoading && (\r\n                <DataGrid\r\n                  idProperty=\"id\"\r\n                  showZebraRows={false}\r\n                  style={gridStyle}\r\n                  columns={columns}\r\n                  dataSource={sortInfo === null ? expensemapData : sortedFilterExpenseMappingData}\r\n                  rowHeight={null}\r\n                  checkboxColumn\r\n                  defaultLimit={100}\r\n                  selected={selected}\r\n                  onSelectionChange={onSelectionChange}\r\n                  handle={ref => gridRef.current = ref ? ref.current : null}\r\n                  rowStyle={rowStyle}\r\n                  pagination\r\n                  renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                    onSortInfoChange={handleSortInfoChange}\r\n                />\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </SimpleCard>\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Mapping\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {'Do you want to delete the ExpenseAcctByTemplateAndPlant Mapping(s) for Design Organization'} <b>{selectedDeleteMapping?.BUID}</b>\r\n\r\n            <br />\r\n            <br />\r\n            <b>Note:</b> {Constant.adminConstant.common.deleteNote}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDelete}>Cancel</Button>\r\n          <Button onClick={handleDeleteOrgAllowedValues}>delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <ExpenseMappingDialog\r\n        open={orgallowedaddDialog}\r\n        handleorgAllowedDialogAdd={handleorgAllowedDialogAdd}\r\n        handleorgAllowedDialogClose={handleorgAllowedDialogClose}\r\n        orgAllowedForm={orgAllowedForm}\r\n        handleorgAllowedFormChange={handleorgAllowedFormChange}\r\n        handleAddOrgAllowedValues={handleAddOrgAllowedValues}\r\n        isEdit={isEdit}\r\n        templatesInfo={templatesInfo}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        selectedBU={bussinessUnit}\r\n        setPlantValueList={setPlantValueList}\r\n        plantValueList={plantValueList}\r\n      />\r\n      <ImportMappingsDialog\r\n        title={\"Import Expense Mappings\"}\r\n        MappingType={\"expensemapping\"}\r\n        selectedBU={bussinessUnit}\r\n        importTemplate={importTemplate}\r\n        fetchData={fetchData}\r\n        setImportTemplate={setImportTemplate}\r\n      />\r\n    </Container >\r\n  );\r\n};\r\n\r\nexport default ExpenseMappingList;\r\n","import React from \"react\";\r\nimport ExpenseMappingList from \"./expensemapList\";\r\n\r\nconst ExpenseMapWrapper = () => {\r\n  return (\r\n    <ExpenseMappingList />\r\n  );\r\n};\r\n\r\nexport default ExpenseMapWrapper;\r\n","import React from 'react';\r\nimport ExpenseMapWrapper from \"./expensemapWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst expensemaproutes = [\r\n  {\r\n    path: \"/expensemapList\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <ExpenseMapWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default expensemaproutes;\r\n","// import { useEffect, useState } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport {\r\n    Grid,\r\n} from \"@mui/material\";\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst validationSchema = yup.object().shape({\r\n    description: yup\r\n        .string()\r\n        .required('This field is required')\r\n        .max(500, 'Input should not exceed 500 characters'),\r\n});\r\n\r\n\r\nconst CommitChangesForm = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ description: null }}\r\n            validationSchema={validationSchema}\r\n            enableReinitialize\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            onSubmit={(values, { resetForm }) => {\r\n                // handle form submission here\r\n                props.saveApplyChanges(values);\r\n                resetForm();\r\n            }}\r\n        >\r\n            {({\r\n                errors,\r\n                touched,\r\n                submitForm,\r\n                setFieldValue,\r\n                setErrors,\r\n                setTouched\r\n            }) => {\r\n                const closeDialogBox = () => {\r\n                    props?.setApplyChangesDialog(false);\r\n                    setErrors({});\r\n                    setTouched({}, false);\r\n                }\r\n                return (\r\n                    <Form>\r\n                        <Dialog\r\n                            open={props?.applyChangesDialog}\r\n                            maxWidth={'sm'}\r\n                            fullWidth={true}\r\n                        >\r\n                            <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                                Do you want to apply your changes?\r\n                            </DialogTitle>\r\n                            <DialogContent>\r\n                                <DialogContentText>\r\n\r\n                                    <Grid container spacing={1} alignItems=\"center\">\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            Comments<span style={{ color: \"#FF3D57\" }}>*</span>:\r\n                                        </Grid>\r\n                                        <Grid item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                                            <Field as=\"textarea\" id=\"description\" name=\"description\" rows=\"10\" style={{ width: \"100%\", borderRadius: \"10px\" }} />\r\n                                            <ErrorMessage name=\"description\" component=\"div\" style={{ color: \"red\" }} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                                <Button onClick={closeDialogBox}>Cancel</Button>\r\n                                <Button onClick={submitForm} >Apply</Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik >\r\n    )\r\n}\r\n\r\nexport default CommitChangesForm;","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  // styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\n\r\nimport { styled } from '@mui/system';\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport CustomSelect from \"./../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\nimport CommitChangesForm from \"./commitChangesForm\";\r\n\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport { TemplateMappingService } from \"services/templateMappingService\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst DraftChangesList = () => {\r\n  const { bussinessUnit, updateBussinessUnit, updateMappingTemplatesInfo } = useOracleSettings();\r\n\r\n  const [tabledata, setTabledata] = useState([]);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [applyChangesDialog, setApplyChangesDialog] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const historyManagementService = new HistoryManagementService();\r\n  const tempMapService = new TemplateMappingService();\r\n  const columns = [\r\n    {\r\n      name: \"userName\",\r\n      header: \"User Name\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n    },\r\n    {\r\n      name: \"MappingType\",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"BUID\",\r\n      header: \"Design Organization\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.BUID}</div>,\r\n    },\r\n    // {\r\n    //   name: \"modifiedTemplate\",\r\n    //   header: \"Modified Templates\",\r\n    //   defaultFlex: 1,\r\n    //   render: ({ data }) => <div>{data?.modifiedTemplate.join(\", \")}</div>,\r\n    // },\r\n    {\r\n      name: \"modifiedDateTime\",\r\n      header: \"Modified Date & Time \",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{(data?.modifiedDateTime) ? data?.modifiedDateTime : \"-\"}</div>,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      header: \"Action\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => {\r\n        return (\r\n          <div>\r\n            <Button variant=\"contained\"\r\n              style={{ margin: \"0px 10px 0px 0px\" }}\r\n              onClick={() => {\r\n                setSelectedRows([data]);\r\n                setApplyChangesDialog(true);\r\n              }}\r\n            >\r\n              Apply\r\n            </Button>\r\n            <Button variant=\"contained\"\r\n              onClick={() => {\r\n                discardDraftChanges(data.id);\r\n              }}>\r\n              Discard\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n        return thisRowData.includes(searchValue.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join().toLowerCase();\r\n      return thisRowData.includes(bussinessUnit.toLowerCase());\r\n    });\r\n\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  const updateTemplateMappingData = () => {\r\n    tempMapService.getAlltemplateMappings().then((result) => {\r\n      updateMappingTemplatesInfo(result?.data?.templateMappingList);\r\n      //setIsLoading(false);\r\n    });\r\n  }\r\n  const saveApplyChanges = (values) => {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      if (!selectedRows.length) {\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: \"error\",\r\n          desc: \"Please select row.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const payload = {\r\n        id: selectedRows[0]?.id,\r\n        reason: values.description,\r\n        BUID: selectedRows[0]?.BUID,\r\n        MappingType: selectedRows[0]?.MappingType,\r\n      }\r\n      historyManagementService.applyDraftChanges(payload).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n  const discardDraftChanges = (rowId) => {\r\n    try {\r\n      setIsLoading(true);\r\n      historyManagementService.discardDraftChanges(rowId).then((result) => {\r\n        setApplyChangesDialog(false); // close dialog box\r\n        setSelectedRows([]); // reset selected row value\r\n\r\n        updateTemplateMappingData();\r\n        fetchData();\r\n        setIsLoading(false);\r\n\r\n        if (result?.status === \"success\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: result?.msg,\r\n          });\r\n        } else if (result?.status === \"failed\") {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: result?.msg,\r\n          });\r\n        }\r\n      });\r\n    } catch (err) {\r\n      //console.log(err, 'errors 1 ==================');\r\n    }\r\n  }\r\n\r\n  const fetchData = () => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAlldraftChanges().then((result) => {\r\n      setTabledata(result?.data);\r\n      let BUID = bussinessUnit ? bussinessUnit : 'Micro Motion';\r\n      let filterData = result.data.filter(element => element.BUID === BUID);\r\n      setFilteredTabledata(filterData);\r\n      //setTabledata(result?.data);\r\n      //setFilteredTabledata(result?.data);\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Draft Changes\" }]} />\r\n      </Box>\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={5} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={8} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"25%\" }}\r\n                  //optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                defaultLimit={100}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n\r\n      <CommitChangesForm applyChangesDialog={applyChangesDialog} setApplyChangesDialog={setApplyChangesDialog} saveApplyChanges={saveApplyChanges} />\r\n\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DraftChangesList;\r\n","import React from \"react\";\r\nimport RequestChangesList from \"./draftChangesList\";\r\n\r\nconst RequestChangesWraper = () => {\r\n    return (\r\n        <RequestChangesList />\r\n    );\r\n};\r\n\r\nexport default RequestChangesWraper;\r\n","import React from 'react';\r\nimport DraftChangesWraper from \"./draftChangesWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst draftChangesroutes = [\r\n  {\r\n    path: \"/draftChanges\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <DraftChangesWraper />\r\n      </PrivateRoute>\r\n    ),\r\n  },\r\n];\r\n\r\nexport default draftChangesroutes;\r\n","import { Breadcrumb, SimpleCard } from \"app/components\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Table,\r\n  Grid,\r\n  TextField,\r\n  Select,\r\n  MenuItem\r\n} from \"@mui/material\";\r\n\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport CustomSelect from \"../../components/CustomSelect\";\r\nimport { BUOptions } from \"../adminConfig/common\";\r\n\r\nimport { HistoryManagementService } from \"services/historyManagementService\";\r\n\r\nimport historyData from \"./sampledata.json\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst HistoryLIst = () => {\r\n  const { bussinessUnit, updateBussinessUnit } = useOracleSettings();\r\n  const [tabledata, setTabledata] = useState(historyData);\r\n  const [filteredTabledata, setFilteredTabledata] = useState([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const gridStyle = { minHeight: 550 };\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [mappingOptions, setMappingOptions] = useState([]);\r\n  const historyManagementService = new HistoryManagementService();\r\n  const [mappingType, setMappingType] = useState('orgallowedvalues')\r\n  const gridRef = useRef(null);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"version\",\r\n      header: \"Version\",\r\n      defaultFlex: 0.6,\r\n      defaultWidth: 20,\r\n      render: ({ data }) => <div>{data?.version}</div>,\r\n    },\r\n    {\r\n      name: \"dateTime\",\r\n      header: \"Change Date\",\r\n      defaultFlex: 2,\r\n      render: ({ data }) => {\r\n        let date = new Date(parseInt(data?.dateTime));\r\n        console.log(date, 'date')\r\n        const year = date.getFullYear();\r\n        const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are zero-indexed\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const hours = String(date.getHours()).padStart(2, '0');\r\n        const minutes = String(date.getMinutes()).padStart(2, '0');\r\n        const seconds = String(date.getSeconds()).padStart(2, '0');\r\n        const meridiem = hours >= 12 ? 'PM' : 'AM';\r\n        const formattedHours = hours % 12 || 12; // Convert 24-hour to 12-hour format\r\n        const formattedDate = `${year}-${month}-${day} ${formattedHours}:${minutes}:${seconds} ${meridiem}`;\r\n        return <div>{formattedDate}</div>\r\n      },\r\n    },\r\n    {\r\n      name: \"userName\",\r\n      header: \"Requested By\",\r\n      defaultFlex: 1,\r\n      render: ({ data }) => <div>{data?.userName}</div>,\r\n    },\r\n    {\r\n      name: \"MappingType \",\r\n      header: \"Mapping Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.MappingType}</div>,\r\n    },\r\n    {\r\n      name: \"reason\",\r\n      header: \"Change Details\",\r\n      defaultFlex: 3,\r\n      defaultWidth: 200,\r\n      render: ({ data }) => <div>{data?.reason}</div>,\r\n    },\r\n\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    let filteredData = [];\r\n    // input box filter\r\n    if (searchValue === \"\") {\r\n      filteredData = tabledata;\r\n    } else {\r\n      filteredData = tabledata?.filter((thisItem) => {\r\n        const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n        return thisRowData.includes(searchValue?.toLowerCase());\r\n      });\r\n    }\r\n\r\n    // dropdown filter\r\n    // filteredData = filteredData?.filter((thisItem) => {\r\n    //   const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n    //   return thisRowData.includes(bussinessUnit?.toLowerCase());\r\n    // });\r\n    // console.log(filteredData, 'filteredDatafilteredData')\r\n    setFilteredTabledata(filteredData);\r\n  };\r\n\r\n  const handleRowClick = (rowData) => {\r\n    const isSelected = selectedRows.some((row) => row.id === rowData.id);\r\n\r\n    if (isSelected) {\r\n      setSelectedRows((prevSelectedRows) =>\r\n        prevSelectedRows.filter((row) => row.id !== rowData.id)\r\n      );\r\n    } else {\r\n      setSelectedRows([rowData]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    historyManagementService.getAllmappingHistory().then((result) => {\r\n      setTabledata(result?.data);\r\n      setFilteredTabledata(result?.data);\r\n      // setMappingType()\r\n      setIsLoading(false);\r\n      const values = new Set();\r\n      result?.data?.forEach((subscriber) => {\r\n        if (Array.isArray(subscriber['MappingType'])) {\r\n          subscriber['MappingType'].forEach((data) => {\r\n            values.add(data.MappingType);\r\n          });\r\n        } else {\r\n          values.add(subscriber['MappingType']);\r\n        }\r\n      });\r\n      console.log(Array.from(values), 'array of mapping')\r\n      setMappingOptions(Array.from(values))\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handleSearch();\r\n  }, [searchValue, bussinessUnit]);\r\n\r\n\r\n  useEffect(() => {\r\n    // let dataToShow = tabledata;\r\n    // console.log(dropdownFilter, 'dropdownFilter')\r\n    let filteredData = tabledata;\r\n    // dropdown filter\r\n    filteredData = filteredData?.filter((thisItem) => {\r\n      const thisRowData = Object.values(thisItem).join()?.toLowerCase();\r\n      return thisRowData.includes(bussinessUnit?.toLowerCase()) &&\r\n        thisRowData.includes(mappingType?.toLowerCase());\r\n    });\r\n    setFilteredTabledata(filteredData);\r\n  }, [mappingType, bussinessUnit, tabledata])\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"Changes History \" }]} />\r\n      </Box>\r\n\r\n      <SimpleCard>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container spacing={1} alignItems=\"center\">\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <TextField\r\n                  type=\"text\"\r\n                  name=\"search\"\r\n                  size=\"small\"\r\n                  onChange={(e) => {\r\n                    setSearchValue(e.target.value);\r\n                  }}\r\n                  value={searchValue}\r\n                  style={{ width: \"100%\" }}\r\n                />\r\n              </Grid>\r\n              <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n                <Button variant=\"contained\" onClick={handleSearch}>\r\n                  Search\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={6} sm={6} xs={12} className=\"font-medium\">\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Mapping Type:</label>\r\n\r\n                <Select\r\n                  className=\"form-control\"\r\n                  defaultValue={mappingOptions[0]}\r\n                  value={mappingType}\r\n                  onChange={(e) => setMappingType(e.target.value)}\r\n                  style={{ width: \"50%\" }}\r\n                  size={'medium'}\r\n                  displayEmpty // Enable displayEmpty prop\r\n                  renderValue={(selected) => {\r\n                    // Render the selected value\r\n                    let selectedOption = [];\r\n                    selectedOption = mappingOptions?.find(\r\n                      (option) => (option === selected)\r\n                    );\r\n\r\n                    return (selectedOption) ? selectedOption : '';\r\n                  }}\r\n                >\r\n                  {mappingOptions?.map((option, index) => {\r\n                    const listKey = \"dpKey\" + index;\r\n                    return (\r\n                      <MenuItem value={option} key={listKey}>\r\n                        {option}\r\n                      </MenuItem>\r\n                    )\r\n                  })}\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item md={12} sm={6} xs={12} className=\"font-medium\" style={{ display: \"none\" }}>\r\n            <Grid container alignItems=\"center\"\r\n              style={{\r\n                // marginLeft: \"198px\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Grid\r\n                item\r\n                md={12}\r\n                sm={12}\r\n                xs={12}\r\n                className=\"font-medium\"\r\n                style={{ paddingRight: \"10px\" }}\r\n              >\r\n                <label style={{ textWrap: \"nowrap\", paddingTop: \"10px\" }}>Design Organization:</label>\r\n\r\n                <CustomSelect\r\n                  selectedvalue={bussinessUnit}\r\n                  style={{ width: \"50%\" }}\r\n                  optionsValues={BUOptions}\r\n                  // defaultValue={\r\n                  //   BUOptions && !bussinessUnit ? BUOptions[0]?.value : \"\"\r\n                  // }\r\n                  onChangeFunc={(selectedOptionValue) => {\r\n                    updateBussinessUnit(selectedOptionValue);\r\n                    // handleOptionChange({bu: selectedOptionValue})\r\n                    setSearchValue(\"\");\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box width=\"100%\" overflow=\"auto\" marginTop=\"10px\">\r\n            {isLoading && (\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  height: \"100vh\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n            {!isLoading && (\r\n              <DataGrid\r\n                showZebraRows={false}\r\n                style={gridStyle}\r\n                columns={columns}\r\n                dataSource={filteredTabledata}\r\n                defaultLimit={100}\r\n                // rowHeight={null}\r\n                onRowClick={(rowData) => handleRowClick(rowData.data)}\r\n                pagination\r\n                renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n                />\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </SimpleCard>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HistoryLIst;\r\n","import React from \"react\";\r\nimport HistoryList from \"./historyList\";\r\n\r\nconst HistoryWrapper = () => {\r\n    return (\r\n        <HistoryList />\r\n    );\r\n};\r\n\r\nexport default HistoryWrapper;\r\n","import React from 'react';\r\nimport HistoryWrapper from \"./historyWrapper\";\r\nimport PrivateRoute from \"app/privateRoutes\";\r\n\r\nconst historyroutes = [\r\n  {\r\n    path: \"/history\",\r\n    element: (\r\n      <PrivateRoute>\r\n        <HistoryWrapper />\r\n      </PrivateRoute>\r\n    ),\r\n  }\r\n];\r\n\r\nexport default historyroutes;\r\n","import { SimpleCard } from \"app/components\"\r\nimport React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport {\r\n  Grid,\r\n  Box,\r\n} from \"@mui/material\";\r\n//import Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\nimport { templateService } from \"services/temlplateService\";\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n//import { isArray } from \"lodash\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ExportTemplate = (props) => {\r\n  //console.log(props.templateData, 'props')\r\n  const tempService = new templateService();\r\n  const [exportTemplate, setExportTemplate] = useState(false);\r\n  const [dataToExport, setDataToExport] = useState(props?.systemData || []);\r\n  const [value, setValue] = useState('allData');\r\n\r\n  const [exportfileBar, setexportfileBar] = useState(false);\r\n  const [exportResponse, setExportResponse] = useState(false);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const handleExportTemplateDialog = () => {\r\n    setExportTemplate(true)\r\n  }\r\n\r\n  const handleCloseExportTemplate = () => {\r\n    setExportTemplate(false)\r\n  };\r\n  const handleExportfileBarClick = () => {\r\n    setexportfileBar(true);\r\n  };\r\n  console.log('props', props);\r\n  const handleImportfileBarClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setexportfileBar(false);\r\n  };\r\n  const exportTemplateHandle = () => {\r\n    setExportTemplate(false)\r\n    let data = ((value !== \"allData\") ? props?.filterTemplateData : props?.systemData) || [];\r\n    let exportData = data?.map(item => {\r\n      let res = {        \r\n        'ERP Type': item.ERPType,\r\n        Instance: item.instance,\r\n        'Validation Key 1': item.file1,\r\n        'Validation Key 2': item.file2\r\n      }\r\n      return res\r\n    })\r\n    //console.log(exportData, 'inside template export exportData')\r\n    //return;\r\n    tempService.exportTemplate({ 'data': exportData, 'sheet_name': 'System Setup' }).then((response) => {\r\n      setExportResponse(response)\r\n      //console.log(response, ';resprespresp')\r\n      handleExportfileBarClick(\"Template exported successfully!\", \"success\");\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: response?.status,\r\n        desc: response?.msg,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value)\r\n    if (event.target.value === 'allData') {\r\n      setDataToExport(props?.vsystemData)\r\n    } else {\r\n      setDataToExport(props?.filterTemplateData)\r\n      //console.log(filteredTempData, 'filteredTempData')\r\n    }\r\n    //console.log(event.target.value, 'event.target.value')\r\n  }\r\n  /* export template data end */\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"contained\"\r\n        onClick={handleExportTemplateDialog}\r\n      >\r\n        Export\r\n      </Button>\r\n      <Dialog open={exportTemplate}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Export Template\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Box width=\"100%\" overflow=\"auto\">\r\n              <SimpleCard>\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Grid container alignItems=\"center\">\r\n                    <FormControl>\r\n                      <FormLabel id=\"demo-controlled-radio-buttons-group\">Select Data to Export</FormLabel>\r\n                      <RadioGroup\r\n                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                        name=\"controlled-radio-buttons-group\"\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <FormControlLabel value='allData' control={<Radio />} label=\"All Data\" />\r\n                        <FormControlLabel value='selectedData' control={<Radio />} label=\"Selected Data\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Grid>\r\n\r\n                </Grid>\r\n              </SimpleCard>\r\n            </Box>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseExportTemplate}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={exportTemplateHandle}>Export</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      {/* <Snackbar\r\n        open={exportfileBar}\r\n        autoHideDuration={3000}\r\n        onClose={handleImportfileBarClose}\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      >\r\n        <Alert\r\n          onClose={handleImportfileBarClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {exportResponse && (\r\n            <div>\r\n              {exportResponse.msg} <br />\r\n            </div>\r\n          )}\r\n        </Alert>\r\n      </Snackbar> */}\r\n      {(openDesc) ? (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      ) : (<></>)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportTemplate;\r\n","import React, { useState, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport shortId from 'shortid';\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\n\r\nconst formData = [\r\n    {\r\n        \"name\": \"ERP Type\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"sap\": \"SAP\",\r\n                \"oracle\": \"Oracle\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"instance\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"select\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": [\r\n            {\r\n                \"onPrem\": \"OnPrem\",\r\n                \"SaaS\": \"SaaS\",\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 1\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n    {\r\n        \"name\": \"Validation Key 2\",\r\n        \"mandatory\": \"Y\",\r\n        \"dataType\": \"string\",\r\n        \"inputType\": \"text\",\r\n        \"defaultValues\": \"\",\r\n        \"values\": \"\"\r\n    },\r\n]\r\n\r\nconst SystemSetupForm = forwardRef((props, ref) => {\r\n    const [openAlert, setOpenAlert] = useState(false);\r\n    const [openDesc, setOpenDesc] = useState(null);\r\n    const [formAllData, setFormAllData] = useState([]);\r\n    const initialValues = {\r\n        // settingName: '',\r\n        \"ERP Type\": null,\r\n        instance: null,\r\n        \"Validation Key 1\": null,\r\n        \"Validation Key 2\": null,\r\n    };\r\n\r\n    const validate = (values) => {\r\n        console.log(values, \"validate\");\r\n        const errors = {};\r\n        // Validation logic for each field\r\n        // if (!values.settingName) {\r\n        //     errors.settingName = 'Required';\r\n        // }\r\n        if (!values[\"ERP Type\"]) {\r\n            errors[\"ERP Type\"] = 'Required';\r\n        }\r\n        if (!values.instance) {\r\n            errors.instance = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 1\"]) {\r\n            errors[\"Validation Key 1\"] = 'Required';\r\n        }\r\n        if (!values[\"Validation Key 2\"]) {\r\n            errors[\"Validation Key 2\"] = 'Required';\r\n        }\r\n        return errors;\r\n    };\r\n\r\n    const onSubmit = (values, isValid, { resetForm }) => {\r\n        // Handle form submission\r\n        console.log(values, 'values 111');\r\n        if (isValid) {\r\n            // Map Validation Key fields to file1 and file2\r\n            const backendValues = {\r\n                ...values,\r\n                ERPType: values[\"ERP Type\"],\r\n                file1: values[\"Validation Key 1\"],\r\n                file2: values[\"Validation Key 2\"],\r\n            };\r\n            delete backendValues[\"ERP Type\"];\r\n            delete backendValues[\"Validation Key 1\"];\r\n            delete backendValues[\"Validation Key 2\"];\r\n\r\n            resetForm(); // Reset the form using the resetForm function from Formik context\r\n            // Check if the entire form has changed\r\n            const isFormChanged = Object.keys(values).some((fieldName) => {\r\n                return values[fieldName] !== initialValues[fieldName];\r\n            });\r\n            if (isFormChanged) {\r\n                props.saveForm({ formisValid: isValid, formData: backendValues }); // Close the modal box after successful submission\r\n            } else {\r\n                setOpenAlert(true);\r\n                setOpenDesc({\r\n                    severity: \"error\",\r\n                    desc: \"No changes made!\",\r\n                });\r\n            }\r\n        } else {\r\n            setOpenAlert(true);\r\n            setOpenDesc({\r\n                severity: \"error\",\r\n                desc: \"Form submitted with invalid data\",\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setFormAllData(formData);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validate={validate}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    onSubmit(values, !Object.keys(validate(values)).length, { resetForm: () => setSubmitting(false) });\r\n                }}\r\n                innerRef={ref}\r\n            >\r\n                {\r\n                    function Showform({ isValid, values, errors, setFieldValue, resetForm, handleSubmit, submitForm }) {\r\n                        useEffect(() => {\r\n                            if (props?.editForm === \"Edit\" && props?.selectedRows?.length) {\r\n                                props?.selectedRows?.forEach(thisItem => {\r\n                                    setFieldValue('ERP Type', thisItem?.ERPType);\r\n                                    setFieldValue('instance', thisItem?.instance);\r\n                                    setFieldValue('Validation Key 1', thisItem?.file1);\r\n                                    setFieldValue('Validation Key 2', thisItem?.file2);\r\n                                });\r\n                            }\r\n                        }, [setFieldValue])\r\n\r\n                        // Expose the submitForm function to the parent component using useImperativeHandle\r\n                        useImperativeHandle(ref, () => ({\r\n                            submitForm() {\r\n                                console.log(\"triggering here\");\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                // return new Promise((resolve, reject) => {\r\n                                //     // Submit the form using the Formik handleSubmit function\r\n                                //     handleSubmit();\r\n                                //     // After the form submission, resolve the promise with the form values\r\n                                //     resolve({ formisValid: isValid, formData: values });\r\n                                // });\r\n\r\n                                // Call the submitForm function when triggered from the parent component\r\n                                handleSubmit();\r\n                            }\r\n                        }));\r\n\r\n                        return (\r\n                            <Form>\r\n                                {\r\n                                    (formAllData).length ? formAllData?.map((item, fkey) => {\r\n                                        const thisInputName = item?.name;\r\n                                        const currentFieldValue = values[thisInputName] || item?.defaultValues;\r\n\r\n                                        let fieldType = item?.inputType;\r\n                                        let fieldkey = values[formAllData[0]?.name];\r\n\r\n                                        return (\r\n                                            <div className=\"attribute-section\" key={fkey}>\r\n                                                <Grid\r\n                                                    container\r\n                                                    spacing={3}\r\n                                                    alignItems=\"center\"\r\n                                                >\r\n                                                    <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n                                                        <label htmlFor=\"firstName\">\r\n                                                            <span >\r\n                                                                {item?.name}\r\n                                                                {item?.mandatory === \"Y\" ? <span style={{ color: \"red\" }}>*</span> : ''}\r\n                                                            </span>\r\n                                                        </label>\r\n                                                    </Grid>\r\n                                                    <Grid item md={8} sm={6} xs={12} key={fkey}>\r\n                                                        {\r\n                                                            (fieldType === 'text') && (\r\n                                                                <TextField\r\n                                                                    className={\"mb-4 w-full \"}\r\n                                                                    color={(errors?.[thisInputName] ? ('warning') : (''))}\r\n                                                                    fullWidth\r\n                                                                    size=\"small\"\r\n                                                                    variant=\"outlined\"\r\n                                                                    id={thisInputName}\r\n                                                                    name={thisInputName}\r\n                                                                    value={currentFieldValue}\r\n                                                                    onChange={(e) => {\r\n                                                                        setFieldValue(thisInputName, e.target.value);\r\n                                                                    }}\r\n                                                                    type=\"text\"\r\n                                                                    style={{ marginBottom: '10px' }}\r\n                                                                />\r\n                                                            )\r\n                                                        }\r\n                                                        {\r\n                                                            (fieldType === 'select') && (\r\n                                                                <>\r\n                                                                    <Select\r\n                                                                        disabled={props?.editForm === \"Edit\" && [\"ERP Type\", \"instance\"].includes(thisInputName)}\r\n                                                                        value={currentFieldValue}\r\n                                                                        onChange={(e) => {\r\n                                                                            setFieldValue(thisInputName, e.target.value);\r\n                                                                        }}\r\n                                                                        displayEmpty\r\n                                                                        renderValue={(selected) => {\r\n                                                                            if (!selected) {\r\n                                                                                return <em>--Select--</em>; // Placeholder text\r\n                                                                            }\r\n                                                                            return item?.values.length && item?.values[0][selected];\r\n                                                                        }}\r\n                                                                        style={{ height: '37.13px', marginBottom: '1rem', width: \"100%\" }}\r\n                                                                    >\r\n                                                                        <MenuItem>Select</MenuItem>\r\n                                                                        {\r\n                                                                            item?.values.length && Object.keys(item?.values[0]).map((vitem) => {\r\n                                                                                return (\r\n                                                                                    <MenuItem value={vitem} key={shortId.generate()}>{item?.values[0][vitem]}</MenuItem>\r\n                                                                                )\r\n                                                                            })\r\n                                                                        }\r\n                                                                    </Select>\r\n                                                                </>\r\n                                                            )\r\n                                                        }\r\n                                                        <ErrorMessage name={thisInputName} component=\"div\" />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </div>\r\n                                        )\r\n                                    }) : (<></>)\r\n                                }\r\n                                {/* <button type=\"submit\" style={{ display: 'none' }}></button> Hidden submit button */}\r\n                            </Form>\r\n                        )\r\n                    }\r\n                }\r\n            </Formik>\r\n            {openDesc && (\r\n                <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default SystemSetupForm;","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\r\nimport Loader from 'app/components/Loader';\r\nimport { Breadcrumb } from \"app/components\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport {\r\n  Box,\r\n  styled,\r\n  Grid,\r\n  TextField,\r\n} from \"@mui/material\";\r\n\r\nimport { SystemSettingsService } from \"services/systemSettingsService\"; // Change UserService to SystemSetupService\r\nimport CustomAlertBox from \"app/components/CustomAlertBox\";\r\nimport DataGrid from \"@inovua/reactdatagrid-community\";\r\nimport ExportDialogBox from \"./exportSetup\";\r\nimport \"@inovua/reactdatagrid-community/index.css\";\r\nimport SystemSetupForm from \"./systemSetupForm\";\r\nimport sortedExportDataHOC from \"app/components/sortedExportDataHOC\";\r\nimport { sortDataByKey } from \"app/utils/mcoUtils/commonUtils\";\r\n\r\nconst Container = styled(\"div\")(({ theme }) => ({\r\n  margin: \"30px\",\r\n  [theme.breakpoints.down(\"sm\")]: { margin: \"16px\" },\r\n  \"& .breadcrumb\": {\r\n    marginBottom: \"30px\",\r\n    [theme.breakpoints.down(\"sm\")]: { marginBottom: \"16px\" },\r\n  },\r\n}));\r\n\r\nconst SystemSetup = () => {\r\n  const childCompRef = useRef(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [showFormType, setShowFormType] = useState(\"Create\");\r\n  const [formValues, setFormValues] = useState(null);\r\n  const [systemData, setSystemData] = useState([]); // Change userData to systemData\r\n  const [orgSystemData, setOrgSystemData] = useState([]); // Change userData to systemData\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [deleteDialog, setDeleteDialog] = useState(false);\r\n  const systemSettingsService = new SystemSettingsService(); // Change userService to systemSettingsService\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n  const [selected, setSelected] = useState({});\r\n  const [selectedRows, setSelectedRows] = useState([]);\r\n  const [initialData, setInitialData] = useState([]);\r\n  const [sortInfo, setSortInfo] = useState([]);\r\n  const gridRef = useRef(null);\r\n  const dataMap = gridRef && gridRef.current && gridRef.current.dataMap ? gridRef.current.dataMap : null;\r\n  const onSelectionChange = useCallback(({ selected }) => {\r\n    setSelected(selected);\r\n  }, []);\r\n\r\nconst sortedSystemData = systemData.sort((a, b) => {\r\n  if (a.ERPType < b.ERPType) return -1;\r\n  if (a.ERPType > b.ERPType) return 1;\r\n  return 0;\r\n});\r\n\r\n  const columns = [ // Adjust columns according to your system setup data\r\n    {\r\n      name: \"ERPType\",\r\n      header: \"ERP Type\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.ERPType}</div>,\r\n    },\r\n    {\r\n      name: \"instance\",\r\n      header: \"Instance\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.instance}</div>,\r\n    },\r\n    {\r\n      name: \"file1\",\r\n      header: \"Validation Key 1\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file1}</div>,\r\n    },\r\n    {\r\n      name: \"file2\",\r\n      header: \"Validation Key 2\",\r\n      defaultFlex: 1,\r\n      defaultWidth: 50,\r\n      render: ({ data }) => <div>{data?.file2}</div>,\r\n    },\r\n  ]\r\n\r\n  const handleSearchInputChange = (event) => {\r\n    const newSearchValue = event.target.value;\r\n    setSearchValue(newSearchValue);\r\n  };\r\n\r\n  const handleDeleteDialog = () => {\r\n    setDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setDeleteDialog(false);\r\n  };\r\n\r\n  const handleDeleteSetting = async () => {\r\n    setDeleteDialog(false);\r\n    try {\r\n      setIsLoading(true)\r\n      const selRowsId = selectedRows?.map(item => (item?.id));\r\n      await systemSettingsService.deleteSystemSettings(selRowsId).then(response => {\r\n        setIsLoading(false)\r\n        setOpenAlert(true);\r\n        setOpenDesc({\r\n          severity: response?.status,\r\n          desc: response?.msg,\r\n        });\r\n        setSelected({});\r\n        setSelectedRows([]);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Failed to delete Setting:\", error);\r\n    }\r\n\r\n    systemSettingsService.getAllsystemSetupList().then((result) => {\r\n      console.log(result.data, \"result.data\");\r\n      setSystemData(result.data);\r\n      setInitialData(result.data);\r\n      setOrgSystemData(result.data);\r\n    });\r\n  };\r\n\r\n  // Function to trigger the form submission in the child component\r\n  const saveForm = async (submittedValues) => {\r\n    console.log(submittedValues, 'submittedValues 222');\r\n\r\n\r\n    if (submittedValues) {\r\n      // Update the formValues state only if the submission is successful\r\n      if (submittedValues?.formisValid) {\r\n        setShowForm(false);\r\n        setIsLoading(true);\r\n        setFormValues(submittedValues);\r\n        let updatedData = null;\r\n        if (showFormType === \"Edit\" && selectedRows?.length) {\r\n          updatedData = await systemSettingsService.updateSystemSettings(submittedValues?.formData);\r\n        } else {\r\n          updatedData = await systemSettingsService.addSystemSettings(submittedValues?.formData);\r\n        }\r\n        if (updatedData?.status === \"success\") {\r\n          setSelected({});\r\n          setSelectedRows([]);\r\n          await systemSettingsService.getAllsystemSetupList().then((result) => {\r\n            console.log(result.data, \"result.data\");\r\n            setSystemData(result.data);\r\n            setInitialData(result.data);\r\n            setOrgSystemData(result.data);\r\n          });\r\n\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"success\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        } else {\r\n          setOpenAlert(true);\r\n          setOpenDesc({\r\n            severity: \"error\",\r\n            desc: updatedData?.msg,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n  const handleSubmitForm = async () => {\r\n    if (childCompRef.current) {\r\n      // Call the submitForm function exposed by the child component\r\n      await childCompRef.current.submitForm();\r\n    }\r\n  };\r\n\r\n  const fetchAllDetails = async () => {\r\n    const listValue = await systemSettingsService.getAllsystemSetupList();\r\n    console.log(listValue, 'listValue');\r\n    if (listValue?.data?.length) {\r\n      setSystemData(listValue?.data);\r\n      setInitialData(listValue?.data);\r\n      setOrgSystemData(listValue?.data);\r\n      return listValue?.data;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n  const applyFilterData = async (searchValue) => {\r\n    let systemDataValue = [];\r\n    setIsLoading(true);\r\n    if (orgSystemData.length === 0) {\r\n      systemDataValue = await fetchAllDetails();\r\n    } else {\r\n      systemDataValue = orgSystemData;\r\n    }\r\n    if (systemDataValue) {\r\n      const newFilteredData = systemDataValue.filter((setting) => {\r\n        return (!searchValue ? true : (JSON.stringify(setting).toLowerCase().includes(searchValue.toLowerCase())))\r\n      }) || [];\r\n      if (newFilteredData.length) {\r\n        setSystemData(newFilteredData);\r\n        setInitialData(newFilteredData);\r\n      } else {\r\n        setSystemData([]);\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }\r\n\r\n  const handleBackdropClick = (event) => {\r\n    // Prevent closing the dialog when clicking on the backdrop\r\n    event.stopPropagation();\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    fetchAllDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selRowsData = selected === true ? dataMap : selected;\r\n    const selRowsDetails = (selRowsData) && (Object.keys(selRowsData)?.map(key => (selRowsData[key])) || []);\r\n    if (selRowsDetails?.length) {\r\n      setSelectedRows(selRowsDetails);\r\n    }\r\n  }, [selected]);\r\n\r\n  useEffect(() => {\r\n    console.log(searchValue, 'parent comp 2');\r\n    applyFilterData(searchValue);\r\n  }, [searchValue]);\r\n\r\n  console.log('parent comp');\r\n\r\n  const handleSortInfoChange = (sortInfo) => {\r\n    setSortInfo(sortInfo);\r\n    const SortedUserData = sortedExportDataHOC(SystemSetup);\r\n    const sortedData = SortedUserData({ data: systemData, sortInfo, onSortInfoChange: handleSortInfoChange, initialData });\r\n    setSystemData(sortedData.props.data);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box className=\"breadcrumb\">\r\n        <Breadcrumb routeSegments={[{ name: \"System Setup\" }]} />\r\n      </Box>\r\n\r\n      <div>\r\n        <Grid container spacing={1} alignItems=\"center\">\r\n          <Grid item md={3} sm={6} xs={12} className=\"font-medium\">\r\n            <TextField\r\n              type=\"text\"\r\n              name=\"search\"\r\n              size=\"small\"\r\n              onChange={handleSearchInputChange}\r\n              value={searchValue}\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item container md={9} sm={6} xs={12} alignItems=\"center\">\r\n            <Button variant=\"contained\">\r\n              Search\r\n            </Button>\r\n            <div style={{ flex: 1 }} />\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Create\");\r\n              }}\r\n            >\r\n              Create\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length === 1 ? false : true}\r\n              onClick={() => {\r\n                setShowForm(true);\r\n                setShowFormType(\"Edit\");\r\n              }}\r\n              style={{ margin: '0 0px 0 10px' }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={selectedRows?.length ? false : true}\r\n              onClick={handleDeleteDialog}\r\n              style={{ margin: '0 10px 0 10px' }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <ExportDialogBox \r\n             systemData={systemData}\r\n             filterTemplateData={selectedRows} />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <br />\r\n\r\n        {isLoading ? (\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Loader show={isLoading} />\r\n          </div>\r\n        ) : (\r\n          <DataGrid\r\n            idProperty=\"id\"\r\n            showZebraRows={false}\r\n            style={{ minHeight: 550 }}\r\n            columns={columns}\r\n            defaultLimit={100}\r\n              dataSource={sortInfo === null ? systemData : sortedSystemData}\r\n            // rowHeight={null}\r\n            checkboxColumn\r\n            selected={selected}\r\n            onSelectionChange={onSelectionChange}\r\n            handle={ref => gridRef.current = ref ? ref.current : null}\r\n            pagination\r\n            renderScroller={()=> gridRef?.current?.setScrollTop(selectedRows?.length==0 ? 0 : gridRef?.current?.getScrollTop())}\r\n            onSortInfoChange={handleSortInfoChange}\r\n            />\r\n        )}\r\n      </div>\r\n\r\n      {openDesc && (\r\n        <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n      )}\r\n\r\n      <Dialog open={deleteDialog}>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          Delete Setting\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Do you want to delete the selected Setting(s)?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleCloseDelete}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDeleteSetting}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* MODAL BOX */}\r\n      <Dialog\r\n        open={showForm}\r\n        onClose={() => { setShowForm(false) }}\r\n        scroll={'paper'}\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        maxWidth={'md'}\r\n        fullWidth={true}\r\n        onClick={handleBackdropClick}\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">\r\n          {`${showFormType} system setup`}\r\n        </DialogTitle>\r\n        <DialogContent dividers={true}>\r\n          <DialogContentText id=\"scroll-dialog-description\" tabIndex={-1}>\r\n            {/* Display the form values from the state if they exist */}\r\n            {/* {formValues && (\r\n              <div>\r\n                <h2>Form Values:</h2>\r\n                <pre>{JSON.stringify(formValues, null, 2)}</pre>\r\n              </div>\r\n            )} */}\r\n            <SystemSetupForm ref={childCompRef} saveForm={saveForm} selectedRows={selectedRows} editForm={showFormType} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => { setShowForm(false) }}>Cancel</Button>\r\n          { }\r\n          <Button onClick={handleSubmitForm}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SystemSetup;\r\n","import React from 'react';\r\nimport { Navigate, useLocation, useHref } from 'react-router-dom';\r\nimport { LoginCallback } from '@okta/okta-react';\r\n\r\nconst RedirectRoute = ({ children, ...rest }) => {\r\n    const basename = useHref(\"\");\r\n    const location = useLocation();\r\n    if (basename.startsWith('/')) {\r\n        return <Navigate to=\"/calist\" />;\r\n    } else if (location.pathname.startsWith('/Dev') || location.pathname === '/') {\r\n        return <Navigate to=\"/calist\" />;\r\n    } else if (location.pathname.startsWith('/login/callback')) {\r\n        return <LoginCallback />;\r\n    }\r\n    return children;\r\n};\r\n\r\nexport default RedirectRoute;","import React, { useEffect } from 'react';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CustomLoginCallback = () => {\r\n    const { oktaAuth, authState } = useOktaAuth();\r\n    let navigate = useNavigate();\r\n\r\n    const onSuccess = (user) => {\r\n        // Redirect the user to their intended destination or the home page\r\n        oktaAuth.redirect('/');\r\n        // navigate('/');\r\n    };\r\n\r\n    const onError = (error) => {\r\n        // Handle any errors that may occur during the login process\r\n        console.error('Error during login callback:', error);\r\n    };\r\n\r\n    useEffect(() => {\r\n        oktaAuth.handleLoginRedirect()\r\n            .then(onSuccess)\r\n            .catch(onError);\r\n    }, [oktaAuth]);\r\n\r\n    return (\r\n        <div>\r\n            <h4>Loading...</h4>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomLoginCallback;","import React from 'react';\r\nimport { useRoutes } from \"react-router-dom\";\r\n\r\nimport AuthGuard from \"app/auth/AuthGuard\";\r\nimport NotFound from \"app/views/sessions/NotFound\";\r\nimport UnauthorizedPage from \"app/unAuthorizedPage\";\r\nimport Homepage from \"app/homepage\";\r\nimport McoListRoutes from \"app/views/mcolist/McoListRoutes\";\r\n\r\nimport MatxLayout from \"./components/MatxLayout/MatxLayout\";\r\nimport templateRoutes from \"app/views/template/templateRoutes\";\r\nimport plantRoutes from \"app/views/plants/plantRoutes\";\r\nimport sourceListroutes from \"app/views/sourceList/sourceListroutes\";\r\nimport mappingsroutes from \"app/views/mappings/mappingsroutes\";\r\nimport buListRoutes from \"app/views/businessUnit/buRoutes\";\r\nimport userListRoutes from \"app/views/users/usersRoutes\";\r\n\r\n//Mapping pages\r\nimport orgallowedroutes from \"app/views/mappingPages/orgAllowedTemplates/orgallowedroutes\";\r\nimport mvocompatibilityRoutes from \"app/views/mappingPages/mvoTemplateCompatibility/mvocompatibiltyroutes\";\r\nimport parttypetotemplateroutes from \"app/views/mappingPages/partTypeToTemplate/parttypeTotemplateroutes\";\r\nimport mvoallowedchangesroutes from \"app/views/mappingPages/mvoAllowedChanges/mvoallowedchangesroutes\";\r\nimport setcomptemproutes from \"app/views/mappingPages/setCompatibleTemplates/setcomptemproutes\";\r\nimport buplantroutes from \"app/views/mappingPages/buPlantMapping/buplantRoutes\";\r\nimport expensemaproutes from \"app/views/mappingPages/expenseMapping/expensemapRoutes\";\r\n\r\nimport draftChangesroutes from \"app/views/draftChanges/draftChangesroutes\";\r\nimport historyroutes from \"app/views/history/historyroutes\";\r\n\r\nimport systemSetupRoutes from \"app/views/systemSetup/systemSetupRoutes\";\r\n\r\nimport RedirectRoute from \"./RedirectRoute\";\r\nimport CustomLoginCallback from \"./CustomLoginCallback\";\r\n\r\nconst allChildroutes = [\r\n  ...McoListRoutes,\r\n  ...templateRoutes,\r\n  ...plantRoutes,\r\n  ...sourceListroutes,\r\n  ...mappingsroutes,\r\n  ...buListRoutes,\r\n  ...mvocompatibilityRoutes,\r\n  ...parttypetotemplateroutes,\r\n  ...mvoallowedchangesroutes,\r\n  ...setcomptemproutes,\r\n  ...orgallowedroutes,\r\n  ...buplantroutes,\r\n  ...expensemaproutes,\r\n  ...draftChangesroutes,\r\n  ...historyroutes,\r\n  ...userListRoutes,\r\n  ...systemSetupRoutes,\r\n]\r\n\r\nexport default function Router() {\r\n  const routes = [\r\n    {\r\n      element: (\r\n        <>\r\n          <AuthGuard>\r\n            <MatxLayout />\r\n          </AuthGuard>\r\n        </>\r\n      ),\r\n      children: allChildroutes,\r\n    },\r\n    {\r\n      path: '/',\r\n      element: <RedirectRoute />,\r\n    },\r\n    {\r\n      path: '/login/callback',\r\n      element: <CustomLoginCallback />,\r\n    },\r\n    {\r\n      path: '/accessDenied',\r\n      element: <UnauthorizedPage />,\r\n    },\r\n    {\r\n      path: '/homepage',\r\n      element: <Homepage />,\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <NotFound />,\r\n    },\r\n  ];\r\n\r\n  let element = useRoutes(routes);\r\n  return element;\r\n}","import React from 'react';\r\nimport PrivateRoute from \"app/privateRoutes\";\r\nimport SystemSetupList from \"./systemSetupList\";\r\n\r\nconst systemSetupRoutes = [{\r\n  path: \"/systemSetup\",\r\n  element: (\r\n    <PrivateRoute>\r\n      <SystemSetupList />\r\n    </PrivateRoute>\r\n  ),\r\n}];\r\n\r\nexport default systemSetupRoutes;\r\n","import React from \"react\";\r\nimport \"./Fallback.css\";\r\n\r\nconst Fallback = ({ componentStack, error }) => {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // In production, render null to disable the error message\r\n    return null;\r\n  } else {\r\n    // In development or other environments, render a default error message\r\n    return (<>\r\n      <section className=\"fallback\">\r\n        <header className=\"fallback__header\">\r\n          <h3 className=\"fallback__title\">Oops! An error occured!</h3>\r\n        </header>\r\n        <div className=\"fallback__body\">\r\n          <p>\r\n            <strong>Error:</strong> {error.toString()}\r\n          </p>\r\n          <p>\r\n            <strong>Stacktrace:</strong> {componentStack}\r\n          </p>\r\n        </div>\r\n      </section>\r\n    </>)\r\n  }\r\n};\r\n\r\nexport default Fallback;\r\n","import React, { useEffect } from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\r\nimport { Security } from '@okta/okta-react'; // Import useOktaAuth\r\nimport config from './../config/config';\r\nimport { Store } from './redux/Store';\r\nimport Router from './routes';\r\nimport { GlobalCss, MatxSuspense, MatxTheme } from 'app/components';\r\nimport { ErrorBoundary } from \"react-error-boundary\";\r\nimport Fallback from \"./components/Fallback/Fallback\";\r\nimport { OracleMappingsProvider } from \"./contexts/OracleSettingsContext\";\r\nimport { SettingsProvider } from './contexts/SettingsContext';\r\n\r\nconst oktaAuth = new OktaAuth(config.oidc)\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n  const restoreOriginalUri = (oktaAuth, originalUri) => {\r\n    navigate(toRelativeUrl(originalUri || '/', window.location.origin));\r\n  };\r\n  const onAuthRequired = function () {\r\n    navigate(window.location.origin);\r\n  };\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      const performanceMarkName = 'FirstContentfulPaint';\r\n      performance.mark(performanceMarkName);\r\n    }, 1000);\r\n\r\n    console.log(process.env.NODE_ENV, 'process.env.NODE_ENV');\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <ErrorBoundary FallbackComponent={Fallback}\r\n      onReset={(details) => {\r\n        // Reset the state of your app so the error doesn't happen againn\r\n      }}>\r\n      <Provider store={Store}>\r\n        <SettingsProvider>\r\n          <MatxTheme>\r\n            <GlobalCss />\r\n            <MatxSuspense>\r\n              <Security\r\n                oktaAuth={oktaAuth} // Use authService instead of creating a new instance\r\n                restoreOriginalUri={restoreOriginalUri}\r\n                onAuthRequired={onAuthRequired}>\r\n                <OracleMappingsProvider>\r\n                  <Router />\r\n                </OracleMappingsProvider>\r\n              </Security>\r\n            </MatxSuspense>\r\n          </MatxTheme>\r\n        </SettingsProvider>\r\n      </Provider>\r\n    </ErrorBoundary>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from './app/App';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { CssBaseline } from '@mui/material';\r\nimport { StyledEngineProvider } from '@mui/styled-engine';\r\n\r\n\r\n\r\n// This function mounts the React app.\r\nlet root = null; // Global React root\r\nfunction start() {\r\n  requirejs([\"DS/PlatformAPI/PlatformAPI\"], (PlatformAPI) => {\r\n    window.PlatformAPI = PlatformAPI;\r\n  });\r\n  // console.log(\"[index.js] start() called. Mounting React app.\");\r\n  // Find the root element within the widget's body (if available)\r\n  let rootElement =\r\n    window.widget?.body?.querySelector(\"#root\") ||\r\n    document.getElementById(\"root\");\r\n\r\n  // If no root element exists, create one and append it to the widget body or document body.\r\n  if (!rootElement) {\r\n    rootElement = document.createElement(\"div\");\r\n    rootElement.id = \"root\";\r\n    if (window.widget && window.widget.body) {\r\n      window.widget.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to widget.body.\");\r\n    } else {\r\n      document.body.appendChild(rootElement);\r\n      // console.log(\"[index.js] Root element appended to document.body.\");\r\n    }\r\n  } else {\r\n    // console.log(\"[index.js] Root element found.\");\r\n  }\r\n\r\n  if (!root) {\r\n    // console.log(\"[index.js] Creating new React root.\");\r\n    root = ReactDOM.createRoot(rootElement);\r\n  } else {\r\n    // console.log(\"[index.js] Reusing existing React root.\");\r\n  }\r\n\r\n  root.render(\r\n    <StyledEngineProvider injectFirst>\r\n    <BrowserRouter basename=\"/\">\r\n      <CssBaseline />\r\n      <App />\r\n    </BrowserRouter>\r\n  </StyledEngineProvider>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default function () {\r\n  // console.log(\"[index.js] 🔍 Checking if widget is available...\");\r\n\r\n  if (window.widget) {\r\n    // console.log(\"[index.js] ✅ Widget detected! Registering onLoad event...\");\r\n\r\n    let hasOnLoadRun = false; // Prevent duplicate execution\r\n\r\n    window.widget.addEvent(\"onLoad\", () => {\r\n      if (hasOnLoadRun) {\r\n        console.warn(\r\n          \"[index.js] ⏳ onLoad was already executed. Ignoring duplicate trigger.\"\r\n        );\r\n        return;\r\n      }\r\n      hasOnLoadRun = true;\r\n\r\n      // console.log(\r\n      //   \"[index.js] ✅ First-time onLoad event fired. Initializing app...\"\r\n      // );\r\n\r\n      start(); // This will initialize the React app\r\n    });\r\n  } else {\r\n    console.error(\r\n      \"[index.js] ❌ Widget not detected! onLoad cannot be registered.\"\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nconst ApiInstance = axios.create();\r\n\r\n// Request interceptor\r\nApiInstance.interceptors.request.use(\r\n    (config) => {\r\n        // Do something before request is sent\r\n        // For example, add an authorization header for specific APIs\r\n        config.headers.Authorization = 'Bearer ' + getOKTAAccessKey();\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\nApiInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        console.error('Error response:', error.response);\r\n        return Promise.reject((error?.response?.data) || 'Something went wrong!')\r\n    }\r\n);\r\n\r\nexport default ApiInstance;","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class BUService {\r\n  getAllBuList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnit`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getAllBuList\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  getBusinessUnitbyid = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/getBusinessUnitbyid`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getBusinessUnitbyid\", e);\r\n        return [];\r\n      });\r\n  };\r\n  addnewBU = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/bu/addBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateBU = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/bu/updateBusinessUnit`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateBU\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteBU = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/bu/deleteBusinessUnit`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nexport class MassUpdate {\r\n    massUpdatePartDescription = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  }\r\n  getMyReport = (data) => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/massUpdate/myReport`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"myReport\", e);\r\n        return [];\r\n      });\r\n  }\r\n  deleteReport = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/massUpdate/deleteMyReport`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting bu:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n}","\r\nimport {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL,\r\n    SAP_API_BASE_URL\r\n} from '../config'\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\n// import BUService from './buService';\r\nimport axios from 'axios';\r\n\r\n\r\n// let buService = new BUService();\r\nlet selectedMCODetailsResponse = []; \r\nexport default class SaaSExecutionService {\r\n    searchCA = (filters) => {\r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": {\r\n                \"searchStr\": `${filters.searchPattern}`,\r\n                \"&$top\": \"10\",\r\n                \"instance\": \"SaaS\"\r\n            },\r\n            \"Requestdata\": \"\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n\r\n   \r\n         \r\n    getCARelatedMco = (params) => {  \r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"id\": params?.ca_id,\r\n                \"operation\": \"flowDown\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n  \r\n    \r\n    searchMCO = (filters, instance) => { \r\n        let searchCAPayload = {\r\n            \"Operation\": \"CA-Search-flowDown\",\r\n            \"Headers\": {\r\n                \"securityContext\": \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n                \"senderID\": \"EMRPDH\",\r\n                \"TargetID\": \"3DX\",\r\n                \"BusinessGroup\": \"ENOVIA\"\r\n            },\r\n            \"queryParams\": \r\n                {\r\n                    \"searchStr\": `${filters.searchPattern}`,\r\n                    \"&$top\": \"10\",\r\n                    \"instance\": \"SaaS\"\r\n                },\r\n            \r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/searchCA`, searchCAPayload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    \r\n    getMCOdetailById = (params) => {\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": [{\"id\":params?.mco_id}],\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\",\r\n                \r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {\r\n                res.data.map((item) => {\r\n                    if(item.mcoPropeties.id === params?.mco_id){\r\n                        selectedMCODetailsResponse.push(item);\r\n                    }\r\n                })\r\n                // return res.data;\r\n                return selectedMCODetailsResponse[selectedMCODetailsResponse && selectedMCODetailsResponse.length-1];\r\n            }\r\n            throw selectedMCODetailsResponse[0];\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        let data = {pass:true};\r\n        return Promise.resolve(data);\r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, nextState, obj) => {\r\n        let payload = {            \r\n            \"id\": id,\r\n            \"nextState\": nextState,\r\n            \"instance\": \"SaaS\"\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoPromoteDemote`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data[0];\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    routeStart = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"routeStart\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/routeStart`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data; \r\n              }\r\n              throw new Error(\"Route start failed or not initiated\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"routeStart error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n   \r\n    getTaskList = (routeId) => {      \r\n        let payload = {\r\n          Operation: \"taskList\", // Required field\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                \"id\": routeId  //  Send directly here\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\" // still needed for backend route mapping\r\n        };\r\n      \r\n        let headersBody = {\r\n          'client_id': 123,\r\n          'client_secret': 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/getTaskList`, payload, headersBody)\r\n          .then((res) => {\r\n            if (res.status === 200 && Array.isArray(res.data) && res.data.length > 0) {\r\n                return res.data; \r\n           \r\n              }\r\n              throw new Error(\"No task data found\");\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching task list:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n\r\n      taskApproval = (taskId) => {\r\n        let payload = {\r\n          Operation: \"taskApproval\",\r\n          Headers: {\r\n            securityContext: \"VPLMProjectLeader.0000000001.Micro Motion\",\r\n            senderID: \"EMRPDH\",\r\n            TargetID: \"3DX\",\r\n            BusinessGroup: \"ENOVIA\"\r\n          },\r\n          Requestdata: {\r\n            data: [\r\n              {\r\n                dataelements: {\r\n                  id: taskId,\r\n                  routeTaskApprovalComments: \"Approve\",\r\n                  routeTaskDueDate: \"\",\r\n                  state: \"Complete\",\r\n                  routeTaskApprovalAction: \"Approve\"\r\n                },\r\n                updateAction: \"MODIFY\"\r\n              }\r\n            ]\r\n          },\r\n          instance: \"SaaS\"\r\n        };\r\n      \r\n        const headersBody = {\r\n          client_id: 123,\r\n          client_secret: 456\r\n        };\r\n      \r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/taskApproval`, payload, headersBody)\r\n          .then(res => {\r\n            if (res.status === 200) return res.data;\r\n            throw res.data;\r\n          })\r\n          .catch(error => {\r\n            console.error(\"❌ Task Approval Error:\", error);\r\n            throw error;\r\n          });\r\n      };\r\n      \r\n      \r\n    updateMCOData = (id, data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                \"identifier\": id,\r\n                'startDate': data['Start Date'],\r\n                'description': data['description'],\r\n                \"data\": data,\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoModify`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    ApproveCAMCO = (data) => {\r\n        let payload = {            \r\n            \"uriParams\": {\r\n                'id': data.id,\r\n                'type': data.type,\r\n                'currentStatus': data.currentStatus\r\n            }\r\n        }\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caMcoApprove`, payload, headersBody).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getDataForClassificationyMCONames = (data) => {        \r\n        //  Filter out invalid entries (where `name` or `id` is undefined)\r\n        const validData = data.filter(item => item?.name && item?.id);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid data to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO entries.\");\r\n        }\r\n    \r\n\r\n        let payloadBody = {\r\n            \"queryParams\": {\r\n                \"ids\": validData,\r\n                \"operation\": \"CA-Details\",\r\n                \"instance\": \"SaaS\"\r\n            }\r\n        }\r\n     \r\n\r\n        let headersBody = {\r\n            'client_id': 123,\r\n            'client_secret': 456\r\n        }\r\n        return axios.post(`${SAP_API_BASE_URL}/loginLTToken/caDetails`, payloadBody, headersBody).then((res) => {            \r\n            if (res.status === 200) {                              \r\n                return res.data;\r\n            }               \r\n            }).then((data)=>{                \r\n                const formattedResponse = {};\r\n                data.forEach(item => {\r\n                    if (item?.mcoPropeties?.name) {\r\n                        formattedResponse[item.mcoPropeties.name] = item;\r\n                    }\r\n                });\r\n                return formattedResponse;\r\n            }).catch((e) => {\r\n                throw e;\r\n            });        \r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        let params = {\r\n            mco_id: mcoName,\r\n            isBasics: true\r\n        }\r\n        this.getMCOdetailById(params).then((res)=>{\r\n            if(res){\r\n                return res?.mcoPropeties;\r\n            }\r\n        }).catch((error)=>{\r\n        })\r\n        \r\n        // return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n        //     if (res.status === 200) {\r\n        //         return res.data;\r\n        //     }\r\n        //     throw res.data;\r\n        // }).catch((e) => {\r\n        //     return e;\r\n        // });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        const validData = data.filter(name => name !== null && name !== undefined);\r\n        if (validData.length === 0) {\r\n            console.error(\"No valid MCO names to send in API request!\");\r\n            return Promise.reject(\"Invalid data - No valid MCO names.\");\r\n        }\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, validData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            console.error(\"API Error:\", e);\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return new Promise(async (reject,resolve)=>{\r\n           await  ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n                if (res.status === 200) {\r\n                    resolve(res.data);\r\n                }\r\n                reject(res.data);\r\n            \r\n        })})\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    \r\n}","import {\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    BACKEND_API_URL\r\n} from '../config';\r\nimport { Store } from \"app/redux/Store\";\r\nimport ApiInstance from './ApiInstance';\r\nimport axios from 'axios';\r\n\r\nconst getGlobalData = () => {\r\n    const StoreDetails = Store.getState();\r\n    const instanceType = StoreDetails?.globalData?.instanceType;\r\n    const enoviaApi = (instanceType === \"Cloud\") ? REACT_APP_ENOVIA_CLOUD_API_URL : REACT_APP_ENOVIA_API_URL;\r\n    return enoviaApi;\r\n}\r\n\r\nexport default class OnPremExecutionService {\r\n    searchCA = (filters) => {\r\n        return axios.post(`${getGlobalData()}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/CAid/${params?.ca_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO = (filters, instance) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findMCOObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    searchMCO_old = (filters) => { //Removed\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/erp/findObjects`, filters, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            throw e;\r\n        });\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classes/${params?.mco_id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        return axios.put(`${REACT_APP_ENOVIA_API_URL}/productHierarchy/classify`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    validationByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/validate/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/erp/item/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/bom/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    changeStateByMcoId = (id, status, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/changeState/${id}/${status}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOData/${id}`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        let mcoNames = data?.names;\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/getDataForClassificationyMCONames/mcoList`, mcoNames, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMCOObjects/mcoList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRSMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRSMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getRMEList = () => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getRMEs`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRpartList = (data) => {\r\n        return axios.post(`${REACT_APP_ENOVIA_API_URL}/mco/updateMR/partList`, data, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            console.log(\"hey vara here===========================================\", res);\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/getSpecDetails/${id}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        return axios.get(`${REACT_APP_ENOVIA_API_URL}/mco/name/${mcoName}`, REACT_APP_ENOVIA_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getSourcePlantTemplate = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/sourceList/getSourcePlantTemplate`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {                \r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRRelatedDetailsbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/bu/getBusinessUnitbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/getLifeCycleStatusByMCOName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    }\r\n    updateattributesbyid = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendMCO`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","\r\nimport {\r\n    BACKEND_API_URL,\r\n    REACT_APP_ENOVIA_API_URL,\r\n    REACT_APP_ENOVIA_CLOUD_API_URL,\r\n    REACT_APP_BACKEND_API_HEADER,\r\n    REACT_APP_ENOVIA_API_HEADER,\r\n    REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n} from '../config'\r\nimport axios from 'axios';\r\nimport ApiInstance from './ApiInstance';\r\nimport partWith100Items from \"app/utils/mcoUtils/100partsdata.json\";\r\nimport partWith50Items from \"app/utils/mcoUtils/50partsdata.json\";\r\nimport SaaSExecutionService from \"./SaaSExecutionService\";\r\nimport OnPremExecutionService from \"./OnPremExecutionService\";\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\n\r\nlet executionClass;\r\nlet instance;\r\n\r\nexport class MCOService {\r\n    getInstanceDetail = () => {\r\n        instance = localStorage.getItem('instance');        \r\n        switch(instance) {\r\n            case \"onPrem\":\r\n                executionClass = new OnPremExecutionService();\r\n                break;\r\n            case \"SaaS\":\r\n                executionClass = new SaaSExecutionService();\r\n                break;\r\n        }\r\n    }\r\n    \r\n    searchCA = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchCA(filters);\r\n    };\r\n    getCARelatedMco = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getCARelatedMco(params);\r\n    };\r\n    searchMCO = (filters) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.searchMCO(filters, instance);\r\n    };\r\n    getMCOdetailById = (params) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMCOdetailById(params);\r\n    };\r\n    updateMCOdetails = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOdetails(data)\r\n    };\r\n    validationByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.validationByMcoId(id);\r\n    };\r\n    getItemDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getItemDetailsByMcoId(id);\r\n    };\r\n    getBomDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBomDetailsByMcoId(id)\r\n    };\r\n    changeStateByMcoId = (id, status, data, action) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.changeStateByMcoId(id, status, data)\r\n    };\r\n    updateMCOData = (id, data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOData(id, data);\r\n    };\r\n    getDataForClassificationyMCONames = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getDataForClassificationyMCONames(data);\r\n    };\r\n    updateMCOObjects = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMCOObjects(data);\r\n    };\r\n    getRSMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRSMEList();\r\n    };\r\n    getRMEList = () => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getRMEList();\r\n    };\r\n    updateMRpartList = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateMRpartList(data);\r\n    };\r\n    getSpecDetailsByMcoId = (id) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSpecDetailsByMcoId(id);\r\n    };\r\n    getMcoPropertyDetails = (mcoName) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMcoPropertyDetails(mcoName);\r\n    };\r\n    ApproveCAMCO = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.ApproveCAMCO(data);\r\n    }\r\n    routeStart = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.routeStart(routeId);\r\n    };\r\n    getTaskList = (routeId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getTaskList(routeId);\r\n    };\r\n\r\n    taskApproval = (taskId) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.taskApproval(taskId);\r\n    };\r\n\r\n    // ==================MULE SERVICE================================\r\n    getMuleToken = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/muleSoftServices/getMuleToken`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    sendMCO = (payloadData) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.sendMCO(payloadData);\r\n    };\r\n    sendAutoReleaseMCOs = (payloadData) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/muleSoftServices/sendAutoReleaseMCOs`, payloadData, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };    \r\n    // ================================================\r\n    // =====================PLM BACKEND===============\r\n\r\n    // Attributes\r\n    getattributesbyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getattributesbyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMcoDetailsByName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/getMcoDetailsByName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    addattributes = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/addattributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    mcoStatusValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mco/mcoStatusValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateattributesbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.updateattributesbyid(data);\r\n    };\r\n\r\n    updatePartListAndAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    updatePartListAndAddAttributes = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updatePartListAndAddAttributes`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getTemplateDetails = () => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/template/gettemplate`, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getPlantData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/plant/getplants`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourceData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/sourceList/getSource`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMappingsData = (data) => {\r\n        return ApiInstance.get(`${BACKEND_API_URL}/api/mappings`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    itemvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/itemvalidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    BOMvalidationbymcoid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/bomValidation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateFinalAcksDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mco/updateFinalAcksDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    callLoggingInfo = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/log/addLogInfo`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n\r\n    getERPStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/acknowledgement/getacknowledgementByItemId`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getSourcePlantTemplate = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getSourcePlantTemplate(data);\r\n    };\r\n    mcoRuleValidation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/item/validation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRRelatedDetailsbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRRelatedDetailsbyid(data);\r\n    };\r\n    addMRRelatedDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/addMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    updateMRRelatedDetails = (data) => {\r\n        return ApiInstance.put(`${BACKEND_API_URL}/mrRelatedDetails/updateMRRelatedDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getMRbyPartAndPlant = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getMRbyPartAndPlant(data);        \r\n    };\r\n    getMRForCAbyPartAndPlant = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRForCAbyPartAndPlant`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getChildPartDetails = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getChildPartDetails`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getBusinessUnitbyid = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getBusinessUnitbyid(data);\r\n    };\r\n    getMRDetailsByPartName = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mrRelatedDetails/getMRDetailsByPartName`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    getLifeCycleStatusByMCOName = (data) => {\r\n        this.getInstanceDetail();\r\n        return executionClass.getLifeCycleStatusByMCOName(data);\r\n    };\r\n    updateLifeCycleStatus = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/status/updateLifeCycleStatus`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    massUpdatePartDescription = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/massUpdate/massUpdatePartDescription`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchSpecCreationbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/searchSpecCreationbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendSpecCreation = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/specCreation/resendSpecCreation`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    searchObsoletePartbyKey = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/searchObsoletePartbykeyword`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    resendObsoletePart = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/obsoletePart/resendObsoletePart`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n    bulkUploadPartAndTemplate = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/mco/bulkUploadPartAndOracleTemp`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"bulkAddTemplate\", e);\r\n                return [];\r\n            });\r\n    }\r\n    downloadSampleFile = (fileName) => {\r\n        window.open(`${BACKEND_API_URL}/${fileName}`);\r\n    }\r\n    exportMCOData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/mco/exportMCOData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    exportTableData = (data) => {\r\n        return ApiInstance\r\n          .post(\r\n            `${BACKEND_API_URL}/exportData/exportTableData`,\r\n            data,\r\n            REACT_APP_BACKEND_API_HEADER\r\n          )\r\n          .then(async (res) => {\r\n            if (res.status === 200) {\r\n              const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n              try {\r\n                const response = await fetch(fileUrl, {\r\n                  method: 'GET',\r\n                  headers: {\r\n                    'Content-Type': 'application/octet-stream',\r\n                    'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n                  }\r\n                });  \r\n                if (!response.ok) {\r\n                  throw new Error('Failed to fetch the file');\r\n                }  \r\n                const fileBlob = await response.blob();\r\n                const downloadUrl = URL.createObjectURL(fileBlob);\r\n      \r\n                const link = document.createElement('a');\r\n                link.href = downloadUrl;\r\n                link.download = res.data.filePath; \r\n                link.click();\r\n                URL.revokeObjectURL(downloadUrl);\r\n              } catch (error) {\r\n                console.error('Error downloading the file:', error);\r\n              }  \r\n              return res.data;\r\n            }\r\n            throw res.data;\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error in exportTemplate:', error);\r\n            throw error;\r\n          });\r\n    };\r\n    getMcoHistorybyid = (data) => {\r\n        return ApiInstance.post(`${BACKEND_API_URL}/mcoHistory/getMcoHistorybyid`, data, REACT_APP_BACKEND_API_HEADER).then((res) => {\r\n            if (res.status === 200) {\r\n                return res.data;\r\n            }\r\n            throw res.data;\r\n        }).catch((e) => {\r\n            return e;\r\n        });\r\n    };\r\n}","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\n\r\nexport class SystemSettingsService {\r\n    getAllsystemSetupList = () => {\r\n        return ApiInstance\r\n            .get(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettings`,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n    getSystemSettingsbyid = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/getSystemSettingsbyid`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"getSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    addSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .post(\r\n                `${BACKEND_API_URL}/systemSettings/addSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"addnewSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    updateSystemSettings = (data) => {\r\n        return ApiInstance\r\n            .put(\r\n                `${BACKEND_API_URL}/systemSettings/updateSystemSettings`,\r\n                data,\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((e) => {\r\n                console.error(\"updateSystemSettings\", e);\r\n                return [];\r\n            });\r\n    };\r\n\r\n    deleteSystemSettings = (ids) => {\r\n        return ApiInstance\r\n            .delete(\r\n                `${BACKEND_API_URL}/systemSettings/deleteSystemSettings`,\r\n                { data: ids },\r\n                REACT_APP_BACKEND_API_HEADER\r\n            )\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    return res.data;\r\n                }\r\n                throw res.data;\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting SystemSettings:\", error);\r\n                throw error;\r\n            });\r\n    };\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class templateService {\r\n  // ===============Template=====================\r\n\r\n  // get the templateList\r\n  getAllTemplateList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/template/gettemplate`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateDetails\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/addTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n  getTemplateById = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/getTemplateById`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTemplateById\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplate = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/template/updateTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewPlant\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplate = (ids) => {\r\n    return ApiInstance.delete(\r\n      `${BACKEND_API_URL}/template/deleteTemplate`,\r\n      { data: { ids } },\r\n      REACT_APP_BACKEND_API_HEADER\r\n    )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting plant:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/template/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkExportTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n  // ===============Plant=====================\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\n\r\nexport class TemplateMappingService {\r\n  getAlltemplateMappings = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/newtemplateMappings/getTemplateMappings`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getTeamplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteTemplateMapping = (tempMappingId) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/newtemplateMappings/deleteTemplateMappings/${tempMappingId}`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting deleteTemplateMappings:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  addnewTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/addTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        //console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/newtemplateMappings/updateTemplateMappings`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateTemplateMappings\", e);\r\n        return [];\r\n      });\r\n  };\r\n  importTemplate = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/bulkAddTemplate`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        // console.log(data, \"data in post call\");\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddTemplate\", e);\r\n        return [];\r\n      });\r\n  };\r\n  \r\n  downloadSampleFile=(fileName)=>{\r\n    window.open(`${BACKEND_API_URL}/${fileName}`);\r\n  }\r\n\r\n  exportAllTemplateMapping = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllTemplateMapping`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  \r\n\r\n  exportAllAdminGeneralProperties = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminGeneralProperties`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  exportAllAdminSystemSetups = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/newtemplateMappings/exportAllAdminSystemSetups`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath;\r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportAllData:', error);\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import { BACKEND_API_URL, REACT_APP_BACKEND_API_HEADER, REACT_APP_BACKEND_API_HEADER_FOR_FILE  } from \"../config\";\r\nimport ApiInstance from './ApiInstance';\r\nimport { Store } from \"app/redux/Store\";\r\nimport { update_generalValues } from 'app/redux/actions/MCODetailsAction';\r\nimport { getOKTAAccessKey } from \"./../app/utils/commonFunctions\";\r\nexport class UserService {\r\n  getAllUsersList = () => {\r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/getUsers`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"getUsers\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  addnewUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/addUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"addnewUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  updateUser = (data) => {\r\n    return ApiInstance\r\n      .put(\r\n        `${BACKEND_API_URL}/users/updateUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"updateUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n\r\n  deleteUser = (ids) => {\r\n    return ApiInstance\r\n      .delete(\r\n        `${BACKEND_API_URL}/users/deleteUser`,\r\n        { data: { ids } },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error deleting users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n  validateUser = () => {\r\n    console.log(\"validateUser called with URL:\", `${BACKEND_API_URL}/users/validateUser`);\r\n    console.log(\"Headers being sent:\", REACT_APP_BACKEND_API_HEADER);\r\n  \r\n    return ApiInstance\r\n      .get(\r\n        `${BACKEND_API_URL}/users/validateUser`,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        console.log(\"validateUser response:\", res);\r\n  \r\n        if (res.status === 200) {\r\n          console.log(\"validateUser success:\", res.data);\r\n          return res.data;\r\n        }\r\n  \r\n        console.warn(\"validateUser unexpected status:\", res.status);\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"validateUser request failed:\", error);\r\n  \r\n        Store.dispatch(update_generalValues({\r\n          isPageHavingIssue: true\r\n        }));\r\n  \r\n        throw error;\r\n      });\r\n  };\r\n  \r\n  requestForAccess = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/requestForAccessApp`,\r\n        { data: data },\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error requestForAccessApp users:\", error);\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  importUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkAddUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER_FOR_FILE\r\n      )\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"bulkAddUser\", e);\r\n        return [];\r\n      });\r\n  };\r\n  exportUser = (data) => {\r\n    return ApiInstance\r\n      .post(\r\n        `${BACKEND_API_URL}/users/bulkExportUser`,\r\n        data,\r\n        REACT_APP_BACKEND_API_HEADER\r\n      )\r\n      .then(async (res) => {\r\n        if (res.status === 200) {\r\n          const fileUrl = `${BACKEND_API_URL}/${res.data.filePath}`;\r\n          try {\r\n            const response = await fetch(fileUrl, {\r\n              method: 'GET',\r\n              headers: {\r\n                'Content-Type': 'application/octet-stream',\r\n                'Authorization': 'Bearer ' + getOKTAAccessKey()\r\n              }\r\n            });  \r\n            if (!response.ok) {\r\n              throw new Error('Failed to fetch the file');\r\n            }  \r\n            const fileBlob = await response.blob();\r\n            const downloadUrl = URL.createObjectURL(fileBlob);\r\n  \r\n            const link = document.createElement('a');\r\n            link.href = downloadUrl;\r\n            link.download = res.data.filePath.replace(\"downloads/\", \"\") \r\n            link.click();\r\n            URL.revokeObjectURL(downloadUrl);\r\n          } catch (error) {\r\n            console.error('Error downloading the file:', error);\r\n          }  \r\n          return res.data;\r\n        }\r\n        throw res.data;\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error in exportTemplate:', error);\r\n        throw error;\r\n      });\r\n  };\r\n  downloadSampleFile = (fileName) => {\r\n    window.open(`http://localhost:8086/users/bulkExportUser/${fileName}`);\r\n  }\r\n}\r\n"],"names":["_ref","openAlert","openDesc","setOpenAlert","horizontal","_jsx","_Fragment","children","Snackbar","anchorOrigin","vertical","open","onClose","event","reason","sx","top","_jsxs","Alert","severity","width","maxHeight","AlertTitle","type","style","fontWeight","desc","Loader","props","setOpen","React","useEffect","show","Backdrop","color","zIndex","theme","drawer","textAlign","CircularProgress","settings","useSettings","Layout","MatxLayouts","activeLayout","MatxSuspense","layout1","StyledLoading","styled","height","display","alignItems","justifyContent","position","left","right","Loading","Box","src","alt","className","textLight","primary","secondary","disabled","hint","errorColor","main","themeColors","whitePurple","palette","contrastText","error","text","whiteBlue","slateDark1","background","paper","default","slateDark2","purple1","light","dark","purple2","purpleDark1","purpleDark2","blue","blueDark","red","themeShadows","SomethingWrong","SimpleCard","Grid","container","spacing","item","md","sm","xs","Button","variant","onClick","window","location","reload","StyledBox","texttransformstyle","ellipsis","textTransform","whiteSpace","overflow","textOverflow","H5","_ref6","clsx","component","mb","mt","fontSize","lineHeight","H6","_ref7","Paragraph","_ref8","Span","_ref10","BreadcrumbRoot","flexWrap","BreadcrumbName","margin","paddingBottom","verticalAlign","SubName","StyledIcon","_ref2","marginLeft","Icon","marginBottom","_ref3","routeSegments","useTheme","Breadcrumbs","separator","NavLink","to","map","route","index","length","path","name","shortId","StyledAvatar","Avatar","StatusCircle","status","bottom","borderRadius","border","ChatContainer","flexDirection","StyledScrollBar","ScrollBar","flexGrow","ProfileBox","padding","ChatStatus","marginTop","ChatMessage","maxWidth","wordBreak","MessageTime","_ref4","ChatImgContainer","_ref5","ChatImgBox","ChatImg","ChatImgSize","globalMessageList","togglePopup","isAlive","setIsAlive","useState","message","setMessage","messageList","setMessageList","currentUserId","chatBottomRef","document","querySelector","dummyReply","async","setTimeout","messageObject","contactId","avatar","push","scrollToBottom","useCallback","scrollTo","scrollHeight","behavior","time","id","mood","textPrimary","ChatAvatar","IconButton","ind","p","ml","Divider","convertHexToRGB","TextField","placeholder","multiline","rowsMax","fullWidth","InputProps","endAdornment","size","classes","root","value","onChange","e","target","onKeyUp","key","shiftKey","tempMessage","trim","tempList","PopupRoot","topBarHeight","breakpoints","down","Popup","transition","boxShadow","shadows","icon","cloneElement","popupOpen","marginRight","paddingTop","paddingLeft","paddingRight","backgroundColor","fallbacks","MenuButton","action","hover","anchorEl","setAnchorEl","toArray","shouldCloseOnItemClick","horizontalPosition","handleClose","Fragment","currentTarget","menuButton","ThemeProvider","themes","activeTheme","Menu","elevation","getContentAnchorEl","transformOrigin","child","LinearProgress","outline","Suspense","fallback","MatxLoading","CssBaseline","NavExpandRoot","transform","common","white","BaseButton","ButtonBase","BulletIcon","ItemText","BadgeValue","MatxVerticalNavExpansionPanel","mode","collapsed","setCollapsed","elementRef","useRef","componentHeight","pathname","useLocation","iconText","badge","calcaulateHeight","node","current","getAttribute","compactNavItem","_e$target","closest","handleClick","sidenavHoverShow","collapseIcon","expandIcon","ref","MuiAlert","StyledTable","Table","VisuallyHiddenInput","clip","clipPath","Dialog","_importResponse$error","_importResponse$error2","_importResponse$error3","_importResponse$error4","_importResponse$error5","_importResponse$error6","_importResponse$error7","_importResponse$error8","BUService","massUpdate","MassUpdate","importMassupdateFile","setImportMassupdateFile","setOpenDesc","setIsLoading","noFileError","setNoFileError","importResponse","setImportResponse","importfileBar","setimportfileBar","importedFileData","setImportedFileData","importedFileName","setImportedFileName","sampleFileUrl","setSampleFileUrl","instance","localStorage","getItem","bussinessUnitLists","useOracleSettings","BUError","setBUError","importSelectionValues","setImportSelectionValues","BU","handleImportfileBarClose","PaperProps","DialogTitle","cursor","DialogContent","DialogContentText","TableBody","TableRow","TableCell","align","FormControl","InputLabel","Select","labelId","label","prevselectedValues","option","MenuItem","buName","startIcon","CloudUploadIcon","accept","console","log","file","files","fileType","split","pop","colSpan","handleDownload","downloadSampleFile","download","rel","DialogActions","handleImportFile","hasError","confirm","postData","data","Instance","massUpdatePartDescription","then","response","msg","autoFocus","handleCloseImport","autoHideDuration","errorInTemplate","errorInPlants","errorInTemplateCount","eitem","errorInPlantCount","updateTemplates","templateMappingService","TemplateMappingService","exportAllTempMapping","setExportAllTempMapping","dataToExport","handleImportOptionSelection","info","RadioGroup","row","defaultValue","FormControlLabel","control","Radio","rdo","exportAllTemplateMapping","CustomAlertBox","exportAllAdminGeneralPropertiesDialog","setExportAllAdminGeneralPropertiesDialog","exportAllAdminGeneralProperties","exportAllAdminSystemSetupsDialog","setExportAllAdminSystemSetupsDialog","exportAllAdminSystemSetups","ListLabel","ExtAndIntCommon","textDecoration","ExternalLink","InternalLink","StyledText","StyledTextforMassUpdate","MatxVerticalNav","items","updateSettings","isLoading","layout1Settings","leftSidebar","isMdScreen","useMediaQuery","handleClickImportButton","handleNavLinkClick","updateSidebarMode","sidebarSettings","activeLayoutSettingsName","activeLayoutSettings","renderLevels","href","mx","undefined","ExportAllGeneralPropertiesDialogBox","isActive","MassUpdatePartDescriptionInEnoviaAndERP","ExportAllSystemSetupsDialogBox","_ref9","ExportAllTemplateMapping","CardRoot","Card","CardTitle","subtitle","title","makeStyles","minWidth","minHeight","generateMarginPadding","generateHeightWidh","end","arguments","increament","unit","classList","i","GlobalCss","visibility","opacity","BootstrapDialog","BuConfirmationBox","isBUModified","updateBUModifiedData","m","grey","CloseIcon","dividers","Typography","gutterBottom","OracleSettingsContext","createContext","userDetails","bussinessUnit","templatesInfo","allTemplatesInfo","mappingTemplatesInfo","refreshData","updateBussinessUnit","updateBussinessUnitLists","updateTemplateLists","updateAllTemplate","updateMappingTemplatesInfo","updateRefreshData","OracleMappingsProvider","authState","authService","useOktaAuth","globalBussinessUnit","useSelector","state","globalBUandInstance","bu","shallowEqual","tempMapService","userService","UserService","navigate","useNavigate","setUserDetails","isPageHavingError","setIsPageHavingError","setBussinessUnit","setIsBUModified","setBussinessUnitLists","setTemplatesInfo","setAllTemplatesInfo","setMappingTemplatesInfo","setRefreshData","values","isAuthenticated","getAlltemplateMappings","result","_result$data","_result$data2","_result$data3","_result$data4","templateMappingList","templateList","bulist","getAccessToken","accessToken","validateUser","_result$data5","userInfo","NotAuthorized","catch","err","checkLocalStorage","_location$pathname2","includes","addEventListener","removeEventListener","Provider","_location$pathname","components","MuiTable","styleOverrides","tableLayout","MuiTableCell","head","MUIDataTableSelectCell","MUIDataTableHeadCell","MUIDataTableBodyCell","MuiButton","contained","MuiCssBaseline","boxSizing","html","MozOsxFontSmoothing","WebkitFontSmoothing","body","a","MuiFab","MuiAccordion","MuiTooltip","tooltip","MuiMenuItem","MuiExpansionPanel","MuiCard","typography","body1","danger","MatxLayoutSettings","perfectScrollbar","forEach","createTheme","merge","themeOptions","createMatxThemes","bgimgurl","topbar","fixed","secondarySidebar","footer","SettingsContext","SettingsProvider","currentSettings","setCurrentSettings","handleUpdateSettings","update","merged","contextValue","useMemo","useContext","initialState","isPageHavingIssue","stepData","RSMEList","RMEList","responseData","itemERPStatus","affectedPartsData","exportAffectedPartsData","currentMcoDetails","isPropertyFormEdited","isMaterialFormEdited","selectedRowData","selectedRowFormdata","selectedRowIndex","templates","source","plants","materialData","masterData","templateMappingsInfo","ORGAllowedTemplateMappings","previousMcosDetails","mrDetails","massUpdateChanges","lifeCycleData","systemSetingsDetail","eachTemplateOptions","bulkPartTemplates","caRelatedEachMCODetails","allCaMCODetails","mcoSearchLists","showMaterialForm","parentMCODetails","caLifeCycleData","SET_UPDATED_ROUTES","updatedRoutes","payload","GET_MCOLIST","GET_MCOINFO","GET_UPDATEMCODETAILS","GET_UPDATE_MCO_RELATED_VALUES","SET_ALL_CA_MCO_DETAILS","RESET_VALUES","baseValues","getBasename","segment","instanceType","systemName","GET_BU_AND_INSTANSE","combineReducers","mcoDetails","MCODetailsReducer","globalData","GlobalDataReducer","GlobalBUandInstanceReducer","middlewares","thunk","Store","createStore","RootReducer","compose","applyMiddleware","x","updateGlobalBUandInstance","dispatch","MCOService","setUpdatedRoutes","routes","getMCOLists","updateResponseData","updateMcoDetails","update_generalValues","resetValues","currentInstance","pathArray","filter","fitem","returnVal","getOKTAAccessKey","_parsedToken$accessTo","_parsedToken$accessTo2","_parsedToken$accessTo3","_parsedToken$idToken","getToken","parsedToken","JSON","parse","curruid","claims","uid","userinfo","idToken","exp","Math","floor","Date","now","username","email","token","Buffer","jwt","sideNavWidth","sidenavCompactWidth","formatMessage","template","replaceArray","formattedMessage","_formattedMessage","RegExp","replace","sortDataByKey","Array","isArray","sort","b","valueA","toString","toLowerCase","valueB","isNaN","parseFloat","sortDataByKeyAllowableOrgTemplates","details","localeCompare","sortByLabel","labelA","labelB","hex","match","slice","join","c","test","substring","generateRandomId","crypto","msCrypto","array","Uint32Array","getRandomValues","sortInsideRowData","sortedNameDivs","sortedMvoTemplateToDivs","nameDivs","textA","toUpperCase","textB","MVO_TEMPLATE_TO","mvoTemplateToDivs","sortAndReorderData","filterData","sortObjectValues","obj","Entity","Object","fromEntries","entries","plantGroup","find","sortedPlantGroup","sortedOtherEntities","caseInsensitiveSort","sensitivity","BUOptions","bomusageOptions","ERPtypeOptions","instanceOptions","exportToERPOptions","notOwningDivisionOptions","userGroupOptions","is_authorizedOptions","enableBOSTransferOptions","InstanceOptions","BACKEND_API_URL","process","REACT_APP_EMRPDH_OKTA_CLIENT_ID","REACT_APP_EMRPDH_OKTA_ISSUER","REACT_APP_EMRPDH_OKTA_DOMAIN","REACT_APP_ENOVIA_API_URL","REACT_APP_ENOVIA_CLOUD_API_URL","SAP_API_BASE_URL","REACT_APP_BACKEND_API_HEADER","headers","REACT_APP_BACKEND_API_HEADER_FOR_FILE","REACT_APP_ENOVIA_API_HEADER","CLIENT_ID","ISSUER","domain","OKTA_TESTING_DISABLEHTTPSCHECK","oidc","clientId","issuer","redirectUri","origin","scopes","pkce","disableHttpsCheck","resourceServer","messagesUrl","isInitialised","user","LoginScreen","oktaAuth","originalUri","toRelativeUrl","setOriginalUri","signInWithRedirect","login","Outlet","authenticated","FlexBox","JustifyBox","IMG","NotFoundRoot","NotFound","getBaseUrl","getStorevalue","startsWith","styles","button","UnauthorizedPage","_location$state","_location$state2","_location$state3","_location$state4","_location$state5","requestforAccess","setRequestforAccess","logout","signOut","postLogoutRedirectUri","requestAccess","requestForAccess","userData","CustomSelect","isdisabled","selectedvalue","onChangeFunc","displayEmpty","renderValue","selected","_selectedOption","selectedOption","businessUnit","listKey","Homepage","setInstance","instanse","selectedOptionValue","Component","CaList","Loadable","lazy","CaDetails","McoList","Mcodetails","TrackerProgressBar","SpecCreationList","ObsoletePartList","MyReportList","element","_userDetails$userinfo","Navigate","tempService","templateService","importTemplate","setImportTemplate","setTemplateData","ERPTypeError","setERPTypeError","instanceError","setinstanceError","ERPType","handleImportTemplateSelection","column","selectedValues","TableHead","Autocomplete","multiple","options","Set","add","from","getUniqueValues","_","newValue","renderInput","params","disableCloseOnSelect","disableClearable","isOptionEqualToValue","getOptionSelected","ChipProps","CloudDownloadIcon","handleCloseImportTemplate","prev","handleImportTemplate","errorCount","newTemplateAdded","getAllTemplateList","exportTemplate","setExportTemplate","setDataToExport","templateData","setValue","exportfileBar","setexportfileBar","exportResponse","setExportResponse","handleExportTemplateDialog","FormLabel","filterTemplateData","handleCloseExportTemplate","exportTemplateHandle","exportData","templateName","WrappedComponent","sortInfo","initialData","sortedData","sortData","field","columnName","direction","dir","aValue","String","bValue","Container","Template","toastState","deleteDialog","setDeleteDialog","setInitialData","selectedDelTemplate","setselectedDelTemplate","searchValue","setSearchValue","filteredTempData","setFilteredTempData","setSortInfo","setSelected","selectedRows","setSelectedRows","gridRef","dataMap","sortedFilterTempData","onSelectionChange","finally","_toastState","_toastState2","_toastState3","onbeforeunload","history","replaceState","templateModeRef","handleEditTemplate","editSelectedTemplate","selectedTempalteData","templateMode","handleDeleteTemplateDialog","Deltemplate","selRowsData","selRowsDetails","keys","new_FilteredData","subscriber","_subscriber$templateN","_subscriber$plants","_subscriber$BU","some","plant","plantName","handleSortInfoChange","sortedExportDataHOC","SortedTemplate","onSortInfoChange","Breadcrumb","newSearchValue","handleSearch","flex","RouterLink","handleCreateTemplate","handleEditMappingDialog","handleDeleteDialog","handleImportTemplateDialog","ExportDialogBox","DataGrid","idProperty","showZebraRows","defaultLimit","columns","header","Tooltip","defaultFlex","defaultWidth","render","dataSource","checkboxColumn","handle","pagination","renderScroller","_gridRef$current","_gridRef$current2","setScrollTop","getScrollTop","handleCloseDelete","selRowsId","deleteTemplate","ImportDialogBox","TemplateWrapper","PlantService","constructor","getAllPlantsList","ApiInstance","get","res","getPlantById","post","addnewPlant","updatePlant","put","deletePlant","ids","delete","handleDialogClose","tempObject","handleAttributeChange","handleAddAttribute","newKey","handleAddRow","handleDeleteRow","keyerror","attributeForm","valuesInputList","mandatory","material_master","dataType","inputType","overflowY","alignContent","Paper","DeleteIcon","defaultValues","useStyles","spanRed","defaultFormValue","CreateTemplate","plantService","plantData","setPlantData","templateForm","setTemplateForm","exportToERP","existInOracle","notOwningDivision","snackBar","setsnackBar","snackbarmessage","setSnackbarMessage","snackbarseverity","setSnackbarSeverity","diabox","setDiabox","attributeData","setAttributeData","setAttributeForm","setTempObject","setValuesInputList","setNewKey","setNewValue","setKeyerror","selectedBU","setSelectedBU","selectedplants","setSelectedPlants","handleTemplateFormChange","updatedForm","plantId","url","port","authkey","SalesOrg","ECN_required","bomusage","ConnectivityDetails","password","handlesnackBarClick","handlesnackbarClose","onBlur","trimmedValue","prevForm","handleSelectChange","extractedInfo","MenuProps","handleAddNewAttribute","attrivar","aindex","_attributeData$index","attindex","valuesArray","handleEditAttribute","EditIcon","handleDeleteAttribute","prevData","updatedData","splice","_templateForm$templat","_templateForm$desc","_templateForm$ERPType","randomid","attributes","addnewTemplate","resp","_Object$keys","_resp$message","altHtml","citem","handleCancel","AttributeDialog","prevObject","updatedTempObject","reduce","acc","curr","updatedAttributeData","prevAttributeData","keyExists","valueExists","prevList","newList","EditTemplate","useParams","selectedTemplateObj","setSelectedTemplateObj","tempId","getTemplateById","_Object$keys2","selectedTemplate","selectedPlantsInfo","_Object$entries","selectedAttribute","updateTemplate","PrivateRoute","exact","authRoles","sa","admin","editor","guest","Plant","selectedDelPlant","setSelectedDelPlant","setFilteredPlantData","filteredPlantData","sortedPlanteData","plantModeRef","handleDeletePlantDialog","DeletePlant","handleEditPlant","editSelectedPlant","selectedPlantData","plantMode","SortedPlant","handleCreatePlant","ConnectivityDetailsDialog","connDetails","handleCDChange","handleAddCD","connectivityError","plantForm","sapsysnum","sapclientid","CreatePlant","allPlantData","setallPlantData","diaBox","setPlantForm","orgId","aliasPlant","setconnDetails","setconnectivityError","materialMasterOption","handlePlantFromChange","Formik","initialValues","Connectivitydetails","onSubmit","Form","handleAddPlant","_plantForm$plantName","_plantForm$ERPType","_plantForm$instance","_plantForm$exportToER","_plantForm$plantName2","_plantForm$material_m","_plantForm$bomusage","newPlant","_resp$data","_resp$data$","_resp$data$2","_resp$data$3","EditPlant","setConnDetails","selectedPlant","setSelectedPlant","_selectedPlantObj$Con","_selectedPlantObj$Con2","_selectedPlantObj$Con3","_selectedPlantObj$Con4","_selectedPlantObj$Con5","_selectedPlantObj$Con6","_selectedPlantObj$Con7","_selectedPlantObj$Con8","_selectedPlantObj$Con9","_selectedPlantObj$Con10","_selectedPlantObj$Con11","_selectedPlantObj$Con12","selectedPlantObj","hasOwnProperty","hasValues","Plants","SourceListService","getAllSourceList","deleteSource","addnewSource","updateSource","getSourceById","CreateSourceList","sourceForm","setSourceForm","sourceListService","handleSourceFormChange","environment","handleAddSource","_sourceForm$source","_sourceForm$environme","_sourceForm$instance","_sourceForm$ERPType","newSource","EditSourceList","sourceId","selectedSource","sourceData","Source","Environment","SourceList","setselectedSource","setsourceData","unSortSourceData","setUnSortSourceData","setFilteredSourceData","filteredSourceData","sortedSourceData","handleEditSource","editSelectedSource","selectedSourceData","handleDeleteSourceDilaog","DeleteSource","SortedSource","handleCreateSourceList","MappingsService","getAllMappings","deleteMapping","mappingId","addnewMapping","updateMapping","CreateMapping","mappingForm","setMappingForm","mappingService","handleMappingvalueChange","handleMappingFormChange","Name","handleAddMapping","_mappingForm$Name","_mappingForm$ERPType","newMaping","List","EditMapping","selectedMapping","selectedMappingData","reversedList","Mappings","page","setPage","rowsPerPage","setRowsPerPage","setSelectedMapping","mappingData","setMappingData","filteredRows","setFilteredRows","filteredMappingData","setFilteredMappingData","filterValues","setFilterValues","handleFilterChange","prevFilterValues","dataToShow","filteredData","_subscriber$Name","_subscriber$ERPType","handleCreateMappings","getOptionLabel","editselectedMapping","handleEditMapping","handleDeleteMappingDilaog","TablePagination","px","count","onPageChange","handleChangePage","newPage","rowsPerPageOptions","onRowsPerPageChange","nextIconButtonProps","backIconButtonProps","auth","buData","_data","_a$businessUnit","_b$businessUnit","_item$plants","_item$plants2","exportToERPdisabled","exportToERPbyPassed","enableBOSTransfer","contextDEF","EMRDivisionORGValue","productHierarchy","doNotSendToERP","oracleExisting","makeWithoutBOMList","notOwningDivisionList","BUList","setBUData","buService","getAllBuList","setFilteredBUData","filteredBUData","sortedFilteredBuData","selectedBUData","SortedbuList","handleCreateBUList","rowStyle","isSelected","actionFlag","_ref11","_ref12","deleteBU","CreateBU","buForm","setBuFrom","DoNotSendToERP","setDoNotSendToERP","OracleExisting","setOracleExisting","MakeWithoutBOMList","setMakeWithoutBOMList","NotOwningDivisionList","setNotOwningDivisionList","handlebuFormChange","handleTemplateChange","selectedObj","newselectedObj","existing","autoHighlight","handlePlantsChange","renderOption","mr","flexShrink","handleAddbuName","_buForm$buName","newbuName","addnewBU","EditBU","selectBU","setSelectBU","getTemplValues","fieldValue","buId","getBusinessUnitbyid","_resp$data2","_resp$data3","selectBUValue","InfoIcon","updateBU","userImportDialog","setUserImportDialog","setUserData","mcoService","handleCloseImportDialog","importUser","errors","getAllUsersList","userExportDialog","setUserExportDialog","handleCloseExportUser","userName","Email","is_authorized","exportUser","sheet_name","UserList","validFilteredBUData","sortedUsersData","handleEditUser","editSelectedUser","selectedUserData","isEdit","handleDeleteUserDilaog","SortedUserData","handleCreateUser","handleImportDialog","handleExportDialog","deleteUser","BulkExportUsers","handleCloseExportDialog","BulkImportUsers","AddEditUser","selectedUser","userForm","setUserFrom","userId","handleUserFormChange","userGroup","setUserGroup","userGroupInfo","_userForm$userName","_userForm$name","_userForm$email","_userForm$is_authoriz","updateUser","addnewUser","USERList","_filteredPlants","handleorgAllowedDialogClose","selectedPlants","orgAllowedForm","handleorgAllowedFormChange","handleAddOrgAllowedValues","templateOption","setTemplateOption","filteredBUOptions","setFilteredBUOptions","tempData","temp","_temp$BU","ALLOWABLE_ORG_TEMPLATES","Has_MBOM","On_MBOM","EBOM_Allowed","Optional","PO_Org_Exist_Check","filteredPlants","_bussinessUnitLists$f","HistoryManagementService","getAlldraftChanges","deleteTemplateMapping","tempMappingId","addnewTemplateMapping","updateTemplateMapping","applyDraftChanges","discardDraftChanges","dataId","getAllmappingHistory","MVOtempcompService","getAlltempcompMappings","deleteTempCompMapping","addnewTempCompMapping","updateTempCompMapping","softDeleteTempCompMapping","fetchData","getsampleFileUrl","MappingType","MVOtemplatecompContext","mvotemplatecompInfo","updateMVOtempcompLists","useMVOtempComp","PartTypeTemplateContext","parttypetemplateinfo","updateParttypeTemplate","usePartTypeTemplate","MVOallowedchangesContext","mvoallowedchangesinfo","updateMVOallowedchanges","useMVoallowedchanges","SetTempCompContext","comptempInfo","updatecomptempList","useCompTemp","SetTempCompProvider","BUPlantContext","buplantsInfo","updatebuplantsInfo","useBUPlant","ExpenseMappingContext","expensemapInfo","updateExpenseMap","useExpenseMap","isObjectBlank","allowableOrgTemplates","ALLOWABLE_ORG_TEMPLATE","MVO_TEMPLATES_TO","TEMPLATE_ORG_MODIFYING","mappingType","AllTempData","_a$field","_b$field","BUID","_item$details","_item$details2","_item$details3","_item$details4","_item$details5","_item$details6","_item$details7","_item$details8","_item$details8$allowa","_item$details9","_item$details9$allowa","_item$details10","_item$details10$MVO_T","_item$details11","_item$details11$TEMPL","item1","MVO_TEMPLATE_OPTION","ENGG_ITEM_TYPE","org_allowed_template","exclusive_use","MVO_TEMPLATE_FROM","TEMPLATE_ORG_EXISTING","PLANT","EXPENSE_TEMPLATE","EXPENSE_PLANTS","flat","dataToPass","_a$field2","_b$field2","OrgAllowedValuesList","orgallowedaddDialog","setOrgallowedaddDialog","setOrgAllowedForm","mvotempcompservice","draftMapService","selectedDeleteMapping","setSelectedDeleteMapping","setIsEdit","orgallowedData","setorgallowedData","filteredDraftTabledata","setFilteredDraftTabledata","handleSearchInputChange","tableTempData","setTableTempData","unSortTableTempData","setUnSortTableTempData","sortedFilterOrgAllowedData","fetchDraftData","finalTempMapList","_finalTempMapList","_finalTempMapList2","_JSON$stringify","_JSON$stringify2","_JSON$stringify2$toLo","stringify","toLocaleLowerCase","filteredOrgAllowedDraftData","obj1","changes","obj2","draftValue_ALLOWABLE_ORG_TEMPLATES","draftValue_Has_MBOM","draftValue_On_MBOM","draftValue_EBOM_Allowed","draftValue_Optional","draftValue_PO_Org_Exist_Check","draft_Plants","_item$details12","_item$details13","_item$details14","_item$details15","_item$details16","_item$details17","_item$details18","_item$details19","_item$details20","_BUOptions$","justify","optionsValues","handleorgAllowedDialogOpen","handleEditOrgAllowedValues","_selectedRows$","_selectedRows$2","selectedDetails","_selectedRows$3","_selectedRows$3$detai","_selectedRows$4","_selectedRows$4$detai","ExportMappingDialog","plantColumnsSet","dataItem","_dataItem$details","plantColumns","dangerouslySetInnerHTML","__html","Constant","adminConstant","orgAllowedList","AllowableOrgTemplate","RDO","HasMBom","OnMbom","EBOM","PoCheck","prepareTableColumn","rowHeight","deleteNote","OrgAllowedDialog","handleorgAllowedDialogAdd","templateid","resultPayload","neworgallowedvalue","ALLOWABLE_ORG_TEMPLATES_ID","ImportMappingsDialog","OrgAllowedValuesWrapper","gridStyle","handleAddMVOtempComp","orgAllowedTempList","formError","selectedRow","handleStatusChange","setTempData","selectedTemplateValues","setSelectedTemplateValues","newTempList","_selectedRow$details","newdata","defaultVisible","_data$details","_data$details2","_data$details3","_data$details4","_data$details5","_data$details6","_data$details7","_data$details8","_selectedTemplateValu","_data$details9","updatedStatus","_selectedRow$details2","getSelTempVal","output","_item$status","transformArray","Scrollbars","autoHeight","autoHeightMin","autoHeightMax","autoHide","autoHideTimeout","RDOError","templateError","AllowableOrgTempError","ReactDataGrid","checkboxOnlyRowSelect","MVOtemplateCompatibilityList","_Constant$adminConsta","_Constant$adminConsta2","_Constant$adminConsta3","_Constant$adminConsta4","_Constant$adminConsta5","_Constant$adminConsta6","_Constant$adminConsta7","_Constant$adminConsta8","_Constant$adminConsta9","mvotempcompData","setMVOtempCompData","orgAllowedData","setorgAllowedData","formTemplateSelection","setFormTemplateSelection","setFormError","setRDO","statusObject","setStatusObject","mvoTemplateList","TemplateOptionMVO","sortable","filteredMVOTempDraftData","draft_allowableOrgTemplates","templateSet","missingFromArrObj1","j","has","deletedTemplateLists","newTemplate","item2","newTemplateLists","mergeNewOldTemplates","self","findIndex","deletedText","draft_Plant","statusText","charAt","buFilterData","_buFilterData","onFormSelectionChange","prevState","rest","localStorageBusinessUnit","setLocalStorageBusinessUnit","sortedByFirstColumnFilteredMVOTempData","sortedFilteredMVOTempData","unSortRowSortTableTempData","thisVal","object","assign","MVOtemplCompDialog","templatedata","new_formError","MVO_TEMPLATE_OPTION_ID","orgtemperror","MVOtemplateCompatibilityWrapper","buoption","PartTypeToTemplateList","setOrgAllowedData","parttypetemplateList","TemplateOptionsMVO","allowableOrgTemplatesExclusive","handleEditPartTypeTotemplate","PartTypeTemplateDialog","_templateid$","ENOVIA_PART_TYPE_ID","PartTypeToTemplateWrapper","mvotemplatesTo","MVOallowedchangesList","setMVOtemplatesTo","rowSortTableTempData","draft_MVO_TEMPLATES_TO","unsortedData","mvoallowedchangesList","mvoTemplatesFrom","mvoTemplatesTo","MVOallowedchangesDialog","convertedMVO_TEMPLATES_TO","t","_templateid$2","_templateid$3","MVOallowedChangesWrapper","modifytempdata","SetCompTempList","comptempData","setComptempData","setModifytempData","sortedFilterSetCompTempData","draft_TEMPLATE_ORG_MODIFYING","setComptempList","TemplateForOrgExist","TemplateForOrgModify","SetCompTempDialog","convertedTEMPLATE_ORG_MODIFYING","SetCompTempWrapper","plantGroupOptions","bomStatusOptions","rduOptions","entitydropdown","handleAddBuPlant","setPlantValueList","plantValueList","setDisplayOrder","setFilteredPlants","dropdownOptions","setDropdownOptions","entityOption","setEntityOption","setDataSource","_bussinessUnitLists$f2","plist","concat","filteredPlantsLeftSide","unionBy","plantColumn","rendersInlineEditor","editable","cellProps","v","editProps","inEdit","onComplete","handleChanges","onFocus","startEdit","expensemapList","PlantName","newData","BUPlantList","displayOrder","setPlantColumns","plantMappingList","setPlantMappingList","_finalTempMapList$","_finalTempMapList$$de","sortedList","originalItem","valueCounts","pdata","_pdata$details","_pdata$details2","plantValue","headerColumns","filteredRDODraftData","_selectedRows$$detail","_selectedRows$2$detai","plantValuesarr","enableColumnAutosize","BUPlantDialog","resultPlantPayload","BUPlantWrapper","expense","Input","inputRef","focus","expenseColumn","onKeyDown","onCancel","onEditComplete","columnId","rowId","ExpenseMappingList","expensemapData","setExpenseMapData","sortedFilterExpenseMappingData","filteredExpenseDraftData","draftValue_EXPENSE_TEMPLATE","handleEditExpenseMapping","ExpenseMappingDialog","Number","EXPENSE_TEMPLATE_ID","ExpenseMapWrapper","validationSchema","yup","shape","description","required","max","enableReinitialize","validateOnChange","validateOnBlur","resetForm","saveApplyChanges","touched","submitForm","setFieldValue","setErrors","setTouched","applyChangesDialog","Field","as","rows","ErrorMessage","closeDialogBox","setApplyChangesDialog","DraftChangesList","tabledata","setTabledata","filteredTabledata","setFilteredTabledata","historyManagementService","modifiedDateTime","_filteredData","thisItem","updateTemplateMappingData","textWrap","onRowClick","rowData","prevSelectedRows","handleRowClick","CommitChangesForm","RequestChangesWraper","RequestChangesList","DraftChangesWraper","HistoryLIst","historyData","mappingOptions","setMappingOptions","setMappingType","version","date","parseInt","dateTime","year","getFullYear","month","getMonth","padStart","day","getDate","hours","getHours","formattedDate","getMinutes","getSeconds","_Object$values$join","_Object$values$join2","thisRowData","HistoryWrapper","HistoryList","systemData","vsystemData","file1","file2","formData","forwardRef","formAllData","setFormAllData","validate","setSubmitting","isValid","backendValues","fieldName","saveForm","formisValid","innerRef","handleSubmit","_props$selectedRows","_props$selectedRows2","editForm","useImperativeHandle","fkey","_formAllData$","thisInputName","currentFieldValue","fieldType","htmlFor","vitem","SystemSetup","childCompRef","showForm","setShowForm","showFormType","setShowFormType","formValues","setFormValues","setSystemData","orgSystemData","setOrgSystemData","systemSettingsService","SystemSettingsService","sortedSystemData","fetchAllDetails","_listValue$data","listValue","getAllsystemSetupList","systemDataValue","newFilteredData","setting","applyFilterData","deleteSystemSettings","scroll","stopPropagation","tabIndex","SystemSetupForm","submittedValues","_updatedData","_updatedData2","_updatedData3","updateSystemSettings","addSystemSettings","basename","useHref","LoginCallback","CustomLoginCallback","onSuccess","redirect","onError","handleLoginRedirect","allChildroutes","McoListRoutes","templateRoutes","plantRoutes","sourceListroutes","mappingsroutes","buListRoutes","mvocompatibilityRoutes","parttypetotemplateroutes","mvoallowedchangesroutes","setcomptemproutes","orgallowedroutes","buplantroutes","expensemaproutes","draftChangesroutes","historyroutes","userListRoutes","SystemSetupList","Router","AuthGuard","MatxLayout","RedirectRoute","useRoutes","componentStack","OktaAuth","config","App","timer","performance","mark","clearTimeout","ErrorBoundary","FallbackComponent","Fallback","onReset","store","MatxTheme","Security","restoreOriginalUri","onAuthRequired","widget","hasOnLoadRun","addEvent","warn","_window$widget","_window$widget$body","requirejs","PlatformAPI","rootElement","getElementById","createElement","appendChild","ReactDOM","StyledEngineProvider","injectFirst","BrowserRouter","start","axios","create","interceptors","request","use","Authorization","Promise","reject","_error$response","getMyReport","deleteReport","fileName","selectedMCODetailsResponse","SaaSExecutionService","searchCA","filters","searchCAPayload","searchPattern","getCARelatedMco","payloadBody","ca_id","searchMCO","getMCOdetailById","mco_id","mcoPropeties","updateMCOdetails","validationByMcoId","resolve","pass","getItemDetailsByMcoId","getBomDetailsByMcoId","changeStateByMcoId","nextState","routeStart","routeId","Operation","Headers","securityContext","senderID","TargetID","BusinessGroup","Requestdata","Error","getTaskList","taskApproval","taskId","dataelements","routeTaskApprovalComments","routeTaskDueDate","routeTaskApprovalAction","updateAction","client_id","client_secret","updateMCOData","ApproveCAMCO","currentStatus","getDataForClassificationyMCONames","validData","formattedResponse","_item$mcoPropeties","updateMCOObjects","getRSMEList","getRMEList","updateMRpartList","getSpecDetailsByMcoId","getMcoPropertyDetails","mcoName","isBasics","this","getMRbyPartAndPlant","getSourcePlantTemplate","getMRRelatedDetailsbyid","getLifeCycleStatusByMCOName","getMcoDetailsByName","getattributesbyid","updateattributesbyid","sendMCO","payloadData","OnPremExecutionService","getGlobalData","_StoreDetails$globalD","StoreDetails","getState","searchMCO_old","mcoNames","names","executionClass","getInstanceDetail","getMuleToken","sendAutoReleaseMCOs","addattributes","mcoStatusValidation","updatePartListAndAttributes","updatePartListAndAddAttributes","getTemplateDetails","getPlantData","getSourceData","getMappingsData","itemvalidationbymcoid","BOMvalidationbymcoid","updateFinalAcksDetails","callLoggingInfo","getERPStatus","mcoRuleValidation","addMRRelatedDetails","updateMRRelatedDetails","getMRForCAbyPartAndPlant","getChildPartDetails","getMRDetailsByPartName","updateLifeCycleStatus","searchSpecCreationbyKey","resendSpecCreation","searchObsoletePartbyKey","resendObsoletePart","bulkUploadPartAndTemplate","exportMCOData","fileUrl","filePath","fetch","method","ok","fileBlob","blob","downloadUrl","URL","createObjectURL","link","click","revokeObjectURL","exportTableData","getMcoHistorybyid","getSystemSettingsbyid"],"sourceRoot":""}