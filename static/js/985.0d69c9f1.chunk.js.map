{"version":3,"file":"static/js/985.0d69c9f1.chunk.js","mappings":"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","sources":["app/components/Footer.jsx","app/components/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/components/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/components/MatxCustomizer/BadgeSelected.jsx","app/components/MatxCustomizer/MatxCustomizer.jsx","app/components/SecondarySidebar/SecondarySidebarContent.jsx","app/components/SecondarySidebar/SecondarySidebar.jsx","app/components/Brand.jsx","app/navigations.js","app/components/Sidenav.jsx","app/components/MatxLayout/Layout1/Layout1Sidenav.jsx","app/components/MatxLayout/Layout1/selectGlobalValuesDialog.jsx","app/components/MatxLayout/Layout1/Layout1Topbar.jsx","app/components/MatxLayout/Layout1/Layout1.jsx"],"sourcesContent":["import { AppBar, ThemeProvider, Toolbar } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { topBarHeight } from 'app/utils/constant';\r\n\r\nconst AppFooter = styled(Toolbar)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  minHeight: topBarHeight,\r\n  '@media (max-width: 499px)': {\r\n    display: 'table',\r\n    width: '100%',\r\n    minHeight: 'auto',\r\n    padding: '1rem 0',\r\n    '& .container': {\r\n      flexDirection: 'column !important',\r\n      '& a': { margin: '0 0 16px !important' },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Footer = () => {\r\n  const theme = useTheme();\r\n  const { settings } = useSettings();\r\n\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n\r\n  return (\r\n    <ThemeProvider theme={footerTheme}>\r\n      <AppBar color=\"primary\" position=\"static\" sx={{ zIndex: 96 }}>\r\n        <AppFooter>\r\n          {/* Footer content */}\r\n        </AppFooter>\r\n      </AppBar>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { ThemeProvider, useTheme } from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\n\r\nconst SidenavTheme = ({ children }) => {\r\n  const theme = useTheme();\r\n  const { settings } = useSettings();\r\n  const sidenavTheme = settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n\r\n  return <ThemeProvider theme={sidenavTheme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import { ThemeProvider } from '@mui/material';\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\nexport default SecondarySidenavTheme;\r\n","import { Badge, styled } from '@mui/material';\r\n\r\nconst BadgeSelected = styled(Badge)(() => ({\r\n  top: '0',\r\n  right: '0',\r\n  height: '32px',\r\n  width: '32px',\r\n  borderRadius: '50%',\r\n}));\r\n\r\nexport default BadgeSelected;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Drawer,\r\n  Icon,\r\n  IconButton,\r\n  styled,\r\n  ThemeProvider,\r\n  Tooltip,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { Fragment, useState } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\nimport { themeShadows } from '../MatxTheme/themeColors';\r\nimport { H5, Span } from '../Typography';\r\nimport BadgeSelected from './BadgeSelected';\r\n\r\nconst Label = styled(Span)(({ theme }) => ({\r\n  fontWeight: 700,\r\n  fontSize: '1rem',\r\n  cursor: 'pointer',\r\n  borderRadius: '4px',\r\n  marginBottom: '2.5rem',\r\n  letterSpacing: '1.5px',\r\n  padding: '.25rem .5rem',\r\n  transform: 'rotate(90deg)',\r\n  color: theme.palette.secondary.main,\r\n  backgroundColor: theme.palette.primary.dark,\r\n  '&:hover, &.open': {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: theme.palette.secondary.contrastText,\r\n  },\r\n}));\r\n\r\nconst MaxCustomaizer = styled('div')(({ theme }) => ({\r\n  top: 0,\r\n  right: 0,\r\n  zIndex: 50,\r\n  width: 320,\r\n  display: 'flex',\r\n  height: '100vh',\r\n  position: 'fixed',\r\n  paddingBottom: '32px',\r\n  flexDirection: 'column',\r\n  boxShadow: themeShadows[12],\r\n  background: theme.palette.background.default,\r\n  '& .helpText': { margin: '0px .5rem 1rem' },\r\n}));\r\n\r\nconst LayoutBox = styled(BadgeSelected)(() => ({\r\n  width: '100%',\r\n  height: '152px !important',\r\n  cursor: 'pointer',\r\n  marginTop: '12px',\r\n  marginBottom: '12px',\r\n  '& .layout-name': { display: 'none' },\r\n  '&:hover .layout-name': {\r\n    zIndex: 12,\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'absolute',\r\n    justifyContent: 'center',\r\n    background: 'rgba(0,0,0,0.3)',\r\n  },\r\n}));\r\n\r\nconst Controller = styled('div')(() => ({\r\n  minHeight: 58,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  marginBottom: '16px',\r\n  padding: '14px 20px',\r\n  boxShadow: themeShadows[6],\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nconst IMG = styled('img')(() => ({ width: '100%' }));\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n  paddingLeft: '16px',\r\n  paddingRight: '16px',\r\n}));\r\n\r\nconst MatxCustomizer = () => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n  const [tabIndex, setTabIndex] = useState(0);\r\n  const { settings, updateSettings } = useSettings();\r\n  const secondary = theme.palette.text.secondary;\r\n\r\n  const tooglePanel = () => setOpen(!open);\r\n\r\n  const handleTabChange = (index) => setTabIndex(index);\r\n\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n        <Label className=\"open\" onClick={tooglePanel}>\r\n          DEMOS\r\n        </Label>\r\n      </Tooltip>\r\n\r\n      <ThemeProvider theme={activeTheme}>\r\n        <Drawer\r\n          open={open}\r\n          anchor=\"right\"\r\n          variant=\"temporary\"\r\n          onClose={tooglePanel}\r\n          ModalProps={{ keepMounted: true }}\r\n        >\r\n          <MaxCustomaizer>\r\n            <Controller>\r\n              <Box display=\"flex\">\r\n                <Icon className=\"icon\" color=\"primary\">\r\n                  settings\r\n                </Icon>\r\n                <H5 sx={{ ml: 1, fontSize: '1rem' }}>Theme Settings</H5>\r\n              </Box>\r\n\r\n              <IconButton onClick={tooglePanel}>\r\n                <Icon className=\"icon\">close</Icon>\r\n              </IconButton>\r\n            </Controller>\r\n\r\n            <Box px={3} mb={2} display=\"flex\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => handleTabChange(0)}\r\n                color={tabIndex === 0 ? 'secondary' : 'primary'}\r\n                sx={{ mr: 2 }}\r\n              >\r\n                Demos\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={() => handleTabChange(1)}\r\n                color={tabIndex === 1 ? 'secondary' : 'primary'}\r\n              >\r\n                Settings\r\n              </Button>\r\n            </Box>\r\n\r\n            <StyledScrollBar options={{ suppressScrollX: true }}>\r\n              {tabIndex === 0 && (\r\n                <Box sx={{ mb: 4, mx: 3 }}>\r\n                  <Box sx={{ color: secondary }}>Layouts</Box>\r\n\r\n                  <Box display=\"flex\" flexDirection=\"column\">\r\n                    {demoLayouts.map((layout) => (\r\n                      <LayoutBox\r\n                        key={layout.name}\r\n                        color=\"secondary\"\r\n                        badgeContent={'Pro'}\r\n                        invisible={!layout.isPro}\r\n                      >\r\n                        <Card\r\n                          elevation={4}\r\n                          sx={{ position: 'relative' }}\r\n                          onClick={() => updateSettings(layout.options)}\r\n                        >\r\n                          <Box sx={{ overflow: 'hidden' }} className=\"layout-name\">\r\n                            <Button variant=\"contained\" color=\"secondary\">\r\n                              {layout.name}\r\n                            </Button>\r\n                          </Box>\r\n\r\n                          <IMG src={layout.thumbnail} alt={layout.name} />\r\n                        </Card>\r\n                      </LayoutBox>\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n\r\n              {/* END LAYOUT */}\r\n              {tabIndex === 1 && (\r\n                <div>\r\n                  <div className=\"helpText\">\r\n                    We used React context API to control layout. Check out the{' '}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </StyledScrollBar>\r\n          </MaxCustomaizer>\r\n        </Drawer>\r\n      </ThemeProvider>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst demoLayouts = [\r\n  {\r\n    isPro: false,\r\n    name: 'Light Sidebar',\r\n    thumbnail: '/assets/images/screenshots/layout1-customizer.png',\r\n    options: {\r\n      activeTheme: 'blue',\r\n      activeLayout: 'layout1',\r\n      layout1Settings: {\r\n        topbar: { theme: 'blueDark', fixed: true },\r\n        leftSidebar: { mode: 'full', theme: 'whiteBlue', bgOpacity: 0.98 },\r\n      },\r\n      footer: { theme: 'slateDark1' },\r\n    },\r\n  },\r\n  {\r\n    isPro: false,\r\n    name: 'Compact Sidebar',\r\n    thumbnail: '/assets/images/screenshots/layout5-customizer.png',\r\n    options: {\r\n      activeTheme: 'blue',\r\n      activeLayout: 'layout1',\r\n      layout1Settings: {\r\n        topbar: { theme: 'whiteBlue', fixed: true },\r\n        leftSidebar: { mode: 'compact', theme: 'slateDark1', bgOpacity: 0.92 },\r\n      },\r\n    },\r\n  },\r\n  {\r\n    isPro: false,\r\n    name: 'Dark Sidebar',\r\n    thumbnail: '/assets/images/screenshots/layout1-blue-customizer.png',\r\n    options: {\r\n      activeTheme: 'blue',\r\n      activeLayout: 'layout1',\r\n      layout1Settings: {\r\n        topbar: { theme: 'blueDark', fixed: true },\r\n        leftSidebar: { mode: 'full', theme: 'slateDark1', bgOpacity: 0.92 },\r\n      },\r\n    },\r\n  },\r\n];\r\n\r\nexport default MatxCustomizer;\r\n","import { Icon, IconButton } from '@mui/material';\r\nimport { styled, useTheme } from '@mui/system';\r\nimport { Chatbox, ChatHead } from 'app/components';\r\nimport MatxCustomizer from '../MatxCustomizer/MatxCustomizer';\r\n// import ShoppingCart from '../ShoppingCart';\r\nimport { Span } from '../Typography';\r\n\r\nconst SidebarRoot = styled('div')(({ theme, width }) => ({\r\n  position: 'fixed',\r\n  height: '100vh',\r\n  width: width,\r\n  right: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  boxShadow: theme.shadows[8],\r\n  backgroundColor: theme.palette.primary.main,\r\n  zIndex: 98,\r\n  transition: 'all 0.15s ease',\r\n  color: theme.palette.text.primary,\r\n  '@global': {\r\n    '@media screen and (min-width: 767px)': {\r\n      '.content-wrap, .layout2.layout-contained, .layout2.layout-full': {\r\n        marginRight: (props) => props.width,\r\n      },\r\n      '.matx-customizer': {\r\n        right: (props) => props.width,\r\n      },\r\n    },\r\n    '@media screen and (max-width: 959px)': {\r\n      '.toolbar-menu-wrap .menu-area': {\r\n        width: (props) => `calc(100% - ${props.width})`,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SecondarySidebarContent = () => {\r\n  const { palette } = useTheme();\r\n  const textColor = palette.primary.contrastText;\r\n  return (\r\n    <SidebarRoot width={'50px'} className=\"secondary-sidebar\">\r\n      <Span sx={{ m: 'auto' }}></Span>\r\n      <MatxCustomizer />\r\n      {/* <ShoppingCart /> */}\r\n\r\n      <ChatHead\r\n        icon={\r\n          <IconButton sx={{ my: '12px', color: textColor }} size=\"small\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n        }\r\n      >\r\n        <Chatbox />\r\n      </ChatHead>\r\n      <Span sx={{ m: 'auto' }}></Span>\r\n    </SidebarRoot>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebarContent;\r\n","import useSettings from 'app/hooks/useSettings';\r\nimport SecondarySidenavTheme from '../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme';\r\nimport SecondarySidebarContent from './SecondarySidebarContent';\r\n\r\nconst SecondarySidebar = () => {\r\n  const { settings } = useSettings();\r\n  const secondarySidebarTheme = settings.themes[settings.secondarySidebar.theme];\r\n\r\n  return (\r\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n      {settings.secondarySidebar.open && <SecondarySidebarContent />}\r\n      {/* <SecondarySidebarToggle /> */}\r\n    </SecondarySidenavTheme>\r\n  );\r\n};\r\n\r\nexport default SecondarySidebar;\r\n","import { Box, styled } from '@mui/material';\r\nimport clsx from 'clsx'\r\n\r\nimport Emerson from '../../assets/images/emerson.png'\r\n\r\nconst BrandRoot = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  padding: '20px 18px 20px 29px',\r\n}));\r\n\r\nconst Brand = ({ children }) => {\r\n  return (\r\n    <div\r\n      className={clsx('flex items-center justify-between')}\r\n      style={{ padding: '20px 18px 20px 29px' }}\r\n    >\r\n      <div className=\"flex items-center\" style={{ textAlign: 'center' }}>\r\n        {/* <MatxLogo /> */}\r\n        {/* <span\r\n                className={clsx({\r\n                    'text-18  font-medium sidenavHoverShow': true,\r\n                    [classes.hideOnCompact]: mode === 'compact',\r\n                })}\r\n            > */}\r\n        {/* Emerson eee */}\r\n        <img alt='Emerson' src={Emerson} style={{ width: \"150px\", height: 'auto' }} />\r\n        {/* </span> */}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Brand;\r\n","export const commonNavigations = [\r\n  {\r\n    name: 'Search',\r\n    icon: 'launch',\r\n    children: [ \r\n      { name: \"Eng CA / MECO\", path: \"/calist\" },\r\n      { name: \"MCO\", path: \"/mcolist\" },\r\n      { name: \"Spec\", path: \"/specCreationList\" },\r\n    ] \r\n  },   \r\n  { name: \"Status - Part Obsolescence\", path: \"/obsoletePartList\" },\r\n  { name: \"Mass Update Part Description\", iconText: \"SI\", path: \"massUpdate\", type: \"popup\" },\r\n  { name: \"My Report\", iconText: \"SI\", path: \"/myreport\" }\r\n];\r\n\r\nexport const navigations = [\r\n  {\r\n    name: 'Admin General Properties',\r\n    icon: 'launch',\r\n    children: [\r\n      { name: \"Template\", path: \"/template\" },\r\n      { name: \"Plant\", path: \"/plants\" },\r\n      { name: \"Source\", path: \"/sourceList\" },\r\n      { name: \"Design Organization\", path: \"/BUList\" },\r\n      { \r\n        name: \"Export All Admin General Properties\",\r\n        path: \"exportAllAdminGeneralProperties\", \r\n        type: \"popup3\" \r\n      }\r\n    ]\r\n  },  \r\n  {\r\n    name: 'Admin RDO Properties',\r\n    icon: 'launch',\r\n    children: [      \r\n      {\r\n        name: \"RDO Plant Mapping\", //BU to RDO\r\n        iconText: \"SI\",\r\n        path: \"/buplantList\",\r\n      },\r\n      {\r\n        name: 'MVO Template Compatibility',\r\n        iconText: 'SI',\r\n        path: '/mvotemplateList'\r\n      },\r\n      {\r\n        name: \"MVO Allowed Changes \",\r\n        iconText: \"SI\",\r\n        path: \"/mvoallowedchangesList\",\r\n      },\r\n      {\r\n        name: \"Part Type to Template\",\r\n        iconText: \"SI\",\r\n        path: \"/parttypeToTemplateList\",\r\n      },\r\n      {\r\n        name: 'Org Allowed Templates',\r\n        iconText: 'SI',\r\n        path: \"/orgallowedList\",\r\n      },\r\n      {\r\n        name: \"Set Compatible Templates\",\r\n        iconText: \"SI\",\r\n        path: \"/setcomptempList\",\r\n      },\r\n      {\r\n        name: \"Expense Mapping\",\r\n        iconText: \"SI\",\r\n        path: \"/expensemapList\",\r\n      },\r\n      { \r\n        name: \"Export All RDO Properties\",\r\n        path: \"exportAll\", \r\n        type: \"popup2\" \r\n      },\r\n      { name: \"Draft Property Changes\", path: \"/draftChanges\" },\r\n      { name: \"History Property Changes\", path: \"/history\" }\r\n    ],\r\n  },\r\n  {\r\n    name: 'Admin System Setups',\r\n    icon: 'launch',\r\n    children: [ \r\n      { name: \"Users\", path: \"/userList\" },  ,\r\n      { name: \"System Setup\", path: \"/systemSetup\" },\r\n      { \r\n        name: \"Export All Admin System\",\r\n        path: \"exportAllAdminSystemSetups\", \r\n        type: \"popup6\" \r\n      }\r\n    ]\r\n  },  \r\n];\r\n\r\n","import { styled } from '@mui/system';\r\nimport { MatxVerticalNav } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { commonNavigations, navigations } from 'app/navigations';\r\nimport React, { Fragment } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n  paddingLeft: '1rem',\r\n  paddingRight: '1rem',\r\n  position: 'relative',\r\n}));\r\n\r\nconst SideNavMobile = styled('div')(({ theme }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  bottom: 0,\r\n  right: 0,\r\n  width: '100vw',\r\n  background: 'rgba(0, 0, 0, 0.54)',\r\n  zIndex: -1,\r\n  [theme.breakpoints.up('md')]: { display: 'none' },\r\n}));\r\n\r\nconst Sidenav = ({ children }) => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const { userDetails } = useOracleSettings();\r\n  const { authState } = useOktaAuth();\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    let activeLayoutSettingsName = settings.activeLayout + 'Settings';\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    updateSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledScrollBar options={{ suppressScrollX: true }}>\r\n        {children}\r\n        <MatxVerticalNav items={commonNavigations} />\r\n        {/* <MatxVerticalNav items={navigations} /> */}\r\n        {\r\n          (authState?.isAuthenticated) ? (<>\r\n            {(userDetails?.userinfo?.includes(\"admin\")) ? (<MatxVerticalNav items={navigations} />) : (<></>)}\r\n            {/* {(authState?.idToken?.claims?.userinfo?.includes(\"admin\")) ? (<MatxVerticalNav items={navigations} />) : (<></>)} */}\r\n          </>) : (<></>)\r\n        }\r\n      </StyledScrollBar>\r\n\r\n      <SideNavMobile onClick={() => updateSidebarMode({ mode: 'close' })} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(Sidenav);\r\n","import { Box, styled, useTheme } from '@mui/system';\r\n// import { Hidden, Switch } from '@mui/material';\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\r\nimport { convertHexToRGB } from 'app/utils/utils';\r\nimport React from 'react';\r\nimport Brand from '../../Brand';\r\nimport Sidenav from '../../Sidenav';\r\n\r\nconst SidebarNavRoot = styled(Box)(({ theme, width, primarybg, bgimgurl }) => ({\r\n  position: 'fixed',\r\n  top: 0,\r\n  left: 0,\r\n  height: '100vh',\r\n  width: width,\r\n  boxShadow: themeShadows[8],\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundPosition: 'top',\r\n  backgroundSize: 'cover',\r\n  zIndex: 111,\r\n  overflow: 'hidden',\r\n  color: theme.palette.text.primary,\r\n  transition: 'all 250ms ease-in-out',\r\n  backgroundImage: `linear-gradient(to bottom, rgba(${primarybg}, 0.96), rgba(${primarybg}, 0.96)), url(${bgimgurl})`,\r\n  '&:hover': {\r\n    width: sideNavWidth,\r\n    '& .sidenavHoverShow': {\r\n      display: 'block',\r\n    },\r\n    '& .compactNavItem': {\r\n      width: '100%',\r\n      maxWidth: '100%',\r\n      '& .nav-bullet': {\r\n        display: 'block',\r\n      },\r\n      '& .nav-bullet-text': {\r\n        display: 'none',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst NavListBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n}));\r\n\r\nconst Layout1Sidenav = () => {\r\n  const theme = useTheme();\r\n  const { settings } = useSettings();\r\n  const leftSidebar = settings.layout1Settings.leftSidebar;\r\n  const { mode, bgimgurl } = leftSidebar;\r\n\r\n  const getSidenavWidth = () => {\r\n    switch (mode) {\r\n      case 'compact':\r\n        return sidenavCompactWidth;\r\n      default:\r\n        return sideNavWidth;\r\n    }\r\n  };\r\n  const primaryRGB = convertHexToRGB(theme.palette.primary.main);\r\n\r\n  // const updateSidebarMode = (sidebarSettings) => {\r\n  //   updateSettings({\r\n  //     layout1Settings: {\r\n  //       leftSidebar: {\r\n  //         ...sidebarSettings,\r\n  //       },\r\n  //     },\r\n  //   });\r\n  // };\r\n  // const handleSidenavToggle = () => {\r\n  //   updateSidebarMode({ mode: mode === 'compact' ? 'full' : 'compact' });\r\n  // };\r\n  // console.log(\"called Layout1Sidenav\");\r\n  return (\r\n    <SidebarNavRoot bgimgurl={bgimgurl} primarybg={primaryRGB} width={getSidenavWidth()}>\r\n      <NavListBox>\r\n        <Brand>\r\n          {/* <Hidden smDown>\r\n            <Switch\r\n              onChange={handleSidenavToggle}\r\n              checked={leftSidebar.mode !== 'full'}\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n            />\r\n          </Hidden> */}\r\n        </Brand>\r\n        <Sidenav />\r\n      </NavListBox>\r\n    </SidebarNavRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1Sidenav);\r\n","\r\nimport React from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport { Grid, Button, MenuItem, Select } from '@mui/material';\r\n//import Button from '@mui/material/Button';\r\nimport { InstanceOptions } from \"app/views/adminConfig/common\"\r\n//import CustomSelect from \"../../../components/CustomSelect.jsx\";\r\nconst SelectcGlobalValues = ({\r\n    showGlobalInstanceSelection,\r\n    updateGlobalInstanceValue,\r\n    bussinessUnit,\r\n    bussinessUnitLists,\r\n    //setBussinessUnit,\r\n    instance,\r\n    handleSelectChange,\r\n    errorMsg\r\n}) => {\r\n\r\n    return (\r\n        <Dialog open={showGlobalInstanceSelection}\r\n            fullWidth={true}\r\n            maxWidth='sm'>\r\n            <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n                Select Site Credentials\r\n            </DialogTitle>\r\n            <DialogContent container spacing={3} alignItems=\"center\">\r\n                <DialogContentText>\r\n                    <Grid container item md={12} sm={12} xs={12} className=\"font-medium\">\r\n                        <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n                            <span>Design Organization:</span>\r\n                        </Grid>\r\n                        <Grid item md={8} sm={6} xs={12}>\r\n                            {/* <CustomSelect\r\n                                    selectedvalue={bussinessUnit}\r\n                                    style={{ width: \"100%\" }}\r\n                                    size=\"small\"\r\n                                    // optionsValues={BUOptions}\r\n                                    defaultValue={bussinessUnit ? bussinessUnit : \"\"}\r\n                                    onChangeFunc={(selectedOptionValue) => {\r\n                                        setBussinessUnit(selectedOptionValue);\r\n                                        console.log(selectedOptionValue, 'selectedOptionValue')\r\n                                        //handleSelectChange()\r\n                                    }}\r\n                                /> */}\r\n                            <Select\r\n                                labelId=\"bussinessUnit\"\r\n                                id=\"bussinessUnit\"\r\n                                name=\"bussinessUnit\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                style={{ width: \"100%\" }} // Set the width here\r\n                                value={bussinessUnit ? bussinessUnit : ''}\r\n                                onChange={handleSelectChange}\r\n                            >\r\n                                {bussinessUnitLists?.map((option) => (\r\n                                    <MenuItem key={option.buName} value={option.buName}>\r\n                                        {option.buName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n\r\n                        <Grid item md={4} sm={6} xs={12} className=\"font-medium\">\r\n                            <span>Select Instance:</span>\r\n                        </Grid>\r\n                        <Grid item md={8} sm={6} xs={12}>\r\n                            <Select\r\n                                labelId=\"Instance\"\r\n                                id=\"Instance\"\r\n                                name=\"Instance\"\r\n                                size=\"small\"\r\n                                fullWidth\r\n                                style={{ width: \"100%\" }} // Set the width here\r\n                                value={instance ? instance : ''}\r\n                                onChange={handleSelectChange}\r\n                            >\r\n                                {InstanceOptions.map((option) => (\r\n                                    <MenuItem key={option.value} value={option.value}>\r\n                                        {option.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {errorMsg !== '' && (<span style={{ color: 'red' }}>{errorMsg}</span>)}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={updateGlobalInstanceValue} color='secondary' size='large'>Save</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n}\r\nexport default SelectcGlobalValues","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, Hidden, Icon, IconButton, MenuItem, useMediaQuery } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { MatxMenu } from 'app/components';\r\nimport { themeShadows } from 'app/components/MatxTheme/themeColors';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { topBarHeight } from 'app/utils/constant';\r\nimport { Span } from '../../../components/Typography';\r\n\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nimport { useOktaAuth } from '@okta/okta-react';\r\nimport useOracleSettings from \"app/hooks/useOracleSettings\";\r\n\r\nimport left from '../../../../assets/images/left.png';\r\nimport right from '../../../../assets/images/right.png';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SelectcGlobalValues from \"./selectGlobalValuesDialog\"\r\nimport { updateGlobalBUandInstance } from \"app/redux/actions/GlobalBUandInstanceAction\";\r\nimport CustomAlertBox from \"app/components/McoPages/CustomAlertBox\";\r\nimport NavigationControls from \"app/components/NavigationControls\";\r\nimport { BUService } from \"services/buService\";\r\nimport \"./TopBar.css\";\r\n\r\nconst StyledIconButton = styled(IconButton)(({ theme }) => ({\r\n  color: theme.palette.text.primary,\r\n}));\r\n\r\nconst TopbarRoot = styled('div')(({ theme }) => ({\r\n  top: 0,\r\n  zIndex: 96,\r\n  transition: 'all 0.3s ease',\r\n  boxShadow: themeShadows[8],\r\n  height: topBarHeight,\r\n}));\r\n\r\nconst TopbarContainer = styled(Box)(({ theme }) => ({\r\n  padding: '8px',\r\n  paddingLeft: 18,\r\n  paddingRight: 20,\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'space-between',\r\n  background: theme.palette.primary.main,\r\n  [theme.breakpoints.down('sm')]: {\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n  },\r\n  [theme.breakpoints.down('xs')]: {\r\n    paddingLeft: 14,\r\n    paddingRight: 16,\r\n  },\r\n}));\r\n\r\nconst UserMenu = styled(Box)(() => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  borderRadius: 24,\r\n  padding: 4,\r\n  '& span': { margin: '0 8px' },\r\n}));\r\n\r\nconst StyledItem = styled(MenuItem)(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  minWidth: 185,\r\n  '& a': {\r\n    width: '100%',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n  },\r\n  '& span': { marginRight: '10px', color: theme.palette.text.primary },\r\n}));\r\n\r\n// const IconBox = styled('div')(({ theme }) => ({\r\n//   display: 'inherit',\r\n//   [theme.breakpoints.down('md')]: { display: 'none !important' },\r\n// }));\r\n\r\nconst Layout1Topbar = () => {\r\n  const {\r\n    bu: mcoBu,\r\n    instance: mcoInstance,\r\n    systemName: mcoSystemName\r\n  } = useSelector((state) => state.globalBUandInstance);\r\n  const location = useLocation();\r\n\r\n  const buService = new BUService();\r\n  const { userDetails, bussinessUnitLists, bussinessUnit: bussinessUnitContectValue, updateBussinessUnitLists, updateBussinessUnit } = useOracleSettings();\r\n  const theme = useTheme();\r\n  const { settings, updateSettings } = useSettings();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n  const { authState, oktaAuth } = useOktaAuth();\r\n  const dispatch = useDispatch();\r\n  const [bussinessUnit, setBussinessUnit] = useState('')\r\n  const [instance, setInstance] = useState('')\r\n  const [systemName, setSystemName] = useState(localStorage.getItem('systemName'));\r\n  const [currPathname, setCurrPathname] = useState(null);\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [openDesc, setOpenDesc] = useState(null);\r\n\r\n  const logout = async () => {\r\n    try {\r\n      if (authState.isAuthenticated) {\r\n        // unset the global instance\r\n        let data = {\r\n          bu: '',\r\n          instance: ''\r\n        }\r\n        dispatch(updateGlobalBUandInstance(data));\r\n        localStorage.removeItem('bussinessUnit')\r\n        localStorage.removeItem('instance')\r\n        // await oktaAuth.signOut();\r\n        await oktaAuth.signOut({\r\n          postLogoutRedirectUri: window.location.origin,\r\n        });\r\n      }\r\n      // handle successful authentication here\r\n    } catch (error) {\r\n      // handle error appropriately, e.g., display error message or redirect to login page\r\n    }\r\n  };\r\n\r\n  const updateSidebarMode = (sidebarSettings) => {\r\n    updateSettings({\r\n      layout1Settings: { leftSidebar: { ...sidebarSettings } },\r\n    });\r\n  };\r\n\r\n  const handleSidebarToggle = () => {\r\n    let { layout1Settings } = settings;\r\n    let mode;\r\n    if (isMdScreen) {\r\n      mode = layout1Settings.leftSidebar.mode === 'close' ? 'mobile' : 'close';\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === 'full' ? 'close' : 'full';\r\n    }\r\n    updateSidebarMode({ mode });\r\n  };\r\n\r\n  const [showGlobalInstanceSelection, setShowGlobalInstanceSelection] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  useEffect(() => {\r\n    let bu = localStorage.getItem('bussinessUnit');\r\n    let inst = localStorage.getItem('instance');\r\n\r\n    setCurrPathname(location?.pathname);\r\n\r\n    if (!bu || !inst) {\r\n      if (!location?.pathname?.includes(\"mcodetail\")) {\r\n        setShowGlobalInstanceSelection(true);\r\n      }\r\n      if (!bu) {\r\n        updateBussinessUnit(null);\r\n      }\r\n    }\r\n    if (bu) {\r\n      setBussinessUnit(bu);\r\n      updateBussinessUnit(bu);\r\n    }\r\n    if (inst) {\r\n      setInstance(inst);\r\n    }\r\n\r\n    // if (!bu || !inst) {\r\n    //   // manually set value\r\n    //   // localStorage.setItem('bussinessUnit', \"Micro Motion\");\r\n    //   // localStorage.setItem('instance', \"onPrem\");\r\n\r\n    //   // setBussinessUnit(\"Micro Motion\");\r\n    //   // setInstance(\"onPrem\");\r\n\r\n    //   // let data = {\r\n    //   //   bu: \"Micro Motion\",\r\n    //   //   instance: \"onPrem\"\r\n    //   // }\r\n    //   // dispatch(updateGlobalBUandInstance(data));\r\n    // } else {\r\n\r\n    // }\r\n    // if (bussinessUnitLists?.length === 0) {\r\n    // }\r\n    buService.getAllBuList().then((result) => {\r\n      updateBussinessUnitLists(result.data)\r\n    });\r\n  }, [location?.pathname, mcoInstance]);\r\n\r\n  const isMcoPage = () => {\r\n    if (location?.pathname?.includes(\"mcodetail\")) {\r\n      setOpenAlert(true);\r\n      setOpenDesc({\r\n        severity: \"error\",\r\n        desc: \"Oops! This action was restricted in MCO details.\",\r\n      });\r\n      setShowGlobalInstanceSelection(false);\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  const updateGlobalInstanceValue = () => {\r\n    if (!isMcoPage()) return false;\r\n\r\n    if (!bussinessUnit || !instance) {\r\n      setErrorMsg('Please select RDO and Instance from dropdown')\r\n      console.info('global values is not selected 11')\r\n    } else {\r\n      let data = {\r\n        bu: bussinessUnit,\r\n        instance: instance\r\n      }\r\n      dispatch(updateGlobalBUandInstance(data));\r\n      localStorage.setItem('bussinessUnit', bussinessUnit);\r\n      localStorage.setItem('instance', instance);\r\n      setErrorMsg('')\r\n      setShowGlobalInstanceSelection(false);\r\n\r\n      updateBussinessUnit(bussinessUnit);\r\n    }\r\n  }\r\n  const handleSelectChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (!isMcoPage()) return false;\r\n\r\n    console.log(value, 'target value')\r\n    if (name === 'Instance') {\r\n      setInstance(value)\r\n    }\r\n    if (name === 'bussinessUnit') {\r\n      setBussinessUnit(value);\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    const handleStorageChange = (event) => {\r\n      if (event.key === 'systemName') {\r\n        setSystemName(event.newValue);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('systemName', handleStorageChange);\r\n\r\n    // Cleanup the event listener on component unmount\r\n    return () => {\r\n      window.removeEventListener('systemName', handleStorageChange);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // This effect will run whenever `businessUnit` changes\r\n    console.log('systemName changed:', systemName);\r\n    console.log('settings changed:', settings);\r\n    // do something with the new businessUnit value\r\n  }, [systemName, settings]);\r\n\r\n  useEffect(() => {\r\n    if (bussinessUnitContectValue) {\r\n      setBussinessUnit(bussinessUnitContectValue);\r\n    }\r\n  }, [bussinessUnitContectValue]);\r\n\r\n  return (\r\n    <TopbarRoot>\r\n      <TopbarContainer>\r\n        <Box display=\"flex\">\r\n          <StyledIconButton onClick={handleSidebarToggle}>\r\n            {settings?.layout1Settings?.leftSidebar.mode === 'full' ? (\r\n              <img src={left} title='Hide' alt='hide' />\r\n            ) : (\r\n              <img src={right} title='Show' alt='show' />\r\n            )}\r\n          </StyledIconButton>\r\n\r\n          <div style={{ marginTop: '3px' }}>\r\n            <h4>MCO Management</h4>\r\n          </div>\r\n\r\n          {/* <IconBox>\r\n            <StyledIconButton>\r\n              <Icon>mail_outline</Icon>\r\n            </StyledIconButton>\r\n\r\n            <StyledIconButton>\r\n              <Icon>web_asset</Icon>\r\n            </StyledIconButton>\r\n\r\n            <StyledIconButton>\r\n              <Icon>star_outline</Icon>\r\n            </StyledIconButton>\r\n          </IconBox> */}\r\n        </Box>\r\n\r\n        {/* <Box display=\"flex\" alignItems=\"center\">\r\n          <NavigationControls />\r\n        </Box> */}\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {/* <MatxSearchBox />\r\n\r\n          <NotificationProvider>\r\n            <NotificationBar />\r\n          </NotificationProvider>\r\n\r\n          <ShoppingCart /> */}\r\n\r\n          <div className=\"topbar-user topbar-user-context\">\r\n            <div className=\"topbar-username\">{userDetails?.name}</div>\r\n            {\r\n              ((mcoBu && mcoBu !== \"\") || (instance && instance !== \"\")) ? (\r\n                <div className=\"font-3dsregular topbar-user-context-wrapper clickable\">\r\n                  {\r\n                    (mcoBu && mcoBu !== \"\" && currPathname?.includes(\"mcodetail\")) ? (\r\n                      <span className=\"topbar-user-context-text\">{mcoBu} ({mcoInstance} {(mcoSystemName) ? (`- ${mcoSystemName}`) : (null)})</span>\r\n                    ) : (\r\n                      <span className=\"topbar-user-context-text\">{bussinessUnit} {(instance && instance !== \"\") ? `(${instance})` : null}</span>\r\n                    )\r\n                  }\r\n                </div>\r\n              ) : (null)\r\n            }\r\n          </div>\r\n\r\n          <MatxMenu menuButton={\r\n            <UserMenu>\r\n              {/* <Hidden xsDown>\r\n                <Span><strong>{userDetails?.name}</strong></Span>\r\n              </Hidden> */}\r\n              <Avatar src=\"/assets/images/face-1.jpg\" sx={{ cursor: 'pointer' }} title={userDetails?.name} />\r\n            </UserMenu>\r\n          }>\r\n            <StyledItem>\r\n              <Link to=\"/calist\">\r\n                <Icon> home </Icon>\r\n                <Span> Home </Span>\r\n              </Link>\r\n            </StyledItem>\r\n            <StyledItem onClick={() => setShowGlobalInstanceSelection(true)}>\r\n              <Icon> settings </Icon>\r\n              <Span> My Credentials </Span>\r\n            </StyledItem>\r\n            {authState.isAuthenticated ? (<>\r\n              <StyledItem onClick={logout}>\r\n                <Icon> power_settings_new </Icon>\r\n                <Span> Logout</Span>\r\n              </StyledItem>\r\n            </>) : (<></>)}\r\n\r\n            {/* <StyledItem>\r\n              <Link to=\"/page-layouts/user-profile\">\r\n                <Icon> person </Icon>\r\n                <Span> Profile </Span>\r\n              </Link>\r\n            </StyledItem> */}\r\n\r\n            {/* <StyledItem>\r\n              <Icon> settings </Icon>\r\n              <Span> Settings </Span>\r\n            </StyledItem> */}\r\n\r\n            {/* <StyledItem onClick={logout}>\r\n              <Icon> power_settings_new </Icon>\r\n              <Span> Logout </Span>\r\n            </StyledItem> */}\r\n          </MatxMenu>\r\n\r\n          {/* <MatxSearchBox /> */}\r\n\r\n          <MatxMenu\r\n            menuButton={\r\n              <UserMenu>\r\n                <Hidden xsDown>\r\n                  <Span>\r\n                    Help\r\n                  </Span>\r\n                </Hidden>\r\n              </UserMenu>\r\n            }\r\n          >\r\n            {/* <StyledItem>\r\n              <Link to=\"/\">\r\n                <Span> User Guide/Training</Span>\r\n              </Link>\r\n            </StyledItem> */}\r\n\r\n            <StyledItem onClick={() => window.location.href = 'mailto:varaprasad.tuttupu@emerson.com'}>\r\n              <Span> Support/Feedback </Span>\r\n            </StyledItem>\r\n          </MatxMenu>\r\n        </Box>\r\n      </TopbarContainer>\r\n      <SelectcGlobalValues\r\n        showGlobalInstanceSelection={showGlobalInstanceSelection}\r\n        updateGlobalInstanceValue={updateGlobalInstanceValue}\r\n        bussinessUnit={bussinessUnit}\r\n        bussinessUnitLists={bussinessUnitLists}\r\n        setBussinessUnit={setBussinessUnit}\r\n        setInstance={setInstance}\r\n        instance={instance}\r\n        handleSelectChange={handleSelectChange}\r\n        errorMsg={errorMsg}\r\n      />\r\n      {\r\n        (openDesc) ? (\r\n          <CustomAlertBox openAlert={openAlert} openDesc={openDesc} setOpenAlert={setOpenAlert} />\r\n        ) : (<></>)\r\n      }\r\n    </TopbarRoot>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1Topbar);\r\n","import { ThemeProvider, useMediaQuery } from '@mui/material';\r\nimport { Box, styled, useTheme } from '@mui/system';\r\nimport { MatxSuspense } from 'app/components';\r\nimport useSettings from 'app/hooks/useSettings';\r\nimport { sidenavCompactWidth, sideNavWidth } from 'app/utils/constant';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Scrollbar from 'react-perfect-scrollbar';\r\nimport { Outlet } from 'react-router-dom';\r\nimport Footer from '../../Footer';\r\nimport SidenavTheme from '../../MatxTheme/SidenavTheme/SidenavTheme';\r\nimport SecondarySidebar from '../../SecondarySidebar/SecondarySidebar';\r\nimport Layout1Sidenav from './Layout1Sidenav';\r\nimport Layout1Topbar from './Layout1Topbar';\r\n\r\nconst Layout1Root = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  background: theme.palette.background.default,\r\n}));\r\n\r\nconst ContentBox = styled(Box)(() => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  overflowY: 'auto',\r\n  overflowX: 'hidden',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n}));\r\n\r\nconst StyledScrollBar = styled(Scrollbar)(() => ({\r\n  height: '100%',\r\n  position: 'relative',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n}));\r\n\r\nconst LayoutContainer = styled(Box)(({ width, secondarysidebar }) => ({\r\n  height: '100vh',\r\n  display: 'flex',\r\n  flexGrow: '1',\r\n  flexDirection: 'column',\r\n  verticalAlign: 'top',\r\n  marginLeft: width,\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n  transition: 'all 0.3s ease',\r\n  marginRight: secondarysidebar.open ? 50 : 0,\r\n}));\r\n\r\nconst Layout1 = () => {\r\n  const { settings, updateSettings } = useSettings();\r\n  const scrollbarRef = useRef(null);\r\n  const contentRef = useRef(null);\r\n  const { layout1Settings, secondarySidebar } = settings;\r\n  const topbarTheme = settings.themes[layout1Settings.topbar.theme];\r\n  const {\r\n    leftSidebar: { mode: sidenavMode, show: showSidenav },\r\n  } = layout1Settings;\r\n\r\n  const getSidenavWidth = () => {\r\n    switch (sidenavMode) {\r\n      case 'full':\r\n        return sideNavWidth;\r\n\r\n      case 'compact':\r\n        return sidenavCompactWidth;\r\n\r\n      default:\r\n        return '0px';\r\n    }\r\n  };\r\n\r\n  const sidenavWidth = getSidenavWidth();\r\n  const theme = useTheme();\r\n  const isMdScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n  const ref = useRef({ isMdScreen, settings });\r\n  const layoutClasses = `theme-${theme.palette.type}`;\r\n\r\n  useEffect(() => {\r\n    let { settings } = ref.current;\r\n    let sidebarMode = settings.layout1Settings.leftSidebar.mode;\r\n    if (settings.layout1Settings.leftSidebar.show) {\r\n      let mode = isMdScreen ? 'close' : sidebarMode;\r\n      updateSettings({ layout1Settings: { leftSidebar: { mode } } });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isMdScreen]);\r\n\r\n  useEffect(() => {\r\n    // Function to update the scrollbar\r\n    const updateScrollbar = () => {\r\n      if (scrollbarRef.current) {\r\n        scrollbarRef.current.updateScroll();\r\n      }\r\n    };\r\n\r\n    // Create a ResizeObserver to monitor changes in content height\r\n    const resizeObserver = new ResizeObserver(updateScrollbar);\r\n    if (contentRef.current) {\r\n      resizeObserver.observe(contentRef.current);\r\n    }\r\n\r\n    // Cleanup observer on component unmount\r\n    return () => resizeObserver.disconnect();\r\n  }, []);\r\n\r\n  return (\r\n    <Layout1Root className={layoutClasses}>\r\n      {showSidenav && sidenavMode !== 'close' && (\r\n        <SidenavTheme>\r\n          <Layout1Sidenav />\r\n        </SidenavTheme>\r\n      )}\r\n\r\n      <LayoutContainer width={sidenavWidth} secondarysidebar={secondarySidebar}>\r\n        {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n          <ThemeProvider theme={topbarTheme}>\r\n            <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n          </ThemeProvider>\r\n        )}\r\n\r\n        {settings.perfectScrollbar && (\r\n          <StyledScrollBar ref={scrollbarRef}>\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <ThemeProvider theme={topbarTheme}>\r\n                <Layout1Topbar />\r\n              </ThemeProvider>\r\n            )}\r\n\r\n            {/* Main content area */}\r\n            <Box ref={contentRef} flexGrow={1} position=\"relative\">\r\n              <MatxSuspense>\r\n                <Outlet />\r\n              </MatxSuspense>\r\n            </Box>\r\n\r\n            {/* Footer fixed at the bottom */}\r\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n          </StyledScrollBar>\r\n        )}\r\n\r\n\r\n        {!settings.perfectScrollbar && (\r\n          <ContentBox>\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <ThemeProvider theme={topbarTheme}>\r\n                <Layout1Topbar />\r\n              </ThemeProvider>\r\n            )}\r\n\r\n            <Box flexGrow={1} position=\"relative\">\r\n              <MatxSuspense>\r\n                <Outlet />\r\n              </MatxSuspense>\r\n            </Box>\r\n\r\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n          </ContentBox>\r\n        )}\r\n\r\n        {settings.footer.show && settings.footer.fixed && <Footer />}\r\n      </LayoutContainer>\r\n\r\n      {settings.secondarySidebar.show && <SecondarySidebar />}\r\n    </Layout1Root>\r\n  );\r\n};\r\n\r\nexport default React.memo(Layout1);\r\n"],"names":["AppFooter","styled","Toolbar","display","alignItems","minHeight","topBarHeight","width","padding","flexDirection","margin","Footer","theme","useTheme","settings","useSettings","footerTheme","themes","footer","_jsx","ThemeProvider","children","AppBar","color","position","sx","zIndex","_ref","sidenavTheme","layout1Settings","leftSidebar","classes","open","Badge","top","right","height","borderRadius","Label","Span","fontWeight","fontSize","cursor","marginBottom","letterSpacing","transform","palette","secondary","main","backgroundColor","primary","dark","contrastText","MaxCustomaizer","_ref2","paddingBottom","boxShadow","themeShadows","background","default","LayoutBox","BadgeSelected","marginTop","justifyContent","Controller","IMG","StyledScrollBar","Scrollbar","paddingLeft","paddingRight","demoLayouts","isPro","name","thumbnail","options","activeTheme","activeLayout","topbar","fixed","mode","bgOpacity","MatxCustomizer","setOpen","useState","tabIndex","setTabIndex","updateSettings","text","tooglePanel","handleTabChange","index","_jsxs","Fragment","Tooltip","title","placement","className","onClick","Drawer","anchor","variant","onClose","ModalProps","keepMounted","Box","Icon","H5","ml","IconButton","px","mb","Button","mr","suppressScrollX","mx","map","layout","badgeContent","invisible","Card","elevation","overflow","src","alt","SidebarRoot","bottom","shadows","transition","marginRight","props","SecondarySidebarContent","textColor","m","ChatHead","icon","my","size","Chatbox","SecondarySidebar","secondarySidebarTheme","secondarySidebar","SecondarySidenavTheme","clsx","style","textAlign","Emerson","commonNavigations","path","iconText","type","navigations","SideNavMobile","left","breakpoints","up","Sidenav","_userDetails$userinfo","userDetails","useOracleSettings","authState","useOktaAuth","MatxVerticalNav","items","isAuthenticated","_Fragment","userinfo","includes","sidebarSettings","activeLayoutSettingsName","activeLayoutSettings","updateSidebarMode","React","SidebarNavRoot","primarybg","bgimgurl","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","sideNavWidth","maxWidth","NavListBox","Layout1Sidenav","primaryRGB","convertHexToRGB","sidenavCompactWidth","Brand","showGlobalInstanceSelection","updateGlobalInstanceValue","bussinessUnit","bussinessUnitLists","instance","handleSelectChange","errorMsg","Dialog","fullWidth","DialogTitle","id","DialogContent","container","spacing","DialogContentText","Grid","item","md","sm","xs","Select","labelId","value","onChange","option","MenuItem","buName","InstanceOptions","label","DialogActions","StyledIconButton","TopbarRoot","TopbarContainer","_ref3","down","UserMenu","StyledItem","_ref4","minWidth","textDecoration","Layout1Topbar","_settings$layout1Sett","bu","mcoBu","mcoInstance","systemName","mcoSystemName","useSelector","state","globalBUandInstance","location","useLocation","buService","BUService","bussinessUnitContectValue","updateBussinessUnitLists","updateBussinessUnit","isMdScreen","useMediaQuery","oktaAuth","dispatch","useDispatch","setBussinessUnit","setInstance","setSystemName","localStorage","getItem","currPathname","setCurrPathname","openAlert","setOpenAlert","openDesc","setOpenDesc","setShowGlobalInstanceSelection","setErrorMsg","useEffect","inst","_location$pathname","pathname","getAllBuList","then","result","data","isMcoPage","_location$pathname2","severity","desc","handleStorageChange","event","key","newValue","window","addEventListener","removeEventListener","console","log","handleSidebarToggle","MatxMenu","menuButton","Avatar","Link","to","async","updateGlobalBUandInstance","removeItem","signOut","postLogoutRedirectUri","origin","error","Hidden","xsDown","href","SelectcGlobalValues","setItem","info","target","CustomAlertBox","Layout1Root","ContentBox","overflowY","overflowX","LayoutContainer","secondarysidebar","flexGrow","verticalAlign","marginLeft","Layout1","scrollbarRef","useRef","contentRef","topbarTheme","sidenavMode","show","showSidenav","sidenavWidth","getSidenavWidth","ref","layoutClasses","current","sidebarMode","resizeObserver","ResizeObserver","updateScrollbar","updateScroll","observe","disconnect","SidenavTheme","perfectScrollbar","MatxSuspense","Outlet"],"sourceRoot":""}